// Code generated by goyacc -o internal/php8/php8.go internal/php8/php8.y. DO NOT EDIT.

// line internal/php8/php8.y:1

package php8

import __yyfmt__ "fmt"

// line internal/php8/php8.y:3

import (
	"strconv"

	"github.com/VKCOM/php-parser/pkg/ast"
	"github.com/VKCOM/php-parser/pkg/token"
)

// line internal/php8/php8.y:13
type yySymType struct {
	yys   int
	node  ast.Vertex
	token *token.Token
	list  []ast.Vertex
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_FN = 57380
const T_CONST = 57381
const T_RETURN = 57382
const T_TRY = 57383
const T_CATCH = 57384
const T_FINALLY = 57385
const T_THROW = 57386
const T_USE = 57387
const T_INSTEADOF = 57388
const T_GLOBAL = 57389
const T_VAR = 57390
const T_UNSET = 57391
const T_ISSET = 57392
const T_EMPTY = 57393
const T_HALT_COMPILER = 57394
const T_CLASS = 57395
const T_TRAIT = 57396
const T_INTERFACE = 57397
const T_EXTENDS = 57398
const T_IMPLEMENTS = 57399
const T_OBJECT_OPERATOR = 57400
const T_DOUBLE_ARROW = 57401
const T_LIST = 57402
const T_ARRAY = 57403
const T_CALLABLE = 57404
const T_CLASS_C = 57405
const T_TRAIT_C = 57406
const T_METHOD_C = 57407
const T_FUNC_C = 57408
const T_LINE = 57409
const T_FILE = 57410
const T_COMMENT = 57411
const T_DOC_COMMENT = 57412
const T_OPEN_TAG = 57413
const T_OPEN_TAG_WITH_ECHO = 57414
const T_CLOSE_TAG = 57415
const T_WHITESPACE = 57416
const T_START_HEREDOC = 57417
const T_END_HEREDOC = 57418
const T_DOLLAR_OPEN_CURLY_BRACES = 57419
const T_CURLY_OPEN = 57420
const T_PAAMAYIM_NEKUDOTAYIM = 57421
const T_NAMESPACE = 57422
const T_NS_C = 57423
const T_DIR = 57424
const T_NS_SEPARATOR = 57425
const T_ELLIPSIS = 57426
const T_EVAL = 57427
const T_REQUIRE = 57428
const T_REQUIRE_ONCE = 57429
const T_LOGICAL_OR = 57430
const T_LOGICAL_XOR = 57431
const T_LOGICAL_AND = 57432
const T_INSTANCEOF = 57433
const T_NEW = 57434
const T_CLONE = 57435
const T_ELSEIF = 57436
const T_ELSE = 57437
const T_ENDIF = 57438
const T_PRINT = 57439
const T_YIELD = 57440
const T_STATIC = 57441
const T_ABSTRACT = 57442
const T_FINAL = 57443
const T_PRIVATE = 57444
const T_PROTECTED = 57445
const T_PUBLIC = 57446
const T_INC = 57447
const T_DEC = 57448
const T_YIELD_FROM = 57449
const T_INT_CAST = 57450
const T_DOUBLE_CAST = 57451
const T_STRING_CAST = 57452
const T_ARRAY_CAST = 57453
const T_OBJECT_CAST = 57454
const T_BOOL_CAST = 57455
const T_UNSET_CAST = 57456
const T_COALESCE = 57457
const T_SPACESHIP = 57458
const T_NOELSE = 57459
const T_PLUS_EQUAL = 57460
const T_MINUS_EQUAL = 57461
const T_MUL_EQUAL = 57462
const T_POW_EQUAL = 57463
const T_DIV_EQUAL = 57464
const T_CONCAT_EQUAL = 57465
const T_MOD_EQUAL = 57466
const T_AND_EQUAL = 57467
const T_OR_EQUAL = 57468
const T_XOR_EQUAL = 57469
const T_SL_EQUAL = 57470
const T_SR_EQUAL = 57471
const T_COALESCE_EQUAL = 57472
const T_BOOLEAN_OR = 57473
const T_BOOLEAN_AND = 57474
const T_POW = 57475
const T_SL = 57476
const T_SR = 57477
const T_IS_IDENTICAL = 57478
const T_IS_NOT_IDENTICAL = 57479
const T_IS_EQUAL = 57480
const T_IS_NOT_EQUAL = 57481
const T_IS_SMALLER_OR_EQUAL = 57482
const T_IS_GREATER_OR_EQUAL = 57483
const T_NULLSAFE_OBJECT_OPERATOR = 57484
const T_MATCH = 57485
const T_ATTRIBUTE = 57486
const T_NAME_RELATIVE = 57487
const T_NAME_QUALIFIED = 57488
const T_NAME_FULLY_QUALIFIED = 57489
const T_READONLY = 57490
const T_ENUM = 57491

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_FN",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_COALESCE_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"T_NULLSAFE_OBJECT_OPERATOR",
	"T_MATCH",
	"T_ATTRIBUTE",
	"T_NAME_RELATIVE",
	"T_NAME_QUALIFIED",
	"T_NAME_FULLY_QUALIFIED",
	"T_READONLY",
	"T_ENUM",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

// line internal/php8/php8.y:3428

// line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	149, 108,
	-2, 0,
	-1, 43,
	58, 492,
	79, 492,
	142, 492,
	152, 492,
	158, 492,
	-2, 488,
	-1, 45,
	29, 80,
	155, 80,
	-2, 97,
	-1, 48,
	156, 498,
	-2, 507,
	-1, 84,
	79, 453,
	-2, 496,
	-1, 85,
	58, 497,
	142, 497,
	152, 497,
	158, 497,
	-2, 477,
	-1, 98,
	58, 494,
	79, 494,
	142, 494,
	152, 494,
	156, 500,
	158, 494,
	-2, 475,
	-1, 99,
	58, 495,
	79, 495,
	142, 495,
	152, 495,
	158, 495,
	-2, 476,
	-1, 103,
	79, 455,
	-2, 479,
	-1, 220,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	149, 108,
	-2, 0,
	-1, 328,
	58, 492,
	79, 492,
	142, 492,
	152, 492,
	158, 492,
	-2, 375,
	-1, 331,
	156, 500,
	-2, 494,
	-1, 335,
	58, 492,
	79, 492,
	142, 492,
	152, 492,
	158, 492,
	-2, 377,
	-1, 398,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	149, 108,
	-2, 0,
	-1, 452,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 399,
	-1, 453,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 400,
	-1, 454,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 401,
	-1, 455,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 402,
	-1, 456,
	140, 0,
	141, 0,
	175, 0,
	176, 0,
	-2, 403,
	-1, 457,
	140, 0,
	141, 0,
	175, 0,
	176, 0,
	-2, 404,
	-1, 458,
	140, 0,
	141, 0,
	175, 0,
	176, 0,
	-2, 405,
	-1, 459,
	140, 0,
	141, 0,
	175, 0,
	176, 0,
	-2, 406,
	-1, 460,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 407,
	-1, 467,
	157, 187,
	168, 187,
	-2, 492,
	-1, 470,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	149, 108,
	-2, 0,
	-1, 512,
	157, 536,
	159, 536,
	168, 536,
	-2, 492,
	-1, 517,
	58, 493,
	79, 493,
	142, 493,
	152, 493,
	156, 499,
	158, 493,
	-2, 409,
	-1, 534,
	156, 522,
	-2, 478,
	-1, 535,
	156, 524,
	-2, 514,
	-1, 566,
	155, 13,
	-2, 459,
	-1, 568,
	155, 46,
	-2, 428,
	-1, 570,
	155, 73,
	-2, 454,
	-1, 571,
	155, 11,
	-2, 108,
	-1, 580,
	156, 440,
	-2, 42,
	-1, 582,
	155, 61,
	-2, 487,
	-1, 583,
	155, 62,
	-2, 483,
	-1, 584,
	155, 63,
	-2, 485,
	-1, 585,
	155, 64,
	-2, 484,
	-1, 586,
	155, 65,
	-2, 480,
	-1, 587,
	155, 66,
	-2, 481,
	-1, 588,
	155, 67,
	-2, 482,
	-1, 589,
	155, 68,
	-2, 486,
	-1, 590,
	156, 440,
	-2, 69,
	-1, 593,
	157, 244,
	-2, 108,
	-1, 595,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	149, 108,
	-2, 0,
	-1, 622,
	157, 244,
	-2, 108,
	-1, 623,
	157, 244,
	-2, 108,
	-1, 633,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	149, 108,
	-2, 0,
	-1, 648,
	156, 499,
	-2, 493,
	-1, 714,
	157, 214,
	-2, 492,
	-1, 724,
	157, 244,
	-2, 108,
	-1, 747,
	157, 535,
	159, 535,
	168, 535,
	-2, 492,
	-1, 766,
	157, 84,
	-2, 108,
	-1, 777,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	149, 108,
	-2, 0,
	-1, 787,
	157, 215,
	-2, 492,
	-1, 790,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	149, 108,
	-2, 0,
	-1, 811,
	53, 108,
	54, 108,
	55, 108,
	94, 239,
	95, 239,
	96, 239,
	100, 108,
	101, 108,
	149, 108,
	-2, 0,
	-1, 855,
	157, 214,
	-2, 492,
	-1, 857,
	157, 217,
	-2, 467,
	-1, 869,
	37, 318,
	39, 318,
	-2, 315,
	-1, 883,
	53, 108,
	54, 108,
	55, 108,
	94, 240,
	95, 240,
	96, 240,
	100, 108,
	101, 108,
	149, 108,
	-2, 0,
	-1, 916,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	149, 108,
	-2, 0,
	-1, 920,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	149, 108,
	-2, 0,
	-1, 954,
	31, 230,
	32, 230,
	33, 230,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	149, 108,
	153, 230,
	-2, 0,
	-1, 962,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	149, 108,
	-2, 0,
	-1, 995,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	149, 108,
	-2, 0,
	-1, 996,
	31, 229,
	32, 229,
	33, 229,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	149, 108,
	153, 229,
	-2, 0,
	-1, 1001,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	149, 108,
	-2, 0,
	-1, 1006,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	149, 108,
	-2, 0,
	-1, 1034,
	157, 244,
	-2, 108,
	-1, 1042,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	149, 108,
	-2, 0,
	-1, 1053,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	149, 108,
	-2, 0,
}

const yyPrivate = 57344

const yyLast = 9570

var yyAct = [...]int{

	30, 220, 823, 687, 871, 394, 975, 972, 729, 128,
	966, 40, 982, 473, 851, 103, 733, 910, 734, 818,
	713, 727, 827, 695, 228, 228, 228, 689, 563, 242,
	421, 731, 561, 696, 551, 725, 466, 321, 531, 539,
	416, 780, 415, 10, 279, 9, 414, 105, 503, 8,
	363, 217, 238, 323, 327, 98, 241, 336, 337, 338,
	339, 340, 2, 540, 209, 341, 342, 343, 344, 345,
	346, 347, 234, 350, 227, 319, 358, 359, 360, 361,
	413, 208, 216, 7, 206, 367, 412, 37, 1024, 6,
	289, 378, 379, 79, 381, 382, 365, 99, 372, 231,
	232, 223, 365, 218, 39, 1013, 100, 1010, 270, 698,
	331, 331, 270, 979, 118, 745, 642, 935, 46, 934,
	432, 237, 407, 212, 277, 945, 1011, 943, 364, 1007,
	904, 902, 270, 805, 369, 354, 620, 219, 805, 118,
	1012, 85, 599, 1008, 1004, 433, 283, 406, 411, 430,
	256, 5, 332, 332, 256, 43, 400, 269, 281, 434,
	894, 892, 889, 431, 838, 773, 766, 388, 390, 222,
	682, 677, 428, 118, 256, 259, 260, 261, 262, 263,
	264, 266, 268, 254, 253, 405, 429, 398, 374, 255,
	257, 258, 399, 255, 257, 258, 329, 329, 118, 406,
	618, 609, 250, 254, 253, 530, 400, 510, 280, 901,
	328, 335, 251, 255, 257, 258, 265, 267, 252, 311,
	312, 857, 418, 754, 750, 664, 423, 424, 649, 636,
	420, 509, 298, 299, 300, 301, 302, 303, 304, 305,
	306, 307, 308, 309, 310, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 960, 462, 464, 118, 468, 1048, 659, 470, 505,
	1002, 230, 660, 118, 297, 524, 365, 998, 474, 402,
	918, 917, 401, 908, 102, 884, 864, 796, 485, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 544, 386, 500, 228, 502, 212, 369, 323,
	795, 785, 39, 237, 764, 760, 513, 101, 102, 331,
	283, 515, 758, 546, 749, 323, 711, 316, 219, 700,
	118, 653, 281, 1026, 686, 650, 641, 395, 1034, 925,
	228, 912, 911, 102, 860, 239, 461, 526, 469, 788,
	748, 724, 708, 218, 391, 709, 507, 472, 380, 525,
	333, 332, 547, 476, 477, 478, 549, 552, 553, 479,
	331, 554, 377, 1041, 376, 523, 375, 557, 349, 501,
	562, 318, 323, 389, 508, 534, 545, 623, 622, 230,
	607, 605, 355, 593, 504, 504, 543, 514, 604, 482,
	516, 480, 542, 331, 313, 329, 121, 119, 120, 275,
	274, 317, 332, 968, 518, 355, 270, 371, 532, 467,
	273, 315, 226, 613, 225, 242, 81, 314, 102, 10,
	221, 9, 481, 122, 355, 8, 1052, 824, 1051, 1020,
	736, 737, 803, 809, 537, 332, 803, 803, 603, 685,
	595, 846, 847, 235, 616, 597, 329, 591, 256, 259,
	260, 846, 847, 630, 484, 278, 803, 537, 1019, 7,
	512, 631, 598, 632, 612, 6, 633, 634, 520, 521,
	654, 614, 602, 281, 218, 1015, 803, 254, 253, 329,
	39, 397, 611, 396, 617, 997, 639, 255, 257, 258,
	212, 323, 644, 528, 230, 323, 118, 955, 919, 520,
	914, 521, 907, 373, 905, 843, 839, 810, 521, 520,
	662, 784, 783, 781, 121, 119, 120, 666, 779, 387,
	776, 608, 594, 228, 669, 483, 365, 5, 643, 834,
	471, 80, 427, 426, 425, 80, 80, 887, 885, 836,
	989, 684, 624, 625, 970, 936, 327, 638, 358, 359,
	361, 640, 39, 771, 661, 80, 378, 379, 364, 381,
	382, 663, 913, 372, 880, 969, 420, 365, 674, 676,
	647, 118, 845, 670, 671, 80, 522, 665, 681, 963,
	923, 886, 865, 333, 800, 690, 859, 806, 704, 423,
	706, 652, 656, 657, 757, 728, 710, 668, 699, 369,
	692, 868, 626, 601, 276, 519, 722, 723, 214, 80,
	270, 214, 504, 504, 690, 690, 10, 870, 9, 705,
	256, 947, 8, 746, 730, 942, 738, 1023, 80, 121,
	119, 120, 285, 286, 541, 712, 356, 357, 940, 118,
	371, 752, 290, 291, 237, 875, 876, 877, 874, 873,
	872, 102, 256, 374, 331, 331, 7, 732, 552, 214,
	355, 355, 6, 562, 224, 117, 763, 890, 875, 876,
	877, 874, 873, 872, 366, 374, 786, 39, 290, 291,
	726, 331, 294, 296, 295, 777, 210, 373, 211, 628,
	756, 355, 759, 355, 878, 761, 332, 332, 323, 548,
	355, 355, 790, 404, 374, 374, 770, 765, 797, 592,
	118, 774, 353, 772, 475, 39, 690, 878, 404, 802,
	863, 807, 799, 332, 5, 811, 812, 287, 730, 323,
	804, 782, 1021, 506, 506, 702, 1022, 798, 822, 239,
	329, 329, 270, 684, 215, 213, 230, 215, 751, 719,
	537, 331, 292, 293, 467, 714, 775, 600, 690, 404,
	423, 794, 793, 738, 742, 419, 833, 329, 815, 323,
	118, 80, 403, 789, 825, 356, 357, 840, 861, 219,
	930, 747, 929, 535, 256, 259, 260, 854, 837, 230,
	844, 883, 879, 332, 538, 215, 802, 736, 737, 730,
	1, 881, 697, 848, 813, 850, 374, 126, 882, 374,
	385, 230, 284, 254, 253, 288, 207, 895, 869, 767,
	738, 897, 331, 255, 257, 258, 866, 909, 252, 392,
	738, 655, 867, 903, 214, 916, 888, 329, 981, 891,
	893, 920, 351, 841, 856, 924, 235, 926, 374, 629,
	978, 787, 906, 362, 932, 826, 922, 792, 721, 39,
	817, 210, 738, 211, 332, 833, 816, 927, 808, 928,
	822, 939, 39, 62, 802, 941, 224, 117, 333, 821,
	819, 121, 119, 120, 862, 627, 374, 465, 937, 938,
	701, 950, 954, 39, 738, 944, 1050, 707, 738, 933,
	738, 948, 835, 949, 832, 962, 899, 953, 329, 282,
	117, 896, 957, 322, 852, 118, 977, 230, 42, 802,
	522, 990, 855, 991, 121, 119, 120, 118, 123, 802,
	693, 987, 522, 694, 995, 996, 931, 768, 976, 738,
	992, 738, 993, 769, 988, 1001, 121, 119, 120, 14,
	41, 1006, 915, 846, 847, 974, 999, 550, 667, 965,
	1016, 506, 506, 672, 374, 39, 964, 1009, 736, 737,
	215, 213, 18, 971, 1018, 559, 17, 987, 921, 556,
	356, 357, 240, 80, 1003, 651, 1014, 370, 373, 49,
	988, 1031, 356, 357, 1033, 1028, 1030, 537, 39, 1032,
	48, 104, 39, 537, 118, 1040, 735, 1038, 1042, 374,
	1035, 50, 1037, 248, 247, 270, 80, 730, 1045, 374,
	84, 976, 849, 846, 847, 1043, 690, 1044, 533, 82,
	73, 1049, 1039, 348, 1053, 320, 39, 951, 118, 272,
	269, 63, 83, 383, 39, 537, 852, 1046, 368, 537,
	61, 986, 121, 119, 120, 244, 245, 256, 259, 260,
	261, 262, 263, 264, 266, 268, 985, 898, 555, 356,
	357, 118, 984, 983, 801, 236, 393, 39, 39, 233,
	537, 44, 791, 39, 271, 250, 254, 253, 39, 718,
	1036, 537, 688, 249, 422, 251, 255, 257, 258, 265,
	267, 252, 384, 356, 357, 408, 537, 3, 959, 946,
	900, 0, 0, 0, 118, 0, 374, 0, 0, 352,
	0, 0, 0, 0, 39, 136, 137, 147, 148, 0,
	0, 219, 0, 118, 0, 39, 356, 357, 0, 0,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 182, 183, 184, 185, 186, 174, 175, 176, 203,
	177, 178, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 0, 194, 192, 193, 189, 190, 356,
	357, 181, 187, 188, 195, 196, 198, 197, 199, 200,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 191, 202, 201, 0, 0, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 149, 150, 151, 179, 180,
	129, 130, 131, 132, 133, 134, 0, 0, 0, 961,
	0, 0, 0, 967, 0, 0, 973, 0, 256, 259,
	260, 0, 0, 0, 0, 266, 268, 0, 0, 0,
	0, 0, 0, 0, 994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 0, 0, 254, 253, 135,
	205, 0, 0, 536, 0, 0, 1005, 255, 257, 258,
	265, 267, 252, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 576, 566, 148, 95, 96, 45,
	0, 118, 967, 0, 0, 0, 973, 115, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 182,
	183, 184, 185, 186, 174, 175, 580, 590, 177, 178,
	163, 164, 165, 569, 167, 168, 169, 170, 171, 573,
	574, 0, 194, 192, 193, 189, 190, 0, 0, 564,
	581, 188, 582, 583, 585, 584, 586, 587, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 191,
	589, 588, 0, 560, 577, 578, 579, 141, 142, 143,
	144, 571, 565, 149, 150, 151, 567, 568, 570, 130,
	131, 132, 133, 134, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 572, 80, 121, 119, 120, 135, 205, 116,
	74, 0, 0, 0, 0, 60, 558, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 102, 575, 576, 566,
	148, 95, 96, 45, 0, 118, 0, 0, 0, 0,
	0, 115, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 182, 183, 184, 185, 186, 174, 175,
	580, 590, 177, 178, 163, 164, 165, 569, 167, 168,
	169, 170, 171, 573, 574, 0, 194, 192, 193, 189,
	190, 0, 0, 564, 581, 188, 582, 583, 585, 584,
	586, 587, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 191, 589, 588, 0, 762, 577, 578,
	579, 141, 142, 143, 144, 571, 565, 149, 150, 151,
	567, 568, 570, 130, 131, 132, 133, 134, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 572, 80, 121, 119,
	120, 135, 205, 116, 74, 0, 0, 0, 0, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 72,
	102, 4, 0, 90, 91, 71, 47, 95, 96, 45,
	0, 118, 0, 29, 0, 736, 737, 115, 28, 20,
	19, 0, 21, 0, 32, 0, 33, 0, 0, 22,
	0, 0, 0, 23, 24, 36, 38, 117, 15, 25,
	35, 0, 0, 78, 13, 0, 26, 0, 31, 88,
	89, 11, 0, 0, 0, 0, 830, 829, 828, 51,
	114, 0, 113, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 12,
	112, 108, 0, 0, 92, 93, 94, 230, 0, 0,
	0, 86, 53, 0, 0, 0, 75, 76, 27, 121,
	119, 120, 831, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 736, 737,
	0, 0, 87, 80, 121, 119, 120, 0, 0, 116,
	74, 16, 691, 34, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 102, 4, 0, 90,
	91, 71, 47, 95, 96, 45, 735, 118, 0, 29,
	0, 0, 0, 115, 28, 20, 19, 0, 21, 0,
	32, 0, 33, 0, 0, 22, 0, 0, 0, 23,
	24, 36, 38, 117, 15, 25, 35, 0, 0, 78,
	13, 0, 26, 0, 31, 88, 89, 11, 0, 0,
	0, 0, 121, 119, 120, 51, 114, 0, 113, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 12, 112, 108, 0, 0,
	92, 93, 94, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 75, 76, 27, 0, 0, 0, 0, 0,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 80,
	121, 119, 120, 0, 0, 116, 74, 16, 596, 34,
	0, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 72, 102, 4, 0, 90, 91, 71, 47, 95,
	96, 45, 0, 118, 0, 29, 0, 0, 0, 115,
	28, 20, 19, 0, 21, 0, 32, 0, 33, 0,
	0, 22, 0, 0, 0, 23, 24, 36, 38, 117,
	15, 25, 35, 0, 0, 78, 13, 0, 26, 0,
	31, 88, 89, 11, 0, 0, 0, 0, 0, 0,
	0, 51, 114, 0, 113, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 12, 112, 108, 0, 0, 92, 93, 94, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 75, 76,
	27, 0, 0, 0, 0, 0, 54, 55, 77, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 80, 121, 119, 120, 0,
	0, 116, 74, 16, 0, 34, 0, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 72, 102, 410,
	0, 90, 91, 71, 47, 95, 96, 45, 0, 118,
	0, 29, 0, 0, 0, 115, 28, 20, 19, 0,
	21, 0, 32, 0, 33, 0, 0, 22, 0, 0,
	0, 23, 24, 36, 38, 117, 0, 25, 35, 0,
	0, 78, 0, 0, 26, 0, 31, 88, 89, 417,
	0, 0, 0, 0, 0, 0, 0, 51, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 92, 93, 94, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 75, 76, 27, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 80, 121, 119, 120, 0, 0, 116, 74, 16,
	1054, 34, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 102, 410, 0, 90, 91, 71,
	47, 95, 96, 45, 0, 118, 0, 29, 0, 0,
	0, 115, 28, 20, 19, 0, 21, 0, 32, 0,
	33, 0, 0, 22, 0, 0, 0, 23, 24, 36,
	38, 117, 0, 25, 35, 0, 0, 78, 0, 0,
	26, 0, 31, 88, 89, 417, 0, 0, 0, 0,
	0, 0, 0, 51, 114, 0, 113, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 112, 108, 0, 0, 92, 93,
	94, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	75, 76, 27, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 80, 121, 119,
	120, 0, 0, 116, 74, 16, 1047, 34, 0, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 72,
	102, 410, 0, 90, 91, 71, 47, 95, 96, 45,
	0, 118, 0, 29, 0, 0, 0, 115, 28, 20,
	19, 0, 21, 0, 32, 0, 33, 0, 0, 22,
	0, 0, 0, 23, 24, 36, 38, 117, 0, 25,
	35, 0, 0, 78, 0, 0, 26, 0, 31, 88,
	89, 417, 0, 0, 0, 0, 0, 0, 0, 51,
	114, 0, 113, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	112, 108, 0, 0, 92, 93, 94, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 75, 76, 27, 0,
	0, 0, 0, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 80, 121, 119, 120, 0, 0, 116,
	74, 16, 1029, 34, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 102, 410, 0, 90,
	91, 71, 47, 95, 96, 45, 0, 118, 0, 29,
	0, 0, 0, 115, 28, 20, 19, 0, 21, 0,
	32, 0, 33, 0, 0, 22, 0, 0, 0, 23,
	24, 36, 38, 117, 0, 25, 35, 0, 0, 78,
	0, 0, 26, 0, 31, 88, 89, 417, 0, 0,
	0, 0, 0, 0, 0, 51, 114, 0, 113, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 112, 108, 0, 0,
	92, 93, 94, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 75, 76, 27, 0, 0, 0, 0, 0,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 80,
	121, 119, 120, 0, 0, 116, 74, 16, 1027, 34,
	0, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 72, 102, 410, 0, 90, 91, 71, 47, 95,
	96, 45, 0, 118, 0, 29, 0, 0, 0, 115,
	28, 20, 19, 0, 21, 1025, 32, 0, 33, 0,
	0, 22, 0, 0, 0, 23, 24, 36, 38, 117,
	0, 25, 35, 0, 0, 78, 0, 0, 26, 0,
	31, 88, 89, 417, 0, 0, 0, 0, 0, 0,
	0, 51, 114, 0, 113, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 112, 108, 0, 0, 92, 93, 94, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 75, 76,
	27, 0, 0, 0, 0, 0, 54, 55, 77, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 80, 121, 119, 120, 0,
	0, 116, 74, 16, 0, 34, 0, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 72, 102, 410,
	0, 90, 91, 71, 47, 95, 96, 45, 0, 118,
	0, 29, 0, 0, 0, 115, 28, 20, 19, 0,
	21, 0, 32, 0, 33, 0, 0, 22, 0, 0,
	0, 23, 24, 36, 38, 117, 0, 25, 35, 0,
	0, 78, 0, 0, 26, 0, 31, 88, 89, 417,
	0, 0, 0, 0, 0, 0, 0, 51, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 92, 93, 94, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 75, 76, 27, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 80, 121, 119, 120, 0, 0, 116, 74, 16,
	1000, 34, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 102, 410, 0, 90, 91, 71,
	47, 95, 96, 45, 0, 118, 0, 29, 0, 0,
	0, 115, 28, 20, 19, 0, 21, 0, 32, 0,
	33, 0, 0, 22, 0, 0, 0, 23, 24, 36,
	38, 117, 0, 25, 35, 0, 0, 78, 0, 0,
	26, 0, 31, 88, 89, 417, 0, 0, 0, 0,
	0, 0, 0, 51, 114, 0, 113, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 112, 108, 0, 0, 92, 93,
	94, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	75, 76, 27, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 80, 121, 119,
	120, 0, 0, 116, 74, 16, 958, 34, 0, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 72,
	102, 410, 0, 90, 91, 71, 47, 95, 96, 45,
	0, 118, 0, 29, 0, 0, 0, 115, 28, 20,
	19, 0, 21, 0, 32, 956, 33, 0, 0, 22,
	0, 0, 0, 23, 24, 36, 38, 117, 0, 25,
	35, 0, 0, 78, 0, 0, 26, 0, 31, 88,
	89, 417, 0, 0, 0, 0, 0, 0, 0, 51,
	114, 0, 113, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	112, 108, 0, 0, 92, 93, 94, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 75, 76, 27, 0,
	0, 0, 0, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 80, 121, 119, 120, 0, 0, 116,
	74, 16, 0, 34, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 102, 410, 0, 90,
	91, 71, 47, 95, 96, 45, 0, 118, 0, 29,
	0, 0, 0, 115, 28, 20, 19, 0, 21, 0,
	32, 0, 33, 858, 0, 22, 0, 0, 0, 23,
	24, 36, 38, 117, 0, 25, 35, 0, 0, 78,
	0, 0, 26, 0, 31, 88, 89, 417, 0, 0,
	0, 0, 0, 0, 0, 51, 114, 0, 113, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 112, 108, 0, 0,
	92, 93, 94, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 75, 76, 27, 0, 0, 0, 0, 0,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 80,
	121, 119, 120, 0, 0, 116, 74, 16, 0, 34,
	0, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 72, 102, 410, 0, 90, 91, 71, 47, 95,
	96, 45, 0, 118, 0, 29, 0, 0, 0, 115,
	28, 20, 19, 842, 21, 0, 32, 0, 33, 0,
	0, 22, 0, 0, 0, 23, 24, 36, 38, 117,
	0, 25, 35, 0, 0, 78, 0, 0, 26, 0,
	31, 88, 89, 417, 0, 0, 0, 0, 0, 0,
	0, 51, 114, 0, 113, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 112, 108, 0, 0, 92, 93, 94, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 75, 76,
	27, 0, 0, 0, 0, 0, 54, 55, 77, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 80, 121, 119, 120, 0,
	0, 116, 74, 16, 0, 34, 0, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 72, 102, 410,
	0, 90, 91, 71, 47, 95, 96, 45, 0, 118,
	0, 29, 0, 0, 0, 115, 28, 20, 19, 0,
	21, 0, 32, 0, 33, 0, 0, 22, 0, 0,
	0, 23, 24, 36, 38, 117, 0, 25, 35, 0,
	0, 78, 0, 0, 26, 0, 31, 88, 89, 417,
	0, 0, 0, 0, 0, 0, 0, 51, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 92, 93, 94, 0, 0, 0, 0, 86,
	53, 0, 0, 741, 75, 76, 27, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 80, 121, 119, 120, 0, 0, 116, 74, 16,
	0, 34, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 102, 410, 0, 90, 91, 71,
	47, 95, 96, 45, 0, 118, 0, 29, 0, 0,
	0, 115, 28, 20, 19, 0, 21, 0, 32, 0,
	33, 0, 0, 22, 0, 0, 0, 23, 24, 36,
	38, 117, 0, 25, 35, 0, 0, 78, 0, 0,
	26, 0, 31, 88, 89, 417, 0, 0, 0, 0,
	0, 0, 0, 51, 114, 0, 113, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 112, 108, 0, 0, 92, 93,
	94, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	75, 76, 27, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 80, 121, 119,
	120, 0, 0, 116, 74, 16, 621, 34, 0, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 72,
	102, 410, 0, 90, 91, 71, 47, 95, 96, 45,
	0, 118, 0, 29, 0, 0, 0, 115, 28, 20,
	19, 0, 21, 0, 32, 0, 33, 0, 0, 22,
	0, 0, 0, 23, 24, 36, 38, 117, 0, 25,
	35, 0, 0, 78, 0, 0, 26, 0, 31, 88,
	89, 417, 0, 0, 0, 0, 0, 0, 0, 51,
	114, 0, 113, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	112, 108, 0, 0, 92, 93, 94, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 75, 76, 27, 0,
	0, 0, 0, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 80, 121, 119, 120, 0, 0, 116,
	74, 16, 409, 34, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 102, 410, 0, 90,
	91, 71, 47, 95, 96, 45, 0, 118, 0, 29,
	0, 0, 0, 115, 28, 20, 19, 0, 21, 0,
	32, 0, 33, 0, 0, 22, 0, 0, 0, 23,
	24, 36, 38, 117, 0, 25, 35, 0, 0, 78,
	0, 0, 26, 0, 31, 88, 89, 417, 0, 0,
	0, 0, 0, 0, 0, 51, 114, 0, 113, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 112, 108, 0, 0,
	92, 93, 94, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 75, 76, 27, 0, 0, 0, 0, 0,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 80,
	121, 119, 120, 0, 0, 116, 74, 16, 0, 34,
	0, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 72, 102, 90, 91, 71, 47, 95, 96, 45,
	0, 118, 0, 29, 0, 0, 0, 115, 28, 20,
	19, 0, 21, 0, 32, 0, 33, 0, 0, 22,
	0, 0, 0, 23, 24, 36, 224, 117, 0, 25,
	35, 0, 0, 78, 0, 0, 26, 0, 31, 88,
	89, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	114, 0, 113, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	112, 108, 0, 0, 92, 93, 94, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 75, 76, 27, 0,
	0, 0, 0, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 80, 121, 119, 120, 0, 0, 116,
	74, 16, 0, 34, 853, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 102, 90, 91, 71,
	47, 95, 96, 45, 0, 118, 0, 29, 0, 0,
	0, 115, 28, 20, 19, 0, 21, 0, 32, 0,
	33, 0, 0, 22, 0, 0, 0, 23, 24, 36,
	224, 117, 0, 25, 35, 0, 0, 78, 0, 0,
	26, 0, 31, 88, 89, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 114, 0, 113, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 112, 108, 0, 0, 92, 93,
	94, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	75, 76, 27, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 80, 121, 119,
	120, 0, 0, 116, 74, 16, 0, 34, 952, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 72,
	102, 90, 91, 71, 47, 95, 96, 45, 0, 118,
	0, 29, 0, 0, 0, 115, 28, 20, 19, 0,
	21, 0, 32, 0, 33, 0, 0, 22, 0, 0,
	0, 23, 24, 36, 224, 117, 0, 25, 35, 0,
	0, 78, 0, 0, 26, 0, 31, 88, 89, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 92, 93, 94, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 75, 76, 27, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 80, 121, 119, 120, 0, 0, 116, 74, 16,
	0, 34, 743, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 102, 90, 91, 71, 47, 95,
	96, 45, 0, 118, 0, 29, 0, 0, 0, 115,
	28, 20, 19, 0, 21, 0, 32, 0, 33, 0,
	0, 22, 0, 0, 0, 23, 24, 36, 224, 117,
	0, 25, 35, 0, 0, 78, 0, 0, 26, 0,
	31, 88, 89, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 114, 0, 113, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 112, 108, 0, 0, 92, 93, 94, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 75, 76,
	27, 0, 0, 0, 0, 0, 54, 55, 77, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 80, 121, 119, 120, 0,
	0, 116, 74, 16, 0, 34, 720, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 72, 102, 90,
	91, 71, 47, 95, 96, 45, 0, 118, 0, 29,
	0, 0, 0, 115, 28, 20, 19, 0, 21, 0,
	32, 0, 33, 0, 0, 22, 0, 0, 0, 23,
	24, 36, 224, 117, 0, 25, 35, 0, 0, 78,
	0, 0, 26, 0, 31, 88, 89, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 114, 0, 113, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 112, 108, 0, 0,
	92, 93, 94, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 75, 76, 27, 0, 0, 0, 0, 0,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 80,
	121, 119, 120, 0, 0, 116, 74, 16, 0, 34,
	703, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 72, 102, 90, 91, 71, 47, 95, 96, 45,
	0, 118, 0, 29, 0, 0, 0, 115, 28, 20,
	19, 0, 21, 0, 32, 0, 33, 0, 0, 22,
	0, 0, 0, 23, 24, 36, 224, 117, 0, 25,
	35, 0, 0, 78, 0, 0, 26, 0, 31, 88,
	89, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	114, 0, 113, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	112, 108, 0, 0, 92, 93, 94, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 75, 76, 27, 0,
	0, 0, 0, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 80, 121, 119, 120, 0, 0, 116,
	74, 16, 0, 34, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 102, 136, 137, 147,
	148, 0, 0, 45, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 182, 183, 184, 185, 186, 174, 175,
	176, 203, 177, 178, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 0, 194, 192, 193, 189,
	190, 0, 0, 181, 187, 188, 195, 196, 198, 197,
	199, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 202, 201, 0, 0, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 149, 150, 151,
	179, 180, 129, 130, 131, 132, 133, 134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 121, 119,
	120, 135, 205, 0, 0, 0, 1017, 136, 137, 147,
	148, 0, 0, 45, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 182, 183, 184, 185, 186, 174, 175,
	176, 203, 177, 178, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 0, 194, 192, 193, 189,
	190, 0, 0, 181, 187, 188, 195, 196, 198, 197,
	199, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 202, 201, 0, 0, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 149, 150, 151,
	179, 180, 129, 130, 131, 132, 133, 134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 121, 119,
	120, 135, 205, 0, 0, 0, 980, 136, 137, 147,
	148, 0, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 182, 183, 184, 185, 186, 174, 175,
	176, 203, 177, 178, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 0, 194, 192, 193, 189,
	190, 0, 0, 181, 187, 188, 195, 196, 198, 197,
	199, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 202, 201, 0, 0, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 149, 150, 151,
	179, 180, 129, 130, 131, 132, 133, 134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 137, 147, 148, 0, 204, 219, 0, 127,
	0, 135, 205, 0, 0, 124, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 182, 183, 184,
	185, 186, 174, 175, 176, 203, 177, 178, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 0,
	194, 192, 193, 189, 190, 0, 0, 181, 187, 188,
	195, 196, 198, 197, 199, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 202, 201,
	0, 0, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 149, 150, 151, 179, 180, 129, 130, 131, 132,
	133, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 137, 147, 148, 0, 0, 219, 0,
	204, 0, 0, 0, 0, 135, 205, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 182, 183,
	184, 185, 186, 174, 175, 176, 203, 177, 178, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	0, 194, 192, 193, 189, 190, 0, 0, 181, 187,
	188, 195, 196, 198, 197, 199, 200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 202,
	201, 0, 0, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 149, 150, 151, 179, 180, 875, 876, 877,
	874, 873, 872, 90, 91, 71, 0, 95, 96, 230,
	0, 118, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 117, 0, 0,
	0, 204, 0, 78, 0, 0, 878, 205, 0, 88,
	89, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	114, 0, 113, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	112, 108, 0, 325, 92, 93, 94, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 75, 76, 229, 0,
	0, 0, 0, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 80, 121, 119, 120, 0, 0, 116,
	74, 0, 0, 0, 0, 60, 0, 52, 0, 0,
	324, 57, 56, 58, 59, 72, 102, 90, 91, 71,
	0, 95, 96, 230, 0, 118, 0, 0, 0, 0,
	0, 115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 820, 0, 0, 0,
	224, 117, 0, 0, 0, 0, 0, 78, 0, 0,
	0, 0, 0, 88, 89, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 114, 0, 113, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 112, 108, 0, 0, 92, 93,
	94, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	75, 76, 229, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 80, 121, 119,
	120, 0, 0, 116, 74, 0, 0, 0, 0, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 72,
	102, 90, 91, 71, 0, 95, 96, 230, 0, 118,
	0, 0, 0, 0, 0, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 117, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 0, 0, 88, 89, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 92, 93, 94, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 75, 76, 229, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 80, 121, 119, 120, 0, 0, 116, 74, 0,
	0, 0, 0, 60, 683, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 102, 90, 91, 71, 0, 95,
	96, 230, 0, 118, 0, 0, 0, 0, 0, 115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 117,
	0, 0, 0, 0, 0, 78, 0, 0, 0, 0,
	0, 88, 89, 0, 0, 0, 0, 0, 0, 0,
	0, 646, 114, 0, 113, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 112, 108, 0, 0, 92, 93, 94, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 75, 76,
	229, 0, 0, 0, 0, 0, 54, 55, 77, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 80, 121, 119, 120, 0,
	0, 116, 74, 0, 0, 0, 0, 60, 0, 52,
	0, 0, 645, 57, 56, 58, 59, 72, 102, 90,
	91, 71, 0, 95, 96, 230, 527, 118, 0, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 117, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 0, 0, 88, 89, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 114, 0, 113, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 112, 108, 0, 0,
	92, 93, 94, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 75, 76, 229, 0, 0, 0, 0, 0,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 80,
	121, 119, 120, 0, 0, 116, 74, 0, 0, 0,
	0, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 72, 102, 90, 91, 71, 0, 95, 96, 230,
	0, 118, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 117, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 0, 0, 88,
	89, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	114, 0, 113, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	112, 108, 0, 0, 92, 93, 94, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 75, 76, 229, 0,
	0, 0, 0, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 80, 121, 119, 120, 0, 0, 116,
	74, 0, 0, 0, 0, 60, 0, 52, 0, 0,
	486, 57, 56, 58, 59, 72, 102, 90, 91, 71,
	0, 95, 96, 230, 0, 118, 0, 0, 0, 0,
	0, 115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 117, 0, 0, 0, 0, 0, 78, 0, 0,
	0, 0, 0, 88, 89, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 114, 0, 113, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 112, 108, 0, 0, 92, 93,
	94, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	75, 76, 229, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 80, 121, 119,
	120, 0, 0, 116, 74, 0, 0, 0, 463, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 72,
	102, 90, 91, 71, 0, 95, 96, 230, 0, 118,
	0, 0, 0, 0, 0, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 117, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 0, 0, 88, 89, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 92, 93, 94, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 75, 76, 229, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 248, 247, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 80, 121, 119, 120, 0, 0, 116, 74, 272,
	269, 0, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 102, 244, 245, 256, 259, 260,
	261, 262, 263, 264, 266, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 912, 911,
	246, 248, 247, 270, 271, 250, 254, 253, 0, 0,
	0, 0, 0, 249, 0, 251, 255, 257, 258, 265,
	267, 252, 0, 0, 0, 0, 0, 272, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 256, 259, 260, 261, 262,
	263, 264, 266, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 248, 247, 270, 0, 0, 0,
	0, 814, 271, 250, 254, 253, 0, 0, 0, 0,
	0, 249, 0, 251, 255, 257, 258, 265, 267, 252,
	272, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 256, 259,
	260, 261, 262, 263, 264, 266, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 248, 247, 270,
	0, 0, 778, 0, 0, 271, 250, 254, 253, 0,
	0, 0, 0, 0, 249, 0, 251, 255, 257, 258,
	265, 267, 252, 272, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 256, 259, 260, 261, 262, 263, 264, 266, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 755, 246, 248, 247, 270, 0, 0, 271, 250,
	254, 253, 0, 0, 0, 0, 0, 249, 0, 251,
	255, 257, 258, 265, 267, 252, 0, 0, 0, 272,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 256, 259, 260,
	261, 262, 263, 264, 266, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 753, 246, 248,
	247, 270, 0, 0, 271, 250, 254, 253, 0, 0,
	0, 0, 0, 249, 0, 251, 255, 257, 258, 265,
	267, 252, 0, 0, 0, 272, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 256, 259, 260, 261, 262, 263, 264,
	266, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 744, 246, 248, 247, 270, 0, 0,
	271, 250, 254, 253, 0, 0, 0, 0, 0, 249,
	0, 251, 255, 257, 258, 265, 267, 252, 0, 0,
	0, 272, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 256,
	259, 260, 261, 262, 263, 264, 266, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 248, 247,
	270, 0, 0, 740, 0, 0, 271, 250, 254, 253,
	0, 0, 0, 0, 0, 249, 0, 251, 255, 257,
	258, 265, 267, 252, 272, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 256, 259, 260, 261, 262, 263, 264, 266,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 248, 247, 270, 0, 0, 739, 0, 0, 271,
	250, 254, 253, 0, 0, 0, 0, 0, 249, 0,
	251, 255, 257, 258, 265, 267, 252, 272, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 256, 259, 260, 261, 262,
	263, 264, 266, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 246, 248, 247, 270,
	0, 0, 271, 250, 254, 253, 0, 0, 0, 0,
	0, 249, 0, 251, 255, 257, 258, 265, 267, 252,
	0, 0, 0, 272, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 256, 259, 260, 261, 262, 263, 264, 266, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	248, 247, 270, 0, 0, 679, 0, 0, 271, 250,
	254, 253, 0, 0, 0, 0, 0, 249, 0, 251,
	255, 257, 258, 265, 267, 252, 272, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 256, 259, 260, 261, 262, 263,
	264, 266, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 248, 247, 270, 0, 0, 678, 0,
	0, 271, 250, 254, 253, 0, 0, 0, 0, 0,
	249, 0, 251, 255, 257, 258, 265, 267, 252, 272,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 256, 259, 260,
	261, 262, 263, 264, 266, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 248, 247, 270, 0,
	0, 675, 0, 0, 271, 250, 254, 253, 0, 0,
	0, 0, 0, 249, 0, 251, 255, 257, 258, 265,
	267, 252, 272, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	256, 259, 260, 261, 262, 263, 264, 266, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 248,
	247, 270, 0, 0, 673, 0, 0, 271, 250, 254,
	253, 0, 0, 0, 0, 0, 249, 0, 251, 255,
	257, 258, 265, 267, 252, 272, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 256, 259, 260, 261, 262, 263, 264,
	266, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 658, 246, 248, 247, 270, 0, 0,
	271, 250, 254, 253, 0, 0, 0, 0, 0, 249,
	0, 251, 255, 257, 258, 265, 267, 252, 0, 0,
	0, 272, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 256,
	259, 260, 261, 262, 263, 264, 266, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 248, 247,
	270, 0, 0, 648, 0, 0, 271, 250, 254, 253,
	0, 0, 0, 0, 0, 249, 0, 251, 255, 257,
	258, 265, 267, 252, 272, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 256, 259, 260, 261, 262, 263, 264, 266,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 637, 246, 248, 247, 270, 619, 0, 271,
	250, 254, 253, 0, 0, 0, 0, 0, 249, 0,
	251, 255, 257, 258, 265, 267, 252, 0, 0, 0,
	272, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 256, 259,
	260, 261, 262, 263, 264, 266, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 248, 247, 270,
	0, 0, 635, 0, 0, 271, 250, 254, 253, 0,
	0, 0, 0, 0, 249, 0, 251, 255, 257, 258,
	265, 267, 252, 272, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 256, 259, 260, 261, 262, 263, 264, 266, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	248, 247, 270, 0, 0, 0, 0, 0, 271, 250,
	254, 253, 0, 0, 0, 0, 0, 249, 0, 251,
	255, 257, 258, 265, 267, 252, 272, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 256, 259, 260, 261, 262, 263,
	264, 266, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 248, 247, 270, 615, 0, 0, 0,
	0, 271, 250, 254, 253, 0, 0, 0, 0, 0,
	249, 0, 251, 255, 257, 258, 265, 267, 252, 272,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 256, 259, 260,
	261, 262, 263, 264, 266, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 248, 247, 270, 0,
	0, 610, 0, 0, 271, 250, 254, 253, 0, 0,
	0, 0, 0, 249, 0, 251, 255, 257, 258, 265,
	267, 252, 272, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	256, 259, 260, 261, 262, 263, 264, 266, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 248,
	247, 270, 0, 0, 606, 0, 0, 271, 250, 254,
	253, 0, 0, 0, 0, 0, 249, 0, 251, 255,
	257, 258, 265, 267, 252, 272, 269, 0, 0, 0,
	0, 0, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 256, 259, 260, 261, 262, 263, 264,
	266, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 248, 247, 270, 0, 0, 517, 0, 0,
	271, 250, 254, 253, 0, 0, 0, 0, 0, 249,
	0, 251, 255, 257, 258, 265, 267, 252, 272, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 256, 259, 260, 261,
	262, 263, 264, 266, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 248, 247, 270, 0, 0,
	0, 0, 0, 271, 250, 254, 253, 0, 0, 0,
	0, 0, 249, 0, 251, 255, 257, 258, 265, 267,
	252, 272, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 256,
	259, 260, 261, 262, 263, 264, 266, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 246, 248, 247, 270, 0, 271, 250, 254, 253,
	0, 0, 0, 0, 0, 249, 0, 251, 255, 257,
	258, 265, 267, 252, 0, 0, 0, 0, 272, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 256, 259, 260, 261,
	262, 263, 264, 266, 268, 247, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 250, 254, 253, 0, 0, 0,
	272, 269, 249, 0, 251, 255, 257, 258, 265, 267,
	252, 529, 0, 0, 0, 0, 244, 245, 256, 259,
	260, 261, 262, 263, 264, 266, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 271, 250, 254, 253, 0,
	0, 0, 0, 0, 249, 0, 251, 255, 257, 258,
	265, 267, 252, 0, 0, 0, 0, 272, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 256, 259, 260, 261, 262,
	263, 264, 266, 268, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 250, 254, 253, 0, 0, 272, 269,
	0, 249, 0, 251, 255, 257, 258, 265, 267, 252,
	0, 0, 0, 0, 244, 245, 256, 259, 260, 261,
	262, 263, 264, 266, 268, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 250, 254, 253, 0, 0, 272,
	269, 0, 249, 0, 251, 255, 257, 258, 265, 267,
	252, 0, 0, 0, 0, 244, 245, 256, 259, 260,
	261, 262, 263, 264, 266, 268, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 254, 253, 0, 0,
	0, 269, 0, 249, 0, 251, 255, 257, 258, 265,
	267, 252, 0, 0, 0, 0, 0, 245, 256, 259,
	260, 261, 262, 263, 264, 266, 268, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 254, 253, 0,
	0, 0, 269, 0, 249, 0, 251, 255, 257, 258,
	265, 267, 252, 0, 0, 0, 0, 0, 0, 256,
	259, 260, 261, 262, 263, 264, 266, 268, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 250, 254, 253,
	0, 0, 0, 269, 0, 249, 0, 251, 255, 257,
	258, 265, 267, 252, 0, 0, 0, 0, 0, 269,
	256, 259, 260, 261, 262, 263, 264, 266, 268, 0,
	0, 0, 0, 0, 0, 0, 256, 259, 260, 261,
	262, 263, 264, 266, 268, 230, 0, 118, 250, 254,
	253, 0, 0, 115, 0, 0, 0, 0, 0, 255,
	257, 258, 265, 267, 252, 254, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 258, 265, 267,
	252, 0, 230, 0, 118, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 716, 114, 0, 113, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 333, 113, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 119, 120, 0, 0, 116, 0, 0, 0, 0,
	0, 330, 0, 717, 0, 0, 715, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 119, 120,
	0, 0, 116, 0, 0, 0, 0, 0, 330, 0,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 102,
}
var yyPact = [...]int{

	-1000, -1000, 1981, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 287, 5753, 844, -1000, 789, -1000, -1000, -1000, 284,
	5289, 278, 276, 7267, 7267, 7267, 186, 647, 7267, -1000,
	8776, 274, 264, 263, -1000, 472, 789, 320, 47, 892,
	598, 678, 608, 114, -1000, -1000, -1000, 258, -1000, -1000,
	279, 235, 6119, 7267, 9402, 9402, 7267, 7267, 7267, 7267,
	7267, -1000, -1000, -1000, 7267, 7267, 7267, 7267, 7267, 7267,
	7267, 232, 7267, -1000, 1122, 7267, 7267, 7267, 7267, -1000,
	799, -1000, -1000, 615, -1000, -1000, 504, 230, 228, 226,
	7267, 7267, 212, 7267, 7267, -1000, -1000, 1046, -1000, -1000,
	-1000, -1000, 161, 237, 237, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 208, -1000, 1079, 47, -1000, -1000,
	-1000, -1000, 190, 349, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 38, 618, 709, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 31, -1000, -48, -1000,
	4139, 7267, 764, 859, 47, 7267, 7267, 400, 8843, 859,
	-1000, 399, 398, 18, -1000, -1000, -5, -1000, -1000, -50,
	-9, -1000, 8843, -1000, 7267, 7267, 7267, 7267, 7267, 7267,
	7267, 7267, 7267, 7267, 7267, 7267, 7267, 7267, 7267, 7267,
	7267, 7267, 7267, 7267, 7267, 7267, 7267, 7267, 7267, 7267,
	271, 7103, 7267, 9402, 7267, 789, -1000, 396, -1000, 789,
	-1000, -1000, 47, -1000, 681, 789, 789, 789, 562, -1000,
	-1000, -1000, 255, 5289, 253, 391, 319, 6939, 7267, 7267,
	7267, 7267, 7267, 7267, 7267, 7267, 7267, 7267, 7267, 7267,
	7267, -1000, -1000, 7267, 7267, 7267, 127, 127, 6119, 72,
	39, -1000, -1000, 8713, 9402, 7267, 251, -1000, -1000, -1000,
	7267, -1000, -1000, -1000, 6119, -1000, 507, 507, 539, 507,
	8650, 507, 507, 507, 507, 507, 507, 507, -1000, 7267,
	507, 474, 718, 935, -1000, 227, 6775, 9402, 9013, 8962,
	9013, 8843, 37, -1000, 237, -1000, 1141, 237, -1000, 575,
	254, 7267, 666, -1000, 485, 7267, 7267, 7267, 8843, 8843,
	7267, 8843, 8843, 1012, -1000, 923, 7267, -1000, -1000, 1319,
	-1000, 6119, 579, 718, 247, 388, -1000, -1000, 1815, -1000,
	618, -12, 694, 471, 789, -1000, 789, 7267, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 245, 8587, 244,
	-1000, 387, 33, 8843, 8524, -1000, -1000, -1000, -1000, 186,
	-1000, 778, 7267, -1000, 7267, 9115, 9166, 944, 9013, 8895,
	41, 9233, 9217, 335, 17, 17, 539, 507, 539, 539,
	21, 21, 1125, 1125, 1125, 1125, 671, 671, 671, 671,
	1125, -1000, 8461, 7267, 9064, 32, -1000, -1000, 8398, -21,
	3973, -1000, 242, 241, 789, 789, 470, 653, 318, -1000,
	7267, -1000, 7267, -1000, -1000, 9013, 7267, 9013, 9013, 9013,
	9013, 9013, 9013, 9013, 9013, 9013, 9013, 9013, 9013, 9013,
	8335, 70, 8269, 237, -1000, 7267, -1000, 237, 189, -54,
	6119, 6611, -1000, 8843, 6119, 8206, 69, -1000, 188, -1000,
	-1000, -1000, -1000, 328, 789, 789, 8140, 124, 421, 7267,
	799, 66, -1000, 237, -1000, -1000, 7267, -1000, -1000, -1000,
	-1000, 186, 7267, 7267, 127, 127, 186, 8077, 237, 8014,
	3, -1000, 8843, 7951, 7888, -1000, -1000, 7822, -1000, 2,
	6447, -1000, 8843, 304, 235, 7267, 232, 7267, 7267, 7267,
	859, 504, 230, 228, 226, 7267, 7267, 212, 7267, 7267,
	47, 208, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	47, 187, -1000, 485, -1000, 1649, -1000, -1000, 750, -1000,
	468, 669, -1000, -1000, 8843, 182, 5125, 7267, 7267, 7267,
	210, -1000, -1000, 8843, -1000, 7267, 9064, 179, 9402, 9365,
	4961, -1000, 485, 485, 205, 644, -1000, 463, 821, 620,
	1727, 7759, 7696, 3807, 9233, 4797, -1000, -1000, -1000, 7630,
	-1000, -55, 7267, -1000, 8843, 9402, 204, 177, -1000, -1000,
	-1000, 65, -1000, -1000, 755, -1000, -1000, -1000, -1000, -1000,
	7267, -1000, 9013, -1000, -1000, -1000, 7564, -1000, 64, 7498,
	-1000, -1000, -1000, -1000, 644, 462, 175, 7267, -1000, -1000,
	-1000, 168, 1483, -1000, 8843, 7267, -1000, 167, -2, -1000,
	-1000, -1000, 621, 420, -3, -1000, -1000, 621, 747, -1000,
	386, -1000, -1000, -1000, 7435, 384, 8843, -1000, 379, 378,
	9064, 377, -1000, 164, 637, 9402, 203, 6119, -1000, -1000,
	-1000, 739, 163, 140, 485, 620, 821, 451, -1000, -30,
	-1000, 455, 821, -1000, -1000, -1000, -1000, -1000, -1000, 5289,
	298, 373, -1000, -1000, -1000, 7267, 9013, -1000, 6119, -55,
	-1000, -1000, 7372, -1000, -1000, -1000, 620, 6283, -1000, -1000,
	-1000, -1000, 7267, 8843, 292, -1000, 485, 1604, 406, -4,
	-1000, 372, -1000, 669, -1000, 789, -1000, 3641, 371, 7267,
	439, -1000, 1011, -1000, -1000, 4469, 9365, -1000, 6119, 62,
	3475, -1000, -1000, 454, 198, 292, 695, 139, 450, -1000,
	-1000, -1000, 589, 821, 431, 821, -1000, -30, -1000, -1000,
	-1000, 4305, 9013, 138, 405, 449, 404, -6, -1000, 628,
	-7, -8, 8843, -1000, 927, -1000, -1000, 48, -1000, -1000,
	-1000, -1000, -1000, -38, 756, -39, 370, -1000, 621, -1000,
	-1000, -1000, 368, -1000, 136, -1000, 7267, 197, 429, 366,
	941, -1000, -1000, -1000, 134, -1000, 133, -1000, 364, -1000,
	821, 448, 292, 193, 292, -1000, 389, 763, 789, 566,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -35,
	-1000, -1000, 412, 4305, -55, -1000, -1000, -1000, -1000, 6283,
	7267, 599, -1000, -1000, 7267, 586, -1000, -42, 1727, -44,
	557, -1000, 756, -1000, 756, -1000, -1000, -1000, 4633, 7304,
	-1000, -1000, -1000, -1000, -1000, 363, 3309, 4469, -1000, -1000,
	3143, 102, -1000, -1000, 447, 262, 433, 411, 778, 5887,
	47, -57, -1000, -1000, -1000, 5603, -1000, 407, -1000, 8843,
	7267, 8843, 7267, 1727, -1000, 1727, 778, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 4305, -1000, 351, -1000, -1000, 130,
	821, -1000, 2977, -1000, 123, -24, -1000, -1000, 778, -1000,
	-1000, -25, -1000, -63, -28, -1000, -65, 5887, 341, 7267,
	-1000, 5453, -1000, 324, 295, 706, 727, 568, -1000, -1000,
	8843, 8843, -1000, -1000, -82, 2811, 4305, -1000, 191, -1000,
	-1000, 2645, -1000, -1000, 262, -1000, 2479, -1000, 778, -1000,
	7267, -1000, 5887, 7267, 192, -1000, 8843, -1000, -1000, -1000,
	-1000, 821, 6018, 5887, 7267, 229, -1000, -1000, -1000, -1000,
	-1000, 8843, -1000, 8843, 485, -30, -1000, -1000, 5887, -1000,
	8843, -1000, 2313, -1000, -1000, 119, -1000, -1000, 292, 294,
	-1000, -1000, -1000, 2147, -1000,
}
var yyPgo = [...]int{

	0, 1130, 1129, 5, 9, 814, 87, 28, 327, 1128,
	38, 17, 822, 1127, 15, 148, 86, 80, 46, 42,
	51, 1125, 30, 1114, 0, 74, 3, 1112, 1109, 1102,
	36, 155, 27, 32, 1101, 1099, 72, 1095, 52, 1094,
	12, 1093, 1092, 1086, 1071, 7, 56, 1070, 1068, 47,
	1062, 85, 436, 1061, 1055, 75, 1053, 1050, 10, 1049,
	1048, 48, 141, 97, 55, 1040, 1031, 1021, 1020, 1009,
	1007, 135, 1005, 1002, 998, 8, 996, 82, 995, 993,
	992, 986, 979, 977, 975, 970, 969, 23, 64, 33,
	963, 957, 953, 950, 84, 6, 109, 948, 81, 938,
	933, 37, 34, 931, 16, 926, 2, 924, 18, 922,
	22, 90, 63, 39, 919, 917, 916, 14, 911, 910,
	106, 93, 907, 35, 31, 905, 904, 900, 899, 893,
	19, 886, 880, 878, 877, 875, 50, 873, 118, 40,
	870, 869, 4, 20, 732, 862, 41, 858, 62, 1,
	21, 852, 846, 839, 838, 835, 832, 11, 101, 820,
	13,
}
var yyR1 = [...]int{

	0, 159, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
	6, 7, 7, 10, 10, 9, 9, 8, 148, 148,
	97, 97, 97, 96, 96, 98, 98, 14, 14, 14,
	14, 136, 136, 137, 137, 138, 158, 158, 157, 157,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 12, 12, 86, 86, 93,
	92, 92, 91, 90, 90, 94, 94, 87, 87, 89,
	89, 88, 88, 77, 77, 149, 149, 21, 21, 21,
	21, 21, 21, 21, 21, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 133, 133,
	134, 74, 74, 29, 29, 122, 122, 30, 16, 16,
	1, 1, 2, 2, 156, 156, 155, 155, 111, 111,
	17, 18, 19, 139, 141, 141, 140, 140, 123, 123,
	125, 125, 124, 124, 143, 143, 143, 143, 118, 118,
	117, 117, 28, 28, 115, 115, 115, 115, 146, 146,
	146, 11, 11, 119, 119, 85, 85, 76, 76, 99,
	99, 80, 80, 26, 26, 27, 27, 153, 153, 135,
	135, 135, 135, 32, 32, 103, 103, 103, 104, 104,
	108, 108, 108, 105, 105, 109, 109, 107, 107, 107,
	110, 110, 106, 106, 112, 112, 112, 78, 78, 33,
	33, 33, 35, 35, 36, 37, 37, 38, 38, 150,
	150, 39, 39, 39, 39, 39, 75, 75, 114, 114,
	114, 147, 147, 40, 40, 41, 42, 42, 42, 42,
	44, 44, 43, 116, 116, 152, 152, 151, 151, 154,
	154, 142, 142, 142, 142, 142, 142, 142, 79, 79,
	45, 45, 84, 84, 95, 20, 73, 73, 46, 22,
	22, 23, 23, 48, 47, 47, 127, 128, 128, 129,
	131, 131, 132, 132, 130, 130, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 121, 121, 120, 120, 160,
	3, 3, 126, 126, 81, 82, 82, 58, 58, 59,
	59, 59, 50, 50, 49, 49, 51, 51, 51, 56,
	56, 145, 145, 145, 113, 113, 64, 64, 64, 64,
	57, 57, 57, 57, 57, 57, 57, 57, 63, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 24, 24,
	25, 25, 65, 65, 65, 65, 66, 66, 67, 67,
	67, 68, 68, 68, 68, 68, 68, 31, 31, 31,
	31, 52, 52, 52, 69, 70, 70, 70, 70, 70,
	70, 70, 60, 60, 60, 61, 61, 61, 55, 101,
	101, 54, 54, 100, 100, 100, 100, 100, 100, 100,
	144, 144, 144, 144, 71, 71, 71, 71, 71, 71,
	71, 71, 72, 72, 72, 72, 53, 53, 53, 53,
	53, 53, 53, 83, 83, 102,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 3, 4, 1, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 5,
	4, 3, 4, 1, 3, 1, 1, 8, 7, 2,
	3, 1, 2, 3, 1, 3, 1, 1, 2, 1,
	3, 1, 3, 3, 1, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 1, 5, 7,
	9, 5, 3, 3, 3, 3, 3, 3, 1, 2,
	6, 7, 9, 5, 1, 6, 3, 2, 0, 2,
	8, 1, 3, 0, 4, 1, 3, 1, 10, 11,
	0, 1, 0, 1, 0, 1, 1, 2, 1, 1,
	9, 6, 7, 8, 0, 2, 0, 2, 0, 2,
	0, 2, 0, 2, 1, 2, 4, 3, 1, 4,
	1, 4, 1, 4, 3, 4, 4, 5, 0, 5,
	4, 1, 1, 1, 4, 5, 6, 1, 3, 6,
	7, 3, 6, 2, 0, 1, 3, 0, 2, 1,
	1, 1, 1, 6, 8, 1, 2, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 1, 2, 1,
	0, 1, 0, 2, 2, 4, 3, 1, 3, 1,
	2, 3, 3, 1, 1, 3, 1, 1, 3, 2,
	0, 5, 5, 10, 3, 5, 1, 3, 1, 2,
	3, 1, 2, 2, 2, 3, 3, 3, 4, 3,
	1, 1, 3, 1, 3, 1, 1, 0, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 4, 3, 1, 4, 4, 3, 1, 1, 0,
	1, 3, 1, 8, 3, 2, 2, 3, 1, 7,
	0, 2, 1, 3, 3, 4, 6, 5, 3, 4,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 5, 4, 3, 1, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 3, 2, 1, 2,
	4, 2, 2, 1, 2, 1, 2, 11, 9, 0,
	0, 1, 0, 4, 2, 3, 1, 1, 2, 2,
	4, 2, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 1, 1, 0, 1, 4, 3, 1, 3,
	1, 1, 3, 2, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 3, 1, 1, 1, 1, 1, 3,
	1, 1, 4, 4, 4, 4, 1, 1, 1, 3,
	3, 1, 4, 2, 3, 1, 4, 4, 3, 3,
	3, 3, 1, 3, 1, 1, 3, 1, 1, 0,
	1, 3, 1, 3, 1, 4, 2, 2, 6, 4,
	2, 2, 1, 2, 1, 4, 3, 3, 3, 3,
	6, 3, 1, 1, 2, 1, 5, 4, 2, 2,
	4, 2, 2, 1, 3, 1,
}
var yyChk = [...]int{

	-1000, -159, -148, -13, 2, -15, -16, -17, -18, -19,
	-139, 52, 80, 45, -86, 39, 152, -76, -80, 21,
	20, 23, 30, 34, 35, 40, 47, 99, 19, 14,
	-24, 49, 25, 27, 154, 41, 36, -6, 37, -158,
	-157, -85, -99, -31, -34, 10, -138, 7, -68, -69,
	-66, 60, 158, 93, 105, 106, 163, 162, 164, 165,
	156, -47, -129, -53, 108, 109, 110, 111, 112, 113,
	114, 6, 166, -57, 151, 97, 98, 107, 44, -121,
	144, -52, -59, -50, -65, -62, 92, 143, 50, 51,
	4, 5, 85, 86, 87, 8, 9, 75, -64, -63,
	-120, -8, 167, -14, -67, -49, 67, 68, 82, 64,
	65, 66, 81, 63, 61, 18, 150, 38, 12, 146,
	147, 145, 156, -97, 152, 10, -5, 146, -4, 99,
	100, 101, 102, 103, 104, 148, 4, 5, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 6, 7, 94,
	95, 96, 19, 20, 21, 22, 23, 24, 25, 26,
	27, 28, 29, 41, 42, 43, 44, 45, 46, 47,
	48, 49, 50, 51, 35, 36, 37, 39, 40, 97,
	98, 60, 30, 31, 32, 33, 34, 61, 62, 56,
	57, 80, 54, 55, 53, 63, 64, 66, 65, 67,
	68, 82, 81, 38, 143, 149, -94, -12, -98, -88,
	37, 39, -96, 147, 10, 146, -77, -20, -6, 10,
	-149, 156, -15, -158, 37, 156, 156, -25, -24, 99,
	10, -25, -25, -35, -36, -52, -37, -121, -38, -8,
	-73, -46, -24, 154, 131, 132, 88, 90, 89, 169,
	161, 171, 177, 163, 162, 172, 133, 173, 174, 134,
	135, 136, 137, 138, 139, 175, 140, 176, 141, 116,
	91, 160, 115, 156, 156, 156, 152, -6, 155, -3,
	161, -138, 37, -120, -156, 54, 55, 149, -155, -111,
	100, 101, 94, 95, 94, 96, 95, 170, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 105, 106, 156, 158, 152, 58, 142, 156, -55,
	-54, -101, -100, -24, 161, 84, 60, -24, -31, -62,
	156, -64, -63, 99, 158, -31, -24, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -56, 156,
	-24, -145, 17, -144, -71, -8, 77, 78, -24, -24,
	-24, -24, -137, -136, -49, -14, 79, -51, -48, -49,
	-70, 156, -157, -52, -158, 156, 156, 156, -24, -24,
	156, -24, -24, 17, 76, -144, 152, -52, -112, 156,
	-112, 156, -144, 17, -3, 157, 154, 152, -148, 154,
	168, -94, -98, 83, 29, 154, 168, 170, -21, 153,
	2, -15, -16, -17, -18, -19, -139, 52, -24, 21,
	-3, -22, -23, -24, -24, 154, 154, 154, 154, 168,
	154, 168, 170, 154, 168, -24, -24, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -51, -24, 155, -24, -122, -30, -31, -24, -77,
	-149, 154, -6, -160, -3, 53, -6, -6, -6, -111,
	156, -15, 156, 154, 155, -24, 161, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -25, -24, -61, -6, 152, -52, -61, -55, 159,
	168, 59, -31, -24, 156, -24, -55, 157, -25, 151,
	-71, -71, 17, 158, 58, 142, -24, 11, -31, 59,
	168, -10, -112, -60, -7, -52, 152, -6, -5, -113,
	-112, 79, 158, 152, 58, 142, 79, -24, 53, -24,
	-83, -102, -24, -24, -24, 76, 76, -24, 157, -78,
	84, -33, -24, -7, 60, 93, 6, 97, 98, 44,
	99, 92, 143, 50, 51, 4, 5, 85, 86, 87,
	37, 61, 63, 64, 66, 65, 67, 68, 82, 81,
	38, -55, 150, 156, 154, -148, 153, -88, -98, 154,
	83, 152, -6, -20, -24, 156, 157, 156, 154, 168,
	157, -36, -38, -24, -46, 155, -24, -10, 168, 29,
	157, 153, 156, 156, -6, -6, 152, -125, 56, -141,
	155, -24, -24, -149, -24, 157, 159, 153, -112, -24,
	-112, 157, 170, -101, -24, 161, 60, -55, 157, 159,
	157, -72, -6, 13, 162, -8, -6, -6, 153, 153,
	158, 153, -24, -136, 159, -112, -24, -52, -25, -24,
	-61, -61, -52, 157, -113, 157, -10, 168, 157, 157,
	153, -10, 168, 157, -24, 155, 157, -26, -27, -32,
	-157, 153, 152, -93, -92, -87, -89, -12, -96, -160,
	157, -119, -15, 155, -24, -22, -24, -115, 152, 155,
	-24, 157, -30, -143, -31, 161, 60, 158, -28, -15,
	155, -133, -26, -26, 156, -123, 56, -150, 152, -75,
	-14, -124, 57, -104, -108, 99, 61, 62, -14, 157,
	157, 96, -15, 155, 153, 170, -24, -31, 156, 157,
	159, 13, -24, 153, 159, 153, -123, 152, 157, -102,
	157, -33, 84, -24, 157, -10, 168, -153, -91, -90,
	-89, 153, -10, 168, -89, 29, 154, -149, 157, 154,
	-146, 154, -146, 154, 154, 157, 59, -31, 156, -55,
	-149, -29, -134, 43, 42, 157, 157, -26, -124, -14,
	153, -39, -157, 45, -150, 168, 152, -75, -15, 155,
	154, -149, -24, -55, 159, -124, -131, -132, -130, -127,
	33, -128, -24, -106, 155, -32, -135, -110, 104, 103,
	102, 148, -107, -108, 160, -109, 153, -10, 168, 154,
	-87, -6, 22, 154, -22, 153, 32, 33, -146, 31,
	-146, -117, -15, 155, -143, -31, -55, 159, 28, 152,
	156, -106, -126, 45, 157, 152, -152, -151, 32, -154,
	48, -142, 104, 103, 102, 99, 100, 101, 148, -75,
	153, -14, -150, -149, 157, 153, 152, 153, -10, 168,
	59, -10, 168, -10, 168, -160, -103, -104, 160, -105,
	-1, 161, 169, -108, 169, 154, -89, 154, 157, -24,
	-11, 155, 154, 153, 154, 31, -149, 157, 157, 154,
	-149, -74, -14, 152, -106, 156, -106, -150, -110, 39,
	37, -6, -142, -114, 154, 152, 153, -150, -130, -24,
	59, -24, 59, 169, -104, 169, -2, 84, -108, -108,
	-118, -15, 155, -11, -149, 154, 26, -117, 153, -9,
	169, -8, -149, 152, -81, -82, -58, -8, 161, 152,
	153, -79, -45, -8, -84, -95, -7, -3, -140, 170,
	153, -147, -40, -41, -42, -43, -44, -14, -7, 153,
	-24, -24, -104, -104, -8, -149, -149, 154, 157, -14,
	153, -149, 157, -10, 168, -8, -149, 154, 168, -160,
	170, 154, 168, 170, -7, 154, -24, 153, -40, 154,
	154, 46, 29, 79, 170, 24, 152, 153, -58, 153,
	-45, -24, -95, -24, 156, -75, -6, -4, -142, -7,
	-24, 154, -149, -160, -160, -26, -7, 153, 157, -106,
	-116, 154, 152, -149, 153,
}
var yyDef = [...]int{

	89, -2, -2, 88, 110, 111, 112, 113, 114, 115,
	116, 0, 0, 0, 123, 0, 146, 156, 157, 0,
	0, 0, 0, 490, 490, 490, 0, 454, 0, 168,
	0, 0, 0, 0, 174, 0, 0, 0, 440, 109,
	194, 237, 0, -2, 489, -2, 106, 0, -2, 508,
	0, 0, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 410, 411, 415, 0, 0, 0, 0, 0, 0,
	0, 459, 0, 425, 461, 0, 428, 0, 0, 433,
	0, 501, 506, 0, -2, -2, 108, 0, 0, 0,
	0, 0, 0, 0, 0, 470, 471, 0, -2, -2,
	435, 511, 0, -2, 0, 452, 480, 481, 482, 483,
	484, 485, 486, 487, 0, 468, 0, 440, 87, 98,
	99, 100, 0, 0, 89, 90, 91, 92, 72, 73,
	74, 75, 76, 77, 78, 79, 2, 3, 4, 5,
	6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
	16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
	26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
	36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
	46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 0, 0, 141, 136,
	125, 126, 95, 96, 93, 94, 0, 144, 0, 80,
	-2, 0, 0, 0, 440, 339, 0, 0, 491, 454,
	97, 0, 0, 0, 283, 284, 0, 434, 286, 287,
	0, 337, 338, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 177, 439,
	441, 107, 440, 436, 0, 0, 0, 0, 195, 196,
	198, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 376, 0, 490, 0, 0, 0, 529, 0,
	528, 532, 530, 534, 0, 0, 0, 360, -2, 497,
	0, -2, 495, 454, 529, -2, 395, 396, 397, 398,
	0, 416, 417, 418, 419, 420, 421, 422, 423, 490,
	424, 0, 462, 463, 542, 544, 0, 0, 427, 429,
	431, 432, 83, 103, 101, 455, 0, 464, 345, 456,
	457, 0, 0, 515, 109, 0, 0, 0, 558, 559,
	0, 561, 562, 0, 473, 0, 0, 513, 449, 0,
	451, 529, 0, 0, 0, 0, 118, 89, -2, 121,
	0, 0, 141, 0, 0, 124, 0, 0, 145, 155,
	147, 148, 149, 150, 151, 152, 153, 0, 0, 0,
	439, 0, 340, 342, 0, 162, 163, 164, 165, 0,
	166, 0, 0, 167, 0, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 394, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 408, 0, 0, 414, 83, 185, -2, 0, 0,
	-2, 176, 0, 0, 439, 0, 0, 210, 204, 197,
	0, 238, 0, 241, 146, 358, 0, 361, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 0, 0, 509, 525, 0, 527, 510, 0, 467,
	529, 0, -2, 537, 529, 0, 0, -2, 0, 426,
	543, 540, 541, 0, 0, 0, 0, 0, 492, 0,
	84, 0, 102, 0, -2, -2, 0, 81, 82, 344,
	465, 0, 490, 0, 0, 0, 0, 0, 464, 0,
	83, 563, 565, 0, 0, 472, 474, 0, 274, 83,
	0, 277, 279, 0, 47, 12, -2, 45, -2, 32,
	-2, -2, 70, 38, 39, 2, 3, 4, 5, 6,
	-2, 53, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 469, -2, 117, -2, 120, 135, 141, 122,
	0, 0, 142, 143, 439, 0, 0, 0, 339, 0,
	0, 282, 285, 288, 336, 0, 413, 0, 84, 0,
	0, 178, -2, -2, 0, 208, 290, 0, 0, 212,
	0, 0, 0, -2, 359, 0, 502, 503, 504, 0,
	505, 0, 0, 531, 533, 0, 0, 0, -2, 467,
	460, 0, 552, 553, 0, 555, 546, 547, 548, 549,
	0, 551, 430, 104, 105, 450, 0, 520, 0, 0,
	518, 519, 521, 458, 208, 0, 0, 84, 557, 560,
	512, 0, 84, 276, 280, 0, 466, 0, 83, 245,
	247, 119, 0, 0, 83, 131, 137, 0, 139, 335,
	0, 158, 233, 146, 0, 0, 341, 161, 228, 228,
	412, 0, 186, 0, -2, 0, 0, 529, 173, 222,
	146, 183, 0, 0, -2, 212, 0, 108, 290, 211,
	296, 0, 0, 205, 258, 259, 260, 261, 262, 0,
	0, 0, 235, 146, 526, 0, 357, -2, 529, 539,
	545, 554, 0, 523, 516, 517, 212, 350, 556, 564,
	275, 278, 0, 281, 272, 243, -2, 270, 0, 83,
	134, 0, 129, 84, 138, 0, 154, -2, 0, 339,
	0, 228, 0, 228, 170, 0, 0, -2, 529, 0,
	-2, 175, 179, 0, 0, 272, 442, 0, 0, 209,
	201, 289, 317, 0, 108, 0, 290, 213, 236, 146,
	242, -2, 356, 0, 0, 0, 0, 83, 352, 0,
	83, 83, 348, 439, 0, 246, 248, 190, 249, 250,
	251, 252, 271, 267, 0, 269, 0, 132, 84, 128,
	130, 140, 0, 159, 0, 224, 0, 0, 0, 0,
	0, 171, 220, 146, 0, -2, 0, -2, 0, 146,
	0, 0, 272, 0, 272, 290, 270, 0, 0, -2,
	316, 319, 321, 322, 323, 324, 325, 326, 327, 0,
	202, 297, 108, -2, 538, 550, 290, 349, 351, 84,
	0, 0, 84, 346, 84, 0, 273, 255, 0, 257,
	192, 191, 0, 268, 0, 127, 133, 234, 0, 0,
	146, 231, 232, 225, 226, 0, -2, 0, 216, 223,
	-2, 85, 181, 146, 0, 0, 0, 108, 0, 0,
	440, 206, 320, 294, 298, 0, 203, 108, 353, 354,
	0, 347, 0, 0, 256, 0, 0, 193, 265, 266,
	160, 218, 146, 146, -2, 227, 0, 172, 184, 0,
	0, 86, -2, 146, 0, 83, 446, 447, 0, 146,
	200, 0, 329, 439, 0, 333, 0, 0, 0, 0,
	299, 0, 301, 0, 0, 311, 0, 0, 310, 343,
	355, 438, 263, 264, 253, -2, -2, 221, 0, 182,
	188, -2, 443, 444, 84, 448, -2, 291, 0, 330,
	0, 292, 0, 0, 0, 295, 207, 300, 302, 303,
	304, 0, 0, 0, 0, 0, 146, 437, 445, 189,
	328, 439, 332, 439, -2, 305, 306, 307, 309, 312,
	254, 219, -2, 331, 334, 0, 308, 180, 272, 0,
	293, 313, 146, -2, 314,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 164, 150, 3, 167, 174, 161, 3,
	156, 157, 172, 163, 168, 162, 177, 173, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 155, 154,
	175, 170, 176, 160, 166, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 158, 3, 159, 171, 3, 151, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 152, 169, 153, 165,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

// line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yylex.(*Parser).currentToken.Value = nil

			yylex.(*Parser).rootNode = &ast.Root{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].list),
				Stmts:    yyDollar[1].list,
				EndTkn:   yylex.(*Parser).currentToken,
			}
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:332
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:335
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:335
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:335
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:335
		{
			yyVAL.token = yyDollar[1].token
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:336
		{
			yyVAL.token = yyDollar[1].token
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:336
		{
			yyVAL.token = yyDollar[1].token
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:336
		{
			yyVAL.token = yyDollar[1].token
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:340
		{
			yyVAL.token = yyDollar[1].token
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:344
		{
			yyVAL.token = yyDollar[1].token
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:345
		{
			yyVAL.token = yyDollar[1].token
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:349
		{
			yyVAL.token = nil
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:350
		{
			yyVAL.token = yyDollar[1].token
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:354
		{
			yyVAL.token = nil
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:355
		{
			yyVAL.token = yyDollar[1].token
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:359
		{
			yyVAL.token = yyDollar[1].token
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:363
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:368
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:372
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:373
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:374
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:378
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:379
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:383
		{
			yyVAL.node = yyDollar[1].node
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:384
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameFullyQualified(yyDollar[1].token)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:388
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:389
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:390
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameFullyQualified(yyDollar[1].token)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:391
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameRelative(yyDollar[1].token)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:395
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttribute(yyDollar[1].node, nil)
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:396
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttribute(yyDollar[1].node, yyDollar[2].node)
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:400
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:401
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:406
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttributeGroup(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token, yyDollar[4].token)
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:410
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:411
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 108:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:415
		{
			yyVAL.list = nil
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:416
		{
			yyVAL.list = yyDollar[1].list
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:420
		{
			yyVAL.node = nil
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:421
		{
			yyVAL.node = yyDollar[1].node
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:422
		{
			yyVAL.node = yyDollar[1].node
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:423
		{
			yyVAL.node = yyDollar[1].node
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:424
		{
			yyVAL.node = yyDollar[1].node
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:425
		{
			yyVAL.node = yyDollar[1].node
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:426
		{
			yyVAL.node = yyDollar[1].node
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:428
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:438
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, yyDollar[2].node, nil, nil, nil, yyDollar[3].token)
		}
	case 119:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:440
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token, yyDollar[4].list, yyDollar[5].token, nil)
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:442
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, nil, yyDollar[2].token, yyDollar[3].list, yyDollar[4].token, nil)
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:445
		{
			yyVAL.node = yylex.(*Parser).builder.NewUseList(yyDollar[1].token, nil, yyDollar[2].node, yyDollar[3].token)
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:447
		{
			yyVAL.node = yylex.(*Parser).builder.NewUseList(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token)
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:449
		{
			yyVAL.node = yyDollar[1].node
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:452
		{
			yyVAL.node = &ast.StmtConstList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ConstTkn:      yyDollar[1].token,
				Consts:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:464
		{
			yyVAL.token = yyDollar[1].token
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:465
		{
			yyVAL.token = yyDollar[1].token
		}
	case 127:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:470
		{
			yyVAL.node = yylex.(*Parser).builder.NewGroupUseList(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token, yyDollar[8].token)
		}
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:472
		{
			yyVAL.node = yylex.(*Parser).builder.NewGroupUseList(yyDollar[1].token, nil, yyDollar[2].node, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].token, yyDollar[7].token)
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:477
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:482
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:484
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:489
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:494
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:496
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:500
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:501
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:505
		{
			yyVAL.node = yyDollar[1].node
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:506
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.Type = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
			decl.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
			yyVAL.node = yyDollar[2].node
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:515
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, nil, nil)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:516
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].token)
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:520
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, nil, nil)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:521
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].token)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:525
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:526
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:530
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:535
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:539
		{
			yyVAL.node = nil
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:540
		{
			yyVAL.node = yyDollar[1].node
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:541
		{
			yyVAL.node = yyDollar[1].node
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:542
		{
			yyVAL.node = yyDollar[1].node
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:543
		{
			yyVAL.node = yyDollar[1].node
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:544
		{
			yyVAL.node = yyDollar[1].node
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:545
		{
			yyVAL.node = yyDollar[1].node
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:547
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:559
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:568
		{
			yyVAL.node = yyDollar[1].node
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:572
		{
			yyVAL.node = yyDollar[1].node
		}
	case 158:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:576
		{
			yyDollar[5].node.(*ast.StmtWhile).WhileTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtWhile).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtWhile).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtWhile).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtWhile).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 159:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:586
		{
			yyVAL.node = &ast.StmtDo{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				DoTkn:               yyDollar[1].token,
				Stmt:                yyDollar[2].node,
				WhileTkn:            yyDollar[3].token,
				OpenParenthesisTkn:  yyDollar[4].token,
				Cond:                yyDollar[5].node,
				CloseParenthesisTkn: yyDollar[6].token,
				SemiColonTkn:        yyDollar[7].token,
			}
		}
	case 160:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:599
		{
			yyDollar[9].node.(*ast.StmtFor).ForTkn = yyDollar[1].token
			yyDollar[9].node.(*ast.StmtFor).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[9].node.(*ast.StmtFor).Init = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).InitSeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).InitSemiColonTkn = yyDollar[4].token
			yyDollar[9].node.(*ast.StmtFor).Cond = yyDollar[5].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).CondSeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CondSemiColonTkn = yyDollar[6].token
			yyDollar[9].node.(*ast.StmtFor).Loop = yyDollar[7].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).LoopSeparatorTkns = yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CloseParenthesisTkn = yyDollar[8].token
			yyDollar[9].node.(*ast.StmtFor).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			yyVAL.node = yyDollar[9].node
		}
	case 161:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:616
		{
			yyDollar[5].node.(*ast.StmtSwitch).SwitchTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtSwitch).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtSwitch).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtSwitch).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtSwitch).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:626
		{
			yyVAL.node = &ast.StmtBreak{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				BreakTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:635
		{
			yyVAL.node = &ast.StmtContinue{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ContinueTkn:  yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:644
		{
			yyVAL.node = &ast.StmtReturn{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ReturnTkn:    yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:653
		{
			yyDollar[2].node.(*ast.StmtGlobal).GlobalTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtGlobal).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtGlobal).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:661
		{
			yyDollar[2].node.(*ast.StmtStatic).StaticTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtStatic).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtStatic).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:669
		{
			yyDollar[2].node.(*ast.StmtEcho).EchoTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtEcho).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtEcho).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:677
		{
			yyVAL.node = &ast.StmtInlineHtml{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				InlineHtmlTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:685
		{
			yyVAL.node = yylex.(*Parser).builder.NewExpressionStmt(yyDollar[1].node, yyDollar[2].token)
		}
	case 170:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:689
		{
			yyDollar[3].node.(*ast.StmtUnset).UnsetTkn = yyDollar[1].token
			yyDollar[3].node.(*ast.StmtUnset).OpenParenthesisTkn = yyDollar[2].token
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[4].token)
			}
			yyDollar[3].node.(*ast.StmtUnset).CloseParenthesisTkn = yyDollar[5].token
			yyDollar[3].node.(*ast.StmtUnset).SemiColonTkn = yyDollar[6].token
			yyDollar[3].node.(*ast.StmtUnset).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			yyVAL.node = yyDollar[3].node
		}
	case 171:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:702
		{
			foreach := yyDollar[7].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[7].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Var = yyDollar[5].node
			foreach.CloseParenthesisTkn = yyDollar[6].token

			if val, ok := yyDollar[5].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 172:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:721
		{
			foreach := yyDollar[9].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Key = yyDollar[5].node
			foreach.DoubleArrowTkn = yyDollar[6].token
			foreach.Var = yyDollar[7].node
			foreach.CloseParenthesisTkn = yyDollar[8].token

			if val, ok := yyDollar[7].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 173:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:742
		{
			yyDollar[5].node.(*ast.StmtDeclare).DeclareTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtDeclare).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtDeclare).Consts = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[5].node.(*ast.StmtDeclare).SeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[5].node.(*ast.StmtDeclare).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtDeclare).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:753
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 175:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:760
		{
			yyVAL.node = yylex.(*Parser).builder.NewTry(yyDollar[1].token, yyDollar[2].token, yyDollar[3].list, yyDollar[4].token, yyDollar[5].node, yyDollar[6].node)
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:764
		{
			yyVAL.node = &ast.StmtGoto{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				GotoTkn:  yyDollar[1].token,
				Label: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:777
		{
			yyVAL.node = &ast.StmtLabel{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				ColonTkn: yyDollar[2].token,
			}
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:790
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:791
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, nil, yyDollar[2].node)
		}
	case 180:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:796
		{
			yyVAL.node = yylex.(*Parser).builder.NewCatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:800
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:801
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:806
		{
			yyVAL.node = nil
		}
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:810
		{
			yyVAL.node = &ast.StmtFinally{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				FinallyTkn:           yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:823
		{
			yyVAL.node = &ast.StmtUnset{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:829
		{
			yyDollar[1].node.(*ast.StmtUnset).Vars = append(yyDollar[1].node.(*ast.StmtUnset).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:838
		{
			yyVAL.node = yyDollar[1].node
		}
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:843
		{
			yyVAL.node = yylex.(*Parser).builder.NewFunction(nil, yyDollar[1].token, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].token, yyDollar[7].node, yyDollar[8].token, yyDollar[9].list, yyDollar[10].token)
		}
	case 189:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:846
		{
			yyVAL.node = yylex.(*Parser).builder.NewFunction(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token, yyDollar[8].node, yyDollar[9].token, yyDollar[10].list, yyDollar[11].token)
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:850
		{
			yyVAL.token = nil
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:851
		{
			yyVAL.token = yyDollar[1].token
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:855
		{
			yyVAL.token = nil
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:856
		{
			yyVAL.token = yyDollar[1].token
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:860
		{
			yyVAL.list = nil
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:861
		{
			yyVAL.list = yyDollar[1].list
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:865
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:866
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:870
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:871
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 200:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:877
		{
			yyVAL.node = yylex.(*Parser).builder.NewClass(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].node, yyDollar[7].token, yyDollar[8].list, yyDollar[9].token)
		}
	case 201:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:883
		{
			yyVAL.node = yylex.(*Parser).builder.NewTrait(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].list, yyDollar[6].token)
		}
	case 202:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:889
		{
			yyVAL.node = yylex.(*Parser).builder.NewInterface(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token, yyDollar[6].list, yyDollar[7].token)
		}
	case 203:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:895
		{
			yyVAL.node = yylex.(*Parser).builder.NewEnum(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].node, yyDollar[5].node, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:899
		{
			yyVAL.node = nil
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:900
		{
			yyVAL.node = yylex.(*Parser).builder.NewEnumType(yyDollar[1].token, yyDollar[2].node)
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:903
		{
			yyVAL.node = nil
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:904
		{
			yyVAL.node = yylex.(*Parser).builder.NewEnumExpr(yyDollar[1].token, yyDollar[2].node)
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:908
		{
			yyVAL.node = nil
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:912
		{
			yyVAL.node = &ast.StmtClass{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExtendsTkn: yyDollar[1].token,
				Extends:    yyDollar[2].node,
			}
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:923
		{
			yyVAL.node = nil
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:927
		{
			yyVAL.node = &ast.StmtInterface{
				Position:             yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ExtendsTkn:           yyDollar[1].token,
				Extends:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ExtendsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:939
		{
			yyVAL.node = nil
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:943
		{
			yyVAL.node = &ast.StmtClass{
				Position:                yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ImplementsTkn:           yyDollar[1].token,
				Implements:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ImplementsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:955
		{
			yyVAL.node = yyDollar[1].node
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:959
		{
			yyVAL.node = &ast.StmtForeach{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Var:          yyDollar[2].node,
			}
		}
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:967
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ListTkn:         yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:978
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:991
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:998
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForTkn:    yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1014
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1021
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForeachTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1037
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1044
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndDeclareTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1060
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Cases:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1069
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CaseSeparatorTkn:     yyDollar[2].token,
				Cases:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1079
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn:     yyDollar[1].token,
				Cases:        yyDollar[2].list,
				EndSwitchTkn: yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1089
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				ColonTkn:         yyDollar[1].token,
				CaseSeparatorTkn: yyDollar[2].token,
				Cases:            yyDollar[3].list,
				EndSwitchTkn:     yyDollar[4].token,
				SemiColonTkn:     yyDollar[5].token,
			}
		}
	case 228:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1103
		{
			yyVAL.list = nil
		}
	case 229:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1107
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtCase{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list),
				CaseTkn:          yyDollar[2].token,
				Cond:             yyDollar[3].node,
				CaseSeparatorTkn: yyDollar[4].token,
				Stmts:            yyDollar[5].list,
			})
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1117
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtDefault{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				DefaultTkn:       yyDollar[2].token,
				CaseSeparatorTkn: yyDollar[3].token,
				Stmts:            yyDollar[4].list,
			})
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1128
		{
			yyVAL.token = yyDollar[1].token
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1129
		{
			yyVAL.token = yyDollar[1].token
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1134
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1141
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndWhileTkn:  yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 235:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1157
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				Stmt:                yyDollar[5].node,
			}
		}
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1168
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				Stmt:                yyDollar[6].node,
			})

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)

			yyVAL.node = yyDollar[1].node
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1186
		{
			yyVAL.node = yyDollar[1].node
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1190
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[3].node),
				ElseTkn:  yyDollar[2].token,
				Stmt:     yyDollar[3].node,
			}

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 239:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1205
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[6].list),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				ColonTkn:            yyDollar[5].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[6].list),
					Stmts:    yyDollar[6].list,
				},
			}
		}
	case 240:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1220
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[7].list),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[7].list),
					Stmts:    yyDollar[7].list,
				},
			})

			yyVAL.node = yyDollar[1].node
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1240
		{
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[2].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[3].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			yyVAL.node = yyDollar[1].node
		}
	case 242:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1248
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				ElseTkn:  yyDollar[2].token,
				ColonTkn: yyDollar[3].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[4].list),
					Stmts:    yyDollar[4].list,
				},
			}
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[5].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[6].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token)

			yyVAL.node = yyDollar[1].node
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1267
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 244:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1268
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1272
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1273
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1277
		{
			yyVAL.list = nil
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1278
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1282
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1283
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1284
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1285
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 253:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1291
		{
			yyVAL.node = yylex.(*Parser).builder.NewParameter(yyDollar[1].list, yyDollar[2].list, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, nil, nil, false)
		}
	case 254:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1294
		{
			yyVAL.node = yylex.(*Parser).builder.NewParameter(yyDollar[1].list, yyDollar[2].list, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].token, yyDollar[8].node, true)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1298
		{
			yyVAL.node = yyDollar[1].node
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1299
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1300
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1304
		{
			yyVAL.node = yyDollar[1].node
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1305
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1309
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1310
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1311
		{
			yyVAL.node = yyDollar[1].node
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1315
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1316
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1321
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1323
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1327
		{
			yyVAL.node = yyDollar[1].node
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1328
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1329
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 270:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1333
		{
			yyVAL.node = nil
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1334
		{
			yyVAL.node = yyDollar[1].node
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1338
		{
			yyVAL.node = &ReturnType{}
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1339
		{
			yyVAL.node = yylex.(*Parser).builder.NewReturnType(yyDollar[1].token, yyDollar[2].node)
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1343
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgumentList(yyDollar[1].token, nil, nil, nil, yyDollar[2].token)
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1345
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgumentList(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token, nil, yyDollar[4].token)
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1346
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgumentList(yyDollar[1].token, nil, nil, yyDollar[2].token, yyDollar[3].token)
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1350
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1352
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1356
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgument(yyDollar[1].node)
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1357
		{
			yyVAL.node = yylex.(*Parser).builder.NewVariadicArgument(yyDollar[1].token, yyDollar[2].node)
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1358
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamedArgument(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node)
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1363
		{
			yyDollar[1].node.(*ast.StmtGlobal).Vars = append(yyDollar[1].node.(*ast.StmtGlobal).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1370
		{
			yyVAL.node = &ast.StmtGlobal{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1378
		{
			yyVAL.node = yyDollar[1].node
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1383
		{
			yyDollar[1].node.(*ast.StmtStatic).Vars = append(yyDollar[1].node.(*ast.StmtStatic).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1390
		{
			yyVAL.node = &ast.StmtStatic{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1399
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1413
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1431
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1432
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1437
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyList(yyDollar[1].list, yyDollar[2].list, yyDollar[3].node, yyDollar[4].node, yyDollar[5].token)
		}
	case 292:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1439
		{
			yyVAL.node = yylex.(*Parser).builder.NewClassConstList(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token)
		}
	case 293:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:1441
		{
			yyVAL.node = yylex.(*Parser).builder.NewClassMethod(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].node, yyDollar[8].token, yyDollar[9].node, yyDollar[10].node)
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1443
		{
			traitUse := &ast.StmtTraitUse{
				Position:      yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				UseTkn:        yyDollar[1].token,
				Traits:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}

			switch n := yyDollar[3].node.(type) {
			case *TraitAdaptationList:
				traitUse.OpenCurlyBracketTkn = n.OpenCurlyBracketTkn
				traitUse.Adaptations = n.Adaptations
				traitUse.CloseCurlyBracketTkn = n.CloseCurlyBracketTkn
			case *ast.StmtNop:
				traitUse.SemiColonTkn = n.SemiColonTkn
			}

			yyVAL.node = traitUse
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1463
		{
			yyVAL.node = yylex.(*Parser).builder.NewEnumCase(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token)
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1467
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1468
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1473
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1480
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CloseCurlyBracketTkn: yyDollar[2].token,
			}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1488
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Adaptations:          yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1499
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1500
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1505
		{
			yyDollar[1].node.(*ast.StmtTraitUsePrecedence).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1511
		{
			yyDollar[1].node.(*ast.StmtTraitUseAlias).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1520
		{
			yyVAL.node = &ast.StmtTraitUsePrecedence{
				Position:       yylex.(*Parser).builder.Pos.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].node.(*ParserSeparatedList).Items),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				InsteadofTkn:   yyDollar[2].token,
				Insteadof:      yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1535
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1550
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1565
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1581
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
			}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1595
		{
			yyVAL.node = &TraitMethodRef{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1606
		{
			yyVAL.node = yyDollar[1].node
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1613
		{
			yyVAL.node = &TraitMethodRef{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1629
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1636
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1647
		{
			yyVAL.list = yyDollar[1].list
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1648
		{
			yyVAL.list = []ast.Vertex{yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1652
		{
			yyVAL.list = nil
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1653
		{
			yyVAL.list = yyDollar[1].list
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1657
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1658
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1662
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1663
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1664
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1665
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1666
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1667
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1668
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1672
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1673
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1678
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				Expr: nil,
			}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1693
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1711
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1712
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1717
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1733
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1749
		{
			yyDollar[1].node.(*ast.StmtEcho).Exprs = append(yyDollar[1].node.(*ast.StmtEcho).Exprs, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1756
		{
			yyVAL.node = &ast.StmtEcho{
				Exprs: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1764
		{
			yyVAL.node = yyDollar[1].node
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1768
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1769
		{
			yyVAL.node = yyDollar[1].node
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1773
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1774
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 343:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1780
		{
			yyVAL.node = yylex.(*Parser).builder.NewAnonClass(yyDollar[1].list, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node, yyDollar[5].node, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1785
		{
			if yyDollar[3].node != nil {
				yyVAL.node = &ast.ExprNew{
					Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
					NewTkn:              yyDollar[1].token,
					Class:               yyDollar[2].node,
					OpenParenthesisTkn:  yyDollar[3].node.(*ArgumentList).OpenParenthesisTkn,
					Args:                yyDollar[3].node.(*ArgumentList).Arguments,
					SeparatorTkns:       yyDollar[3].node.(*ArgumentList).SeparatorTkns,
					CloseParenthesisTkn: yyDollar[3].node.(*ArgumentList).CloseParenthesisTkn,
				}
			} else {
				yyVAL.node = &ast.ExprNew{
					Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
					NewTkn:   yyDollar[1].token,
					Class:    yyDollar[2].node,
				}
			}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1805
		{
			yyVAL.node = &ast.ExprNew{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				NewTkn:   yyDollar[1].token,
				Class:    yyDollar[2].node,
			}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1816
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1820
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1821
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 349:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1826
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token)
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1831
		{
			yyVAL.node = nil
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1833
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1838
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1840
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1845
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(nil, nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1847
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(yyDollar[1].token, yyDollar[2].token, nil, yyDollar[3].token, yyDollar[4].node)
		}
	case 356:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1852
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
				EqualTkn: yyDollar[5].token,
				Expr:     yyDollar[6].node,
			}
		}
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1868
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
					OpenBracketTkn:  yyDollar[1].token,
					Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[3].token,
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1883
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1892
		{
			yyVAL.node = &ast.ExprAssignReference{
				Position:     yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Var:          yyDollar[1].node,
				EqualTkn:     yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Expr:         yyDollar[4].node,
			}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1902
		{
			yyVAL.node = &ast.ExprClone{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CloneTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1910
		{
			yyVAL.node = &ast.ExprAssignPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1919
		{
			yyVAL.node = &ast.ExprAssignMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1928
		{
			yyVAL.node = &ast.ExprAssignMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1937
		{
			yyVAL.node = &ast.ExprAssignPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1946
		{
			yyVAL.node = &ast.ExprAssignDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1955
		{
			yyVAL.node = &ast.ExprAssignConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1964
		{
			yyVAL.node = &ast.ExprAssignMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1973
		{
			yyVAL.node = &ast.ExprAssignBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1982
		{
			yyVAL.node = &ast.ExprAssignBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1991
		{
			yyVAL.node = &ast.ExprAssignBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2000
		{
			yyVAL.node = &ast.ExprAssignShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2009
		{
			yyVAL.node = &ast.ExprAssignShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2018
		{
			yyVAL.node = &ast.ExprAssignCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2027
		{
			yyVAL.node = &ast.ExprPostInc{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				IncTkn:   yyDollar[2].token,
			}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2035
		{
			yyVAL.node = &ast.ExprPreInc{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2043
		{
			yyVAL.node = &ast.ExprPostDec{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				DecTkn:   yyDollar[2].token,
			}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2051
		{
			yyVAL.node = &ast.ExprPreDec{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DecTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2059
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2068
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2077
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2086
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2095
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2104
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2113
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2122
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2131
		{
			yyVAL.node = &ast.ExprBinaryConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2140
		{
			yyVAL.node = &ast.ExprBinaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2149
		{
			yyVAL.node = &ast.ExprBinaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2158
		{
			yyVAL.node = &ast.ExprBinaryMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2167
		{
			yyVAL.node = &ast.ExprBinaryPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2176
		{
			yyVAL.node = &ast.ExprBinaryDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2185
		{
			yyVAL.node = &ast.ExprBinaryMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2194
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2203
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2212
		{
			yyVAL.node = &ast.ExprUnaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PlusTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2220
		{
			yyVAL.node = &ast.ExprUnaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				MinusTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2228
		{
			yyVAL.node = &ast.ExprBooleanNot{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExclamationTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2236
		{
			yyVAL.node = &ast.ExprBitwiseNot{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				TildaTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2244
		{
			yyVAL.node = &ast.ExprBinaryIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2253
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2262
		{
			yyVAL.node = &ast.ExprBinaryEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2271
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2280
		{
			yyVAL.node = &ast.ExprBinarySmaller{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2289
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2298
		{
			yyVAL.node = &ast.ExprBinaryGreater{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2307
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2316
		{
			yyVAL.node = &ast.ExprBinarySpaceship{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2325
		{
			yyVAL.node = &ast.ExprInstanceOf{
				Position:      yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Expr:          yyDollar[1].node,
				InstanceOfTkn: yyDollar[2].token,
				Class:         yyDollar[3].node,
			}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2334
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2343
		{
			yyVAL.node = yyDollar[1].node
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2347
		{
			yyVAL.node = yyDollar[1].node
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:2351
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[5].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				IfTrue:      yyDollar[3].node,
				ColonTkn:    yyDollar[4].token,
				IfFalse:     yyDollar[5].node,
			}
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2362
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				ColonTkn:    yyDollar[3].token,
				IfFalse:     yyDollar[4].node,
			}
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2372
		{
			yyVAL.node = &ast.ExprBinaryCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2381
		{
			yyVAL.node = yyDollar[1].node
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2385
		{
			yyVAL.node = &ast.ExprCastInt{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2393
		{
			yyVAL.node = &ast.ExprCastDouble{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2401
		{
			yyVAL.node = &ast.ExprCastString{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2409
		{
			yyVAL.node = &ast.ExprCastArray{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2417
		{
			yyVAL.node = &ast.ExprCastObject{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2425
		{
			yyVAL.node = &ast.ExprCastBool{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2433
		{
			yyVAL.node = &ast.ExprCastUnset{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2441
		{
			exit := &ast.ExprExit{
				ExitTkn: yyDollar[1].token,
			}

			if yyDollar[2].node == nil {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token)
			} else {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				exit.OpenParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).OpenParenthesisTkn
				exit.Expr = yyDollar[2].node.(*ast.ExprBrackets).Expr
				exit.CloseParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).CloseParenthesisTkn
			}

			yyVAL.node = exit
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2458
		{
			yyVAL.node = &ast.ExprErrorSuppress{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AtTkn:    yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2466
		{
			yyVAL.node = yyDollar[1].node
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2470
		{
			yyVAL.node = &ast.ExprShellExec{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBacktickTkn:  yyDollar[1].token,
				Parts:            yyDollar[2].list,
				CloseBacktickTkn: yyDollar[3].token,
			}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2479
		{
			yyVAL.node = &ast.ExprPrint{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PrintTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2487
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				YieldTkn: yyDollar[1].token,
			}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2494
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldTkn: yyDollar[1].token,
				Val:      yyDollar[2].node,
			}
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2502
		{
			yyVAL.node = &ast.ExprYield{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				YieldTkn:       yyDollar[1].token,
				Key:            yyDollar[2].node,
				DoubleArrowTkn: yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2512
		{
			yyVAL.node = &ast.ExprYieldFrom{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldFromTkn: yyDollar[1].token,
				Expr:         yyDollar[2].node,
			}
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2520
		{
			yyVAL.node = yylex.(*Parser).builder.NewThrowExpr(yyDollar[1].token, yyDollar[2].node)
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2524
		{
			yyVAL.node = yyDollar[1].node
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2528
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			}

			yyVAL.node = yyDollar[2].node
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2543
		{
			yyVAL.node = yyDollar[1].node
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2545
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[2].node)
				n.AttrGroups = yyDollar[1].list
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[2].node)
				n.AttrGroups = yyDollar[1].list
			}

			yyVAL.node = yyDollar[2].node
		}
	case 437:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:2561
		{
			closure := yyDollar[7].node.(*ast.ExprClosure)

			closure.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token)
			closure.FunctionTkn = yyDollar[1].token
			closure.AmpersandTkn = yyDollar[2].token
			closure.OpenParenthesisTkn = yyDollar[4].token
			closure.Params = yyDollar[5].node.(*ParserSeparatedList).Items
			closure.SeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			closure.CloseParenthesisTkn = yyDollar[6].token
			closure.ColonTkn = yyDollar[8].node.(*ReturnType).ColonTkn
			closure.ReturnType = yyDollar[8].node.(*ReturnType).Type
			closure.OpenCurlyBracketTkn = yyDollar[9].token
			closure.Stmts = yyDollar[10].list
			closure.CloseCurlyBracketTkn = yyDollar[11].token

			yyVAL.node = closure
		}
	case 438:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:2580
		{
			yyVAL.node = &ast.ExprArrowFunction{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node),
				FnTkn:               yyDollar[1].token,
				AmpersandTkn:        yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Params:              yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[6].node.(*ReturnType).Type,
				DoubleArrowTkn:      yyDollar[8].token,
				Expr:                yyDollar[9].node,
			}
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2602
		{
			yyVAL.token = nil
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2603
		{
			yyVAL.token = yyDollar[1].token
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2608
		{
			yyVAL.node = &ast.ExprClosure{}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2610
		{
			yyVAL.node = &ast.ExprClosure{
				UseTkn:                 yyDollar[1].token,
				UseOpenParenthesisTkn:  yyDollar[2].token,
				Uses:                   yyDollar[3].node.(*ParserSeparatedList).Items,
				UseSeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				UseCloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2622
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2626
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2627
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2632
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2646
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				AmpersandTkn: yyDollar[1].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						IdentifierTkn: yyDollar[2].token,
						Value:         yyDollar[2].token.Value,
					},
				},
			}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2664
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				EllipsisTkn:         yyDollar[2].node.(*ArgumentList).EllipsisTkn,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2676
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				EllipsisTkn:         yyDollar[4].node.(*ArgumentList).EllipsisTkn,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2698
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				EllipsisTkn:         yyDollar[2].node.(*ArgumentList).EllipsisTkn,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2712
		{
			yyVAL.node = yyDollar[1].node
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2713
		{
			yyVAL.node = yyDollar[1].node
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2717
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2718
		{
			yyVAL.node = yyDollar[1].node
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2722
		{
			yyVAL.node = yyDollar[1].node
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2723
		{
			yyVAL.node = yyDollar[1].node
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2724
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2728
		{
			yyVAL.node = nil
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2729
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2734
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2738
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
			}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2748
		{
			yyVAL.list = yyDollar[1].list
		}
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2754
		{
			yyVAL.node = nil
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2755
		{
			yyVAL.node = yyDollar[1].node
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2760
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ArrayTkn:        yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2771
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2781
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2789
		{
			yyVAL.node = &ast.ScalarEncapsed{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenQuoteTkn:  yyDollar[1].token,
				Parts:         yyDollar[2].list,
				CloseQuoteTkn: yyDollar[3].token,
			}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2801
		{
			yyVAL.node = &ast.ScalarLnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2809
		{
			yyVAL.node = &ast.ScalarDnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2817
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:       yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn: yyDollar[1].token,
				Parts: []ast.Vertex{
					&ast.ScalarEncapsedStringPart{
						Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						EncapsedStrTkn: yyDollar[2].token,
						Value:          yyDollar[2].token.Value,
					},
				},
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2832
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenHeredocTkn:  yyDollar[1].token,
				CloseHeredocTkn: yyDollar[2].token,
			}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2840
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn:  yyDollar[1].token,
				Parts:           yyDollar[2].list,
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2848
		{
			yyVAL.node = yyDollar[1].node
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2849
		{
			yyVAL.node = yyDollar[1].node
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2850
		{
			yyVAL.node = yyDollar[1].node
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2855
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2870
		{
			yyVAL.node = yylex.(*Parser).builder.NewConstFetch(yyDollar[1].node)
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2871
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2872
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2873
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2874
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2875
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2876
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2877
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2878
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2882
		{
			yyVAL.node = yyDollar[1].node
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2883
		{
			yyVAL.node = yyDollar[1].node
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2887
		{
			yyVAL.node = nil
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2888
		{
			yyVAL.node = yyDollar[1].node
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2892
		{
			yyVAL.node = yyDollar[1].node
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2893
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2894
		{
			yyVAL.node = yyDollar[1].node
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2895
		{
			yyVAL.node = yyDollar[1].node
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2899
		{
			yyVAL.node = yyDollar[1].node
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2900
		{
			yyVAL.node = yyDollar[1].node
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2904
		{
			yyVAL.node = yyDollar[1].node
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2905
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2906
		{
			yyVAL.node = yyDollar[1].node
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2911
		{
			yyVAL.node = yyDollar[1].node
		}
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2913
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2923
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2935
		{
			yyVAL.node = yylex.(*Parser).builder.NewMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2937
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafeMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2939
		{
			yyVAL.node = yyDollar[1].node
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2944
		{
			yyVAL.node = yyDollar[1].node
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2946
		{
			yyVAL.node = yyDollar[1].node
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2948
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2950
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2955
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2966
		{
			yyVAL.node = &ast.ExprVariable{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				DollarTkn:            yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Name:                 yyDollar[3].node,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2976
		{
			yyVAL.node = &ast.ExprVariable{
				Position:  yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DollarTkn: yyDollar[1].token,
				Name:      yyDollar[2].node,
			}
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2987
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2999
		{
			yyVAL.node = yyDollar[1].node
		}
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3003
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3013
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3025
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3029
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3033
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3042
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3053
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3054
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3055
		{
			yyVAL.node = yyDollar[1].node
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3059
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3060
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3061
		{
			yyVAL.node = yyDollar[1].node
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3066
		{
			pairList := yyDollar[1].node.(*ParserSeparatedList)
			fistPair := pairList.Items[0].(*ast.ExprArrayItem)

			if fistPair.Key == nil && fistPair.Val == nil && len(pairList.Items) == 1 {
				pairList.Items = nil
			}

			yyVAL.node = yyDollar[1].node
		}
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3079
		{
			yyVAL.node = &ast.ExprArrayItem{}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3080
		{
			yyVAL.node = yyDollar[1].node
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3085
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3087
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3092
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val:            yyDollar[3].node,
			}
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3101
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Val:      yyDollar[1].node,
			}
		}
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3108
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				AmpersandTkn:   yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3118
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Val:          yyDollar[2].node,
			}
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3126
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:    yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				EllipsisTkn: yyDollar[1].token,
				Val:         yyDollar[2].node,
			}
		}
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:3134
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[3].token, yyDollar[6].token),
					ListTkn:         yyDollar[3].token,
					OpenBracketTkn:  yyDollar[4].token,
					Items:           yyDollar[5].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[6].token,
				},
			}
		}
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3150
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
			}
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3167
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3171
		{
			yyVAL.list = append(
				yyDollar[1].list,
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					EncapsedStrTkn: yyDollar[2].token,
					Value:          yyDollar[2].token.Value,
				},
			)
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3182
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3186
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
				yyDollar[2].node,
			}
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3200
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3211
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3228
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3232
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3236
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name:                      yyDollar[2].node,
				CloseCurlyBracketTkn:      yyDollar[3].token,
			}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3245
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 550:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:3258
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenSquareBracketTkn:  yyDollar[3].token,
				Dim:                   yyDollar[4].node,
				CloseSquareBracketTkn: yyDollar[5].token,
				CloseCurlyBracketTkn:  yyDollar[6].token,
			}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3274
		{
			yyVAL.node = &ast.ScalarEncapsedStringBrackets{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Var:                  yyDollar[2].node,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3286
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3294
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(string(yyDollar[1].token.Value)); err == nil {
				yyVAL.node = &ast.ScalarLnumber{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					NumberTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					StringTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3311
		{
			_, err := strconv.Atoi(string(yyDollar[2].token.Value))
			isInt := err == nil

			if isInt {
				yyVAL.node = &ast.ExprUnaryMinus{
					Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn: yyDollar[1].token,
					Expr: &ast.ScalarLnumber{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						NumberTkn: yyDollar[2].token,
						Value:     yyDollar[2].token.Value,
					},
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn:  yyDollar[1].token,
					StringTkn: yyDollar[2].token,
					Value:     append([]byte("-"), yyDollar[2].token.Value...),
				}
			}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3335
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:3349
		{
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[4].token)
			}

			yyVAL.node = &ast.ExprIsset{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				IssetTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Vars:                yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
			}
		}
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3364
		{
			yyVAL.node = &ast.ExprEmpty{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EmptyTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3374
		{
			yyVAL.node = &ast.ExprInclude{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3382
		{
			yyVAL.node = &ast.ExprIncludeOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3390
		{
			yyVAL.node = &ast.ExprEval{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EvalTkn:             yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3400
		{
			yyVAL.node = &ast.ExprRequire{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3408
		{
			yyVAL.node = &ast.ExprRequireOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3418
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3419
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3423
		{
			yyVAL.node = yyDollar[1].node
		}
	}
	goto yystack /* stack new state and value */
}
