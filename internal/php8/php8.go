// Code generated by goyacc -o internal/php8/php8.go internal/php8/php8.y. DO NOT EDIT.

// line internal/php8/php8.y:1

package php8

import __yyfmt__ "fmt"

// line internal/php8/php8.y:3

import (
	"strconv"

	"github.com/z7zmey/php-parser/pkg/ast"
	"github.com/z7zmey/php-parser/pkg/token"
)

// line internal/php8/php8.y:13
type yySymType struct {
	yys   int
	node  ast.Vertex
	token *token.Token
	list  []ast.Vertex
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_FN = 57380
const T_CONST = 57381
const T_RETURN = 57382
const T_TRY = 57383
const T_CATCH = 57384
const T_FINALLY = 57385
const T_THROW = 57386
const T_USE = 57387
const T_INSTEADOF = 57388
const T_GLOBAL = 57389
const T_VAR = 57390
const T_UNSET = 57391
const T_ISSET = 57392
const T_EMPTY = 57393
const T_HALT_COMPILER = 57394
const T_CLASS = 57395
const T_TRAIT = 57396
const T_INTERFACE = 57397
const T_EXTENDS = 57398
const T_IMPLEMENTS = 57399
const T_OBJECT_OPERATOR = 57400
const T_DOUBLE_ARROW = 57401
const T_LIST = 57402
const T_ARRAY = 57403
const T_CALLABLE = 57404
const T_CLASS_C = 57405
const T_TRAIT_C = 57406
const T_METHOD_C = 57407
const T_FUNC_C = 57408
const T_LINE = 57409
const T_FILE = 57410
const T_COMMENT = 57411
const T_DOC_COMMENT = 57412
const T_OPEN_TAG = 57413
const T_OPEN_TAG_WITH_ECHO = 57414
const T_CLOSE_TAG = 57415
const T_WHITESPACE = 57416
const T_START_HEREDOC = 57417
const T_END_HEREDOC = 57418
const T_DOLLAR_OPEN_CURLY_BRACES = 57419
const T_CURLY_OPEN = 57420
const T_PAAMAYIM_NEKUDOTAYIM = 57421
const T_NAMESPACE = 57422
const T_NS_C = 57423
const T_DIR = 57424
const T_NS_SEPARATOR = 57425
const T_ELLIPSIS = 57426
const T_EVAL = 57427
const T_REQUIRE = 57428
const T_REQUIRE_ONCE = 57429
const T_LOGICAL_OR = 57430
const T_LOGICAL_XOR = 57431
const T_LOGICAL_AND = 57432
const T_INSTANCEOF = 57433
const T_NEW = 57434
const T_CLONE = 57435
const T_ELSEIF = 57436
const T_ELSE = 57437
const T_ENDIF = 57438
const T_PRINT = 57439
const T_YIELD = 57440
const T_STATIC = 57441
const T_ABSTRACT = 57442
const T_FINAL = 57443
const T_PRIVATE = 57444
const T_PROTECTED = 57445
const T_PUBLIC = 57446
const T_INC = 57447
const T_DEC = 57448
const T_YIELD_FROM = 57449
const T_INT_CAST = 57450
const T_DOUBLE_CAST = 57451
const T_STRING_CAST = 57452
const T_ARRAY_CAST = 57453
const T_OBJECT_CAST = 57454
const T_BOOL_CAST = 57455
const T_UNSET_CAST = 57456
const T_COALESCE = 57457
const T_SPACESHIP = 57458
const T_NOELSE = 57459
const T_PLUS_EQUAL = 57460
const T_MINUS_EQUAL = 57461
const T_MUL_EQUAL = 57462
const T_POW_EQUAL = 57463
const T_DIV_EQUAL = 57464
const T_CONCAT_EQUAL = 57465
const T_MOD_EQUAL = 57466
const T_AND_EQUAL = 57467
const T_OR_EQUAL = 57468
const T_XOR_EQUAL = 57469
const T_SL_EQUAL = 57470
const T_SR_EQUAL = 57471
const T_COALESCE_EQUAL = 57472
const T_BOOLEAN_OR = 57473
const T_BOOLEAN_AND = 57474
const T_POW = 57475
const T_SL = 57476
const T_SR = 57477
const T_IS_IDENTICAL = 57478
const T_IS_NOT_IDENTICAL = 57479
const T_IS_EQUAL = 57480
const T_IS_NOT_EQUAL = 57481
const T_IS_SMALLER_OR_EQUAL = 57482
const T_IS_GREATER_OR_EQUAL = 57483
const T_NULLSAFE_OBJECT_OPERATOR = 57484
const T_MATCH = 57485
const T_ATTRIBUTE = 57486

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_FN",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_COALESCE_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"T_NULLSAFE_OBJECT_OPERATOR",
	"T_MATCH",
	"T_ATTRIBUTE",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

// line internal/php8/php8.y:4107

// line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	53, 99,
	54, 99,
	55, 99,
	100, 99,
	101, 99,
	-2, 0,
	-1, 41,
	58, 472,
	79, 472,
	142, 472,
	147, 472,
	153, 472,
	-2, 467,
	-1, 45,
	151, 475,
	-2, 485,
	-1, 83,
	58, 474,
	79, 474,
	142, 474,
	147, 474,
	151, 477,
	153, 474,
	-2, 462,
	-1, 108,
	79, 435,
	-2, 464,
	-1, 133,
	53, 99,
	54, 99,
	55, 99,
	100, 99,
	101, 99,
	-2, 0,
	-1, 240,
	58, 472,
	79, 472,
	142, 472,
	147, 472,
	153, 472,
	-2, 357,
	-1, 243,
	151, 477,
	-2, 474,
	-1, 246,
	58, 472,
	79, 472,
	142, 472,
	147, 472,
	153, 472,
	-2, 359,
	-1, 313,
	53, 99,
	54, 99,
	55, 99,
	100, 99,
	101, 99,
	-2, 0,
	-1, 371,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 381,
	-1, 372,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 382,
	-1, 373,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 383,
	-1, 374,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 384,
	-1, 375,
	140, 0,
	141, 0,
	170, 0,
	171, 0,
	-2, 385,
	-1, 376,
	140, 0,
	141, 0,
	170, 0,
	171, 0,
	-2, 386,
	-1, 377,
	140, 0,
	141, 0,
	170, 0,
	171, 0,
	-2, 387,
	-1, 378,
	140, 0,
	141, 0,
	170, 0,
	171, 0,
	-2, 388,
	-1, 379,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 389,
	-1, 386,
	152, 179,
	163, 179,
	-2, 472,
	-1, 389,
	53, 99,
	54, 99,
	55, 99,
	100, 99,
	101, 99,
	-2, 0,
	-1, 430,
	152, 515,
	154, 515,
	163, 515,
	-2, 472,
	-1, 435,
	58, 473,
	79, 473,
	142, 473,
	147, 473,
	151, 476,
	153, 473,
	-2, 391,
	-1, 453,
	151, 501,
	-2, 465,
	-1, 454,
	151, 503,
	-2, 492,
	-1, 535,
	151, 501,
	-2, 466,
	-1, 536,
	151, 503,
	-2, 493,
	-1, 562,
	150, 80,
	-2, 87,
	-1, 566,
	150, 13,
	-2, 438,
	-1, 568,
	150, 46,
	-2, 410,
	-1, 570,
	150, 72,
	-2, 434,
	-1, 571,
	150, 11,
	-2, 99,
	-1, 580,
	150, 65,
	-2, 450,
	-1, 581,
	150, 66,
	-2, 451,
	-1, 582,
	150, 67,
	-2, 452,
	-1, 583,
	150, 62,
	-2, 453,
	-1, 584,
	150, 64,
	-2, 454,
	-1, 585,
	150, 63,
	-2, 455,
	-1, 586,
	150, 68,
	-2, 456,
	-1, 587,
	150, 61,
	-2, 457,
	-1, 588,
	151, 422,
	-2, 42,
	-1, 591,
	151, 422,
	-2, 69,
	-1, 593,
	152, 231,
	-2, 99,
	-1, 596,
	53, 99,
	54, 99,
	55, 99,
	100, 99,
	101, 99,
	-2, 0,
	-1, 627,
	152, 231,
	-2, 99,
	-1, 628,
	152, 231,
	-2, 99,
	-1, 636,
	53, 99,
	54, 99,
	55, 99,
	100, 99,
	101, 99,
	-2, 0,
	-1, 651,
	151, 476,
	-2, 473,
	-1, 717,
	152, 201,
	-2, 472,
	-1, 727,
	152, 231,
	-2, 99,
	-1, 742,
	152, 514,
	154, 514,
	163, 514,
	-2, 472,
	-1, 760,
	152, 123,
	-2, 99,
	-1, 773,
	53, 99,
	54, 99,
	55, 99,
	100, 99,
	101, 99,
	-2, 0,
	-1, 783,
	152, 202,
	-2, 472,
	-1, 786,
	53, 99,
	54, 99,
	55, 99,
	100, 99,
	101, 99,
	-2, 0,
	-1, 806,
	53, 99,
	54, 99,
	55, 99,
	94, 226,
	95, 226,
	96, 226,
	100, 99,
	101, 99,
	-2, 0,
	-1, 848,
	152, 201,
	-2, 472,
	-1, 850,
	152, 204,
	-2, 446,
	-1, 862,
	37, 301,
	39, 301,
	-2, 298,
	-1, 874,
	53, 99,
	54, 99,
	55, 99,
	94, 227,
	95, 227,
	96, 227,
	100, 99,
	101, 99,
	-2, 0,
	-1, 911,
	53, 99,
	54, 99,
	55, 99,
	100, 99,
	101, 99,
	-2, 0,
	-1, 915,
	53, 99,
	54, 99,
	55, 99,
	100, 99,
	101, 99,
	-2, 0,
	-1, 948,
	31, 217,
	32, 217,
	33, 217,
	53, 99,
	54, 99,
	55, 99,
	100, 99,
	101, 99,
	148, 217,
	-2, 0,
	-1, 956,
	53, 99,
	54, 99,
	55, 99,
	100, 99,
	101, 99,
	-2, 0,
	-1, 980,
	29, 78,
	-2, 87,
	-1, 987,
	53, 99,
	54, 99,
	55, 99,
	100, 99,
	101, 99,
	-2, 0,
	-1, 988,
	31, 216,
	32, 216,
	33, 216,
	53, 99,
	54, 99,
	55, 99,
	100, 99,
	101, 99,
	148, 216,
	-2, 0,
	-1, 993,
	53, 99,
	54, 99,
	55, 99,
	100, 99,
	101, 99,
	-2, 0,
	-1, 997,
	53, 99,
	54, 99,
	55, 99,
	100, 99,
	101, 99,
	-2, 0,
	-1, 1023,
	152, 231,
	-2, 99,
	-1, 1031,
	53, 99,
	54, 99,
	55, 99,
	100, 99,
	101, 99,
	-2, 0,
	-1, 1042,
	53, 99,
	54, 99,
	55, 99,
	100, 99,
	101, 99,
	-2, 0,
}

const yyPrivate = 57344

const yyLast = 8646

var yyAct = [...]int{

	28, 818, 38, 968, 864, 458, 392, 133, 690, 732,
	973, 965, 136, 959, 888, 37, 844, 905, 969, 813,
	730, 698, 142, 142, 142, 340, 331, 155, 821, 5,
	449, 692, 716, 231, 548, 765, 794, 697, 457, 558,
	728, 537, 385, 79, 891, 135, 306, 83, 274, 233,
	235, 239, 154, 151, 247, 248, 249, 250, 251, 776,
	108, 131, 252, 253, 254, 255, 256, 257, 258, 147,
	261, 81, 2, 269, 270, 271, 272, 335, 334, 333,
	9, 8, 7, 192, 421, 538, 128, 284, 141, 290,
	291, 76, 293, 294, 452, 241, 241, 286, 332, 243,
	243, 6, 201, 130, 1013, 1004, 1001, 280, 113, 740,
	645, 144, 145, 183, 351, 327, 43, 150, 929, 422,
	928, 113, 1002, 998, 938, 936, 897, 895, 994, 802,
	830, 114, 885, 599, 802, 337, 1003, 999, 276, 995,
	342, 343, 625, 118, 124, 276, 37, 320, 883, 275,
	880, 769, 760, 326, 194, 169, 282, 686, 354, 355,
	356, 357, 358, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 339, 381, 383, 352, 387, 168,
	170, 171, 313, 265, 302, 304, 681, 389, 623, 614,
	113, 353, 448, 106, 428, 113, 193, 129, 894, 850,
	403, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 749, 349, 418, 142, 420, 152,
	241, 235, 399, 113, 243, 150, 347, 325, 431, 350,
	745, 1037, 393, 433, 276, 668, 235, 308, 319, 310,
	348, 326, 667, 194, 317, 282, 423, 323, 662, 652,
	954, 142, 320, 663, 426, 639, 427, 41, 444, 277,
	990, 107, 913, 912, 903, 266, 228, 875, 142, 434,
	241, 183, 857, 120, 243, 113, 442, 792, 546, 549,
	550, 380, 388, 551, 791, 781, 758, 453, 535, 755,
	753, 555, 183, 397, 559, 744, 235, 266, 266, 714,
	703, 689, 241, 653, 425, 419, 243, 644, 309, 240,
	246, 1023, 920, 169, 172, 173, 37, 853, 609, 784,
	542, 907, 906, 324, 743, 300, 727, 305, 711, 592,
	5, 712, 563, 292, 169, 172, 173, 167, 166, 436,
	107, 544, 618, 138, 155, 107, 115, 168, 170, 171,
	229, 450, 165, 289, 288, 227, 451, 287, 167, 166,
	443, 226, 244, 260, 534, 78, 230, 961, 168, 170,
	171, 441, 303, 621, 628, 596, 627, 655, 608, 113,
	656, 9, 8, 7, 612, 610, 183, 593, 432, 634,
	148, 635, 37, 194, 617, 637, 619, 602, 400, 398,
	636, 120, 6, 113, 543, 622, 225, 77, 616, 541,
	185, 182, 307, 1030, 642, 540, 188, 187, 186, 235,
	647, 140, 139, 235, 134, 107, 157, 158, 169, 172,
	173, 174, 175, 176, 177, 179, 181, 116, 665, 1041,
	601, 1040, 604, 819, 386, 1009, 670, 438, 439, 800,
	285, 163, 167, 166, 804, 688, 650, 266, 266, 162,
	402, 164, 168, 170, 171, 178, 180, 165, 646, 183,
	120, 138, 800, 301, 115, 191, 312, 1008, 311, 438,
	800, 439, 439, 438, 839, 840, 800, 666, 989, 266,
	244, 266, 266, 266, 430, 949, 914, 641, 909, 276,
	902, 643, 836, 120, 805, 780, 779, 839, 840, 777,
	275, 169, 775, 772, 613, 598, 324, 595, 401, 390,
	346, 826, 827, 345, 657, 344, 446, 943, 669, 314,
	901, 142, 674, 898, 120, 167, 166, 878, 876, 1015,
	138, 832, 664, 115, 152, 168, 170, 171, 77, 285,
	594, 687, 981, 107, 826, 827, 239, 962, 269, 270,
	272, 957, 918, 877, 284, 594, 290, 291, 680, 293,
	294, 77, 858, 138, 286, 963, 115, 678, 685, 77,
	852, 752, 594, 872, 731, 77, 693, 594, 437, 797,
	631, 189, 892, 77, 424, 424, 286, 169, 183, 37,
	908, 137, 112, 707, 342, 709, 702, 117, 105, 123,
	671, 713, 940, 5, 117, 824, 322, 675, 676, 673,
	693, 693, 276, 838, 307, 339, 725, 726, 705, 708,
	286, 286, 120, 282, 935, 658, 741, 202, 203, 37,
	169, 1012, 722, 545, 454, 536, 196, 322, 889, 322,
	195, 112, 150, 322, 747, 737, 715, 241, 241, 322,
	264, 243, 243, 539, 9, 8, 7, 764, 763, 762,
	307, 119, 549, 113, 279, 223, 224, 559, 440, 757,
	204, 205, 241, 278, 733, 6, 243, 767, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 696, 701, 607, 773, 603, 754, 600, 77, 751,
	933, 235, 759, 321, 148, 563, 756, 863, 768, 695,
	693, 786, 113, 799, 605, 604, 793, 604, 795, 771,
	286, 807, 316, 286, 235, 209, 806, 120, 267, 268,
	881, 120, 801, 817, 785, 196, 120, 137, 112, 782,
	729, 803, 241, 693, 633, 394, 243, 77, 206, 208,
	207, 120, 778, 286, 297, 298, 342, 808, 868, 869,
	870, 867, 866, 865, 1010, 235, 37, 856, 810, 1011,
	796, 833, 820, 854, 790, 789, 829, 338, 126, 37,
	127, 837, 834, 831, 799, 859, 823, 113, 845, 746,
	871, 324, 874, 699, 286, 847, 554, 138, 849, 37,
	115, 138, 828, 120, 115, 886, 241, 604, 113, 318,
	243, 120, 604, 604, 660, 659, 244, 841, 630, 843,
	904, 113, 700, 879, 125, 629, 882, 884, 868, 869,
	870, 867, 866, 865, 911, 122, 733, 919, 132, 921,
	915, 733, 900, 873, 77, 606, 594, 926, 120, 896,
	396, 552, 267, 268, 826, 827, 925, 395, 924, 922,
	828, 817, 932, 391, 190, 828, 934, 37, 1, 923,
	197, 386, 717, 138, 200, 126, 115, 127, 930, 604,
	931, 604, 862, 766, 937, 823, 267, 268, 770, 699,
	860, 861, 892, 948, 917, 672, 742, 972, 424, 424,
	677, 828, 947, 262, 37, 799, 956, 273, 37, 951,
	945, 761, 788, 799, 982, 286, 983, 724, 812, 845,
	941, 811, 942, 286, 910, 839, 840, 285, 979, 59,
	828, 984, 120, 985, 987, 988, 828, 816, 828, 814,
	855, 37, 604, 632, 384, 993, 198, 199, 704, 37,
	997, 944, 970, 1000, 1039, 766, 113, 699, 842, 839,
	840, 440, 710, 1007, 927, 825, 783, 113, 822, 1005,
	978, 979, 295, 113, 890, 887, 234, 828, 440, 828,
	37, 37, 1020, 826, 827, 1022, 37, 1021, 40, 1017,
	37, 1019, 202, 203, 1029, 991, 1027, 1026, 183, 39,
	1024, 967, 138, 1031, 547, 115, 693, 1032, 958, 1033,
	16, 1028, 1034, 978, 964, 557, 286, 15, 899, 1038,
	553, 267, 268, 182, 37, 916, 1035, 153, 654, 1042,
	848, 296, 267, 268, 283, 37, 46, 45, 267, 268,
	169, 172, 173, 174, 175, 176, 177, 179, 181, 109,
	47, 733, 82, 80, 70, 259, 232, 60, 281, 58,
	977, 113, 976, 163, 167, 166, 299, 113, 159, 161,
	160, 183, 263, 164, 168, 170, 171, 178, 180, 165,
	975, 974, 798, 149, 146, 42, 787, 721, 691, 341,
	328, 121, 315, 3, 953, 185, 182, 561, 939, 893,
	955, 0, 0, 0, 960, 0, 0, 966, 0, 0,
	0, 157, 158, 169, 172, 173, 174, 175, 176, 177,
	179, 181, 0, 986, 0, 0, 267, 268, 0, 907,
	906, 0, 267, 268, 0, 184, 163, 167, 166, 0,
	0, 0, 0, 0, 162, 996, 164, 168, 170, 171,
	178, 180, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 576, 566, 477, 93, 94, 562, 0, 113, 960,
	0, 0, 0, 966, 111, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 511, 512, 513, 514,
	515, 503, 504, 588, 591, 506, 507, 492, 493, 494,
	569, 496, 497, 498, 499, 500, 573, 574, 0, 523,
	521, 522, 518, 519, 0, 0, 564, 589, 517, 587,
	583, 584, 585, 580, 581, 0, 0, 0, 0, 0,
	0, 103, 0, 0, 0, 0, 590, 586, 582, 115,
	560, 577, 578, 579, 470, 471, 472, 473, 571, 565,
	478, 479, 480, 567, 568, 570, 460, 461, 462, 463,
	464, 51, 52, 74, 61, 62, 63, 64, 65, 66,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	77, 104, 71, 0, 0, 0, 0, 57, 556, 49,
	0, 0, 0, 54, 53, 55, 56, 69, 107, 575,
	576, 566, 477, 93, 94, 562, 0, 113, 0, 0,
	0, 0, 0, 111, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 511, 512, 513, 514, 515,
	503, 504, 588, 591, 506, 507, 492, 493, 494, 569,
	496, 497, 498, 499, 500, 573, 574, 0, 523, 521,
	522, 518, 519, 0, 0, 564, 589, 517, 587, 583,
	584, 585, 580, 581, 0, 0, 0, 0, 0, 0,
	103, 0, 0, 0, 0, 590, 586, 582, 115, 560,
	577, 578, 579, 470, 471, 472, 473, 571, 565, 478,
	479, 480, 567, 568, 570, 460, 461, 462, 463, 464,
	51, 52, 74, 61, 62, 63, 64, 65, 66, 67,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 572, 77,
	104, 71, 0, 0, 0, 0, 57, 0, 49, 0,
	0, 0, 54, 53, 55, 56, 69, 107, 4, 0,
	88, 89, 68, 44, 93, 94, 35, 0, 113, 0,
	27, 0, 0, 0, 111, 26, 18, 17, 0, 19,
	0, 30, 0, 31, 0, 0, 20, 0, 0, 0,
	21, 22, 34, 36, 112, 13, 23, 33, 0, 0,
	75, 12, 0, 24, 0, 29, 86, 87, 10, 0,
	0, 0, 0, 0, 0, 0, 48, 110, 0, 102,
	98, 99, 100, 95, 96, 0, 0, 0, 0, 0,
	0, 103, 0, 0, 0, 0, 11, 101, 97, 115,
	0, 90, 91, 92, 0, 0, 0, 0, 84, 50,
	0, 0, 0, 72, 73, 25, 0, 0, 0, 0,
	0, 51, 52, 74, 61, 62, 63, 64, 65, 66,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	77, 104, 71, 14, 694, 32, 0, 57, 0, 49,
	0, 0, 0, 54, 53, 55, 56, 69, 107, 4,
	0, 88, 89, 68, 44, 93, 94, 35, 0, 113,
	0, 27, 0, 0, 0, 111, 26, 18, 17, 0,
	19, 0, 30, 0, 31, 0, 0, 20, 0, 0,
	0, 21, 22, 34, 36, 112, 13, 23, 33, 0,
	0, 75, 12, 0, 24, 0, 29, 86, 87, 10,
	0, 0, 0, 0, 0, 0, 0, 48, 110, 0,
	102, 98, 99, 100, 95, 96, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 0, 0, 11, 101, 97,
	115, 0, 90, 91, 92, 0, 0, 0, 0, 84,
	50, 0, 0, 0, 72, 73, 25, 0, 0, 0,
	0, 0, 51, 52, 74, 61, 62, 63, 64, 65,
	66, 67, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 77, 104, 71, 14, 597, 32, 0, 57, 0,
	49, 0, 0, 0, 54, 53, 55, 56, 69, 107,
	465, 466, 476, 477, 0, 0, 456, 0, 113, 0,
	0, 0, 0, 0, 0, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 511, 512, 513, 514,
	515, 503, 504, 505, 532, 506, 507, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 523,
	521, 522, 518, 519, 0, 0, 510, 516, 517, 524,
	525, 527, 526, 528, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 520, 531, 530, 0,
	0, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	478, 479, 480, 508, 509, 459, 460, 461, 462, 463,
	464, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4, 0, 88, 89, 68, 44, 93, 94,
	35, 0, 113, 0, 27, 0, 0, 0, 111, 26,
	18, 17, 0, 19, 0, 30, 0, 31, 0, 533,
	20, 0, 0, 455, 21, 22, 34, 36, 112, 13,
	23, 33, 0, 0, 75, 12, 0, 24, 107, 29,
	86, 87, 10, 0, 0, 0, 0, 0, 0, 0,
	48, 110, 0, 102, 98, 99, 100, 95, 96, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 0, 0,
	11, 101, 97, 115, 0, 90, 91, 92, 0, 0,
	0, 0, 84, 50, 0, 0, 0, 72, 73, 25,
	0, 0, 0, 0, 0, 51, 52, 74, 61, 62,
	63, 64, 65, 66, 67, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 77, 104, 71, 14, 0, 32,
	0, 57, 0, 49, 0, 0, 0, 54, 53, 55,
	56, 69, 107, 330, 0, 88, 89, 68, 44, 93,
	94, 35, 0, 113, 0, 27, 0, 0, 0, 111,
	26, 18, 17, 0, 19, 0, 30, 0, 31, 0,
	0, 20, 0, 0, 0, 21, 22, 34, 36, 112,
	0, 23, 33, 0, 0, 75, 0, 0, 24, 0,
	29, 86, 87, 336, 0, 0, 0, 0, 0, 0,
	0, 48, 110, 0, 102, 98, 99, 100, 95, 96,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 0,
	0, 138, 101, 97, 115, 0, 90, 91, 92, 0,
	0, 0, 0, 84, 50, 0, 0, 0, 72, 73,
	25, 0, 0, 0, 0, 0, 51, 52, 74, 61,
	62, 63, 64, 65, 66, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 77, 104, 71, 14, 1043,
	32, 0, 57, 0, 49, 0, 0, 0, 54, 53,
	55, 56, 69, 107, 330, 0, 88, 89, 68, 44,
	93, 94, 35, 0, 113, 0, 27, 0, 0, 0,
	111, 26, 18, 17, 0, 19, 0, 30, 0, 31,
	0, 0, 20, 0, 0, 0, 21, 22, 34, 36,
	112, 0, 23, 33, 0, 0, 75, 0, 0, 24,
	0, 29, 86, 87, 336, 0, 0, 0, 0, 0,
	0, 0, 48, 110, 0, 102, 98, 99, 100, 95,
	96, 0, 0, 0, 0, 0, 0, 103, 0, 0,
	0, 0, 138, 101, 97, 115, 0, 90, 91, 92,
	0, 0, 0, 0, 84, 50, 0, 0, 0, 72,
	73, 25, 0, 0, 0, 0, 0, 51, 52, 74,
	61, 62, 63, 64, 65, 66, 67, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 77, 104, 71, 14,
	1036, 32, 0, 57, 0, 49, 0, 0, 0, 54,
	53, 55, 56, 69, 107, 330, 0, 88, 89, 68,
	44, 93, 94, 35, 0, 113, 0, 27, 0, 0,
	0, 111, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 34,
	36, 112, 0, 23, 33, 0, 0, 75, 0, 0,
	24, 0, 29, 86, 87, 336, 0, 0, 0, 0,
	0, 0, 0, 48, 110, 0, 102, 98, 99, 100,
	95, 96, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 138, 101, 97, 115, 0, 90, 91,
	92, 0, 0, 0, 0, 84, 50, 0, 0, 0,
	72, 73, 25, 0, 0, 0, 0, 0, 51, 52,
	74, 61, 62, 63, 64, 65, 66, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 77, 104, 71,
	14, 1018, 32, 0, 57, 0, 49, 0, 0, 0,
	54, 53, 55, 56, 69, 107, 330, 0, 88, 89,
	68, 44, 93, 94, 35, 0, 113, 0, 27, 0,
	0, 0, 111, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	34, 36, 112, 0, 23, 33, 0, 0, 75, 0,
	0, 24, 0, 29, 86, 87, 336, 0, 0, 0,
	0, 0, 0, 0, 48, 110, 0, 102, 98, 99,
	100, 95, 96, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 0, 0, 138, 101, 97, 115, 0, 90,
	91, 92, 0, 0, 0, 0, 84, 50, 0, 0,
	0, 72, 73, 25, 0, 0, 0, 0, 0, 51,
	52, 74, 61, 62, 63, 64, 65, 66, 67, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 77, 104,
	71, 14, 1016, 32, 0, 57, 0, 49, 0, 0,
	0, 54, 53, 55, 56, 69, 107, 330, 0, 88,
	89, 68, 44, 93, 94, 35, 0, 113, 0, 27,
	0, 0, 0, 111, 26, 18, 17, 0, 19, 1014,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 112, 0, 23, 33, 0, 0, 75,
	0, 0, 24, 0, 29, 86, 87, 336, 0, 0,
	0, 0, 0, 0, 0, 48, 110, 0, 102, 98,
	99, 100, 95, 96, 0, 0, 0, 0, 0, 0,
	103, 0, 0, 0, 0, 138, 101, 97, 115, 0,
	90, 91, 92, 0, 0, 0, 0, 84, 50, 0,
	0, 0, 72, 73, 25, 0, 0, 0, 0, 0,
	51, 52, 74, 61, 62, 63, 64, 65, 66, 67,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 77,
	104, 71, 14, 0, 32, 0, 57, 0, 49, 0,
	0, 0, 54, 53, 55, 56, 69, 107, 330, 0,
	88, 89, 68, 44, 93, 94, 35, 0, 113, 0,
	27, 0, 0, 0, 111, 26, 18, 17, 0, 19,
	0, 30, 0, 31, 0, 0, 20, 0, 0, 0,
	21, 22, 34, 36, 112, 0, 23, 33, 0, 0,
	75, 0, 0, 24, 0, 29, 86, 87, 336, 0,
	0, 0, 0, 0, 0, 0, 48, 110, 0, 102,
	98, 99, 100, 95, 96, 0, 0, 0, 0, 0,
	0, 103, 0, 0, 0, 0, 138, 101, 97, 115,
	0, 90, 91, 92, 0, 0, 0, 0, 84, 50,
	0, 0, 0, 72, 73, 25, 0, 0, 0, 0,
	0, 51, 52, 74, 61, 62, 63, 64, 65, 66,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	77, 104, 71, 14, 992, 32, 0, 57, 0, 49,
	0, 0, 0, 54, 53, 55, 56, 69, 107, 330,
	0, 88, 89, 68, 44, 93, 94, 35, 0, 113,
	0, 27, 0, 0, 0, 111, 26, 18, 17, 0,
	19, 0, 30, 0, 31, 0, 0, 20, 0, 0,
	0, 21, 22, 34, 36, 112, 0, 23, 33, 0,
	0, 75, 0, 0, 24, 0, 29, 86, 87, 336,
	0, 0, 0, 0, 0, 0, 0, 48, 110, 0,
	102, 98, 99, 100, 95, 96, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 0, 0, 138, 101, 97,
	115, 0, 90, 91, 92, 0, 0, 0, 0, 84,
	50, 0, 0, 0, 72, 73, 25, 0, 0, 0,
	0, 0, 51, 52, 74, 61, 62, 63, 64, 65,
	66, 67, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 77, 104, 71, 14, 952, 32, 0, 57, 0,
	49, 0, 0, 0, 54, 53, 55, 56, 69, 107,
	330, 0, 88, 89, 68, 44, 93, 94, 35, 0,
	113, 0, 27, 0, 0, 0, 111, 26, 18, 17,
	0, 19, 0, 30, 950, 31, 0, 0, 20, 0,
	0, 0, 21, 22, 34, 36, 112, 0, 23, 33,
	0, 0, 75, 0, 0, 24, 0, 29, 86, 87,
	336, 0, 0, 0, 0, 0, 0, 0, 48, 110,
	0, 102, 98, 99, 100, 95, 96, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 138, 101,
	97, 115, 0, 90, 91, 92, 0, 0, 0, 0,
	84, 50, 0, 0, 0, 72, 73, 25, 0, 0,
	0, 0, 0, 51, 52, 74, 61, 62, 63, 64,
	65, 66, 67, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 77, 104, 71, 14, 0, 32, 0, 57,
	0, 49, 0, 0, 0, 54, 53, 55, 56, 69,
	107, 330, 0, 88, 89, 68, 44, 93, 94, 35,
	0, 113, 0, 27, 0, 0, 0, 111, 26, 18,
	17, 0, 19, 0, 30, 0, 31, 851, 0, 20,
	0, 0, 0, 21, 22, 34, 36, 112, 0, 23,
	33, 0, 0, 75, 0, 0, 24, 0, 29, 86,
	87, 336, 0, 0, 0, 0, 0, 0, 0, 48,
	110, 0, 102, 98, 99, 100, 95, 96, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 0, 0, 138,
	101, 97, 115, 0, 90, 91, 92, 0, 0, 0,
	0, 84, 50, 0, 0, 0, 72, 73, 25, 0,
	0, 0, 0, 0, 51, 52, 74, 61, 62, 63,
	64, 65, 66, 67, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 77, 104, 71, 14, 0, 32, 0,
	57, 0, 49, 0, 0, 0, 54, 53, 55, 56,
	69, 107, 330, 0, 88, 89, 68, 44, 93, 94,
	35, 0, 113, 0, 27, 0, 0, 0, 111, 26,
	18, 17, 835, 19, 0, 30, 0, 31, 0, 0,
	20, 0, 0, 0, 21, 22, 34, 36, 112, 0,
	23, 33, 0, 0, 75, 0, 0, 24, 0, 29,
	86, 87, 336, 0, 0, 0, 0, 0, 0, 0,
	48, 110, 0, 102, 98, 99, 100, 95, 96, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 0, 0,
	138, 101, 97, 115, 0, 90, 91, 92, 0, 0,
	0, 0, 84, 50, 0, 0, 0, 72, 73, 25,
	0, 0, 0, 0, 0, 51, 52, 74, 61, 62,
	63, 64, 65, 66, 67, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 77, 104, 71, 14, 0, 32,
	0, 57, 0, 49, 0, 0, 0, 54, 53, 55,
	56, 69, 107, 330, 0, 88, 89, 68, 44, 93,
	94, 35, 0, 113, 0, 27, 0, 0, 0, 111,
	26, 18, 17, 0, 19, 0, 30, 0, 31, 0,
	0, 20, 0, 0, 0, 21, 22, 34, 36, 112,
	0, 23, 33, 0, 0, 75, 0, 0, 24, 0,
	29, 86, 87, 336, 0, 0, 0, 0, 0, 0,
	0, 48, 110, 0, 102, 98, 99, 100, 95, 96,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 0,
	0, 138, 101, 97, 115, 0, 90, 91, 92, 0,
	0, 0, 0, 84, 50, 0, 0, 736, 72, 73,
	25, 0, 0, 0, 0, 0, 51, 52, 74, 61,
	62, 63, 64, 65, 66, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 77, 104, 71, 14, 0,
	32, 0, 57, 0, 49, 0, 0, 0, 54, 53,
	55, 56, 69, 107, 330, 0, 88, 89, 68, 44,
	93, 94, 35, 0, 113, 0, 27, 0, 0, 0,
	111, 26, 18, 17, 0, 19, 0, 30, 0, 31,
	0, 0, 20, 0, 0, 0, 21, 22, 34, 36,
	112, 0, 23, 33, 0, 0, 75, 0, 0, 24,
	0, 29, 86, 87, 336, 0, 0, 0, 0, 0,
	0, 0, 48, 110, 0, 102, 98, 99, 100, 95,
	96, 0, 0, 0, 0, 0, 0, 103, 0, 0,
	0, 0, 138, 101, 97, 115, 0, 90, 91, 92,
	0, 0, 0, 0, 84, 50, 0, 0, 0, 72,
	73, 25, 0, 0, 0, 0, 0, 51, 52, 74,
	61, 62, 63, 64, 65, 66, 67, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 77, 104, 71, 14,
	626, 32, 0, 57, 0, 49, 0, 0, 0, 54,
	53, 55, 56, 69, 107, 330, 0, 88, 89, 68,
	44, 93, 94, 35, 0, 113, 0, 27, 0, 0,
	0, 111, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 34,
	36, 112, 0, 23, 33, 0, 0, 75, 0, 0,
	24, 0, 29, 86, 87, 336, 0, 0, 0, 0,
	0, 0, 0, 48, 110, 0, 102, 98, 99, 100,
	95, 96, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 138, 101, 97, 115, 0, 90, 91,
	92, 0, 0, 0, 0, 84, 50, 0, 0, 0,
	72, 73, 25, 0, 0, 0, 0, 0, 51, 52,
	74, 61, 62, 63, 64, 65, 66, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 77, 104, 71,
	14, 329, 32, 0, 57, 0, 49, 0, 0, 0,
	54, 53, 55, 56, 69, 107, 330, 0, 88, 89,
	68, 44, 93, 94, 35, 0, 113, 0, 27, 0,
	0, 0, 111, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	34, 36, 112, 0, 23, 33, 0, 0, 75, 0,
	0, 24, 0, 29, 86, 87, 336, 0, 0, 0,
	0, 0, 0, 0, 48, 110, 0, 102, 98, 99,
	100, 95, 96, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 0, 0, 138, 101, 97, 115, 0, 90,
	91, 92, 0, 0, 0, 0, 84, 50, 0, 0,
	0, 72, 73, 25, 0, 0, 0, 0, 0, 51,
	52, 74, 61, 62, 63, 64, 65, 66, 67, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 77, 104,
	71, 14, 0, 32, 0, 57, 0, 49, 0, 0,
	0, 54, 53, 55, 56, 69, 107, 88, 89, 68,
	44, 93, 94, 35, 0, 113, 0, 27, 0, 0,
	0, 111, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 34,
	137, 112, 0, 23, 33, 0, 0, 75, 0, 0,
	24, 0, 29, 86, 87, 183, 0, 0, 0, 0,
	0, 0, 0, 48, 110, 0, 102, 98, 99, 100,
	95, 96, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 138, 101, 97, 115, 0, 90, 91,
	92, 0, 0, 0, 0, 84, 50, 169, 172, 173,
	72, 73, 25, 0, 179, 181, 0, 0, 51, 52,
	74, 61, 62, 63, 64, 65, 66, 67, 0, 0,
	0, 167, 166, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 170, 171, 178, 180, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 77, 104, 71,
	14, 0, 32, 846, 57, 0, 49, 0, 0, 0,
	54, 53, 55, 56, 69, 107, 88, 89, 68, 44,
	93, 94, 35, 0, 113, 0, 27, 0, 0, 0,
	111, 26, 18, 17, 0, 19, 0, 30, 0, 31,
	0, 0, 20, 0, 0, 0, 21, 22, 34, 137,
	112, 0, 23, 33, 0, 0, 75, 0, 0, 24,
	0, 29, 86, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 48, 110, 0, 102, 98, 99, 100, 95,
	96, 0, 0, 0, 0, 0, 0, 103, 0, 0,
	0, 0, 138, 101, 97, 115, 0, 90, 91, 92,
	0, 0, 0, 0, 84, 50, 0, 0, 0, 72,
	73, 25, 0, 0, 0, 0, 0, 51, 52, 74,
	61, 62, 63, 64, 65, 66, 67, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 77, 104, 71, 14,
	0, 32, 946, 57, 0, 49, 0, 0, 0, 54,
	53, 55, 56, 69, 107, 88, 89, 68, 44, 93,
	94, 35, 0, 113, 0, 27, 0, 0, 0, 111,
	26, 18, 17, 0, 19, 0, 30, 0, 31, 0,
	0, 20, 0, 0, 0, 21, 22, 34, 137, 112,
	0, 23, 33, 0, 0, 75, 0, 0, 24, 0,
	29, 86, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 48, 110, 0, 102, 98, 99, 100, 95, 96,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 0,
	0, 138, 101, 97, 115, 0, 90, 91, 92, 0,
	0, 0, 0, 84, 50, 0, 0, 0, 72, 73,
	25, 0, 0, 0, 0, 0, 51, 52, 74, 61,
	62, 63, 64, 65, 66, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 77, 104, 71, 14, 0,
	32, 738, 57, 0, 49, 0, 0, 0, 54, 53,
	55, 56, 69, 107, 88, 89, 68, 44, 93, 94,
	35, 0, 113, 0, 27, 0, 0, 0, 111, 26,
	18, 17, 0, 19, 0, 30, 0, 31, 0, 0,
	20, 0, 0, 0, 21, 22, 34, 137, 112, 0,
	23, 33, 0, 0, 75, 0, 0, 24, 0, 29,
	86, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	48, 110, 0, 102, 98, 99, 100, 95, 96, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 0, 0,
	138, 101, 97, 115, 0, 90, 91, 92, 0, 0,
	0, 0, 84, 50, 0, 0, 0, 72, 73, 25,
	0, 0, 0, 0, 0, 51, 52, 74, 61, 62,
	63, 64, 65, 66, 67, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 77, 104, 71, 14, 0, 32,
	723, 57, 0, 49, 0, 0, 0, 54, 53, 55,
	56, 69, 107, 88, 89, 68, 44, 93, 94, 35,
	0, 113, 0, 27, 0, 0, 0, 111, 26, 18,
	17, 0, 19, 0, 30, 0, 31, 0, 0, 20,
	0, 0, 0, 21, 22, 34, 137, 112, 0, 23,
	33, 0, 0, 75, 0, 0, 24, 0, 29, 86,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 48,
	110, 0, 102, 98, 99, 100, 95, 96, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 0, 0, 138,
	101, 97, 115, 0, 90, 91, 92, 0, 0, 0,
	0, 84, 50, 0, 0, 0, 72, 73, 25, 0,
	0, 0, 0, 0, 51, 52, 74, 61, 62, 63,
	64, 65, 66, 67, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 77, 104, 71, 14, 0, 32, 706,
	57, 0, 49, 0, 0, 0, 54, 53, 55, 56,
	69, 107, 88, 89, 68, 44, 93, 94, 35, 0,
	113, 0, 27, 0, 0, 0, 111, 26, 18, 17,
	0, 19, 0, 30, 0, 31, 0, 0, 20, 0,
	0, 0, 21, 22, 34, 137, 112, 0, 23, 33,
	0, 0, 75, 0, 0, 24, 0, 29, 86, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 48, 110,
	0, 102, 98, 99, 100, 95, 96, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 138, 101,
	97, 115, 0, 90, 91, 92, 0, 0, 0, 0,
	84, 50, 0, 0, 0, 72, 73, 25, 0, 0,
	0, 0, 0, 51, 52, 74, 61, 62, 63, 64,
	65, 66, 67, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 77, 104, 71, 14, 0, 32, 0, 57,
	0, 49, 0, 0, 0, 54, 53, 55, 56, 69,
	107, 465, 466, 476, 477, 0, 0, 980, 0, 0,
	0, 0, 0, 0, 0, 0, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 511, 512, 513,
	514, 515, 503, 504, 505, 532, 506, 507, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	523, 521, 522, 518, 519, 0, 0, 510, 516, 517,
	524, 525, 527, 526, 528, 529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 590, 531, 530,
	115, 0, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 478, 479, 480, 508, 509, 459, 460, 461, 462,
	463, 464, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 466, 476, 477, 0, 0, 980, 0, 0,
	533, 0, 0, 0, 0, 1006, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 511, 512, 513,
	514, 515, 503, 504, 505, 532, 506, 507, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	523, 521, 522, 518, 519, 0, 0, 510, 516, 517,
	524, 525, 527, 526, 528, 529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 590, 531, 530,
	115, 0, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 478, 479, 480, 508, 509, 459, 460, 461, 462,
	463, 464, 88, 89, 68, 0, 93, 94, 120, 0,
	113, 0, 0, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 112, 0, 0, 0,
	533, 0, 75, 0, 0, 971, 0, 0, 86, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 110,
	0, 102, 98, 99, 100, 95, 96, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 138, 101,
	97, 115, 237, 90, 91, 92, 0, 0, 0, 0,
	84, 50, 0, 0, 0, 72, 73, 143, 0, 0,
	0, 0, 0, 51, 52, 74, 61, 62, 63, 64,
	65, 66, 67, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 77, 104, 71, 0, 0, 0, 0, 57,
	0, 49, 0, 0, 236, 54, 53, 55, 56, 69,
	107, 465, 466, 476, 477, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 511, 512, 513,
	514, 515, 503, 504, 505, 532, 506, 507, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	523, 521, 522, 518, 519, 0, 0, 510, 516, 517,
	524, 525, 527, 526, 528, 529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 520, 531, 530,
	0, 0, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 478, 479, 480, 508, 509, 459, 460, 461, 462,
	463, 464, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 466, 476, 477,
	0, 0, 1025, 0, 0, 0, 0, 0, 0, 0,
	533, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 511, 512, 513, 514, 515, 503, 504, 505,
	532, 506, 507, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 523, 521, 522, 518, 519,
	0, 0, 510, 516, 517, 524, 525, 527, 526, 528,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 520, 531, 530, 0, 0, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 478, 479, 480, 508,
	509, 868, 869, 870, 867, 866, 865, 88, 89, 68,
	0, 93, 94, 120, 0, 113, 0, 0, 0, 0,
	0, 111, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 815, 0, 0, 0,
	137, 112, 0, 0, 0, 533, 0, 75, 0, 0,
	0, 0, 0, 86, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 48, 110, 0, 102, 98, 99, 100,
	95, 96, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 138, 101, 97, 115, 0, 90, 91,
	92, 0, 0, 0, 0, 84, 50, 0, 0, 0,
	72, 73, 143, 0, 0, 0, 0, 0, 51, 52,
	74, 61, 62, 63, 64, 65, 66, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 89, 68, 0,
	93, 94, 120, 0, 113, 0, 85, 77, 104, 71,
	111, 0, 0, 0, 57, 0, 49, 0, 0, 0,
	54, 53, 55, 56, 69, 107, 0, 0, 0, 137,
	112, 0, 0, 0, 0, 0, 75, 0, 0, 0,
	0, 0, 86, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 649, 110, 0, 102, 98, 99, 100, 95,
	96, 0, 0, 0, 0, 0, 0, 103, 0, 0,
	0, 0, 138, 101, 97, 115, 0, 90, 91, 92,
	0, 0, 0, 0, 84, 50, 0, 0, 0, 72,
	73, 143, 0, 0, 0, 0, 0, 51, 52, 74,
	61, 62, 63, 64, 65, 66, 67, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 89, 68, 0, 93,
	94, 120, 445, 113, 0, 85, 77, 104, 71, 111,
	0, 0, 0, 57, 0, 49, 0, 0, 648, 54,
	53, 55, 56, 69, 107, 0, 0, 0, 137, 112,
	0, 0, 0, 0, 0, 75, 0, 0, 0, 0,
	0, 86, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 48, 110, 0, 102, 98, 99, 100, 95, 96,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 0,
	0, 138, 101, 97, 115, 0, 90, 91, 92, 0,
	0, 0, 0, 84, 50, 0, 0, 0, 72, 73,
	143, 0, 0, 0, 0, 0, 51, 52, 74, 61,
	62, 63, 64, 65, 66, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 88, 89, 68, 0, 93, 94,
	120, 0, 113, 0, 85, 77, 104, 71, 111, 0,
	0, 0, 57, 0, 49, 0, 0, 0, 54, 53,
	55, 56, 69, 107, 0, 0, 0, 137, 112, 0,
	0, 0, 0, 0, 75, 0, 0, 0, 0, 0,
	86, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	48, 110, 0, 102, 98, 99, 100, 95, 96, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 0, 0,
	138, 101, 97, 115, 0, 90, 91, 92, 0, 0,
	0, 0, 84, 50, 0, 0, 0, 72, 73, 143,
	0, 0, 0, 0, 0, 51, 52, 74, 61, 62,
	63, 64, 65, 66, 67, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 88, 89, 68, 0, 93, 94, 120,
	0, 113, 0, 85, 77, 104, 71, 111, 0, 0,
	0, 57, 0, 49, 0, 0, 404, 54, 53, 55,
	56, 69, 107, 0, 0, 0, 137, 112, 0, 0,
	0, 0, 0, 75, 0, 0, 0, 0, 0, 86,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 48,
	110, 0, 102, 98, 99, 100, 95, 96, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 0, 0, 138,
	101, 97, 115, 0, 90, 91, 92, 0, 0, 0,
	0, 84, 50, 0, 0, 0, 72, 73, 143, 0,
	0, 0, 0, 0, 51, 52, 74, 61, 62, 63,
	64, 65, 66, 67, 0, 0, 0, 120, 0, 113,
	0, 0, 0, 0, 0, 111, 0, 0, 0, 0,
	0, 0, 88, 89, 68, 0, 93, 94, 120, 0,
	113, 0, 85, 77, 104, 71, 111, 0, 0, 382,
	57, 0, 49, 0, 0, 0, 54, 53, 55, 56,
	69, 107, 0, 0, 0, 137, 112, 719, 110, 0,
	0, 0, 75, 0, 0, 0, 0, 0, 86, 87,
	0, 0, 0, 0, 0, 0, 0, 138, 48, 110,
	115, 102, 98, 99, 100, 95, 96, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 244, 0, 138, 101,
	97, 115, 0, 90, 91, 92, 0, 0, 0, 0,
	84, 50, 0, 0, 0, 72, 73, 143, 0, 0,
	0, 0, 0, 51, 52, 74, 61, 62, 63, 64,
	65, 66, 67, 0, 0, 0, 0, 0, 159, 161,
	160, 183, 0, 0, 0, 0, 0, 0, 242, 0,
	720, 0, 0, 718, 0, 0, 0, 0, 0, 107,
	0, 85, 77, 104, 71, 185, 182, 0, 0, 57,
	0, 49, 0, 0, 0, 54, 53, 55, 56, 69,
	107, 157, 158, 169, 172, 173, 174, 175, 176, 177,
	179, 181, 0, 0, 0, 0, 159, 161, 160, 183,
	0, 0, 0, 0, 809, 184, 163, 167, 166, 0,
	0, 0, 0, 0, 162, 0, 164, 168, 170, 171,
	178, 180, 165, 185, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	158, 169, 172, 173, 174, 175, 176, 177, 179, 181,
	0, 0, 0, 0, 159, 161, 160, 183, 0, 0,
	774, 0, 0, 184, 163, 167, 166, 0, 0, 0,
	0, 0, 162, 0, 164, 168, 170, 171, 178, 180,
	165, 185, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 158, 169,
	172, 173, 174, 175, 176, 177, 179, 181, 0, 0,
	0, 0, 0, 0, 750, 159, 161, 160, 183, 0,
	0, 184, 163, 167, 166, 0, 0, 0, 0, 0,
	162, 0, 164, 168, 170, 171, 178, 180, 165, 0,
	0, 0, 185, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 158,
	169, 172, 173, 174, 175, 176, 177, 179, 181, 0,
	0, 0, 0, 0, 0, 748, 159, 161, 160, 183,
	0, 0, 184, 163, 167, 166, 0, 0, 0, 0,
	0, 162, 0, 164, 168, 170, 171, 178, 180, 165,
	0, 0, 0, 185, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	158, 169, 172, 173, 174, 175, 176, 177, 179, 181,
	0, 0, 0, 0, 0, 0, 739, 159, 161, 160,
	183, 0, 0, 184, 163, 167, 166, 0, 0, 0,
	0, 0, 162, 0, 164, 168, 170, 171, 178, 180,
	165, 0, 0, 0, 185, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 158, 169, 172, 173, 174, 175, 176, 177, 179,
	181, 0, 0, 0, 0, 159, 161, 160, 183, 0,
	0, 735, 0, 0, 184, 163, 167, 166, 0, 0,
	0, 0, 0, 162, 0, 164, 168, 170, 171, 178,
	180, 165, 185, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 158,
	169, 172, 173, 174, 175, 176, 177, 179, 181, 0,
	0, 0, 0, 159, 161, 160, 183, 0, 0, 734,
	0, 0, 184, 163, 167, 166, 0, 0, 0, 0,
	0, 162, 0, 164, 168, 170, 171, 178, 180, 165,
	185, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 158, 169, 172,
	173, 174, 175, 176, 177, 179, 181, 0, 0, 0,
	0, 0, 0, 684, 159, 161, 160, 183, 0, 0,
	184, 163, 167, 166, 0, 0, 0, 0, 0, 162,
	0, 164, 168, 170, 171, 178, 180, 165, 0, 0,
	0, 185, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 158, 169,
	172, 173, 174, 175, 176, 177, 179, 181, 0, 0,
	0, 0, 159, 161, 160, 183, 0, 0, 683, 0,
	0, 184, 163, 167, 166, 0, 0, 0, 0, 0,
	162, 0, 164, 168, 170, 171, 178, 180, 165, 185,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 158, 169, 172, 173,
	174, 175, 176, 177, 179, 181, 0, 0, 0, 0,
	159, 161, 160, 183, 0, 0, 682, 0, 0, 184,
	163, 167, 166, 0, 0, 0, 0, 0, 162, 0,
	164, 168, 170, 171, 178, 180, 165, 185, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 158, 169, 172, 173, 174, 175,
	176, 177, 179, 181, 0, 0, 0, 0, 159, 161,
	160, 183, 0, 0, 679, 0, 0, 184, 163, 167,
	166, 0, 0, 0, 0, 0, 162, 0, 164, 168,
	170, 171, 178, 180, 165, 185, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 158, 169, 172, 173, 174, 175, 176, 177,
	179, 181, 0, 0, 0, 0, 0, 0, 661, 159,
	161, 160, 183, 0, 0, 184, 163, 167, 166, 0,
	0, 0, 0, 0, 162, 0, 164, 168, 170, 171,
	178, 180, 165, 0, 0, 0, 185, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 158, 169, 172, 173, 174, 175, 176,
	177, 179, 181, 0, 0, 0, 0, 159, 161, 160,
	183, 0, 0, 651, 0, 0, 184, 163, 167, 166,
	0, 0, 0, 0, 0, 162, 0, 164, 168, 170,
	171, 178, 180, 165, 185, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 158, 169, 172, 173, 174, 175, 176, 177, 179,
	181, 0, 0, 0, 0, 0, 0, 640, 159, 161,
	160, 183, 0, 0, 184, 163, 167, 166, 0, 0,
	624, 0, 0, 162, 0, 164, 168, 170, 171, 178,
	180, 165, 0, 0, 0, 185, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 158, 169, 172, 173, 174, 175, 176, 177,
	179, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 638, 0, 0, 184, 163, 167, 166, 159,
	161, 160, 183, 0, 162, 0, 164, 168, 170, 171,
	178, 180, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 158, 169, 172, 173, 174, 175, 176,
	177, 179, 181, 0, 0, 0, 0, 159, 161, 160,
	183, 0, 0, 0, 0, 0, 184, 163, 167, 166,
	0, 0, 0, 0, 0, 162, 0, 164, 168, 170,
	171, 178, 180, 165, 185, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 158, 169, 172, 173, 174, 175, 176, 177, 179,
	181, 0, 0, 0, 0, 159, 161, 160, 183, 620,
	0, 0, 0, 0, 184, 163, 167, 166, 0, 0,
	0, 0, 0, 162, 0, 164, 168, 170, 171, 178,
	180, 165, 185, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 158,
	169, 172, 173, 174, 175, 176, 177, 179, 181, 0,
	0, 0, 0, 159, 161, 160, 183, 0, 0, 615,
	0, 0, 184, 163, 167, 166, 0, 0, 0, 0,
	0, 162, 0, 164, 168, 170, 171, 178, 180, 165,
	185, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 158, 169, 172,
	173, 174, 175, 176, 177, 179, 181, 0, 0, 0,
	0, 159, 161, 160, 183, 0, 0, 611, 0, 0,
	184, 163, 167, 166, 0, 0, 0, 0, 0, 162,
	0, 164, 168, 170, 171, 178, 180, 165, 185, 182,
	429, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 158, 169, 172, 173, 174,
	175, 176, 177, 179, 181, 0, 0, 0, 0, 159,
	161, 160, 183, 0, 0, 435, 0, 0, 184, 163,
	167, 166, 0, 0, 0, 0, 0, 162, 0, 164,
	168, 170, 171, 178, 180, 165, 185, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 158, 169, 172, 173, 174, 175, 176,
	177, 179, 181, 0, 0, 0, 0, 159, 161, 160,
	183, 0, 0, 0, 0, 0, 184, 163, 167, 166,
	0, 0, 0, 0, 0, 162, 0, 164, 168, 170,
	171, 178, 180, 165, 185, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 158, 169, 172, 173, 174, 175, 176, 177, 179,
	181, 0, 0, 0, 0, 0, 0, 0, 156, 159,
	161, 160, 183, 0, 184, 163, 167, 166, 0, 0,
	0, 0, 0, 162, 0, 164, 168, 170, 171, 178,
	180, 165, 0, 0, 0, 0, 185, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 158, 169, 172, 173, 174, 175, 176,
	177, 179, 181, 0, 0, 0, 0, 0, 161, 160,
	183, 0, 0, 0, 0, 0, 184, 163, 167, 166,
	0, 0, 0, 0, 0, 162, 0, 164, 168, 170,
	171, 178, 180, 165, 185, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 158, 169, 172, 173, 174, 175, 176, 177, 179,
	181, 0, 0, 0, 0, 0, 0, 160, 183, 0,
	0, 0, 0, 0, 184, 163, 167, 166, 0, 0,
	0, 0, 0, 162, 0, 164, 168, 170, 171, 178,
	180, 165, 185, 182, 447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 158,
	169, 172, 173, 174, 175, 176, 177, 179, 181, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 184, 163, 167, 166, 0, 0, 0, 0,
	0, 162, 0, 164, 168, 170, 171, 178, 180, 165,
	185, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 158, 169, 172,
	173, 174, 175, 176, 177, 179, 181, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	184, 163, 167, 166, 0, 0, 0, 0, 0, 162,
	0, 164, 168, 170, 171, 178, 180, 165, 185, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 158, 169, 172, 173, 174,
	175, 176, 177, 179, 181, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 184, 163,
	167, 166, 0, 0, 0, 0, 0, 162, 0, 164,
	168, 170, 171, 178, 180, 165, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 169, 172, 173, 174, 175, 176, 177,
	179, 181, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 163, 167, 166, 0,
	0, 0, 0, 0, 162, 0, 164, 168, 170, 171,
	178, 180, 165, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 172, 173, 174, 175, 176, 177, 179, 181, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 163, 167, 166, 0, 0, 0, 0,
	0, 162, 0, 164, 168, 170, 171, 178, 180, 165,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 172, 173,
	174, 175, 176, 177, 179, 181, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	163, 167, 166, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 170, 171, 178, 180, 165, 182, 0, 0,
	0, 0, 0, 120, 0, 113, 0, 0, 0, 0,
	0, 111, 0, 0, 169, 172, 173, 174, 175, 176,
	177, 179, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 170,
	171, 178, 180, 165, 110, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 107,
}
var yyPact = [...]int{

	-1000, -1000, 1940, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	296, 534, 761, 848, -1000, -1000, -1000, 283, 5148, 281,
	280, 6568, 6568, 6568, 193, 720, 6568, -1000, 7849, 277,
	276, 275, -1000, 454, 874, 335, 50, 623, 912, 596,
	674, 580, -1000, -1000, 265, -1000, -1000, 218, 225, 5538,
	6568, 8483, 8483, 6568, 6568, 6568, 6568, 6568, -1000, -1000,
	-1000, 6568, 6568, 6568, 6568, 6568, 6568, 6568, 222, 6568,
	-1000, 1075, 6568, 6568, 6568, 6568, -1000, 737, -1000, 116,
	-1000, 614, 605, -1000, 273, 216, 213, 212, 6568, 6568,
	192, 6568, 6568, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 975, 1069, -1000, -1000, 188, 231, 231,
	186, -1000, 50, -1000, 551, 821, 166, 821, 339, -1000,
	-1000, 390, 746, 99, 640, 821, -1000, -1000, -1000, -1000,
	88, -1000, -50, 4033, 6568, 776, 574, 50, 541, 6568,
	6568, 386, 7911, 574, 384, 381, 87, -1000, -1000, 76,
	-1000, -1000, -51, 38, -1000, 7911, -1000, 6568, 6568, 6568,
	6568, 6568, 6568, 6568, 6568, 6568, 6568, 6568, 6568, 6568,
	6568, 6568, 6568, 6568, 6568, 6568, 6568, 6568, 6568, 6568,
	6568, 6568, 6568, 401, 6439, 6568, 8483, 6568, 848, -1000,
	380, -1000, 873, -1000, -1000, 50, -1000, 712, 867, 860,
	547, -1000, -1000, -1000, 258, 5148, 257, 379, 320, 6310,
	6568, 6568, 6568, 6568, 6568, 6568, 6568, 6568, 6568, 6568,
	6568, 6568, 6568, -1000, -1000, 6568, 6568, 6568, 109, 109,
	5538, 112, 41, -1000, -1000, 7791, 8483, 6568, 247, -1000,
	-1000, 116, 6568, -1000, -1000, 5538, -1000, 474, 474, 517,
	474, 7733, 474, 474, 474, 474, 474, 474, 474, -1000,
	6568, 474, 452, 829, 981, -1000, 228, 6181, 8483, 8143,
	8085, 8143, 7911, 39, -1000, 231, -1000, 6568, 1826, 1826,
	231, -1000, 594, 272, 600, -1000, 459, 6568, 6568, 6568,
	7911, 7911, 6568, 7911, 7911, 795, -1000, 964, 671, 829,
	6568, -1000, -1000, 1186, -1000, 5538, 246, 856, 551, 378,
	551, -1000, -1000, 1667, -1000, 376, -16, 634, 821, -1000,
	632, 587, 855, 630, -1000, -1000, 848, 6568, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 244, 7675, 243, -1000,
	375, 36, 7911, 7617, -1000, -1000, -1000, -1000, 193, -1000,
	816, 6568, -1000, 6568, 8200, 8257, 7969, 8143, 8027, 927,
	8371, 8314, 211, 22, 22, 517, 474, 517, 517, 388,
	388, 4314, 4314, 4314, 4314, 190, 190, 190, 190, 4314,
	-1000, 7559, 6568, 305, 35, -1000, -1000, 7501, -10, 3872,
	-1000, 235, 233, 835, 828, 453, 708, -1000, 6568, -1000,
	6568, -1000, -1000, 8143, 6568, 8143, 8143, 8143, 8143, 8143,
	8143, 8143, 8143, 8143, 8143, 8143, 8143, 8143, 7430, 111,
	7369, 231, -1000, 6568, -1000, 231, 165, -55, 5538, 6052,
	-1000, 7911, 5538, 7311, 105, -1000, 161, -1000, -1000, -1000,
	-1000, 377, 825, 824, 7250, 110, 404, 6568, 737, 98,
	-1000, 91, 231, -1000, -1000, 6568, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 231, -1000, -1000, -1000, -1000, 193,
	6568, 6568, 109, 109, 193, 231, 7192, 33, -1000, 7911,
	7134, 7076, -1000, -1000, -1000, 7015, -1000, -6, -1000, 7911,
	6568, 315, -1000, -1000, 225, 6568, 222, 6568, 6568, 6568,
	574, 273, 216, 213, 212, 6568, 6568, 192, 6568, 6568,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 50, 186,
	541, 50, 159, 459, -1000, -1000, 1506, -1000, -1000, -1000,
	582, 628, -1000, 821, 597, 858, -1000, 565, -1000, 7911,
	158, 4989, 6568, 6568, 6568, 191, -1000, -1000, 7911, -1000,
	6568, 305, 157, 8483, 6547, 4830, -1000, 459, 459, 185,
	704, -1000, 447, 741, 6957, 6899, 3711, 8371, 4671, -1000,
	-1000, -1000, 6838, -1000, -56, 6568, -1000, 7911, 8483, 183,
	153, -1000, -1000, -1000, 86, -1000, -1000, 796, -1000, -1000,
	-1000, -1000, -1000, 6568, -1000, 8143, -1000, -1000, -1000, -1000,
	6777, -1000, -1000, 70, 6716, -1000, -1000, -1000, 704, 444,
	148, 6568, -1000, -1000, -1000, 147, 1345, 7911, 6568, -1000,
	144, -11, -1000, 575, -1000, 821, 550, -12, -1000, -1000,
	821, 858, -1000, 374, -1000, -1000, -1000, 6658, 373, 7911,
	-1000, 370, 367, 305, 366, -1000, 143, 700, 8483, 178,
	5538, -1000, -1000, -1000, 752, 142, 135, 459, 681, 741,
	451, -1000, -34, -1000, 5148, 314, 365, -1000, -1000, -1000,
	6568, 8143, -1000, 5538, -56, -1000, -1000, 6600, -1000, -1000,
	-1000, 681, 5923, -1000, -1000, -1000, -1000, 7911, 303, -1000,
	459, 470, -1000, -1000, -1000, -33, -1000, 821, 403, 858,
	-1000, -12, -1000, 3550, 363, 6568, 485, -1000, 947, -1000,
	-1000, 4353, 6547, -1000, 5538, 55, 3389, -1000, -1000, 443,
	176, 303, 742, 130, 435, 741, -1000, -1000, -1000, 679,
	741, 445, 741, -1000, -1000, -1000, 4194, 8143, 125, 400,
	426, 399, -13, -1000, 691, -15, -31, 7911, -1000, 503,
	-1000, 52, -1000, -37, 942, -38, -1000, -1000, -1000, 395,
	821, -33, -1000, -1000, 392, 361, -1000, 122, -1000, 6568,
	182, 462, 359, 913, -1000, -1000, -1000, 121, -1000, 120,
	-1000, 357, -1000, 741, 425, 303, 171, 303, -1000, -34,
	470, 839, 749, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -29, -1000, -1000, 4194, -56, -1000, -1000, -1000, -1000,
	5923, 6568, 661, -1000, -1000, 6568, 585, -1000, -39, 813,
	-40, -1000, -1000, 538, -1000, 942, -1000, 942, -1000, -1000,
	389, -1000, -1000, 4512, 1000, -1000, -1000, -1000, -1000, -1000,
	356, 3228, 4353, -1000, -1000, 3067, 96, -1000, -1000, 424,
	221, 420, 437, 816, 5697, 50, -1000, -1000, -1000, 5437,
	414, -1000, 7911, 6568, 7911, 6568, 813, -1000, 813, 816,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4194, -1000,
	349, -1000, -1000, 118, 741, -1000, 2906, -1000, -24, -1000,
	-1000, 816, -1000, -1000, -26, -1000, -59, -27, -1000, -60,
	5697, -1000, 5307, -1000, 338, 306, 738, 760, 572, -1000,
	-1000, -1000, 7911, 7911, -1000, -1000, -61, 2745, 4194, -1000,
	402, -1000, -1000, 2584, -1000, 221, -1000, 2423, -1000, 816,
	-1000, 6568, -1000, 5697, 6568, 170, -1000, -1000, -1000, -1000,
	741, 5822, 5697, 6568, 274, -1000, -1000, -1000, -1000, -1000,
	7911, -1000, 7911, 459, -34, -1000, -1000, 5697, -1000, 7911,
	-1000, 2262, -1000, -1000, 89, -1000, -1000, 303, 302, -1000,
	-1000, -1000, 2101, -1000,
}
var yyPgo = [...]int{

	0, 1119, 1118, 46, 5, 38, 18, 1117, 203, 1114,
	30, 17, 1113, 60, 26, 98, 79, 78, 77, 1112,
	21, 1111, 86, 207, 61, 1110, 25, 1109, 0, 88,
	8, 1108, 1107, 1106, 42, 267, 31, 39, 1105, 1104,
	69, 1103, 53, 1102, 10, 1101, 1100, 1082, 1080, 11,
	52, 1079, 1078, 71, 107, 375, 1077, 1076, 33, 1075,
	1074, 13, 1073, 94, 84, 1072, 47, 43, 1070, 1069,
	1057, 1056, 1054, 193, 1048, 1047, 1045, 9, 1037, 103,
	1035, 1034, 1030, 1028, 1024, 1021, 1019, 35, 37, 619,
	3, 131, 1008, 996, 49, 34, 995, 14, 994, 1,
	988, 44, 985, 28, 102, 85, 41, 984, 982, 974,
	16, 971, 968, 618, 91, 964, 40, 36, 963, 960,
	959, 957, 949, 19, 941, 938, 937, 932, 931, 48,
	927, 116, 4, 842, 32, 670, 923, 59, 917, 72,
	7, 20, 911, 910, 902, 894, 890, 2, 12, 888,
	6,
}
var yyR1 = [...]int{

	0, 149, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 9, 9, 8, 139, 139, 91, 91, 13,
	13, 13, 129, 129, 130, 130, 131, 148, 148, 147,
	147, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 133, 133, 19, 19,
	21, 21, 10, 10, 88, 88, 87, 87, 89, 89,
	20, 20, 23, 23, 22, 22, 79, 79, 140, 140,
	25, 25, 25, 25, 25, 25, 25, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	126, 126, 127, 76, 76, 33, 33, 115, 115, 34,
	15, 15, 1, 1, 2, 2, 146, 146, 145, 145,
	104, 104, 16, 17, 18, 116, 116, 118, 118, 117,
	117, 134, 134, 134, 134, 111, 111, 110, 110, 32,
	32, 108, 108, 108, 108, 137, 137, 137, 11, 11,
	112, 112, 86, 86, 78, 78, 92, 92, 82, 82,
	30, 30, 31, 31, 128, 128, 128, 128, 36, 36,
	96, 96, 96, 97, 97, 101, 101, 101, 98, 98,
	102, 102, 100, 100, 100, 103, 103, 99, 99, 105,
	105, 80, 80, 37, 37, 37, 39, 39, 40, 41,
	41, 42, 42, 141, 141, 43, 43, 43, 43, 77,
	77, 107, 107, 107, 138, 138, 44, 44, 45, 46,
	46, 46, 46, 48, 48, 47, 109, 109, 143, 143,
	142, 142, 144, 144, 132, 132, 132, 132, 132, 132,
	81, 81, 49, 49, 85, 85, 90, 24, 75, 75,
	50, 26, 26, 27, 27, 52, 51, 51, 120, 121,
	121, 122, 124, 124, 125, 125, 123, 123, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 114, 114, 113,
	113, 150, 3, 3, 119, 119, 83, 83, 61, 61,
	62, 62, 62, 62, 53, 53, 54, 54, 59, 59,
	136, 136, 136, 106, 106, 66, 66, 66, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 67, 67, 67, 28, 28, 29,
	29, 65, 68, 68, 68, 69, 69, 69, 70, 70,
	70, 70, 70, 70, 70, 35, 35, 35, 35, 55,
	55, 55, 71, 71, 72, 72, 72, 72, 72, 72,
	72, 63, 63, 63, 64, 64, 64, 58, 94, 94,
	57, 57, 93, 93, 93, 93, 93, 93, 93, 135,
	135, 135, 135, 73, 73, 73, 73, 73, 73, 73,
	73, 74, 74, 74, 74, 56, 56, 56, 56, 56,
	56, 56, 84, 84, 95,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 2, 0, 1, 3, 1,
	3, 2, 1, 2, 1, 3, 4, 1, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 5,
	4, 3, 4, 3, 4, 3, 1, 1, 6, 7,
	6, 7, 0, 1, 3, 1, 3, 1, 3, 1,
	1, 2, 1, 3, 1, 2, 3, 1, 2, 0,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 1,
	5, 7, 9, 5, 3, 3, 3, 3, 3, 3,
	1, 2, 6, 7, 9, 5, 1, 6, 3, 2,
	0, 2, 8, 1, 3, 0, 4, 1, 3, 1,
	10, 11, 0, 1, 0, 1, 0, 1, 1, 2,
	1, 1, 9, 6, 7, 0, 2, 0, 2, 0,
	2, 1, 2, 4, 3, 1, 4, 1, 4, 1,
	4, 3, 4, 4, 5, 0, 5, 4, 1, 1,
	1, 4, 5, 6, 1, 3, 6, 7, 3, 6,
	2, 0, 1, 3, 0, 1, 1, 1, 6, 8,
	1, 2, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 1, 2, 1, 0, 1, 0, 2, 2,
	4, 1, 3, 1, 2, 3, 3, 1, 1, 3,
	1, 1, 3, 2, 0, 5, 5, 10, 3, 1,
	3, 1, 2, 3, 1, 2, 2, 2, 3, 3,
	3, 4, 3, 1, 1, 3, 1, 3, 1, 1,
	0, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 4, 3, 1, 4, 4, 3, 1,
	1, 0, 1, 3, 1, 8, 3, 2, 2, 3,
	1, 7, 0, 2, 1, 3, 3, 4, 6, 5,
	3, 4, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 5, 4, 3, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 3, 2,
	1, 2, 4, 2, 2, 1, 2, 1, 2, 11,
	9, 0, 0, 1, 0, 4, 3, 1, 1, 2,
	2, 4, 4, 2, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 0, 1, 4, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 2,
	3, 3, 1, 1, 1, 3, 3, 1, 1, 0,
	1, 1, 1, 3, 1, 1, 3, 1, 1, 4,
	4, 4, 4, 4, 1, 1, 1, 3, 3, 1,
	4, 2, 3, 3, 1, 4, 4, 3, 3, 3,
	3, 1, 3, 1, 1, 3, 1, 1, 0, 1,
	3, 1, 3, 1, 4, 2, 2, 6, 4, 2,
	2, 1, 2, 1, 4, 3, 3, 3, 3, 6,
	3, 1, 1, 2, 1, 5, 4, 2, 2, 4,
	2, 2, 1, 3, 1,
}
var yyChk = [...]int{

	-1000, -149, -139, -12, 2, -14, -15, -16, -17, -18,
	52, 80, 45, 39, 147, -78, -82, 21, 20, 23,
	30, 34, 35, 40, 47, 99, 19, 14, -28, 49,
	25, 27, 149, 41, 36, 10, 37, -148, -147, -86,
	-92, -35, -38, -131, 7, -70, -71, -68, 60, 153,
	93, 105, 106, 158, 157, 159, 160, 151, -51, -122,
	-56, 108, 109, 110, 111, 112, 113, 114, 6, 161,
	-60, 146, 97, 98, 107, 44, -114, 144, -55, -67,
	-62, -53, -65, -66, 92, 143, 50, 51, 4, 5,
	85, 86, 87, 8, 9, 67, 68, 82, 64, 65,
	66, 81, 63, 75, 145, -113, -8, 162, -13, -69,
	61, 18, 38, 12, -91, 83, 151, 83, -91, 147,
	10, -21, -133, -89, -91, 83, 37, 39, -22, -23,
	-79, -24, 10, -140, 151, -14, -148, 37, 80, 151,
	151, -29, -28, 99, -29, -29, -39, -40, -55, -41,
	-114, -42, -8, -75, -50, -28, 149, 131, 132, 88,
	90, 89, 164, 156, 166, 172, 158, 157, 167, 133,
	168, 169, 134, 135, 136, 137, 138, 139, 170, 140,
	171, 141, 116, 91, 155, 115, 151, 151, 151, 147,
	10, 150, -3, 156, -131, 37, -113, -146, 54, 55,
	-145, -104, 100, 101, 94, 95, 94, 96, 95, 165,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 105, 106, 151, 153, 147, 58, 142,
	151, -58, -57, -94, -93, -28, 156, 84, 60, -28,
	-35, -67, 151, -66, 99, 153, -35, -28, -28, -28,
	-28, -28, -28, -28, -28, -28, -28, -28, -28, -59,
	151, -28, -136, 17, -135, -73, -8, 77, 78, -28,
	-28, -28, -28, -130, -129, -53, -13, 153, 79, 79,
	-54, -52, -53, -72, -147, -55, -148, 151, 151, 151,
	-28, -28, 151, -28, -28, 17, 76, -135, -135, 17,
	147, -55, -105, 151, -105, 151, -3, 83, -91, 152,
	-91, 149, 147, -139, 149, -19, -89, -91, 83, 149,
	163, 83, 29, -91, -23, 149, 163, 165, -25, 148,
	2, -14, -15, -16, -17, -18, 52, -28, 21, -3,
	-26, -27, -28, -28, 149, 149, 149, 149, 163, 149,
	163, 165, 149, 163, -28, -28, -28, -28, -28, -28,
	-28, -28, -28, -28, -28, -28, -28, -28, -28, -28,
	-28, -28, -28, -28, -28, -28, -28, -28, -28, -28,
	-54, -28, 150, -28, -115, -34, -35, -28, -79, -140,
	149, 10, -150, -3, 53, 10, 10, -104, 151, -14,
	151, 149, 150, -28, 156, -28, -28, -28, -28, -28,
	-28, -28, -28, -28, -28, -28, -28, -28, -28, -29,
	-28, -64, 10, 147, -55, -64, -58, 154, 163, 59,
	-35, -28, 151, -28, -58, 152, -29, 146, -73, -73,
	17, 153, 58, 142, -28, 11, -35, 59, 163, -10,
	-105, -29, -63, -6, -55, 147, 10, -5, -4, 99,
	100, 101, 102, 103, 104, 4, 5, 85, 86, 87,
	88, 89, 90, 91, 92, 93, 6, 7, 94, 95,
	96, 19, 20, 21, 22, 23, 24, 25, 26, 27,
	28, 29, 41, 42, 43, 44, 45, 46, 47, 48,
	49, 50, 51, 35, 36, 37, 39, 40, 97, 98,
	60, 30, 31, 32, 33, 34, 61, 62, 56, 57,
	80, 54, 55, 53, 63, 64, 66, 65, 67, 68,
	82, 81, 38, 143, -63, -6, -55, -106, -105, 79,
	153, 147, 58, 142, 79, 53, -28, -84, -95, -28,
	-28, -28, 76, 76, 145, -28, 152, -80, -37, -28,
	84, -7, 10, -5, 60, 93, 6, 97, 98, 44,
	99, 92, 143, 50, 51, 4, 5, 85, 86, 87,
	67, 68, 82, 64, 65, 66, 81, 63, 37, 61,
	80, 38, -58, 151, 10, 149, -139, 148, 149, 149,
	83, -91, -22, 83, -91, 147, 10, 83, -24, -28,
	151, 152, 151, 149, 163, 152, -40, -42, -28, -50,
	150, -28, -10, 163, 29, 152, 148, 151, 151, 10,
	10, 147, -118, 56, -28, -28, -140, -28, 152, 154,
	148, -105, -28, -105, 152, 165, -94, -28, 156, 60,
	-58, 152, 154, 152, -74, 10, 13, 157, -8, 10,
	10, 148, 148, 153, 148, -28, -129, 154, 154, -105,
	-28, -105, -55, -29, -28, -64, -64, -55, -106, 152,
	-10, 163, 152, 152, 148, -10, 163, -28, 150, 152,
	-30, -31, -36, -147, 148, 147, 83, -88, -20, -23,
	-133, 147, -150, 152, -112, -14, 150, -28, -26, -28,
	-108, 147, 150, -28, 152, -34, -134, -35, 156, 60,
	153, -32, -14, 150, -126, -30, -30, 151, -116, 56,
	-141, 147, -77, -13, 152, 152, 96, -14, 150, 148,
	165, -28, -35, 151, 152, 154, 13, -28, 148, 154,
	148, -116, 147, 152, -95, 152, -37, -28, 152, -10,
	163, -128, 104, 103, 102, -87, -23, 147, -10, 163,
	-23, -88, 149, -140, 152, 149, -137, 149, -137, 149,
	149, 152, 59, -35, 151, -58, -140, -33, -127, 43,
	42, 152, 152, -30, -117, 57, -13, 148, -43, -147,
	45, -141, 163, -14, 150, 149, -140, -28, -58, 154,
	-117, -124, -125, -123, -120, 33, -121, -28, -99, 150,
	-36, -103, -100, -101, 155, -102, 61, 62, -13, -10,
	163, -87, 148, -20, -10, 22, 149, -26, 148, 32,
	33, -137, 31, -137, -110, -14, 150, -134, -35, -58,
	154, 28, 147, 151, -99, -119, 45, 152, 147, -77,
	-143, -142, -144, 48, -132, 104, 103, 102, 99, 100,
	101, -77, 148, -13, -140, 152, 148, 147, 148, -10,
	163, 59, -10, 163, -10, 163, -150, -96, -97, 155,
	-98, -101, 99, -1, 156, 164, -101, 164, 148, -23,
	-10, 148, 149, 152, -28, -11, 150, 149, 148, 149,
	31, -140, 152, 152, 149, -140, -76, -13, 147, -99,
	151, -99, -141, -103, 39, 37, -132, -107, 149, 147,
	-141, -123, -28, 59, -28, 59, 164, -97, 164, -2,
	84, -101, -101, 148, -111, -14, 150, -11, -140, 149,
	26, -110, 148, -9, 164, -8, -140, 147, -83, -61,
	-8, 156, 147, 148, -81, -49, -8, -85, -90, -6,
	-3, 148, -138, -44, -45, -46, -47, -48, -13, -6,
	10, 148, -28, -28, -97, -97, -8, -140, -140, 149,
	152, -13, 148, -140, 152, 163, -8, -140, 149, 163,
	-150, 165, 149, 163, 165, -6, 148, -44, 149, 149,
	46, 29, 79, 165, 24, 147, 148, -61, 148, -49,
	-28, -90, -28, 151, -77, 10, -4, -132, -6, -28,
	149, -140, -150, -150, -30, -6, 148, 152, -99, -109,
	149, 147, -140, 148,
}
var yyDef = [...]int{

	86, -2, -2, 85, 101, 102, 103, 104, 105, 106,
	0, 0, 0, 0, 139, 148, 149, 0, 0, 0,
	0, 469, 469, 469, 0, 434, 0, 160, 0, 0,
	0, 0, 166, 0, 0, 87, 422, 100, 186, 224,
	0, -2, 468, 97, 0, -2, 486, 471, 0, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	397, 0, 0, 0, 0, 0, 0, 0, 438, 0,
	407, 440, 0, 410, 0, 0, 415, 0, 478, 463,
	484, 0, 0, -2, 99, 0, 0, 0, 0, 0,
	0, 0, 0, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 0, 417, 489, 0, -2, 0,
	0, 447, 422, 84, 89, 0, 0, 0, 0, 86,
	87, 0, 0, 0, 132, 0, 116, 117, 129, 134,
	0, 137, 0, -2, 0, 0, 0, 422, 0, 321,
	0, 0, 470, 434, 0, 0, 0, 267, 268, 0,
	416, 270, 271, 0, 319, 320, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 139,
	0, 169, 421, 423, 98, 422, 418, 0, 0, 0,
	187, 188, 190, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 356, 358, 0, 469, 0, 0, 0,
	508, 0, 507, 511, 509, 513, 0, 0, 0, 342,
	-2, 0, 0, -2, 434, 508, -2, 377, 378, 379,
	380, 0, 398, 399, 400, 401, 402, 403, 404, 405,
	469, 406, 0, 441, 442, 521, 523, 0, 0, 409,
	411, 413, 414, 122, 94, 92, 435, 469, 0, 0,
	443, 327, 436, 437, 0, 494, 100, 0, 0, 0,
	537, 538, 0, 540, 541, 0, 459, 0, 0, 0,
	0, 491, 430, 0, 433, 508, 0, 0, 91, 0,
	90, 108, 86, -2, 111, 0, 0, 132, 0, 113,
	0, 0, 0, 132, 135, 115, 0, 0, 138, 147,
	140, 141, 142, 143, 144, 145, 0, 0, 0, 421,
	0, 322, 324, 0, 154, 155, 156, 157, 0, 158,
	0, 0, 159, 0, 360, 361, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	376, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	390, 0, 0, 396, 122, 177, -2, 0, 0, -2,
	168, 0, 0, 421, 0, 0, 197, 189, 0, 225,
	0, 228, 139, 340, 0, 343, 344, 345, 346, 347,
	348, 349, 350, 351, 352, 353, 354, 355, 0, 0,
	0, 487, 504, 0, 506, 488, 0, 446, 508, 0,
	-2, 516, 508, 0, 0, -2, 0, 408, 522, 519,
	520, 0, 0, 0, 0, 0, 472, 0, 123, 0,
	93, 0, 0, -2, -2, 0, 78, 79, 71, 72,
	73, 74, 75, 76, 77, 2, 3, 4, 5, 6,
	7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
	17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
	27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
	37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
	47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 0, -2, -2, 326, 444, 0,
	469, 0, 0, 0, 0, 443, 0, 122, 542, 544,
	0, 0, 458, 461, 460, 0, 259, 122, 261, 263,
	0, 0, -2, 81, 47, 12, -2, 45, -2, 32,
	-2, -2, 70, 38, 39, 2, 3, 4, 5, 6,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 53,
	57, -2, 0, -2, 88, 107, -2, 110, 112, 114,
	0, 132, 128, 0, 132, 0, 133, 0, 136, 421,
	0, 0, 0, 321, 0, 0, 266, 269, 272, 318,
	0, 395, 0, 123, 0, 0, 170, -2, -2, 0,
	195, 274, 0, 0, 0, 0, -2, 341, 0, 479,
	481, 482, 0, 483, 0, 0, 510, 512, 0, 0,
	0, -2, 446, 439, 0, 531, 532, 0, 534, 525,
	526, 527, 528, 0, 530, 412, 95, 96, 480, 431,
	0, 432, 499, 0, 0, 497, 498, 500, 195, 0,
	0, 123, 536, 539, 490, 0, 123, 264, 0, 445,
	0, 122, 232, 234, 109, 0, 0, 122, 125, 130,
	0, 0, 317, 0, 150, 220, 139, 0, 0, 323,
	153, 215, 215, 394, 0, 178, 0, -2, 0, 0,
	508, 165, 209, 139, 175, 0, 0, -2, 199, 0,
	99, 274, 198, 279, 0, 0, 0, 222, 139, 505,
	0, 339, -2, 508, 518, 524, 533, 0, 502, 495,
	496, 199, 332, 535, 543, 260, 262, 265, 257, 230,
	-2, 255, 235, 236, 237, 122, 127, 0, 0, 123,
	131, 122, 146, -2, 0, 321, 0, 215, 0, 215,
	162, 0, 0, -2, 508, 0, -2, 167, 171, 0,
	0, 257, 424, 0, 0, 0, 196, 193, 273, 300,
	0, 99, 0, 223, 139, 229, -2, 338, 0, 0,
	0, 0, 122, 334, 0, 122, 122, 330, 421, 0,
	233, 182, 256, 252, 0, 254, 245, 246, 247, 0,
	123, 122, 120, 124, 0, 0, 151, 0, 211, 0,
	0, 0, 0, 0, 163, 207, 139, 0, -2, 0,
	-2, 0, 139, 0, 0, 257, 0, 257, 274, 200,
	255, 0, -2, 299, 302, 304, 305, 306, 307, 308,
	309, 0, 194, 280, -2, 517, 529, 274, 331, 333,
	123, 0, 0, 123, 328, 123, 0, 258, 240, 0,
	242, 243, 244, 184, 183, 0, 253, 0, 118, 126,
	0, 121, 221, 0, 0, 139, 218, 219, 212, 213,
	0, -2, 0, 203, 210, -2, 82, 173, 139, 0,
	0, 0, 99, 0, 0, 422, 303, 278, 281, 0,
	99, 335, 336, 0, 329, 0, 0, 241, 0, 0,
	185, 250, 251, 119, 152, 205, 139, 139, -2, 214,
	0, 164, 176, 0, 0, 83, -2, 139, 0, 427,
	428, 0, 139, 192, 0, 311, 421, 0, 315, 0,
	0, 282, 0, 284, 0, 0, 294, 0, 0, 293,
	-2, 325, 337, 420, 248, 249, 238, -2, -2, 208,
	0, 174, 180, -2, 425, 0, 429, -2, 275, 0,
	312, 0, 276, 0, 0, 0, 283, 285, 286, 287,
	0, 0, 0, 0, 0, 139, 419, 426, 181, 310,
	421, 314, 421, -2, 288, 289, 290, 292, 295, 239,
	206, -2, 313, 316, 0, 291, 172, 257, 0, 277,
	296, 139, -2, 297,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 159, 145, 3, 162, 169, 156, 3,
	151, 152, 167, 158, 163, 157, 172, 168, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 150, 149,
	170, 165, 171, 155, 161, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 153, 3, 154, 166, 3, 146, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 147, 164, 148, 160,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

// line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yylex.(*Parser).currentToken.Value = nil

			yylex.(*Parser).rootNode = &ast.Root{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].list),
				Stmts:    yyDollar[1].list,
				EndTkn:   yylex.(*Parser).currentToken,
			}
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:315
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:315
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:315
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:315
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:315
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:315
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:315
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:315
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:315
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:315
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:315
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:329
		{
			yyVAL.token = yyDollar[1].token
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:334
		{
			yyVAL.token = yyDollar[1].token
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:335
		{
			yyVAL.token = yyDollar[1].token
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:339
		{
			yyVAL.token = nil
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:340
		{
			yyVAL.token = yyDollar[1].token
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:344
		{
			yyVAL.token = yyDollar[1].token
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:349
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:355
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:362
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.NamePart{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						StringTkn: yyDollar[1].token,
						Value:     yyDollar[1].token.Value,
					},
				},
			}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:374
		{
			part := &ast.NamePart{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
				StringTkn: yyDollar[3].token,
				Value:     yyDollar[3].token.Value,
			}

			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, part)

			yyVAL.node = yyDollar[1].node
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:390
		{
			yyVAL.node = &ast.Name{
				Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
				Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:398
		{
			yyVAL.node = &ast.NameRelative{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].node.(*ParserSeparatedList).Items),
				NsTkn:          yyDollar[1].token,
				NsSeparatorTkn: yyDollar[2].token,
				Parts:          yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:408
		{
			yyVAL.node = &ast.NameFullyQualified{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				NsSeparatorTkn: yyDollar[1].token,
				Parts:          yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:419
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttribute(yyDollar[1].node, nil)
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:420
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttribute(yyDollar[1].node, yyDollar[2].node)
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:424
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:425
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:430
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttributeGroup(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token, yyDollar[4].token)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:434
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:435
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:439
		{
			yyVAL.list = nil
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:440
		{
			yyVAL.list = yyDollar[1].list
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:445
		{
			// error
			yyVAL.node = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:450
		{
			yyVAL.node = yyDollar[1].node
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:454
		{
			yyVAL.node = yyDollar[1].node
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:458
		{
			yyVAL.node = yyDollar[1].node
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:462
		{
			yyVAL.node = yyDollar[1].node
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:466
		{
			yyVAL.node = yyDollar[1].node
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:470
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:480
		{
			yyVAL.node = &ast.StmtNamespace{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				NsTkn:    yyDollar[1].token,
				Name: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 109:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:493
		{
			yyVAL.node = &ast.StmtNamespace{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				NsTkn:    yyDollar[1].token,
				Name: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Stmts:                yyDollar[4].list,
				CloseCurlyBracketTkn: yyDollar[5].token,
			}
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:508
		{
			yyVAL.node = &ast.StmtNamespace{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				NsTkn:                yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:518
		{
			use := yyDollar[2].node.(*ast.StmtGroupUseList)

			use.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)
			use.UseTkn = yyDollar[1].token
			use.SemiColonTkn = yyDollar[3].token

			yyVAL.node = yyDollar[2].node
		}
	case 112:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:528
		{
			use := yyDollar[3].node.(*ast.StmtGroupUseList)

			use.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			use.UseTkn = yyDollar[1].token
			use.Type = yyDollar[2].node
			use.SemiColonTkn = yyDollar[4].token

			yyVAL.node = yyDollar[3].node
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:539
		{
			yyVAL.node = &ast.StmtUseList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				UseTkn:        yyDollar[1].token,
				Uses:          yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:549
		{
			yyVAL.node = &ast.StmtUseList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				UseTkn:        yyDollar[1].token,
				Type:          yyDollar[2].node,
				Uses:          yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:560
		{
			yyVAL.node = &ast.StmtConstList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ConstTkn:      yyDollar[1].token,
				Consts:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:573
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:581
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 118:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:592
		{
			if yyDollar[5].token != nil {
				yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[5].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[6].token),
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[2].token,
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Uses:                 yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 119:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:612
		{
			if yyDollar[6].token != nil {
				yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[6].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position:              yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				LeadingNsSeparatorTkn: yyDollar[1].token,
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[3].token,
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Uses:                 yyDollar[5].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}
		}
	case 120:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:636
		{
			if yyDollar[5].token != nil {
				yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[5].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[6].token),
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[2].token,
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Uses:                 yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 121:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:656
		{
			if yyDollar[6].token != nil {
				yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[6].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position:              yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				LeadingNsSeparatorTkn: yyDollar[1].token,
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[3].token,
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Uses:                 yyDollar[5].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:680
		{
			yyVAL.token = nil
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:684
		{
			yyVAL.token = yyDollar[1].token
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:691
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:698
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:707
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:714
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:723
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:730
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:739
		{
			yyVAL.node = yyDollar[1].node
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:743
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.Type = yyDollar[1].node
			decl.Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node)

			yyVAL.node = yyDollar[2].node
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:754
		{
			yyVAL.node = &ast.StmtUse{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
				Use: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:765
		{
			yyVAL.node = &ast.StmtUse{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].token),
				Use: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				AsTkn: yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:785
		{
			yyVAL.node = yyDollar[1].node
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:789
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.NsSeparatorTkn = yyDollar[1].token
			decl.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			yyVAL.node = yyDollar[2].node
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:800
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:807
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:816
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:822
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:829
		{
			// error
			yyVAL.node = nil
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:834
		{
			yyVAL.node = yyDollar[1].node
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:838
		{
			yyVAL.node = yyDollar[1].node
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:842
		{
			yyVAL.node = yyDollar[1].node
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:846
		{
			yyVAL.node = yyDollar[1].node
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:850
		{
			yyVAL.node = yyDollar[1].node
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:854
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:866
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:875
		{
			yyVAL.node = yyDollar[1].node
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:879
		{
			yyVAL.node = yyDollar[1].node
		}
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:883
		{
			yyDollar[5].node.(*ast.StmtWhile).WhileTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtWhile).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtWhile).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtWhile).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtWhile).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 151:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:893
		{
			yyVAL.node = &ast.StmtDo{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				DoTkn:               yyDollar[1].token,
				Stmt:                yyDollar[2].node,
				WhileTkn:            yyDollar[3].token,
				OpenParenthesisTkn:  yyDollar[4].token,
				Cond:                yyDollar[5].node,
				CloseParenthesisTkn: yyDollar[6].token,
				SemiColonTkn:        yyDollar[7].token,
			}
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:906
		{
			yyDollar[9].node.(*ast.StmtFor).ForTkn = yyDollar[1].token
			yyDollar[9].node.(*ast.StmtFor).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[9].node.(*ast.StmtFor).Init = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).InitSeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).InitSemiColonTkn = yyDollar[4].token
			yyDollar[9].node.(*ast.StmtFor).Cond = yyDollar[5].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).CondSeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CondSemiColonTkn = yyDollar[6].token
			yyDollar[9].node.(*ast.StmtFor).Loop = yyDollar[7].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).LoopSeparatorTkns = yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CloseParenthesisTkn = yyDollar[8].token
			yyDollar[9].node.(*ast.StmtFor).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			yyVAL.node = yyDollar[9].node
		}
	case 153:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:923
		{
			yyDollar[5].node.(*ast.StmtSwitch).SwitchTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtSwitch).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtSwitch).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtSwitch).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtSwitch).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:933
		{
			yyVAL.node = &ast.StmtBreak{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				BreakTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:942
		{
			yyVAL.node = &ast.StmtContinue{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ContinueTkn:  yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:951
		{
			yyVAL.node = &ast.StmtReturn{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ReturnTkn:    yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:960
		{
			yyDollar[2].node.(*ast.StmtGlobal).GlobalTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtGlobal).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtGlobal).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:968
		{
			yyDollar[2].node.(*ast.StmtStatic).StaticTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtStatic).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtStatic).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:976
		{
			yyDollar[2].node.(*ast.StmtEcho).EchoTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtEcho).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtEcho).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:984
		{
			yyVAL.node = &ast.StmtInlineHtml{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				InlineHtmlTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:992
		{
			yyVAL.node = yylex.(*Parser).builder.NewExpressionStmt(yyDollar[1].node, yyDollar[2].token)
		}
	case 162:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:996
		{
			yyDollar[3].node.(*ast.StmtUnset).UnsetTkn = yyDollar[1].token
			yyDollar[3].node.(*ast.StmtUnset).OpenParenthesisTkn = yyDollar[2].token
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[4].token)
			}
			yyDollar[3].node.(*ast.StmtUnset).CloseParenthesisTkn = yyDollar[5].token
			yyDollar[3].node.(*ast.StmtUnset).SemiColonTkn = yyDollar[6].token
			yyDollar[3].node.(*ast.StmtUnset).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			yyVAL.node = yyDollar[3].node
		}
	case 163:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1009
		{
			foreach := yyDollar[7].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[7].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Var = yyDollar[5].node
			foreach.CloseParenthesisTkn = yyDollar[6].token

			if val, ok := yyDollar[5].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 164:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:1028
		{
			foreach := yyDollar[9].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Key = yyDollar[5].node
			foreach.DoubleArrowTkn = yyDollar[6].token
			foreach.Var = yyDollar[7].node
			foreach.CloseParenthesisTkn = yyDollar[8].token

			if val, ok := yyDollar[7].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 165:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1049
		{
			yyDollar[5].node.(*ast.StmtDeclare).DeclareTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtDeclare).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtDeclare).Consts = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[5].node.(*ast.StmtDeclare).SeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[5].node.(*ast.StmtDeclare).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtDeclare).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1060
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1067
		{
			yyVAL.node = yylex.(*Parser).builder.NewTry(yyDollar[1].token, yyDollar[2].token, yyDollar[3].list, yyDollar[4].token, yyDollar[5].node, yyDollar[6].node)
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1071
		{
			yyVAL.node = &ast.StmtGoto{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				GotoTkn:  yyDollar[1].token,
				Label: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1084
		{
			yyVAL.node = &ast.StmtLabel{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				ColonTkn: yyDollar[2].token,
			}
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1097
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1098
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, nil, yyDollar[2].node)
		}
	case 172:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1103
		{
			yyVAL.node = yylex.(*Parser).builder.NewCatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1107
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1108
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1113
		{
			yyVAL.node = nil
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1117
		{
			yyVAL.node = &ast.StmtFinally{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				FinallyTkn:           yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1130
		{
			yyVAL.node = &ast.StmtUnset{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1136
		{
			yyDollar[1].node.(*ast.StmtUnset).Vars = append(yyDollar[1].node.(*ast.StmtUnset).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1146
		{
			yyVAL.node = yyDollar[1].node
		}
	case 180:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:1153
		{
			yyVAL.node = yylex.(*Parser).builder.NewFunction(nil, yyDollar[1].token, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].token, yyDollar[7].node, yyDollar[8].token, yyDollar[9].list, yyDollar[10].token)
		}
	case 181:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:1156
		{
			yyVAL.node = yylex.(*Parser).builder.NewFunction(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token, yyDollar[8].node, yyDollar[9].token, yyDollar[10].list, yyDollar[11].token)
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1160
		{
			yyVAL.token = nil
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1161
		{
			yyVAL.token = yyDollar[1].token
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1165
		{
			yyVAL.token = nil
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1166
		{
			yyVAL.token = yyDollar[1].token
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1170
		{
			yyVAL.list = nil
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1171
		{
			yyVAL.list = yyDollar[1].list
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1175
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1176
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1180
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1181
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 192:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:1187
		{
			yyVAL.node = yylex.(*Parser).builder.NewClass(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].node, yyDollar[7].token, yyDollar[8].list, yyDollar[9].token)
		}
	case 193:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1193
		{
			yyVAL.node = yylex.(*Parser).builder.NewTrait(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].list, yyDollar[6].token)
		}
	case 194:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1199
		{
			yyVAL.node = yylex.(*Parser).builder.NewInterface(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token, yyDollar[6].list, yyDollar[7].token)
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1204
		{
			yyVAL.node = nil
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1208
		{
			yyVAL.node = &ast.StmtClass{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExtendsTkn: yyDollar[1].token,
				Extends:    yyDollar[2].node,
			}
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1219
		{
			yyVAL.node = nil
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1223
		{
			yyVAL.node = &ast.StmtInterface{
				Position:             yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ExtendsTkn:           yyDollar[1].token,
				Extends:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ExtendsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1235
		{
			yyVAL.node = nil
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1239
		{
			yyVAL.node = &ast.StmtClass{
				Position:                yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ImplementsTkn:           yyDollar[1].token,
				Implements:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ImplementsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1251
		{
			yyVAL.node = yyDollar[1].node
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1255
		{
			yyVAL.node = &ast.StmtForeach{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Var:          yyDollar[2].node,
			}
		}
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1263
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ListTkn:         yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1274
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1287
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1294
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForTkn:    yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1310
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1317
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForeachTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1333
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1340
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndDeclareTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1356
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Cases:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1365
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CaseSeparatorTkn:     yyDollar[2].token,
				Cases:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1375
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn:     yyDollar[1].token,
				Cases:        yyDollar[2].list,
				EndSwitchTkn: yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1385
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				ColonTkn:         yyDollar[1].token,
				CaseSeparatorTkn: yyDollar[2].token,
				Cases:            yyDollar[3].list,
				EndSwitchTkn:     yyDollar[4].token,
				SemiColonTkn:     yyDollar[5].token,
			}
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1399
		{
			yyVAL.list = nil
		}
	case 216:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1403
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtCase{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list),
				CaseTkn:          yyDollar[2].token,
				Cond:             yyDollar[3].node,
				CaseSeparatorTkn: yyDollar[4].token,
				Stmts:            yyDollar[5].list,
			})
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1413
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtDefault{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				DefaultTkn:       yyDollar[2].token,
				CaseSeparatorTkn: yyDollar[3].token,
				Stmts:            yyDollar[4].list,
			})
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1425
		{
			yyVAL.token = yyDollar[1].token
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1429
		{
			yyVAL.token = yyDollar[1].token
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1436
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1443
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndWhileTkn:  yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 222:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1459
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				Stmt:                yyDollar[5].node,
			}
		}
	case 223:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1470
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				Stmt:                yyDollar[6].node,
			})

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)

			yyVAL.node = yyDollar[1].node
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1488
		{
			yyVAL.node = yyDollar[1].node
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1492
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[3].node),
				ElseTkn:  yyDollar[2].token,
				Stmt:     yyDollar[3].node,
			}

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 226:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1507
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[6].list),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				ColonTkn:            yyDollar[5].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[6].list),
					Stmts:    yyDollar[6].list,
				},
			}
		}
	case 227:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1522
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[7].list),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[7].list),
					Stmts:    yyDollar[7].list,
				},
			})

			yyVAL.node = yyDollar[1].node
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1542
		{
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[2].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[3].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			yyVAL.node = yyDollar[1].node
		}
	case 229:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1550
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				ElseTkn:  yyDollar[2].token,
				ColonTkn: yyDollar[3].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[4].list),
					Stmts:    yyDollar[4].list,
				},
			}
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[5].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[6].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token)

			yyVAL.node = yyDollar[1].node
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1569
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1570
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1574
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1575
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 234:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1579
		{
			yyVAL.node = nil
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1580
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1581
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1582
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 238:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1588
		{
			yyVAL.node = yylex.(*Parser).builder.NewParameter(yyDollar[1].list, yyDollar[2].node, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, nil, nil, false)
		}
	case 239:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1591
		{
			yyVAL.node = yylex.(*Parser).builder.NewParameter(yyDollar[1].list, yyDollar[2].node, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].token, yyDollar[8].node, true)
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1595
		{
			yyVAL.node = yyDollar[1].node
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1596
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1597
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1601
		{
			yyVAL.node = yyDollar[1].node
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1602
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1606
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1607
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1608
		{
			yyVAL.node = yyDollar[1].node
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1612
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1613
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1618
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1620
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1624
		{
			yyVAL.node = yyDollar[1].node
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1625
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1626
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 255:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1630
		{
			yyVAL.node = nil
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1631
		{
			yyVAL.node = yyDollar[1].node
		}
	case 257:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1635
		{
			yyVAL.node = &ReturnType{}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1636
		{
			yyVAL.node = yylex.(*Parser).builder.NewReturnType(yyDollar[1].token, yyDollar[2].node)
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1641
		{
			yyVAL.node = &ArgumentList{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				CloseParenthesisTkn: yyDollar[2].token,
			}
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1649
		{
			argumentList := yyDollar[2].node.(*ArgumentList)
			argumentList.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			argumentList.OpenParenthesisTkn = yyDollar[1].token
			if yyDollar[3].token != nil {
				argumentList.SeparatorTkns = append(argumentList.SeparatorTkns, yyDollar[3].token)
			}
			argumentList.CloseParenthesisTkn = yyDollar[4].token

			yyVAL.node = argumentList
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1664
		{
			yyVAL.node = &ArgumentList{
				Arguments: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1670
		{
			yyDollar[1].node.(*ArgumentList).SeparatorTkns = append(yyDollar[1].node.(*ArgumentList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ArgumentList).Arguments = append(yyDollar[1].node.(*ArgumentList).Arguments, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1680
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgument(yyDollar[1].node)
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1684
		{
			yyVAL.node = yylex.(*Parser).builder.NewVariadicArgument(yyDollar[1].token, yyDollar[2].node)
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1688
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamedArgument(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node)
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1695
		{
			yyDollar[1].node.(*ast.StmtGlobal).Vars = append(yyDollar[1].node.(*ast.StmtGlobal).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1702
		{
			yyVAL.node = &ast.StmtGlobal{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1711
		{
			yyVAL.node = yyDollar[1].node
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1718
		{
			yyDollar[1].node.(*ast.StmtStatic).Vars = append(yyDollar[1].node.(*ast.StmtStatic).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1725
		{
			yyVAL.node = &ast.StmtStatic{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1734
		{

			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1749
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1767
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 274:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1768
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1773
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyList(yyDollar[1].list, yyDollar[2].list, yyDollar[3].node, yyDollar[4].node, yyDollar[5].token)
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1775
		{
			yyVAL.node = yylex.(*Parser).builder.NewClassConstList(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token)
		}
	case 277:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:1777
		{
			yyVAL.node = yylex.(*Parser).builder.NewClassMethod(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].node, yyDollar[8].token, yyDollar[9].node, yyDollar[10].node)
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1779
		{
			traitUse := &ast.StmtTraitUse{
				Position:      yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				UseTkn:        yyDollar[1].token,
				Traits:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}

			switch n := yyDollar[3].node.(type) {
			case *TraitAdaptationList:
				traitUse.OpenCurlyBracketTkn = n.OpenCurlyBracketTkn
				traitUse.Adaptations = n.Adaptations
				traitUse.CloseCurlyBracketTkn = n.CloseCurlyBracketTkn
			case *ast.StmtNop:
				traitUse.SemiColonTkn = n.SemiColonTkn
			}

			yyVAL.node = traitUse
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1801
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1802
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1807
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1814
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CloseCurlyBracketTkn: yyDollar[2].token,
			}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1822
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Adaptations:          yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1834
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1838
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1845
		{
			yyDollar[1].node.(*ast.StmtTraitUsePrecedence).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1851
		{
			yyDollar[1].node.(*ast.StmtTraitUseAlias).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1860
		{
			yyVAL.node = &ast.StmtTraitUsePrecedence{
				Position:       yylex.(*Parser).builder.Pos.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].node.(*ParserSeparatedList).Items),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				InsteadofTkn:   yyDollar[2].token,
				Insteadof:      yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1875
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1890
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1905
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1921
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
			}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1935
		{
			yyVAL.node = &TraitMethodRef{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1946
		{
			yyVAL.node = yyDollar[1].node
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1953
		{
			yyVAL.node = &TraitMethodRef{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1969
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1976
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1987
		{
			yyVAL.list = yyDollar[1].list
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1988
		{
			yyVAL.list = []ast.Vertex{yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)}
		}
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1992
		{
			yyVAL.list = nil
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1993
		{
			yyVAL.list = yyDollar[1].list
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1997
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1998
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2002
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2003
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2004
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2005
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2006
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2007
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2012
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2019
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2028
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				Expr: nil,
			}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2043
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2062
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2069
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2078
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2094
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2110
		{
			yyDollar[1].node.(*ast.StmtEcho).Exprs = append(yyDollar[1].node.(*ast.StmtEcho).Exprs, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2117
		{
			yyVAL.node = &ast.StmtEcho{
				Exprs: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2126
		{
			yyVAL.node = yyDollar[1].node
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2133
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2137
		{
			yyVAL.node = yyDollar[1].node
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2144
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2151
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 325:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:2161
		{
			yyVAL.node = yylex.(*Parser).builder.NewAnonClass(yyDollar[1].list, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node, yyDollar[5].node, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2166
		{
			if yyDollar[3].node != nil {
				yyVAL.node = &ast.ExprNew{
					Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
					NewTkn:              yyDollar[1].token,
					Class:               yyDollar[2].node,
					OpenParenthesisTkn:  yyDollar[3].node.(*ArgumentList).OpenParenthesisTkn,
					Args:                yyDollar[3].node.(*ArgumentList).Arguments,
					SeparatorTkns:       yyDollar[3].node.(*ArgumentList).SeparatorTkns,
					CloseParenthesisTkn: yyDollar[3].node.(*ArgumentList).CloseParenthesisTkn,
				}
			} else {
				yyVAL.node = &ast.ExprNew{
					Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
					NewTkn:   yyDollar[1].token,
					Class:    yyDollar[2].node,
				}
			}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2186
		{
			yyVAL.node = &ast.ExprNew{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				NewTkn:   yyDollar[1].token,
				Class:    yyDollar[2].node,
			}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2197
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2204
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2209
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 331:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:2216
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token)
		}
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2223
		{
			yyVAL.node = nil
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2228
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2235
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2240
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2247
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(nil, nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2252
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(yyDollar[1].token, yyDollar[2].token, nil, yyDollar[3].token, yyDollar[4].node)
		}
	case 338:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:2259
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
				EqualTkn: yyDollar[5].token,
				Expr:     yyDollar[6].node,
			}
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:2275
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
					OpenBracketTkn:  yyDollar[1].token,
					Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[3].token,
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2290
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2299
		{
			yyVAL.node = &ast.ExprAssignReference{
				Position:     yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Var:          yyDollar[1].node,
				EqualTkn:     yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Expr:         yyDollar[4].node,
			}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2309
		{
			yyVAL.node = &ast.ExprClone{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CloneTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2317
		{
			yyVAL.node = &ast.ExprAssignPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2326
		{
			yyVAL.node = &ast.ExprAssignMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2335
		{
			yyVAL.node = &ast.ExprAssignMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2344
		{
			yyVAL.node = &ast.ExprAssignPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2353
		{
			yyVAL.node = &ast.ExprAssignDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2362
		{
			yyVAL.node = &ast.ExprAssignConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2371
		{
			yyVAL.node = &ast.ExprAssignMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2380
		{
			yyVAL.node = &ast.ExprAssignBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2389
		{
			yyVAL.node = &ast.ExprAssignBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2398
		{
			yyVAL.node = &ast.ExprAssignBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2407
		{
			yyVAL.node = &ast.ExprAssignShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2416
		{
			yyVAL.node = &ast.ExprAssignShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2425
		{
			yyVAL.node = &ast.ExprAssignCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2434
		{
			yyVAL.node = &ast.ExprPostInc{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				IncTkn:   yyDollar[2].token,
			}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2442
		{
			yyVAL.node = &ast.ExprPreInc{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2450
		{
			yyVAL.node = &ast.ExprPostDec{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				DecTkn:   yyDollar[2].token,
			}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2458
		{
			yyVAL.node = &ast.ExprPreDec{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DecTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2466
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2475
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2484
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2493
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2502
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2511
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2520
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2529
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2538
		{
			yyVAL.node = &ast.ExprBinaryConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2547
		{
			yyVAL.node = &ast.ExprBinaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2556
		{
			yyVAL.node = &ast.ExprBinaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2565
		{
			yyVAL.node = &ast.ExprBinaryMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2574
		{
			yyVAL.node = &ast.ExprBinaryPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2583
		{
			yyVAL.node = &ast.ExprBinaryDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2592
		{
			yyVAL.node = &ast.ExprBinaryMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2601
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2610
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2619
		{
			yyVAL.node = &ast.ExprUnaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PlusTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2627
		{
			yyVAL.node = &ast.ExprUnaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				MinusTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2635
		{
			yyVAL.node = &ast.ExprBooleanNot{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExclamationTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2643
		{
			yyVAL.node = &ast.ExprBitwiseNot{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				TildaTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2651
		{
			yyVAL.node = &ast.ExprBinaryIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2660
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2669
		{
			yyVAL.node = &ast.ExprBinaryEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2678
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2687
		{
			yyVAL.node = &ast.ExprBinarySmaller{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2696
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2705
		{
			yyVAL.node = &ast.ExprBinaryGreater{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2714
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2723
		{
			yyVAL.node = &ast.ExprBinarySpaceship{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2732
		{
			yyVAL.node = &ast.ExprInstanceOf{
				Position:      yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Expr:          yyDollar[1].node,
				InstanceOfTkn: yyDollar[2].token,
				Class:         yyDollar[3].node,
			}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2741
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2750
		{
			yyVAL.node = yyDollar[1].node
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2754
		{
			yyVAL.node = yyDollar[1].node
		}
	case 394:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:2758
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[5].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				IfTrue:      yyDollar[3].node,
				ColonTkn:    yyDollar[4].token,
				IfFalse:     yyDollar[5].node,
			}
		}
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2769
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				ColonTkn:    yyDollar[3].token,
				IfFalse:     yyDollar[4].node,
			}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2779
		{
			yyVAL.node = &ast.ExprBinaryCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2788
		{
			yyVAL.node = yyDollar[1].node
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2792
		{
			yyVAL.node = &ast.ExprCastInt{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2800
		{
			yyVAL.node = &ast.ExprCastDouble{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2808
		{
			yyVAL.node = &ast.ExprCastString{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2816
		{
			yyVAL.node = &ast.ExprCastArray{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2824
		{
			yyVAL.node = &ast.ExprCastObject{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2832
		{
			yyVAL.node = &ast.ExprCastBool{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2840
		{
			yyVAL.node = &ast.ExprCastUnset{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2848
		{
			exit := &ast.ExprExit{
				ExitTkn: yyDollar[1].token,
			}

			if yyDollar[2].node == nil {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token)
			} else {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				exit.OpenParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).OpenParenthesisTkn
				exit.Expr = yyDollar[2].node.(*ast.ExprBrackets).Expr
				exit.CloseParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).CloseParenthesisTkn
			}

			yyVAL.node = exit
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2865
		{
			yyVAL.node = &ast.ExprErrorSuppress{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AtTkn:    yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2873
		{
			yyVAL.node = yyDollar[1].node
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2877
		{
			yyVAL.node = &ast.ExprShellExec{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBacktickTkn:  yyDollar[1].token,
				Parts:            yyDollar[2].list,
				CloseBacktickTkn: yyDollar[3].token,
			}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2886
		{
			yyVAL.node = &ast.ExprPrint{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PrintTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2894
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				YieldTkn: yyDollar[1].token,
			}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2901
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldTkn: yyDollar[1].token,
				Val:      yyDollar[2].node,
			}
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2909
		{
			yyVAL.node = &ast.ExprYield{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				YieldTkn:       yyDollar[1].token,
				Key:            yyDollar[2].node,
				DoubleArrowTkn: yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2919
		{
			yyVAL.node = &ast.ExprYieldFrom{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldFromTkn: yyDollar[1].token,
				Expr:         yyDollar[2].node,
			}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2927
		{
			yyVAL.node = yylex.(*Parser).builder.NewThrowExpr(yyDollar[1].token, yyDollar[2].node)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2931
		{
			yyVAL.node = yyDollar[1].node
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2935
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			}

			yyVAL.node = yyDollar[2].node
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2950
		{
			yyVAL.node = yyDollar[1].node
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2952
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[2].node)
				n.AttrGroups = yyDollar[1].list
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[2].node)
				n.AttrGroups = yyDollar[1].list
			}

			yyVAL.node = yyDollar[2].node
		}
	case 419:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:2968
		{
			closure := yyDollar[7].node.(*ast.ExprClosure)

			closure.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token)
			closure.FunctionTkn = yyDollar[1].token
			closure.AmpersandTkn = yyDollar[2].token
			closure.OpenParenthesisTkn = yyDollar[4].token
			closure.Params = yyDollar[5].node.(*ParserSeparatedList).Items
			closure.SeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			closure.CloseParenthesisTkn = yyDollar[6].token
			closure.ColonTkn = yyDollar[8].node.(*ReturnType).ColonTkn
			closure.ReturnType = yyDollar[8].node.(*ReturnType).Type
			closure.OpenCurlyBracketTkn = yyDollar[9].token
			closure.Stmts = yyDollar[10].list
			closure.CloseCurlyBracketTkn = yyDollar[11].token

			yyVAL.node = closure
		}
	case 420:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:2987
		{
			yyVAL.node = &ast.ExprArrowFunction{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node),
				FnTkn:               yyDollar[1].token,
				AmpersandTkn:        yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Params:              yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[6].node.(*ReturnType).Type,
				DoubleArrowTkn:      yyDollar[8].token,
				Expr:                yyDollar[9].node,
			}
		}
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3009
		{
			yyVAL.token = nil
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3010
		{
			yyVAL.token = yyDollar[1].token
		}
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3015
		{
			yyVAL.node = &ast.ExprClosure{}
		}
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3019
		{
			yyVAL.node = &ast.ExprClosure{
				UseTkn:                 yyDollar[1].token,
				UseOpenParenthesisTkn:  yyDollar[2].token,
				Uses:                   yyDollar[3].node.(*ParserSeparatedList).Items,
				UseSeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				UseCloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3032
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3039
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3048
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3062
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				AmpersandTkn: yyDollar[1].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						IdentifierTkn: yyDollar[2].token,
						Value:         yyDollar[2].token.Value,
					},
				},
			}
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3080
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3091
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3112
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3133
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3147
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3155
		{
			yyVAL.node = yyDollar[1].node
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3162
		{
			yyVAL.node = yyDollar[1].node
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3166
		{
			yyVAL.node = yyDollar[1].node
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3173
		{
			yyVAL.node = nil
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3177
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3189
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3193
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
			}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3203
		{
			yyVAL.list = yyDollar[1].list
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3210
		{
			yyVAL.node = nil
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3214
		{
			yyVAL.node = yyDollar[1].node
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3221
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ArrayTkn:        yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3232
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3242
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3253
		{
			yyVAL.node = &ast.ScalarLnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3261
		{
			yyVAL.node = &ast.ScalarDnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3269
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3277
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3285
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3293
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3301
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3309
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3317
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3325
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3333
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:       yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn: yyDollar[1].token,
				Parts: []ast.Vertex{
					&ast.ScalarEncapsedStringPart{
						Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						EncapsedStrTkn: yyDollar[2].token,
						Value:          yyDollar[2].token.Value,
					},
				},
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3348
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenHeredocTkn:  yyDollar[1].token,
				CloseHeredocTkn: yyDollar[2].token,
			}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3356
		{
			yyVAL.node = &ast.ScalarEncapsed{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenQuoteTkn:  yyDollar[1].token,
				Parts:         yyDollar[2].list,
				CloseQuoteTkn: yyDollar[3].token,
			}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3365
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn:  yyDollar[1].token,
				Parts:           yyDollar[2].list,
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3374
		{
			yyVAL.node = yyDollar[1].node
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3378
		{
			yyVAL.node = yyDollar[1].node
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3385
		{
			yyVAL.node = &ast.ExprConstFetch{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Const:    yyDollar[1].node,
			}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3392
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3405
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3421
		{
			yyVAL.node = yyDollar[1].node
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3425
		{
			yyVAL.node = yyDollar[1].node
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3432
		{
			yyVAL.node = nil
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3436
		{
			yyVAL.node = yyDollar[1].node
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3443
		{
			yyVAL.node = yyDollar[1].node
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3450
		{
			yyVAL.node = yyDollar[1].node
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3454
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3463
		{
			yyVAL.node = yyDollar[1].node
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3470
		{
			yyVAL.node = yyDollar[1].node
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3474
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3483
		{
			yyVAL.node = yyDollar[1].node
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3490
		{
			yyVAL.node = yyDollar[1].node
		}
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3494
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3504
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3514
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3526
		{
			yyVAL.node = yylex.(*Parser).builder.NewMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3530
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafeMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3534
		{
			yyVAL.node = yyDollar[1].node
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3541
		{
			yyVAL.node = yyDollar[1].node
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3545
		{
			yyVAL.node = yyDollar[1].node
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3549
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3553
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3560
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3571
		{
			yyVAL.node = &ast.ExprVariable{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				DollarTkn:            yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Name:                 yyDollar[3].node,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3581
		{
			yyVAL.node = &ast.ExprVariable{
				Position:  yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DollarTkn: yyDollar[1].token,
				Name:      yyDollar[2].node,
			}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3592
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3601
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3613
		{
			yyVAL.node = yyDollar[1].node
		}
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3617
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3627
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3639
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3643
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3647
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3656
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3668
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3676
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3685
		{
			yyVAL.node = yyDollar[1].node
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3692
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3700
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3709
		{
			yyVAL.node = yyDollar[1].node
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3716
		{
			pairList := yyDollar[1].node.(*ParserSeparatedList)
			fistPair := pairList.Items[0].(*ast.ExprArrayItem)

			if fistPair.Key == nil && fistPair.Val == nil && len(pairList.Items) == 1 {
				pairList.Items = nil
			}

			yyVAL.node = yyDollar[1].node
		}
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3730
		{
			yyVAL.node = &ast.ExprArrayItem{}
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3734
		{
			yyVAL.node = yyDollar[1].node
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3741
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3748
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3757
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val:            yyDollar[3].node,
			}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3766
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Val:      yyDollar[1].node,
			}
		}
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3773
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				AmpersandTkn:   yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3783
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Val:          yyDollar[2].node,
			}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3791
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:    yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				EllipsisTkn: yyDollar[1].token,
				Val:         yyDollar[2].node,
			}
		}
	case 517:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:3799
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[3].token, yyDollar[6].token),
					ListTkn:         yyDollar[3].token,
					OpenBracketTkn:  yyDollar[4].token,
					Items:           yyDollar[5].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[6].token,
				},
			}
		}
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3815
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
			}
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3832
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3836
		{
			yyVAL.list = append(
				yyDollar[1].list,
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					EncapsedStrTkn: yyDollar[2].token,
					Value:          yyDollar[2].token.Value,
				},
			)
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3847
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3851
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
				yyDollar[2].node,
			}
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3865
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3876
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3893
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3897
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3901
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name:                      yyDollar[2].node,
				CloseCurlyBracketTkn:      yyDollar[3].token,
			}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3910
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 529:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:3923
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenSquareBracketTkn:  yyDollar[3].token,
				Dim:                   yyDollar[4].node,
				CloseSquareBracketTkn: yyDollar[5].token,
				CloseCurlyBracketTkn:  yyDollar[6].token,
			}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3939
		{
			yyVAL.node = &ast.ScalarEncapsedStringBrackets{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Var:                  yyDollar[2].node,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3951
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3959
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(string(yyDollar[1].token.Value)); err == nil {
				yyVAL.node = &ast.ScalarLnumber{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					NumberTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					StringTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			}
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3976
		{
			_, err := strconv.Atoi(string(yyDollar[2].token.Value))
			isInt := err == nil

			if isInt {
				yyVAL.node = &ast.ExprUnaryMinus{
					Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn: yyDollar[1].token,
					Expr: &ast.ScalarLnumber{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						NumberTkn: yyDollar[2].token,
						Value:     yyDollar[2].token.Value,
					},
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn:  yyDollar[1].token,
					StringTkn: yyDollar[2].token,
					Value:     append([]byte("-"), yyDollar[2].token.Value...),
				}
			}
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4000
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:4014
		{
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[4].token)
			}

			yyVAL.node = &ast.ExprIsset{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				IssetTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Vars:                yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
			}
		}
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4029
		{
			yyVAL.node = &ast.ExprEmpty{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EmptyTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4039
		{
			yyVAL.node = &ast.ExprInclude{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4047
		{
			yyVAL.node = &ast.ExprIncludeOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4055
		{
			yyVAL.node = &ast.ExprEval{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EvalTkn:             yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4065
		{
			yyVAL.node = &ast.ExprRequire{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4073
		{
			yyVAL.node = &ast.ExprRequireOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4084
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4090
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4100
		{
			yyVAL.node = yyDollar[1].node
		}
	}
	goto yystack /* stack new state and value */
}
