// Code generated by goyacc -o internal/php8/php8.go internal/php8/php8.y. DO NOT EDIT.

// line internal/php8/php8.y:1

package php8

import __yyfmt__ "fmt"

// line internal/php8/php8.y:3

import (
	"strconv"

	"github.com/VKCOM/php-parser/pkg/ast"
	"github.com/VKCOM/php-parser/pkg/token"
)

// line internal/php8/php8.y:13
type yySymType struct {
	yys   int
	node  ast.Vertex
	token *token.Token
	list  []ast.Vertex
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_FN = 57380
const T_CONST = 57381
const T_RETURN = 57382
const T_TRY = 57383
const T_CATCH = 57384
const T_FINALLY = 57385
const T_THROW = 57386
const T_USE = 57387
const T_INSTEADOF = 57388
const T_GLOBAL = 57389
const T_VAR = 57390
const T_UNSET = 57391
const T_ISSET = 57392
const T_EMPTY = 57393
const T_HALT_COMPILER = 57394
const T_CLASS = 57395
const T_TRAIT = 57396
const T_INTERFACE = 57397
const T_EXTENDS = 57398
const T_IMPLEMENTS = 57399
const T_OBJECT_OPERATOR = 57400
const T_DOUBLE_ARROW = 57401
const T_LIST = 57402
const T_ARRAY = 57403
const T_CALLABLE = 57404
const T_CLASS_C = 57405
const T_TRAIT_C = 57406
const T_METHOD_C = 57407
const T_FUNC_C = 57408
const T_LINE = 57409
const T_FILE = 57410
const T_COMMENT = 57411
const T_DOC_COMMENT = 57412
const T_OPEN_TAG = 57413
const T_OPEN_TAG_WITH_ECHO = 57414
const T_CLOSE_TAG = 57415
const T_WHITESPACE = 57416
const T_START_HEREDOC = 57417
const T_END_HEREDOC = 57418
const T_DOLLAR_OPEN_CURLY_BRACES = 57419
const T_CURLY_OPEN = 57420
const T_PAAMAYIM_NEKUDOTAYIM = 57421
const T_NAMESPACE = 57422
const T_NS_C = 57423
const T_DIR = 57424
const T_NS_SEPARATOR = 57425
const T_ELLIPSIS = 57426
const T_EVAL = 57427
const T_REQUIRE = 57428
const T_REQUIRE_ONCE = 57429
const T_LOGICAL_OR = 57430
const T_LOGICAL_XOR = 57431
const T_LOGICAL_AND = 57432
const T_INSTANCEOF = 57433
const T_NEW = 57434
const T_CLONE = 57435
const T_ELSEIF = 57436
const T_ELSE = 57437
const T_ENDIF = 57438
const T_PRINT = 57439
const T_YIELD = 57440
const T_STATIC = 57441
const T_ABSTRACT = 57442
const T_FINAL = 57443
const T_PRIVATE = 57444
const T_PROTECTED = 57445
const T_PUBLIC = 57446
const T_INC = 57447
const T_DEC = 57448
const T_YIELD_FROM = 57449
const T_INT_CAST = 57450
const T_DOUBLE_CAST = 57451
const T_STRING_CAST = 57452
const T_ARRAY_CAST = 57453
const T_OBJECT_CAST = 57454
const T_BOOL_CAST = 57455
const T_UNSET_CAST = 57456
const T_COALESCE = 57457
const T_SPACESHIP = 57458
const T_NOELSE = 57459
const T_PLUS_EQUAL = 57460
const T_MINUS_EQUAL = 57461
const T_MUL_EQUAL = 57462
const T_POW_EQUAL = 57463
const T_DIV_EQUAL = 57464
const T_CONCAT_EQUAL = 57465
const T_MOD_EQUAL = 57466
const T_AND_EQUAL = 57467
const T_OR_EQUAL = 57468
const T_XOR_EQUAL = 57469
const T_SL_EQUAL = 57470
const T_SR_EQUAL = 57471
const T_COALESCE_EQUAL = 57472
const T_BOOLEAN_OR = 57473
const T_BOOLEAN_AND = 57474
const T_POW = 57475
const T_SL = 57476
const T_SR = 57477
const T_IS_IDENTICAL = 57478
const T_IS_NOT_IDENTICAL = 57479
const T_IS_EQUAL = 57480
const T_IS_NOT_EQUAL = 57481
const T_IS_SMALLER_OR_EQUAL = 57482
const T_IS_GREATER_OR_EQUAL = 57483
const T_NULLSAFE_OBJECT_OPERATOR = 57484
const T_MATCH = 57485
const T_ATTRIBUTE = 57486
const T_NAME_RELATIVE = 57487
const T_NAME_QUALIFIED = 57488
const T_NAME_FULLY_QUALIFIED = 57489
const T_READONLY = 57490

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_FN",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_COALESCE_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"T_NULLSAFE_OBJECT_OPERATOR",
	"T_MATCH",
	"T_ATTRIBUTE",
	"T_NAME_RELATIVE",
	"T_NAME_QUALIFIED",
	"T_NAME_FULLY_QUALIFIED",
	"T_READONLY",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

// line internal/php8/php8.y:3432

// line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	-2, 0,
	-1, 42,
	58, 483,
	79, 483,
	142, 483,
	151, 483,
	157, 483,
	-2, 479,
	-1, 46,
	155, 489,
	-2, 498,
	-1, 82,
	79, 444,
	-2, 487,
	-1, 83,
	58, 488,
	142, 488,
	151, 488,
	157, 488,
	-2, 468,
	-1, 96,
	58, 485,
	79, 485,
	142, 485,
	151, 485,
	155, 491,
	157, 485,
	-2, 466,
	-1, 97,
	58, 486,
	79, 486,
	142, 486,
	151, 486,
	157, 486,
	-2, 467,
	-1, 101,
	79, 446,
	-2, 470,
	-1, 216,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	-2, 0,
	-1, 323,
	58, 483,
	79, 483,
	142, 483,
	151, 483,
	157, 483,
	-2, 366,
	-1, 326,
	155, 491,
	-2, 485,
	-1, 330,
	58, 483,
	79, 483,
	142, 483,
	151, 483,
	157, 483,
	-2, 368,
	-1, 393,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	-2, 0,
	-1, 446,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 390,
	-1, 447,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 391,
	-1, 448,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 392,
	-1, 449,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 393,
	-1, 450,
	140, 0,
	141, 0,
	174, 0,
	175, 0,
	-2, 394,
	-1, 451,
	140, 0,
	141, 0,
	174, 0,
	175, 0,
	-2, 395,
	-1, 452,
	140, 0,
	141, 0,
	174, 0,
	175, 0,
	-2, 396,
	-1, 453,
	140, 0,
	141, 0,
	174, 0,
	175, 0,
	-2, 397,
	-1, 454,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 398,
	-1, 461,
	156, 185,
	167, 185,
	-2, 483,
	-1, 464,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	-2, 0,
	-1, 505,
	156, 527,
	158, 527,
	167, 527,
	-2, 483,
	-1, 510,
	58, 484,
	79, 484,
	142, 484,
	151, 484,
	155, 490,
	157, 484,
	-2, 400,
	-1, 528,
	155, 515,
	-2, 505,
	-1, 531,
	155, 79,
	-2, 81,
	-1, 532,
	155, 80,
	-2, 82,
	-1, 558,
	154, 81,
	-2, 97,
	-1, 562,
	154, 13,
	-2, 450,
	-1, 564,
	154, 46,
	-2, 419,
	-1, 566,
	154, 72,
	-2, 445,
	-1, 567,
	154, 11,
	-2, 108,
	-1, 576,
	155, 431,
	-2, 42,
	-1, 578,
	154, 61,
	-2, 478,
	-1, 579,
	154, 62,
	-2, 474,
	-1, 580,
	154, 63,
	-2, 476,
	-1, 581,
	154, 64,
	-2, 475,
	-1, 582,
	154, 65,
	-2, 471,
	-1, 583,
	154, 66,
	-2, 472,
	-1, 584,
	154, 67,
	-2, 473,
	-1, 585,
	154, 68,
	-2, 477,
	-1, 586,
	155, 431,
	-2, 69,
	-1, 589,
	156, 237,
	-2, 108,
	-1, 591,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	-2, 0,
	-1, 618,
	156, 237,
	-2, 108,
	-1, 619,
	156, 237,
	-2, 108,
	-1, 627,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	-2, 0,
	-1, 642,
	155, 490,
	-2, 484,
	-1, 707,
	156, 207,
	-2, 483,
	-1, 717,
	156, 237,
	-2, 108,
	-1, 732,
	156, 526,
	158, 526,
	167, 526,
	-2, 483,
	-1, 750,
	156, 84,
	-2, 108,
	-1, 761,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	-2, 0,
	-1, 771,
	156, 208,
	-2, 483,
	-1, 774,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	-2, 0,
	-1, 794,
	53, 108,
	54, 108,
	55, 108,
	94, 232,
	95, 232,
	96, 232,
	100, 108,
	101, 108,
	-2, 0,
	-1, 841,
	156, 207,
	-2, 483,
	-1, 843,
	156, 210,
	-2, 458,
	-1, 855,
	37, 309,
	39, 309,
	-2, 306,
	-1, 868,
	53, 108,
	54, 108,
	55, 108,
	94, 233,
	95, 233,
	96, 233,
	100, 108,
	101, 108,
	-2, 0,
	-1, 903,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	-2, 0,
	-1, 907,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	-2, 0,
	-1, 939,
	31, 223,
	32, 223,
	33, 223,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	152, 223,
	-2, 0,
	-1, 947,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	-2, 0,
	-1, 974,
	79, 97,
	-2, 79,
	-1, 981,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	-2, 0,
	-1, 982,
	31, 222,
	32, 222,
	33, 222,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	152, 222,
	-2, 0,
	-1, 987,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	-2, 0,
	-1, 992,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	-2, 0,
	-1, 1018,
	156, 237,
	-2, 108,
	-1, 1026,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	-2, 0,
	-1, 1037,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	-2, 0,
}

const yyPrivate = 57344

const yyLast = 9174

var yyAct = [...]int{

	29, 39, 967, 806, 857, 960, 467, 216, 961, 882,
	680, 389, 951, 722, 126, 957, 837, 801, 897, 219,
	885, 689, 38, 224, 224, 224, 415, 720, 238, 810,
	706, 682, 782, 314, 688, 524, 554, 545, 963, 764,
	410, 718, 460, 9, 409, 316, 96, 8, 97, 275,
	124, 318, 322, 533, 83, 331, 332, 333, 334, 335,
	101, 99, 496, 336, 337, 338, 339, 340, 341, 342,
	358, 345, 237, 103, 353, 354, 355, 356, 230, 408,
	234, 214, 7, 79, 42, 206, 367, 77, 235, 373,
	374, 557, 376, 377, 284, 407, 223, 44, 6, 326,
	326, 327, 327, 406, 369, 2, 5, 324, 324, 231,
	362, 213, 98, 1008, 233, 691, 999, 534, 205, 996,
	227, 228, 116, 218, 203, 266, 730, 636, 209, 266,
	921, 497, 920, 116, 350, 266, 277, 323, 330, 360,
	426, 402, 997, 930, 928, 360, 790, 993, 891, 889,
	790, 279, 359, 116, 616, 595, 998, 350, 364, 990,
	427, 994, 879, 877, 349, 401, 424, 252, 368, 395,
	874, 252, 255, 256, 428, 422, 350, 252, 262, 264,
	425, 824, 757, 400, 382, 750, 676, 671, 394, 423,
	116, 614, 605, 523, 503, 250, 249, 401, 116, 250,
	249, 276, 395, 888, 843, 251, 253, 254, 739, 251,
	253, 254, 261, 263, 248, 251, 253, 254, 412, 383,
	385, 735, 417, 418, 658, 653, 643, 630, 393, 502,
	654, 1032, 414, 988, 984, 646, 38, 116, 647, 905,
	904, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 895, 456, 458,
	869, 462, 498, 850, 780, 779, 769, 1018, 945, 748,
	464, 517, 745, 743, 734, 704, 693, 100, 679, 644,
	468, 635, 381, 478, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 100, 390, 493,
	224, 495, 912, 233, 318, 846, 326, 277, 327, 772,
	209, 506, 733, 397, 324, 717, 508, 360, 701, 396,
	318, 702, 279, 899, 898, 1025, 386, 538, 375, 372,
	364, 872, 371, 370, 100, 224, 953, 501, 344, 313,
	368, 384, 519, 619, 461, 618, 603, 601, 540, 589,
	507, 475, 311, 509, 473, 518, 326, 541, 327, 308,
	529, 543, 546, 547, 324, 500, 548, 455, 472, 271,
	516, 270, 551, 463, 269, 555, 648, 318, 222, 266,
	221, 217, 474, 120, 807, 499, 499, 792, 678, 326,
	532, 327, 477, 600, 505, 274, 494, 324, 1004, 350,
	350, 1003, 1036, 38, 1035, 832, 833, 788, 788, 983,
	587, 539, 940, 559, 832, 833, 392, 609, 391, 238,
	537, 252, 255, 256, 9, 788, 536, 521, 8, 906,
	350, 511, 350, 901, 894, 528, 312, 892, 266, 350,
	350, 788, 829, 527, 825, 310, 793, 870, 612, 250,
	249, 309, 768, 767, 765, 763, 760, 277, 604, 251,
	253, 254, 590, 7, 625, 476, 626, 525, 465, 421,
	628, 593, 420, 599, 38, 627, 419, 235, 822, 6,
	252, 255, 256, 755, 655, 613, 1010, 5, 591, 633,
	954, 610, 607, 948, 318, 638, 608, 231, 318, 910,
	871, 209, 513, 514, 594, 851, 78, 78, 250, 249,
	845, 742, 721, 656, 975, 955, 685, 622, 251, 253,
	254, 660, 597, 248, 78, 900, 272, 224, 663, 226,
	78, 641, 866, 513, 831, 514, 226, 512, 116, 637,
	78, 252, 514, 513, 211, 932, 211, 677, 785, 220,
	115, 226, 322, 1007, 353, 354, 356, 535, 266, 367,
	281, 282, 373, 374, 361, 376, 377, 927, 649, 925,
	670, 285, 286, 207, 360, 208, 875, 369, 414, 675,
	211, 683, 399, 116, 657, 783, 668, 359, 515, 770,
	116, 664, 665, 719, 697, 417, 699, 692, 624, 369,
	252, 38, 703, 399, 632, 542, 285, 286, 634, 661,
	683, 683, 499, 499, 666, 220, 115, 469, 360, 715,
	716, 698, 9, 662, 849, 328, 8, 731, 369, 369,
	226, 364, 116, 348, 659, 1005, 596, 38, 287, 288,
	328, 368, 278, 115, 233, 737, 1006, 705, 351, 352,
	759, 326, 326, 327, 327, 399, 78, 398, 413, 324,
	324, 7, 546, 736, 119, 117, 118, 555, 116, 747,
	78, 119, 117, 118, 827, 723, 326, 6, 327, 651,
	212, 366, 212, 210, 324, 5, 119, 117, 118, 461,
	707, 1, 100, 116, 761, 690, 695, 754, 515, 744,
	741, 318, 758, 746, 917, 559, 916, 749, 204, 683,
	712, 774, 787, 756, 732, 650, 212, 210, 781, 328,
	588, 795, 78, 727, 318, 226, 794, 369, 621, 380,
	369, 620, 766, 805, 773, 289, 291, 290, 280, 789,
	116, 215, 683, 778, 777, 326, 116, 327, 387, 78,
	598, 515, 471, 324, 417, 470, 466, 796, 351, 352,
	369, 273, 816, 318, 798, 119, 117, 118, 283, 855,
	784, 38, 808, 847, 751, 366, 819, 820, 853, 823,
	830, 787, 826, 771, 38, 854, 100, 852, 966, 346,
	868, 840, 865, 211, 357, 834, 842, 836, 809, 369,
	776, 856, 821, 880, 38, 351, 352, 326, 714, 327,
	550, 351, 352, 800, 886, 324, 799, 60, 791, 804,
	207, 802, 208, 896, 848, 623, 873, 116, 890, 876,
	878, 459, 378, 226, 723, 694, 893, 903, 935, 723,
	1034, 867, 911, 907, 913, 841, 700, 902, 832, 833,
	918, 919, 861, 862, 863, 860, 859, 858, 821, 818,
	119, 117, 118, 838, 816, 805, 924, 815, 821, 914,
	926, 884, 881, 915, 883, 835, 832, 833, 38, 116,
	317, 41, 923, 929, 819, 820, 121, 226, 686, 922,
	687, 379, 351, 352, 752, 939, 226, 909, 753, 13,
	933, 864, 934, 40, 821, 938, 787, 959, 947, 544,
	950, 942, 949, 38, 787, 17, 976, 38, 977, 964,
	973, 956, 553, 16, 369, 813, 812, 811, 978, 212,
	979, 908, 369, 236, 821, 981, 982, 645, 819, 820,
	821, 365, 821, 549, 351, 352, 987, 819, 820, 38,
	47, 46, 992, 102, 48, 995, 82, 38, 526, 1002,
	946, 80, 71, 1000, 952, 973, 343, 958, 119, 117,
	118, 814, 972, 116, 315, 116, 989, 61, 388, 821,
	347, 821, 817, 980, 81, 363, 59, 1015, 971, 936,
	1017, 38, 38, 1012, 1016, 970, 985, 38, 838, 1024,
	1014, 1022, 38, 969, 968, 991, 1023, 786, 1026, 1019,
	683, 1021, 1027, 232, 1028, 229, 43, 972, 775, 1029,
	711, 1030, 119, 117, 118, 681, 1033, 416, 369, 403,
	3, 119, 117, 118, 1037, 944, 38, 931, 351, 352,
	351, 352, 952, 887, 0, 817, 958, 38, 0, 571,
	572, 562, 146, 93, 94, 558, 723, 116, 0, 0,
	0, 0, 0, 113, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 180, 181, 182, 183, 184,
	172, 173, 576, 586, 175, 176, 161, 162, 163, 565,
	165, 166, 167, 168, 169, 569, 570, 0, 192, 190,
	191, 187, 188, 0, 0, 560, 577, 186, 578, 579,
	581, 580, 582, 583, 861, 862, 863, 860, 859, 858,
	95, 0, 0, 0, 0, 189, 585, 584, 0, 556,
	573, 574, 575, 139, 140, 141, 142, 567, 561, 147,
	148, 149, 563, 564, 566, 128, 129, 130, 131, 132,
	52, 53, 75, 62, 63, 64, 65, 66, 67, 68,
	306, 307, 0, 864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 568, 78,
	119, 117, 118, 133, 114, 72, 0, 0, 0, 0,
	58, 552, 50, 0, 0, 0, 55, 54, 56, 57,
	70, 100, 571, 572, 562, 146, 93, 94, 558, 0,
	116, 0, 0, 0, 292, 0, 113, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 180, 181,
	182, 183, 184, 172, 173, 576, 586, 175, 176, 161,
	162, 163, 565, 165, 166, 167, 168, 169, 569, 570,
	0, 192, 190, 191, 187, 188, 0, 0, 560, 577,
	186, 578, 579, 581, 580, 582, 583, 0, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 189, 585,
	584, 0, 556, 573, 574, 575, 139, 140, 141, 142,
	567, 561, 147, 148, 149, 563, 564, 566, 128, 129,
	130, 131, 132, 52, 53, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 568, 78, 119, 117, 118, 133, 114, 72, 0,
	0, 0, 0, 58, 0, 50, 0, 0, 0, 55,
	54, 56, 57, 70, 100, 4, 0, 88, 89, 69,
	45, 93, 94, 36, 0, 116, 0, 28, 0, 819,
	820, 113, 27, 19, 18, 0, 20, 0, 31, 0,
	32, 0, 0, 21, 0, 0, 0, 22, 23, 35,
	37, 115, 14, 24, 34, 0, 0, 76, 12, 0,
	25, 0, 30, 86, 87, 10, 0, 886, 0, 0,
	0, 0, 0, 49, 112, 0, 111, 107, 108, 109,
	104, 105, 0, 0, 0, 0, 0, 0, 95, 0,
	0, 0, 0, 11, 110, 106, 0, 0, 90, 91,
	92, 0, 0, 0, 0, 84, 51, 0, 0, 0,
	73, 74, 26, 119, 117, 118, 0, 0, 52, 53,
	75, 62, 63, 64, 65, 66, 67, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 78, 119, 117,
	118, 0, 114, 72, 15, 684, 33, 0, 58, 0,
	50, 0, 0, 0, 55, 54, 56, 57, 70, 100,
	4, 0, 88, 89, 69, 45, 93, 94, 36, 0,
	116, 0, 28, 0, 0, 0, 113, 27, 19, 18,
	0, 20, 0, 31, 0, 32, 0, 0, 21, 0,
	0, 0, 22, 23, 35, 37, 115, 14, 24, 34,
	0, 0, 76, 12, 0, 25, 0, 30, 86, 87,
	10, 0, 0, 0, 0, 0, 0, 0, 49, 112,
	0, 111, 107, 108, 109, 104, 105, 0, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 11, 110,
	106, 0, 0, 90, 91, 92, 0, 0, 0, 0,
	84, 51, 0, 0, 0, 73, 74, 26, 0, 0,
	0, 0, 0, 52, 53, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 78, 119, 117, 118, 0, 114, 72, 15,
	592, 33, 0, 58, 0, 50, 0, 0, 0, 55,
	54, 56, 57, 70, 100, 134, 135, 145, 146, 0,
	0, 531, 0, 116, 0, 0, 0, 0, 0, 0,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 180, 181, 182, 183, 184, 172, 173, 174, 201,
	175, 176, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 0, 192, 190, 191, 187, 188, 0,
	0, 179, 185, 186, 193, 194, 196, 195, 197, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 200, 199, 0, 0, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 147, 148, 149, 177, 178,
	127, 128, 129, 130, 131, 132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 133,
	0, 0, 530, 4, 0, 88, 89, 69, 45, 93,
	94, 36, 0, 116, 0, 28, 0, 100, 0, 113,
	27, 19, 18, 0, 20, 0, 31, 0, 32, 0,
	0, 21, 0, 0, 0, 22, 23, 35, 37, 115,
	14, 24, 34, 0, 0, 76, 12, 0, 25, 0,
	30, 86, 87, 10, 0, 0, 0, 0, 0, 0,
	0, 49, 112, 0, 111, 107, 108, 109, 104, 105,
	0, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 11, 110, 106, 0, 0, 90, 91, 92, 0,
	0, 0, 0, 84, 51, 0, 0, 0, 73, 74,
	26, 0, 0, 0, 0, 0, 52, 53, 75, 62,
	63, 64, 65, 66, 67, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 78, 119, 117, 118, 0,
	114, 72, 15, 0, 33, 0, 58, 0, 50, 0,
	0, 0, 55, 54, 56, 57, 70, 100, 405, 0,
	88, 89, 69, 45, 93, 94, 36, 0, 116, 0,
	28, 0, 0, 0, 113, 27, 19, 18, 0, 20,
	0, 31, 0, 32, 0, 0, 21, 0, 0, 0,
	22, 23, 35, 37, 115, 0, 24, 34, 0, 0,
	76, 0, 0, 25, 0, 30, 86, 87, 411, 0,
	0, 0, 0, 0, 0, 0, 49, 112, 0, 111,
	107, 108, 109, 104, 105, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 110, 106, 0,
	0, 90, 91, 92, 0, 0, 0, 0, 84, 51,
	0, 0, 0, 73, 74, 26, 0, 0, 0, 0,
	0, 52, 53, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	78, 119, 117, 118, 0, 114, 72, 15, 1038, 33,
	0, 58, 0, 50, 0, 0, 0, 55, 54, 56,
	57, 70, 100, 405, 0, 88, 89, 69, 45, 93,
	94, 36, 0, 116, 0, 28, 0, 0, 0, 113,
	27, 19, 18, 0, 20, 0, 31, 0, 32, 0,
	0, 21, 0, 0, 0, 22, 23, 35, 37, 115,
	0, 24, 34, 0, 0, 76, 0, 0, 25, 0,
	30, 86, 87, 411, 0, 0, 0, 0, 0, 0,
	0, 49, 112, 0, 111, 107, 108, 109, 104, 105,
	0, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 110, 106, 0, 0, 90, 91, 92, 0,
	0, 0, 0, 84, 51, 0, 0, 0, 73, 74,
	26, 0, 0, 0, 0, 0, 52, 53, 75, 62,
	63, 64, 65, 66, 67, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 78, 119, 117, 118, 0,
	114, 72, 15, 1031, 33, 0, 58, 0, 50, 0,
	0, 0, 55, 54, 56, 57, 70, 100, 405, 0,
	88, 89, 69, 45, 93, 94, 36, 0, 116, 0,
	28, 0, 0, 0, 113, 27, 19, 18, 0, 20,
	0, 31, 0, 32, 0, 0, 21, 0, 0, 0,
	22, 23, 35, 37, 115, 0, 24, 34, 0, 0,
	76, 0, 0, 25, 0, 30, 86, 87, 411, 0,
	0, 0, 0, 0, 0, 0, 49, 112, 0, 111,
	107, 108, 109, 104, 105, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 110, 106, 0,
	0, 90, 91, 92, 0, 0, 0, 0, 84, 51,
	0, 0, 0, 73, 74, 26, 0, 0, 0, 0,
	0, 52, 53, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	78, 119, 117, 118, 0, 114, 72, 15, 1013, 33,
	0, 58, 0, 50, 0, 0, 0, 55, 54, 56,
	57, 70, 100, 405, 0, 88, 89, 69, 45, 93,
	94, 36, 0, 116, 0, 28, 0, 0, 0, 113,
	27, 19, 18, 0, 20, 0, 31, 0, 32, 0,
	0, 21, 0, 0, 0, 22, 23, 35, 37, 115,
	0, 24, 34, 0, 0, 76, 0, 0, 25, 0,
	30, 86, 87, 411, 0, 0, 0, 0, 0, 0,
	0, 49, 112, 0, 111, 107, 108, 109, 104, 105,
	0, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 110, 106, 0, 0, 90, 91, 92, 0,
	0, 0, 0, 84, 51, 0, 0, 0, 73, 74,
	26, 0, 0, 0, 0, 0, 52, 53, 75, 62,
	63, 64, 65, 66, 67, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 78, 119, 117, 118, 0,
	114, 72, 15, 1011, 33, 0, 58, 0, 50, 0,
	0, 0, 55, 54, 56, 57, 70, 100, 405, 0,
	88, 89, 69, 45, 93, 94, 36, 0, 116, 0,
	28, 0, 0, 0, 113, 27, 19, 18, 0, 20,
	1009, 31, 0, 32, 0, 0, 21, 0, 0, 0,
	22, 23, 35, 37, 115, 0, 24, 34, 0, 0,
	76, 0, 0, 25, 0, 30, 86, 87, 411, 0,
	0, 0, 0, 0, 0, 0, 49, 112, 0, 111,
	107, 108, 109, 104, 105, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 110, 106, 0,
	0, 90, 91, 92, 0, 0, 0, 0, 84, 51,
	0, 0, 0, 73, 74, 26, 0, 0, 0, 0,
	0, 52, 53, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	78, 119, 117, 118, 0, 114, 72, 15, 0, 33,
	0, 58, 0, 50, 0, 0, 0, 55, 54, 56,
	57, 70, 100, 405, 0, 88, 89, 69, 45, 93,
	94, 36, 0, 116, 0, 28, 0, 0, 0, 113,
	27, 19, 18, 0, 20, 0, 31, 0, 32, 0,
	0, 21, 0, 0, 0, 22, 23, 35, 37, 115,
	0, 24, 34, 0, 0, 76, 0, 0, 25, 0,
	30, 86, 87, 411, 0, 0, 0, 0, 0, 0,
	0, 49, 112, 0, 111, 107, 108, 109, 104, 105,
	0, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 110, 106, 0, 0, 90, 91, 92, 0,
	0, 0, 0, 84, 51, 0, 0, 0, 73, 74,
	26, 0, 0, 0, 0, 0, 52, 53, 75, 62,
	63, 64, 65, 66, 67, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 78, 119, 117, 118, 0,
	114, 72, 15, 986, 33, 0, 58, 0, 50, 0,
	0, 0, 55, 54, 56, 57, 70, 100, 405, 0,
	88, 89, 69, 45, 93, 94, 36, 0, 116, 0,
	28, 0, 0, 0, 113, 27, 19, 18, 0, 20,
	0, 31, 0, 32, 0, 0, 21, 0, 0, 0,
	22, 23, 35, 37, 115, 0, 24, 34, 0, 0,
	76, 0, 0, 25, 0, 30, 86, 87, 411, 0,
	0, 0, 0, 0, 0, 0, 49, 112, 0, 111,
	107, 108, 109, 104, 105, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 110, 106, 0,
	0, 90, 91, 92, 0, 0, 0, 0, 84, 51,
	0, 0, 0, 73, 74, 26, 0, 0, 0, 0,
	0, 52, 53, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	78, 119, 117, 118, 0, 114, 72, 15, 943, 33,
	0, 58, 0, 50, 0, 0, 0, 55, 54, 56,
	57, 70, 100, 405, 0, 88, 89, 69, 45, 93,
	94, 36, 0, 116, 0, 28, 0, 0, 0, 113,
	27, 19, 18, 0, 20, 0, 31, 941, 32, 0,
	0, 21, 0, 0, 0, 22, 23, 35, 37, 115,
	0, 24, 34, 0, 0, 76, 0, 0, 25, 0,
	30, 86, 87, 411, 0, 0, 0, 0, 0, 0,
	0, 49, 112, 0, 111, 107, 108, 109, 104, 105,
	0, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 110, 106, 0, 0, 90, 91, 92, 0,
	0, 0, 0, 84, 51, 0, 0, 0, 73, 74,
	26, 0, 0, 0, 0, 0, 52, 53, 75, 62,
	63, 64, 65, 66, 67, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 78, 119, 117, 118, 0,
	114, 72, 15, 0, 33, 0, 58, 0, 50, 0,
	0, 0, 55, 54, 56, 57, 70, 100, 405, 0,
	88, 89, 69, 45, 93, 94, 36, 0, 116, 0,
	28, 0, 0, 0, 113, 27, 19, 18, 0, 20,
	0, 31, 0, 32, 844, 0, 21, 0, 0, 0,
	22, 23, 35, 37, 115, 0, 24, 34, 0, 0,
	76, 0, 0, 25, 0, 30, 86, 87, 411, 0,
	0, 0, 0, 0, 0, 0, 49, 112, 0, 111,
	107, 108, 109, 104, 105, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 110, 106, 0,
	0, 90, 91, 92, 0, 0, 0, 0, 84, 51,
	0, 0, 0, 73, 74, 26, 0, 0, 0, 0,
	0, 52, 53, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	78, 119, 117, 118, 0, 114, 72, 15, 0, 33,
	0, 58, 0, 50, 0, 0, 0, 55, 54, 56,
	57, 70, 100, 405, 0, 88, 89, 69, 45, 93,
	94, 36, 0, 116, 0, 28, 0, 0, 0, 113,
	27, 19, 18, 828, 20, 0, 31, 0, 32, 0,
	0, 21, 0, 0, 0, 22, 23, 35, 37, 115,
	0, 24, 34, 0, 0, 76, 0, 0, 25, 0,
	30, 86, 87, 411, 0, 0, 0, 0, 0, 0,
	0, 49, 112, 0, 111, 107, 108, 109, 104, 105,
	0, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 110, 106, 0, 0, 90, 91, 92, 0,
	0, 0, 0, 84, 51, 0, 0, 0, 73, 74,
	26, 0, 0, 0, 0, 0, 52, 53, 75, 62,
	63, 64, 65, 66, 67, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 78, 119, 117, 118, 0,
	114, 72, 15, 0, 33, 0, 58, 0, 50, 0,
	0, 0, 55, 54, 56, 57, 70, 100, 405, 0,
	88, 89, 69, 45, 93, 94, 36, 0, 116, 0,
	28, 0, 0, 0, 113, 27, 19, 18, 0, 20,
	0, 31, 0, 32, 0, 0, 21, 0, 0, 0,
	22, 23, 35, 37, 115, 0, 24, 34, 0, 0,
	76, 0, 0, 25, 0, 30, 86, 87, 411, 0,
	0, 0, 0, 0, 0, 0, 49, 112, 0, 111,
	107, 108, 109, 104, 105, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 110, 106, 0,
	0, 90, 91, 92, 0, 0, 0, 0, 84, 51,
	0, 0, 726, 73, 74, 26, 0, 0, 0, 0,
	0, 52, 53, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	78, 119, 117, 118, 0, 114, 72, 15, 0, 33,
	0, 58, 0, 50, 0, 0, 0, 55, 54, 56,
	57, 70, 100, 405, 0, 88, 89, 69, 45, 93,
	94, 36, 0, 116, 0, 28, 0, 0, 0, 113,
	27, 19, 18, 0, 20, 0, 31, 0, 32, 0,
	0, 21, 0, 0, 0, 22, 23, 35, 37, 115,
	0, 24, 34, 0, 0, 76, 0, 0, 25, 0,
	30, 86, 87, 411, 0, 0, 0, 0, 0, 0,
	0, 49, 112, 0, 111, 107, 108, 109, 104, 105,
	0, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 110, 106, 0, 0, 90, 91, 92, 0,
	0, 0, 0, 84, 51, 0, 0, 0, 73, 74,
	26, 0, 0, 0, 0, 0, 52, 53, 75, 62,
	63, 64, 65, 66, 67, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 78, 119, 117, 118, 0,
	114, 72, 15, 617, 33, 0, 58, 0, 50, 0,
	0, 0, 55, 54, 56, 57, 70, 100, 405, 0,
	88, 89, 69, 45, 93, 94, 36, 0, 116, 0,
	28, 0, 0, 0, 113, 27, 19, 18, 0, 20,
	0, 31, 0, 32, 0, 0, 21, 0, 0, 0,
	22, 23, 35, 37, 115, 0, 24, 34, 0, 0,
	76, 0, 0, 25, 0, 30, 86, 87, 411, 0,
	0, 0, 0, 0, 0, 0, 49, 112, 0, 111,
	107, 108, 109, 104, 105, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 110, 106, 0,
	0, 90, 91, 92, 0, 0, 0, 0, 84, 51,
	0, 0, 0, 73, 74, 26, 0, 0, 0, 0,
	0, 52, 53, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	78, 119, 117, 118, 0, 114, 72, 15, 404, 33,
	0, 58, 0, 50, 0, 0, 0, 55, 54, 56,
	57, 70, 100, 405, 0, 88, 89, 69, 45, 93,
	94, 36, 0, 116, 0, 28, 0, 0, 0, 113,
	27, 19, 18, 0, 20, 0, 31, 0, 32, 0,
	0, 21, 0, 0, 0, 22, 23, 35, 37, 115,
	0, 24, 34, 0, 0, 76, 0, 0, 25, 0,
	30, 86, 87, 411, 0, 0, 0, 0, 0, 0,
	0, 49, 112, 0, 111, 107, 108, 109, 104, 105,
	0, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 110, 106, 0, 0, 90, 91, 92, 0,
	0, 0, 0, 84, 51, 0, 0, 0, 73, 74,
	26, 0, 0, 0, 0, 0, 52, 53, 75, 62,
	63, 64, 65, 66, 67, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 78, 119, 117, 118, 0,
	114, 72, 15, 0, 33, 0, 58, 0, 50, 0,
	0, 0, 55, 54, 56, 57, 70, 100, 88, 89,
	69, 45, 93, 94, 36, 0, 116, 0, 28, 0,
	0, 0, 113, 27, 19, 18, 0, 20, 0, 31,
	0, 32, 0, 0, 21, 0, 0, 0, 22, 23,
	35, 220, 115, 0, 24, 34, 0, 0, 76, 0,
	0, 25, 0, 30, 86, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 112, 0, 111, 107, 108,
	109, 104, 105, 0, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 0, 110, 106, 0, 0, 90,
	91, 92, 0, 0, 0, 0, 84, 51, 0, 0,
	0, 73, 74, 26, 0, 0, 0, 0, 0, 52,
	53, 75, 62, 63, 64, 65, 66, 67, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 78, 119,
	117, 118, 0, 114, 72, 15, 0, 33, 839, 58,
	0, 50, 0, 0, 0, 55, 54, 56, 57, 70,
	100, 88, 89, 69, 45, 93, 94, 36, 0, 116,
	0, 28, 0, 0, 0, 113, 27, 19, 18, 0,
	20, 0, 31, 0, 32, 0, 0, 21, 0, 0,
	0, 22, 23, 35, 220, 115, 0, 24, 34, 0,
	0, 76, 0, 0, 25, 0, 30, 86, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 112, 0,
	111, 107, 108, 109, 104, 105, 0, 0, 0, 0,
	0, 0, 95, 0, 0, 0, 0, 0, 110, 106,
	0, 0, 90, 91, 92, 0, 0, 0, 0, 84,
	51, 0, 0, 0, 73, 74, 26, 0, 0, 0,
	0, 0, 52, 53, 75, 62, 63, 64, 65, 66,
	67, 68, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 78, 119, 117, 118, 0, 114, 72, 15, 0,
	33, 937, 58, 0, 50, 0, 0, 0, 55, 54,
	56, 57, 70, 100, 88, 89, 69, 45, 93, 94,
	36, 0, 116, 0, 28, 0, 0, 0, 113, 27,
	19, 18, 0, 20, 0, 31, 0, 32, 0, 0,
	21, 0, 0, 0, 22, 23, 35, 220, 115, 0,
	24, 34, 0, 0, 76, 0, 0, 25, 0, 30,
	86, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 112, 0, 111, 107, 108, 109, 104, 105, 0,
	0, 0, 0, 0, 0, 95, 0, 0, 0, 0,
	0, 110, 106, 0, 0, 90, 91, 92, 0, 0,
	0, 0, 84, 51, 0, 0, 0, 73, 74, 26,
	0, 0, 0, 0, 0, 52, 53, 75, 62, 63,
	64, 65, 66, 67, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 78, 119, 117, 118, 0, 114,
	72, 15, 0, 33, 728, 58, 0, 50, 0, 0,
	0, 55, 54, 56, 57, 70, 100, 88, 89, 69,
	45, 93, 94, 36, 0, 116, 0, 28, 0, 0,
	0, 113, 27, 19, 18, 0, 20, 0, 31, 0,
	32, 0, 0, 21, 0, 0, 0, 22, 23, 35,
	220, 115, 0, 24, 34, 0, 0, 76, 0, 0,
	25, 0, 30, 86, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 112, 0, 111, 107, 108, 109,
	104, 105, 0, 0, 0, 0, 0, 0, 95, 0,
	0, 0, 0, 0, 110, 106, 0, 0, 90, 91,
	92, 0, 0, 0, 0, 84, 51, 0, 0, 0,
	73, 74, 26, 0, 0, 0, 0, 0, 52, 53,
	75, 62, 63, 64, 65, 66, 67, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 78, 119, 117,
	118, 0, 114, 72, 15, 0, 33, 713, 58, 0,
	50, 0, 0, 0, 55, 54, 56, 57, 70, 100,
	88, 89, 69, 45, 93, 94, 36, 0, 116, 0,
	28, 0, 0, 0, 113, 27, 19, 18, 0, 20,
	0, 31, 0, 32, 0, 0, 21, 0, 0, 0,
	22, 23, 35, 220, 115, 0, 24, 34, 0, 0,
	76, 0, 0, 25, 0, 30, 86, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 112, 0, 111,
	107, 108, 109, 104, 105, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 110, 106, 0,
	0, 90, 91, 92, 0, 0, 0, 0, 84, 51,
	0, 0, 0, 73, 74, 26, 0, 0, 0, 0,
	0, 52, 53, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	78, 119, 117, 118, 0, 114, 72, 15, 0, 33,
	696, 58, 0, 50, 0, 0, 0, 55, 54, 56,
	57, 70, 100, 88, 89, 69, 45, 93, 94, 36,
	0, 116, 0, 28, 0, 0, 0, 113, 27, 19,
	18, 0, 20, 0, 31, 0, 32, 0, 0, 21,
	0, 0, 0, 22, 23, 35, 220, 115, 0, 24,
	34, 0, 0, 76, 0, 0, 25, 0, 30, 86,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	112, 0, 111, 107, 108, 109, 104, 105, 0, 0,
	0, 0, 0, 0, 95, 0, 0, 0, 0, 0,
	110, 106, 0, 0, 90, 91, 92, 0, 0, 0,
	0, 84, 51, 0, 0, 0, 73, 74, 26, 0,
	0, 0, 0, 0, 52, 53, 75, 62, 63, 64,
	65, 66, 67, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 78, 119, 117, 118, 0, 114, 72,
	15, 0, 33, 0, 58, 0, 50, 0, 0, 0,
	55, 54, 56, 57, 70, 100, 134, 135, 145, 146,
	0, 0, 974, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 180, 181, 182, 183, 184, 172, 173, 174,
	201, 175, 176, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 0, 192, 190, 191, 187, 188,
	0, 0, 179, 185, 186, 193, 194, 196, 195, 197,
	198, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 200, 199, 0, 0, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 147, 148, 149, 177,
	178, 127, 128, 129, 130, 131, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 135, 145, 146, 0, 202, 974, 119, 117, 118,
	133, 0, 0, 0, 1001, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 180, 181, 182, 183,
	184, 172, 173, 174, 201, 175, 176, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 0, 192,
	190, 191, 187, 188, 0, 0, 179, 185, 186, 193,
	194, 196, 195, 197, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 200, 199, 0,
	0, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	147, 148, 149, 177, 178, 127, 128, 129, 130, 131,
	132, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 135, 145, 146, 0, 202,
	123, 119, 117, 118, 133, 0, 0, 0, 965, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	180, 181, 182, 183, 184, 172, 173, 174, 201, 175,
	176, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 192, 190, 191, 187, 188, 0, 0,
	179, 185, 186, 193, 194, 196, 195, 197, 198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 200, 199, 0, 0, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 147, 148, 149, 177, 178, 127,
	128, 129, 130, 131, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 135,
	145, 146, 0, 202, 962, 0, 125, 0, 133, 0,
	0, 122, 0, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 180, 181, 182, 183, 184, 172,
	173, 174, 201, 175, 176, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 0, 192, 190, 191,
	187, 188, 0, 0, 179, 185, 186, 193, 194, 196,
	195, 197, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 200, 199, 0, 0, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 147, 148,
	149, 177, 178, 127, 128, 129, 130, 131, 132, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 135,
	145, 146, 0, 0, 1020, 0, 0, 202, 0, 0,
	0, 0, 133, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 180, 181, 182, 183, 184, 172,
	173, 174, 201, 175, 176, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 0, 192, 190, 191,
	187, 188, 0, 0, 179, 185, 186, 193, 194, 196,
	195, 197, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 200, 199, 0, 0, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 147, 148,
	149, 177, 178, 861, 862, 863, 860, 859, 858, 88,
	89, 69, 0, 93, 94, 226, 0, 116, 0, 0,
	0, 0, 0, 113, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 115, 0, 0, 0, 202, 0, 76,
	0, 0, 864, 0, 0, 86, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 112, 0, 111, 107,
	108, 109, 104, 105, 0, 0, 0, 0, 0, 0,
	95, 0, 0, 0, 0, 0, 110, 106, 0, 320,
	90, 91, 92, 0, 0, 0, 0, 84, 51, 0,
	0, 0, 73, 74, 225, 0, 0, 0, 0, 0,
	52, 53, 75, 62, 63, 64, 65, 66, 67, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 78,
	119, 117, 118, 0, 114, 72, 0, 0, 0, 0,
	58, 0, 50, 0, 0, 319, 55, 54, 56, 57,
	70, 100, 88, 89, 69, 0, 93, 94, 226, 0,
	116, 0, 0, 0, 0, 0, 113, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 803, 0, 0, 0, 220, 115, 0, 0, 0,
	0, 0, 76, 0, 0, 0, 0, 0, 86, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 112,
	0, 111, 107, 108, 109, 104, 105, 0, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 110,
	106, 0, 0, 90, 91, 92, 0, 0, 0, 0,
	84, 51, 0, 0, 0, 73, 74, 225, 0, 0,
	0, 0, 0, 52, 53, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 89, 69, 0, 93, 94, 226, 0,
	116, 85, 78, 119, 117, 118, 113, 114, 72, 0,
	0, 0, 0, 58, 0, 50, 0, 0, 0, 55,
	54, 56, 57, 70, 100, 220, 115, 0, 0, 0,
	0, 0, 76, 0, 0, 0, 0, 0, 86, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 112,
	0, 111, 107, 108, 109, 104, 105, 0, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 110,
	106, 0, 0, 90, 91, 92, 0, 0, 0, 0,
	84, 51, 0, 0, 0, 73, 74, 225, 0, 0,
	0, 0, 0, 52, 53, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 89, 69, 0, 93, 94, 226, 520,
	116, 85, 78, 119, 117, 118, 113, 114, 72, 0,
	0, 0, 0, 58, 0, 50, 0, 0, 639, 55,
	54, 56, 57, 70, 100, 220, 115, 0, 0, 0,
	0, 0, 76, 0, 0, 0, 0, 0, 86, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 112,
	0, 111, 107, 108, 109, 104, 105, 0, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 110,
	106, 0, 0, 90, 91, 92, 0, 0, 0, 0,
	84, 51, 0, 0, 0, 73, 74, 225, 0, 0,
	0, 0, 0, 52, 53, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 89, 69, 0, 93, 94, 226, 0,
	116, 85, 78, 119, 117, 118, 113, 114, 72, 0,
	0, 0, 0, 58, 0, 50, 0, 0, 0, 55,
	54, 56, 57, 70, 100, 220, 115, 0, 0, 0,
	0, 0, 76, 0, 0, 0, 0, 0, 86, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 112,
	0, 111, 107, 108, 109, 104, 105, 0, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 110,
	106, 0, 0, 90, 91, 92, 0, 0, 0, 0,
	84, 51, 0, 0, 0, 73, 74, 225, 0, 0,
	0, 0, 0, 52, 53, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 89, 69, 0, 93, 94, 226, 0,
	116, 85, 78, 119, 117, 118, 113, 114, 72, 0,
	0, 0, 0, 58, 0, 50, 0, 0, 479, 55,
	54, 56, 57, 70, 100, 220, 115, 0, 0, 0,
	0, 0, 76, 0, 0, 0, 0, 0, 86, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 112,
	0, 111, 107, 108, 109, 104, 105, 0, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 110,
	106, 0, 0, 90, 91, 92, 0, 0, 0, 0,
	84, 51, 0, 0, 0, 73, 74, 225, 0, 0,
	0, 0, 0, 52, 53, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 89, 69, 0, 93, 94, 226, 0,
	116, 85, 78, 119, 117, 118, 113, 114, 72, 0,
	0, 0, 457, 58, 0, 50, 0, 0, 0, 55,
	54, 56, 57, 70, 100, 220, 115, 0, 0, 0,
	0, 0, 76, 0, 0, 0, 0, 0, 86, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 112,
	0, 111, 107, 108, 109, 104, 105, 0, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 110,
	106, 0, 0, 90, 91, 92, 0, 0, 0, 0,
	84, 51, 0, 0, 0, 73, 74, 225, 0, 0,
	0, 0, 0, 52, 53, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 244, 243, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 78, 119, 117, 118, 0, 114, 72, 268,
	265, 0, 0, 58, 0, 50, 0, 0, 0, 55,
	54, 56, 57, 70, 100, 240, 241, 252, 255, 256,
	257, 258, 259, 260, 262, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 899, 898, 242,
	244, 243, 266, 267, 246, 250, 249, 0, 0, 0,
	0, 0, 245, 0, 247, 251, 253, 254, 261, 263,
	248, 0, 0, 0, 0, 0, 268, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 241, 252, 255, 256, 257, 258, 259,
	260, 262, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 244, 243, 266, 0, 0, 0, 0, 797,
	267, 246, 250, 249, 0, 0, 0, 0, 0, 245,
	0, 247, 251, 253, 254, 261, 263, 248, 268, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 241, 252, 255, 256, 257,
	258, 259, 260, 262, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 244, 243, 266, 0, 0, 762,
	0, 0, 267, 246, 250, 249, 0, 0, 0, 0,
	0, 245, 0, 247, 251, 253, 254, 261, 263, 248,
	268, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 241, 252, 255,
	256, 257, 258, 259, 260, 262, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 740, 242, 244,
	243, 266, 0, 0, 267, 246, 250, 249, 0, 0,
	0, 0, 0, 245, 0, 247, 251, 253, 254, 261,
	263, 248, 0, 0, 0, 268, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 241, 252, 255, 256, 257, 258, 259, 260,
	262, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 242, 244, 243, 266, 0, 0, 267,
	246, 250, 249, 0, 0, 0, 0, 0, 245, 0,
	247, 251, 253, 254, 261, 263, 248, 0, 0, 0,
	268, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 241, 252, 255,
	256, 257, 258, 259, 260, 262, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 729, 242, 244,
	243, 266, 0, 0, 267, 246, 250, 249, 0, 0,
	0, 0, 0, 245, 0, 247, 251, 253, 254, 261,
	263, 248, 0, 0, 0, 268, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 241, 252, 255, 256, 257, 258, 259, 260,
	262, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 244, 243, 266, 0, 0, 725, 0, 0, 267,
	246, 250, 249, 0, 0, 0, 0, 0, 245, 0,
	247, 251, 253, 254, 261, 263, 248, 268, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 241, 252, 255, 256, 257, 258,
	259, 260, 262, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 244, 243, 266, 0, 0, 724, 0,
	0, 267, 246, 250, 249, 0, 0, 0, 0, 0,
	245, 0, 247, 251, 253, 254, 261, 263, 248, 268,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 241, 252, 255, 256,
	257, 258, 259, 260, 262, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 674, 242, 244, 243,
	266, 0, 0, 267, 246, 250, 249, 0, 0, 0,
	0, 0, 245, 0, 247, 251, 253, 254, 261, 263,
	248, 0, 0, 0, 268, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 241, 252, 255, 256, 257, 258, 259, 260, 262,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	244, 243, 266, 0, 0, 673, 0, 0, 267, 246,
	250, 249, 0, 0, 0, 0, 0, 245, 0, 247,
	251, 253, 254, 261, 263, 248, 268, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 241, 252, 255, 256, 257, 258, 259,
	260, 262, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 244, 243, 266, 0, 0, 672, 0, 0,
	267, 246, 250, 249, 0, 0, 0, 0, 0, 245,
	0, 247, 251, 253, 254, 261, 263, 248, 268, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 241, 252, 255, 256, 257,
	258, 259, 260, 262, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 244, 243, 266, 0, 0, 669,
	0, 0, 267, 246, 250, 249, 0, 0, 0, 0,
	0, 245, 0, 247, 251, 253, 254, 261, 263, 248,
	268, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 241, 252, 255,
	256, 257, 258, 259, 260, 262, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 244, 243, 266, 0,
	0, 667, 0, 0, 267, 246, 250, 249, 0, 0,
	0, 0, 0, 245, 0, 247, 251, 253, 254, 261,
	263, 248, 268, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 241,
	252, 255, 256, 257, 258, 259, 260, 262, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 652,
	242, 244, 243, 266, 0, 0, 267, 246, 250, 249,
	0, 0, 0, 0, 0, 245, 0, 247, 251, 253,
	254, 261, 263, 248, 0, 0, 0, 268, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 241, 252, 255, 256, 257, 258,
	259, 260, 262, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 244, 243, 266, 0, 0, 642, 0,
	0, 267, 246, 250, 249, 0, 0, 0, 0, 0,
	245, 0, 247, 251, 253, 254, 261, 263, 248, 268,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 241, 252, 255, 256,
	257, 258, 259, 260, 262, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 631, 242, 244, 243,
	266, 615, 0, 267, 246, 250, 249, 0, 0, 0,
	0, 0, 245, 0, 247, 251, 253, 254, 261, 263,
	248, 0, 0, 0, 268, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 241, 252, 255, 256, 257, 258, 259, 260, 262,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 244, 243, 266, 0, 629, 0, 0, 267, 246,
	250, 249, 0, 0, 0, 0, 0, 245, 0, 247,
	251, 253, 254, 261, 263, 248, 0, 268, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 241, 252, 255, 256, 257, 258,
	259, 260, 262, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 244, 243, 266, 0, 0, 0, 0,
	0, 267, 246, 250, 249, 0, 0, 0, 0, 0,
	245, 0, 247, 251, 253, 254, 261, 263, 248, 268,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 241, 252, 255, 256,
	257, 258, 259, 260, 262, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 244, 243, 266, 611, 0,
	0, 0, 0, 267, 246, 250, 249, 0, 0, 0,
	0, 0, 245, 0, 247, 251, 253, 254, 261, 263,
	248, 268, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 241, 252,
	255, 256, 257, 258, 259, 260, 262, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 244, 243, 266,
	0, 0, 606, 0, 0, 267, 246, 250, 249, 0,
	0, 0, 0, 0, 245, 0, 247, 251, 253, 254,
	261, 263, 248, 268, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	241, 252, 255, 256, 257, 258, 259, 260, 262, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 244,
	243, 266, 0, 0, 602, 0, 0, 267, 246, 250,
	249, 0, 0, 0, 0, 0, 245, 0, 247, 251,
	253, 254, 261, 263, 248, 268, 265, 0, 0, 0,
	0, 504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 241, 252, 255, 256, 257, 258, 259, 260,
	262, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 244, 243, 266, 0, 0, 510, 0, 0, 267,
	246, 250, 249, 0, 0, 0, 0, 0, 245, 0,
	247, 251, 253, 254, 261, 263, 248, 268, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 241, 252, 255, 256, 257, 258,
	259, 260, 262, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 244, 243, 266, 0, 0, 0, 0,
	0, 267, 246, 250, 249, 0, 0, 0, 0, 0,
	245, 0, 247, 251, 253, 254, 261, 263, 248, 268,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 241, 252, 255, 256,
	257, 258, 259, 260, 262, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 242, 244,
	243, 266, 0, 267, 246, 250, 249, 0, 0, 0,
	0, 0, 245, 0, 247, 251, 253, 254, 261, 263,
	248, 0, 0, 0, 0, 268, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 241, 252, 255, 256, 257, 258, 259, 260,
	262, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 243, 266, 0, 0, 0, 0, 0, 267,
	246, 250, 249, 0, 0, 0, 0, 0, 245, 0,
	247, 251, 253, 254, 261, 263, 248, 268, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 241, 252, 255, 256, 257, 258,
	259, 260, 262, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 266, 0, 0, 0, 0,
	0, 267, 246, 250, 249, 0, 0, 0, 0, 0,
	245, 0, 247, 251, 253, 254, 261, 263, 248, 268,
	265, 0, 0, 0, 0, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 241, 252, 255, 256,
	257, 258, 259, 260, 262, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 267, 246, 250, 249, 0, 0, 0,
	0, 0, 245, 0, 247, 251, 253, 254, 261, 263,
	248, 268, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 241, 252,
	255, 256, 257, 258, 259, 260, 262, 264, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 246, 250, 249, 0,
	0, 0, 268, 265, 245, 0, 247, 251, 253, 254,
	261, 263, 248, 0, 0, 0, 0, 0, 240, 241,
	252, 255, 256, 257, 258, 259, 260, 262, 264, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 246, 250, 249,
	0, 0, 0, 268, 265, 245, 0, 247, 251, 253,
	254, 261, 263, 248, 0, 0, 0, 0, 0, 240,
	241, 252, 255, 256, 257, 258, 259, 260, 262, 264,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 250,
	249, 0, 0, 0, 0, 265, 245, 0, 247, 251,
	253, 254, 261, 263, 248, 0, 0, 0, 0, 0,
	0, 241, 252, 255, 256, 257, 258, 259, 260, 262,
	264, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	250, 249, 0, 0, 0, 0, 265, 245, 0, 247,
	251, 253, 254, 261, 263, 248, 0, 0, 0, 0,
	0, 0, 0, 252, 255, 256, 257, 258, 259, 260,
	262, 264, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 250, 249, 0, 0, 0, 0, 265, 245, 0,
	247, 251, 253, 254, 261, 263, 248, 0, 0, 0,
	0, 0, 0, 0, 252, 255, 256, 257, 258, 259,
	260, 262, 264, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 246, 250, 249, 0, 0, 0, 0, 265, 0,
	0, 247, 251, 253, 254, 261, 263, 248, 0, 0,
	0, 0, 0, 0, 265, 252, 255, 256, 257, 258,
	259, 260, 262, 264, 0, 0, 0, 0, 0, 0,
	0, 252, 255, 256, 257, 258, 259, 260, 262, 264,
	0, 0, 246, 250, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 253, 254, 261, 263, 248, 250,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	253, 254, 261, 263, 248, 226, 0, 116, 0, 0,
	0, 0, 0, 113, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 116,
	0, 0, 0, 0, 0, 113, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 709, 112, 0, 111, 107,
	108, 109, 104, 105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 106, 112, 0,
	111, 107, 108, 109, 104, 105, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 110, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 117, 118, 0, 114, 0, 0, 0, 0, 0,
	325, 0, 710, 0, 0, 708, 0, 0, 0, 0,
	0, 100, 119, 117, 118, 0, 114, 0, 0, 0,
	0, 0, 325, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 100,
}
var yyPact = [...]int{

	-1000, -1000, 1861, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	238, 5580, 546, -1000, 741, -1000, -1000, -1000, 236, 5149,
	235, 233, 6758, 6758, 6758, 178, 588, 6758, -1000, 8244,
	229, 226, 224, -1000, 385, 761, 251, 41, 615, 516,
	554, 651, 1065, -1000, -1000, 214, -1000, -1000, 304, 194,
	5945, 6758, 9007, 9007, 6758, 6758, 6758, 6758, 6758, -1000,
	-1000, -1000, 6758, 6758, 6758, 6758, 6758, 6758, 6758, 193,
	6758, -1000, 973, 6758, 6758, 6758, 6758, -1000, 551, -1000,
	-1000, 495, -1000, -1000, 536, 188, 187, 184, 6758, 6758,
	183, 6758, 6758, -1000, -1000, 825, -1000, -1000, -1000, -1000,
	141, 196, 196, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 181, -1000, 971, 41, -1000, -1000, -1000, -1000,
	152, 275, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 35, 580, 584, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 30, -1000, -28, 4006, 6758, 647, 522,
	41, 6758, 6758, 333, 8310, 522, -1000, 329, 326, 22,
	-1000, -1000, 13, -1000, -1000, -29, 7, -1000, 8310, -1000,
	6758, 6758, 6758, 6758, 6758, 6758, 6758, 6758, 6758, 6758,
	6758, 6758, 6758, 6758, 6758, 6758, 6758, 6758, 6758, 6758,
	6758, 6758, 6758, 6758, 6758, 6758, 630, 6628, 6758, 9007,
	6758, 741, -1000, 325, -1000, 756, -1000, -1000, 41, -1000,
	574, 755, 752, 481, -1000, -1000, -1000, 209, 5149, 206,
	322, 248, 6498, 6758, 6758, 6758, 6758, 6758, 6758, 6758,
	6758, 6758, 6758, 6758, 6758, 6758, -1000, -1000, 6758, 6758,
	6758, 121, 121, 5945, 71, 27, -1000, -1000, 8182, 9007,
	6758, 205, -1000, -1000, -1000, 6758, -1000, -1000, -1000, 5945,
	-1000, 418, 418, 477, 418, 8120, 418, 418, 418, 418,
	418, 418, 418, -1000, 6758, 418, 397, 738, 691, -1000,
	223, 6368, 9007, 8547, 8496, 8547, 8310, 26, -1000, 196,
	-1000, 1711, 196, -1000, 488, 279, 6758, 562, -1000, 396,
	6758, 6758, 6758, 8310, 8310, 6758, 8310, 8310, 877, -1000,
	744, 6758, -1000, -1000, 1055, -1000, 5945, 581, 738, 204,
	319, -1000, -1000, 1548, -1000, 580, 2, 563, 381, 750,
	-1000, 741, 6758, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 202, 8058, 201, -1000, 315, 25, 8310, 7996, -1000,
	-1000, -1000, -1000, 178, -1000, 666, 6758, -1000, 6758, 8649,
	8700, 8372, 8547, 8434, 8751, 8818, 8802, 298, 44, 44,
	477, 418, 477, 477, 34, 34, 38, 38, 38, 38,
	357, 357, 357, 357, 38, -1000, 7934, 6758, 8598, 24,
	-1000, -1000, 7872, -2, 3841, -1000, 200, 198, 731, 728,
	376, 552, -1000, 6758, -1000, 6758, -1000, -1000, 8547, 6758,
	8547, 8547, 8547, 8547, 8547, 8547, 8547, 8547, 8547, 8547,
	8547, 8547, 8547, 7809, 69, 7744, 196, -1000, 6758, -1000,
	196, 135, -42, 5945, 6238, -1000, 8310, 5945, 7682, 68,
	-1000, 133, -1000, -1000, -1000, -1000, 225, 715, 679, 7617,
	73, 342, 6758, 551, 66, -1000, 196, -1000, -1000, -1000,
	6758, -1000, -1000, -1000, -1000, 178, 6758, 6758, 121, 121,
	178, 7555, 196, 7493, 20, -1000, 8310, 7431, 7369, -1000,
	-1000, 7304, -1000, 19, -1000, 8310, 6758, 244, -1000, -1000,
	194, 6758, 193, 6758, 6758, 6758, 522, 536, 188, 187,
	184, 6758, 6758, 183, 6758, 6758, 41, 181, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 41, 132, -1000, 396,
	-1000, 1383, -1000, -1000, 636, -1000, 375, 793, -1000, -1000,
	8310, 130, 4986, 6758, 6758, 6758, 177, -1000, -1000, 8310,
	-1000, 6758, 8598, 129, 9007, 8985, 4823, -1000, 396, 396,
	170, 547, -1000, 371, 529, 7242, 7180, 3676, 8818, 4660,
	-1000, -1000, -1000, 7115, -1000, -43, 6758, -1000, 8310, 9007,
	167, 128, -1000, -1000, -1000, 63, -1000, -1000, 660, -1000,
	-1000, -1000, -1000, -1000, 6758, -1000, 8547, -1000, -1000, -1000,
	7050, -1000, 50, 6985, -1000, -1000, -1000, -1000, 547, 370,
	127, 6758, -1000, -1000, -1000, 126, 1218, 8310, 6758, -1000,
	123, 18, -1000, -1000, -1000, 544, 341, 15, -1000, -1000,
	544, 631, -1000, 313, -1000, -1000, -1000, 6923, 312, 8310,
	-1000, 311, 310, 8598, 309, -1000, 120, 540, 9007, 164,
	5945, -1000, -1000, -1000, 711, 119, 118, 396, 538, 529,
	406, -1000, -17, -1000, 5149, 243, 303, -1000, -1000, -1000,
	6758, 8547, -1000, 5945, -43, -1000, -1000, 6861, -1000, -1000,
	-1000, 538, 6108, -1000, -1000, -1000, -1000, 8310, 240, -1000,
	396, 833, 336, 14, -1000, 301, -1000, 793, -1000, 674,
	-1000, 3511, 299, 6758, 392, -1000, 854, -1000, -1000, 4334,
	8985, -1000, 5945, 46, 3346, -1000, -1000, 369, 160, 240,
	589, 117, 364, 529, -1000, -1000, -1000, 763, 529, 390,
	529, -1000, -1000, -1000, 4171, 8547, 114, 305, 359, 189,
	3, -1000, 527, -4, -5, 8310, -1000, 725, -1000, -1000,
	43, -1000, -1000, -1000, -1000, -1000, -19, 887, -20, -1000,
	-1000, -1000, 294, -1000, 544, -1000, -1000, -1000, 291, -1000,
	111, -1000, 6758, 180, 383, 290, 826, -1000, -1000, -1000,
	84, -1000, 83, -1000, 286, -1000, 529, 358, 240, 157,
	240, -1000, -17, 896, 677, 1025, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -21, -1000, -1000, 4171, -43,
	-1000, -1000, -1000, -1000, 6108, 6758, 520, -1000, -1000, 6758,
	518, -1000, -24, 1338, -25, -1000, -1000, 471, -1000, 887,
	-1000, 887, -1000, -1000, -1000, 4497, 6794, -1000, -1000, -1000,
	-1000, -1000, 269, 3181, 4334, -1000, -1000, 3016, 110, -1000,
	-1000, 352, 186, 349, 373, 666, 5714, 41, -1000, -1000,
	-1000, 5446, 372, -1000, 8310, 6758, 8310, 6758, 1338, -1000,
	1338, 666, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4171,
	-1000, 266, -1000, -1000, 78, 529, -1000, 2851, -1000, 77,
	-8, -1000, -1000, 666, -1000, -1000, -6, -1000, -50, -11,
	-1000, -53, -1000, -1000, 5714, -1000, 5312, -1000, 258, 255,
	599, 627, 484, -1000, -1000, -1000, 8310, 8310, -1000, -1000,
	-56, 2686, 4171, -1000, 345, -1000, -1000, 2521, -1000, -1000,
	186, -1000, 2356, -1000, 666, -1000, 6758, -1000, 5714, 6758,
	122, -1000, -1000, -1000, -1000, 529, 5844, 5714, 6758, 182,
	-1000, -1000, -1000, -1000, -1000, 8310, -1000, 8310, 396, -17,
	-1000, -1000, 5714, -1000, 8310, -1000, 2191, -1000, -1000, 75,
	-1000, -1000, 240, 261, -1000, -1000, -1000, 2026, -1000,
}
var yyPgo = [...]int{

	0, 1053, 1047, 11, 14, 38, 8, 91, 61, 1045,
	35, 18, 705, 1040, 60, 103, 95, 79, 44, 40,
	81, 1039, 26, 1037, 0, 96, 10, 1035, 1030, 1028,
	42, 84, 31, 36, 1026, 1025, 78, 1023, 80, 1017,
	2, 1014, 1013, 1005, 998, 15, 72, 996, 995, 73,
	994, 110, 83, 987, 984, 33, 976, 972, 12, 971,
	968, 62, 54, 48, 46, 966, 964, 963, 961, 960,
	951, 164, 947, 943, 941, 13, 933, 111, 932, 931,
	925, 922, 920, 919, 917, 913, 909, 34, 85, 21,
	908, 904, 900, 898, 124, 5, 115, 896, 118, 891,
	890, 45, 37, 882, 9, 881, 3, 877, 20, 869,
	29, 94, 117, 53, 861, 856, 850, 16, 848, 845,
	112, 87, 841, 41, 32, 835, 834, 831, 829, 827,
	17, 826, 823, 818, 810, 808, 70, 804, 97, 4,
	30, 643, 799, 39, 798, 105, 7, 27, 795, 788,
	784, 779, 778, 748, 1, 19, 701, 6,
}
var yyR1 = [...]int{

	0, 156, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 6,
	6, 7, 7, 10, 10, 9, 9, 8, 145, 145,
	97, 97, 97, 96, 96, 98, 98, 14, 14, 14,
	14, 136, 136, 137, 137, 138, 155, 155, 154, 154,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 12, 12, 86, 86, 93, 92,
	92, 91, 90, 90, 94, 94, 87, 87, 89, 89,
	88, 88, 77, 77, 146, 146, 21, 21, 21, 21,
	21, 21, 21, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 133, 133, 134, 74,
	74, 29, 29, 122, 122, 30, 16, 16, 1, 1,
	2, 2, 153, 153, 152, 152, 111, 111, 17, 18,
	19, 123, 123, 125, 125, 124, 124, 140, 140, 140,
	140, 118, 118, 117, 117, 28, 28, 115, 115, 115,
	115, 143, 143, 143, 11, 11, 119, 119, 85, 85,
	76, 76, 99, 99, 80, 80, 26, 26, 27, 27,
	150, 150, 135, 135, 135, 135, 32, 32, 103, 103,
	103, 104, 104, 108, 108, 108, 105, 105, 109, 109,
	107, 107, 107, 110, 110, 106, 106, 112, 112, 78,
	78, 33, 33, 33, 35, 35, 36, 37, 37, 38,
	38, 147, 147, 39, 39, 39, 39, 75, 75, 114,
	114, 114, 144, 144, 40, 40, 41, 42, 42, 42,
	42, 44, 44, 43, 116, 116, 149, 149, 148, 148,
	151, 151, 139, 139, 139, 139, 139, 139, 139, 79,
	79, 45, 45, 84, 84, 95, 20, 73, 73, 46,
	22, 22, 23, 23, 48, 47, 47, 127, 128, 128,
	129, 131, 131, 132, 132, 130, 130, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 121, 121, 120, 120,
	157, 3, 3, 126, 126, 81, 82, 82, 58, 58,
	59, 59, 59, 50, 50, 49, 49, 51, 51, 51,
	56, 56, 142, 142, 142, 113, 113, 64, 64, 64,
	64, 57, 57, 57, 57, 57, 57, 57, 57, 63,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 24,
	24, 25, 25, 65, 65, 65, 65, 66, 66, 67,
	67, 67, 68, 68, 68, 68, 68, 68, 31, 31,
	31, 31, 52, 52, 52, 69, 70, 70, 70, 70,
	70, 70, 70, 60, 60, 60, 61, 61, 61, 55,
	101, 101, 54, 54, 100, 100, 100, 100, 100, 100,
	100, 141, 141, 141, 141, 71, 71, 71, 71, 71,
	71, 71, 71, 72, 72, 72, 72, 53, 53, 53,
	53, 53, 53, 53, 83, 83, 102,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 3, 4, 1, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 5, 4,
	3, 4, 1, 3, 1, 1, 8, 7, 2, 3,
	1, 2, 3, 1, 3, 1, 1, 2, 1, 3,
	1, 3, 3, 1, 2, 0, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 1, 5, 7, 9, 5,
	3, 3, 3, 3, 3, 3, 1, 2, 6, 7,
	9, 5, 1, 6, 3, 2, 0, 2, 8, 1,
	3, 0, 4, 1, 3, 1, 10, 11, 0, 1,
	0, 1, 0, 1, 1, 2, 1, 1, 9, 6,
	7, 0, 2, 0, 2, 0, 2, 1, 2, 4,
	3, 1, 4, 1, 4, 1, 4, 3, 4, 4,
	5, 0, 5, 4, 1, 1, 1, 4, 5, 6,
	1, 3, 6, 7, 3, 6, 2, 0, 1, 3,
	0, 2, 1, 1, 1, 1, 6, 8, 1, 2,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	1, 2, 1, 0, 1, 0, 2, 2, 4, 1,
	3, 1, 2, 3, 3, 1, 1, 3, 1, 1,
	3, 2, 0, 5, 5, 10, 3, 1, 3, 1,
	2, 3, 1, 2, 2, 2, 3, 3, 3, 4,
	3, 1, 1, 3, 1, 3, 1, 1, 0, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 4, 3, 1, 4, 4, 3, 1, 1,
	0, 1, 3, 1, 8, 3, 2, 2, 3, 1,
	7, 0, 2, 1, 3, 3, 4, 6, 5, 3,
	4, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 5, 4, 3, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 3, 2, 1,
	2, 4, 2, 2, 1, 2, 1, 2, 11, 9,
	0, 0, 1, 0, 4, 2, 3, 1, 1, 2,
	2, 4, 2, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 1, 1, 0, 1, 4, 3, 1,
	3, 1, 1, 3, 2, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 3, 1, 1, 1, 1, 1,
	3, 1, 1, 4, 4, 4, 4, 1, 1, 1,
	3, 3, 1, 4, 2, 3, 1, 4, 4, 3,
	3, 3, 3, 1, 3, 1, 1, 3, 1, 1,
	0, 1, 3, 1, 3, 1, 4, 2, 2, 6,
	4, 2, 2, 1, 2, 1, 4, 3, 3, 3,
	3, 6, 3, 1, 1, 2, 1, 5, 4, 2,
	2, 4, 2, 2, 1, 3, 1,
}
var yyChk = [...]int{

	-1000, -156, -145, -13, 2, -15, -16, -17, -18, -19,
	52, 80, 45, -86, 39, 151, -76, -80, 21, 20,
	23, 30, 34, 35, 40, 47, 99, 19, 14, -24,
	49, 25, 27, 153, 41, 36, 10, 37, -155, -154,
	-85, -99, -31, -34, -138, 7, -68, -69, -66, 60,
	157, 93, 105, 106, 162, 161, 163, 164, 155, -47,
	-129, -53, 108, 109, 110, 111, 112, 113, 114, 6,
	165, -57, 150, 97, 98, 107, 44, -121, 144, -52,
	-59, -50, -65, -62, 92, 143, 50, 51, 4, 5,
	85, 86, 87, 8, 9, 75, -64, -63, -120, -8,
	166, -14, -67, -49, 67, 68, 82, 64, 65, 66,
	81, 63, 61, 18, 149, 38, 12, 146, 147, 145,
	155, -97, 151, 10, -5, 146, -4, 99, 100, 101,
	102, 103, 104, 148, 4, 5, 85, 86, 87, 88,
	89, 90, 91, 92, 93, 6, 7, 94, 95, 96,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 41, 42, 43, 44, 45, 46, 47, 48, 49,
	50, 51, 35, 36, 37, 39, 40, 97, 98, 60,
	30, 31, 32, 33, 34, 61, 62, 56, 57, 80,
	54, 55, 53, 63, 64, 66, 65, 67, 68, 82,
	81, 38, 143, -94, -12, -98, -88, 37, 39, -96,
	147, 10, 146, -77, -20, 10, -146, 155, -15, -155,
	37, 155, 155, -25, -24, 99, 10, -25, -25, -35,
	-36, -52, -37, -121, -38, -8, -73, -46, -24, 153,
	131, 132, 88, 90, 89, 168, 160, 170, 176, 162,
	161, 171, 133, 172, 173, 134, 135, 136, 137, 138,
	139, 174, 140, 175, 141, 116, 91, 159, 115, 155,
	155, 155, 151, 10, 154, -3, 160, -138, 37, -120,
	-153, 54, 55, -152, -111, 100, 101, 94, 95, 94,
	96, 95, 169, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 105, 106, 155, 157,
	151, 58, 142, 155, -55, -54, -101, -100, -24, 160,
	84, 60, -24, -31, -62, 155, -64, -63, 99, 157,
	-31, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -24, -24, -56, 155, -24, -142, 17, -141, -71,
	-8, 77, 78, -24, -24, -24, -24, -137, -136, -49,
	-14, 79, -51, -48, -49, -70, 155, -154, -52, -155,
	155, 155, 155, -24, -24, 155, -24, -24, 17, 76,
	-141, 151, -52, -112, 155, -112, 155, -141, 17, -3,
	156, 153, 151, -145, 153, 167, -94, -98, 83, 29,
	153, 167, 169, -21, 152, 2, -15, -16, -17, -18,
	-19, 52, -24, 21, -3, -22, -23, -24, -24, 153,
	153, 153, 153, 167, 153, 167, 169, 153, 167, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -24, -24, -24, -24, -51, -24, 154, -24, -122,
	-30, -31, -24, -77, -146, 153, 10, -157, -3, 53,
	10, 10, -111, 155, -15, 155, 153, 154, -24, 160,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -24, -24, -24, -25, -24, -61, 10, 151, -52,
	-61, -55, 158, 167, 59, -31, -24, 155, -24, -55,
	156, -25, 150, -71, -71, 17, 157, 58, 142, -24,
	11, -31, 59, 167, -10, -112, -60, -7, -52, -6,
	151, 10, -5, -113, -112, 79, 157, 151, 58, 142,
	79, -24, 53, -24, -83, -102, -24, -24, -24, 76,
	76, -24, 156, -78, -33, -24, 84, -7, 10, -5,
	60, 93, 6, 97, 98, 44, 99, 92, 143, 50,
	51, 4, 5, 85, 86, 87, 37, 61, 63, 64,
	66, 65, 67, 68, 82, 81, 38, -55, 149, 155,
	153, -145, 152, -88, -98, 153, 83, 151, 10, -20,
	-24, 155, 156, 155, 153, 167, 156, -36, -38, -24,
	-46, 154, -24, -10, 167, 29, 156, 152, 155, 155,
	10, 10, 151, -125, 56, -24, -24, -146, -24, 156,
	158, 152, -112, -24, -112, 156, 169, -101, -24, 160,
	60, -55, 156, 158, 156, -72, 10, 13, 161, -8,
	10, 10, 152, 152, 157, 152, -24, -136, 158, -112,
	-24, -52, -25, -24, -61, -61, -52, 156, -113, 156,
	-10, 167, 156, 156, 152, -10, 167, -24, 154, 156,
	-26, -27, -32, -154, 152, 151, -93, -92, -87, -89,
	-12, -96, -157, 156, -119, -15, 154, -24, -22, -24,
	-115, 151, 154, -24, 156, -30, -140, -31, 160, 60,
	157, -28, -15, 154, -133, -26, -26, 155, -123, 56,
	-147, 151, -75, -14, 156, 156, 96, -15, 154, 152,
	169, -24, -31, 155, 156, 158, 13, -24, 152, 158,
	152, -123, 151, 156, -102, 156, -33, -24, 156, -10,
	167, -150, -91, -90, -89, 152, -10, 167, -89, 29,
	153, -146, 156, 153, -143, 153, -143, 153, 153, 156,
	59, -31, 155, -55, -146, -29, -134, 43, 42, 156,
	156, -26, -124, 57, -14, 152, -39, -154, 45, -147,
	167, -15, 154, 153, -146, -24, -55, 158, -124, -131,
	-132, -130, -127, 33, -128, -24, -106, 154, -32, -135,
	-110, 104, 103, 102, 148, -107, -108, 159, -109, 61,
	62, -14, 152, -10, 167, 153, -87, 10, 22, 153,
	-22, 152, 32, 33, -143, 31, -143, -117, -15, 154,
	-140, -31, -55, 158, 28, 151, 155, -106, -126, 45,
	156, 151, -75, -149, -148, -151, 48, -139, 104, 103,
	102, 99, 100, 101, 148, -75, 152, -14, -146, 156,
	152, 151, 152, -10, 167, 59, -10, 167, -10, 167,
	-157, -103, -104, 159, -105, -108, 99, -1, 160, 168,
	-108, 168, 153, -89, 153, 156, -24, -11, 154, 153,
	152, 153, 31, -146, 156, 156, 153, -146, -74, -14,
	151, -106, 155, -106, -147, -110, 39, 37, -139, -114,
	153, 151, -147, -130, -24, 59, -24, 59, 168, -104,
	168, -2, 84, -108, -108, -118, -15, 154, -11, -146,
	153, 26, -117, 152, -9, 168, -8, -146, 151, -81,
	-82, -58, -8, 160, 151, 152, -79, -45, -8, -84,
	-95, -6, 10, -5, -3, 152, -144, -40, -41, -42,
	-43, -44, -14, -6, 10, 152, -24, -24, -104, -104,
	-8, -146, -146, 153, 156, -14, 152, -146, 156, -10,
	167, -8, -146, 153, 167, -157, 169, 153, 167, 169,
	-6, 152, -40, 153, 153, 46, 29, 79, 169, 24,
	151, 152, -58, 152, -45, -24, -95, -24, 155, -75,
	10, -4, -139, -6, -24, 153, -146, -157, -157, -26,
	-6, 152, 156, -106, -116, 153, 151, -146, 152,
}
var yyDef = [...]int{

	89, -2, -2, 88, 110, 111, 112, 113, 114, 115,
	0, 0, 0, 122, 0, 145, 154, 155, 0, 0,
	0, 0, 481, 481, 481, 0, 445, 0, 166, 0,
	0, 0, 0, 172, 0, 0, 97, 431, 109, 192,
	230, 0, -2, 480, 106, 0, -2, 499, 0, 0,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 406, 0, 0, 0, 0, 0, 0, 0, 450,
	0, 416, 452, 0, 419, 0, 0, 424, 0, 492,
	497, 0, -2, -2, 108, 0, 0, 0, 0, 0,
	0, 0, 0, 461, 462, 0, -2, -2, 426, 502,
	0, -2, 0, 443, 471, 472, 473, 474, 475, 476,
	477, 478, 0, 459, 0, 431, 87, 98, 99, 100,
	0, 0, 89, 90, 91, 92, 71, 72, 73, 74,
	75, 76, 77, 78, 2, 3, 4, 5, 6, 7,
	8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
	18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
	28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
	38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
	48, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 140, 135, 124, 125, 95,
	96, 93, 94, 0, 143, 0, -2, 0, 0, 0,
	431, 330, 0, 0, 482, 445, 97, 0, 0, 0,
	275, 276, 0, 425, 278, 279, 0, 328, 329, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 175, 430, 432, 107, 431, 427,
	0, 0, 0, 193, 194, 196, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 367, 0, 481,
	0, 0, 0, 520, 0, 519, 523, 521, 525, 0,
	0, 0, 351, -2, 488, 0, -2, 486, 445, 520,
	-2, 386, 387, 388, 389, 0, 407, 408, 409, 410,
	411, 412, 413, 414, 481, 415, 0, 453, 454, 533,
	535, 0, 0, 418, 420, 422, 423, 83, 103, 101,
	446, 0, 455, 336, 447, 448, 0, 0, 506, 109,
	0, 0, 0, 549, 550, 0, 552, 553, 0, 464,
	0, 0, 504, 440, 0, 442, 520, 0, 0, 0,
	0, 117, 89, -2, 120, 0, 0, 140, 0, 0,
	123, 0, 0, 144, 153, 146, 147, 148, 149, 150,
	151, 0, 0, 0, 430, 0, 331, 333, 0, 160,
	161, 162, 163, 0, 164, 0, 0, 165, 0, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 385, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 399, 0, 0, 405, 83,
	183, -2, 0, 0, -2, 174, 0, 0, 430, 0,
	0, 203, 195, 0, 231, 0, 234, 145, 349, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 0, 500, 516, 0, 518,
	501, 0, 458, 520, 0, -2, 528, 520, 0, 0,
	-2, 0, 417, 534, 531, 532, 0, 0, 0, 0,
	0, 483, 0, 84, 0, 102, 0, 469, -2, 513,
	0, -2, -2, 335, 456, 0, 481, 0, 0, 0,
	0, 0, 455, 0, 83, 554, 556, 0, 0, 463,
	465, 0, 267, 83, 269, 271, 0, 0, -2, 82,
	47, 12, -2, 45, -2, 32, -2, -2, 70, 38,
	39, 2, 3, 4, 5, 6, -2, 53, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 460, -2,
	116, -2, 119, 134, 140, 121, 0, 0, 141, 142,
	430, 0, 0, 0, 330, 0, 0, 274, 277, 280,
	327, 0, 404, 0, 84, 0, 0, 176, -2, -2,
	0, 201, 282, 0, 0, 0, 0, -2, 350, 0,
	493, 494, 495, 0, 496, 0, 0, 522, 524, 0,
	0, 0, -2, 458, 451, 0, 543, 544, 0, 546,
	537, 538, 539, 540, 0, 542, 421, 104, 105, 441,
	0, 511, 0, 0, 509, 510, 512, 449, 201, 0,
	0, 84, 548, 551, 503, 0, 84, 272, 0, 457,
	0, 83, 238, 240, 118, 0, 0, 83, 130, 136,
	0, 138, 326, 0, 156, 226, 145, 0, 0, 332,
	159, 221, 221, 403, 0, 184, 0, -2, 0, 0,
	520, 171, 215, 145, 181, 0, 0, -2, 205, 0,
	108, 282, 204, 287, 0, 0, 0, 228, 145, 517,
	0, 348, -2, 520, 530, 536, 545, 0, 514, 507,
	508, 205, 341, 547, 555, 268, 270, 273, 265, 236,
	-2, 263, 0, 83, 133, 0, 128, 84, 137, 0,
	152, -2, 0, 330, 0, 221, 0, 221, 168, 0,
	0, -2, 520, 0, -2, 173, 177, 0, 0, 265,
	433, 0, 0, 0, 202, 199, 281, 308, 0, 108,
	0, 229, 145, 235, -2, 347, 0, 0, 0, 0,
	83, 343, 0, 83, 83, 339, 430, 0, 239, 241,
	188, 242, 243, 244, 245, 264, 260, 0, 262, 253,
	254, 255, 0, 131, 84, 127, 129, 139, 0, 157,
	0, 217, 0, 0, 0, 0, 0, 169, 213, 145,
	0, -2, 0, -2, 0, 145, 0, 0, 265, 0,
	265, 282, 206, 263, 0, -2, 307, 310, 312, 313,
	314, 315, 316, 317, 318, 0, 200, 288, -2, 529,
	541, 282, 340, 342, 84, 0, 0, 84, 337, 84,
	0, 266, 248, 0, 250, 251, 252, 190, 189, 0,
	261, 0, 126, 132, 227, 0, 0, 145, 224, 225,
	218, 219, 0, -2, 0, 209, 216, -2, 85, 179,
	145, 0, 0, 0, 108, 0, 0, 431, 311, 286,
	289, 0, 108, 344, 345, 0, 338, 0, 0, 249,
	0, 0, 191, 258, 259, 158, 211, 145, 145, -2,
	220, 0, 170, 182, 0, 0, 86, -2, 145, 0,
	83, 437, 438, 0, 145, 198, 0, 320, 430, 0,
	324, 0, 79, 80, 0, 290, 0, 292, 0, 0,
	302, 0, 0, 301, -2, 334, 346, 429, 256, 257,
	246, -2, -2, 214, 0, 180, 186, -2, 434, 435,
	84, 439, -2, 283, 0, 321, 0, 284, 0, 0,
	0, 291, 293, 294, 295, 0, 0, 0, 0, 0,
	145, 428, 436, 187, 319, 430, 323, 430, -2, 296,
	297, 298, 300, 303, 247, 212, -2, 322, 325, 0,
	299, 178, 265, 0, 285, 304, 145, -2, 305,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 163, 149, 3, 166, 173, 160, 3,
	155, 156, 171, 162, 167, 161, 176, 172, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 154, 153,
	174, 169, 175, 159, 165, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 157, 3, 158, 170, 3, 150, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 151, 168, 152, 164,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

// line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yylex.(*Parser).currentToken.Value = nil

			yylex.(*Parser).rootNode = &ast.Root{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].list),
				Stmts:    yyDollar[1].list,
				EndTkn:   yylex.(*Parser).currentToken,
			}
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:333
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:333
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:333
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:333
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:334
		{
			yyVAL.token = yyDollar[1].token
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:334
		{
			yyVAL.token = yyDollar[1].token
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:334
		{
			yyVAL.token = yyDollar[1].token
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:338
		{
			yyVAL.token = yyDollar[1].token
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:339
		{
			yyVAL.token = yyDollar[1].token
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:343
		{
			yyVAL.token = yyDollar[1].token
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:344
		{
			yyVAL.token = yyDollar[1].token
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:348
		{
			yyVAL.token = nil
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:349
		{
			yyVAL.token = yyDollar[1].token
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:353
		{
			yyVAL.token = nil
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:354
		{
			yyVAL.token = yyDollar[1].token
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:358
		{
			yyVAL.token = yyDollar[1].token
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:362
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:367
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:371
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:372
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:373
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:377
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:378
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:382
		{
			yyVAL.node = yyDollar[1].node
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:383
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameFullyQualified(yyDollar[1].token)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:387
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:388
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:389
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameFullyQualified(yyDollar[1].token)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:390
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameRelative(yyDollar[1].token)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:394
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttribute(yyDollar[1].node, nil)
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:395
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttribute(yyDollar[1].node, yyDollar[2].node)
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:399
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:400
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:405
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttributeGroup(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token, yyDollar[4].token)
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:409
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:410
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 108:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:414
		{
			yyVAL.list = nil
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:415
		{
			yyVAL.list = yyDollar[1].list
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:419
		{
			yyVAL.node = nil
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:420
		{
			yyVAL.node = yyDollar[1].node
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:421
		{
			yyVAL.node = yyDollar[1].node
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:422
		{
			yyVAL.node = yyDollar[1].node
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:423
		{
			yyVAL.node = yyDollar[1].node
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:424
		{
			yyVAL.node = yyDollar[1].node
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:426
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:436
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, yyDollar[2].node, nil, nil, nil, yyDollar[3].token)
		}
	case 118:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:438
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token, yyDollar[4].list, yyDollar[5].token, nil)
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:440
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, nil, yyDollar[2].token, yyDollar[3].list, yyDollar[4].token, nil)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:443
		{
			yyVAL.node = yylex.(*Parser).builder.NewUseList(yyDollar[1].token, nil, yyDollar[2].node, yyDollar[3].token)
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:445
		{
			yyVAL.node = yylex.(*Parser).builder.NewUseList(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token)
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:447
		{
			yyVAL.node = yyDollar[1].node
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:450
		{
			yyVAL.node = &ast.StmtConstList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ConstTkn:      yyDollar[1].token,
				Consts:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:462
		{
			yyVAL.token = yyDollar[1].token
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:463
		{
			yyVAL.token = yyDollar[1].token
		}
	case 126:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:468
		{
			yyVAL.node = yylex.(*Parser).builder.NewGroupUseList(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token, yyDollar[8].token)
		}
	case 127:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:470
		{
			yyVAL.node = yylex.(*Parser).builder.NewGroupUseList(yyDollar[1].token, nil, yyDollar[2].node, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].token, yyDollar[7].token)
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:475
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:480
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:482
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:487
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:492
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:494
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:498
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:499
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:503
		{
			yyVAL.node = yyDollar[1].node
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:504
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.Type = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
			decl.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
			yyVAL.node = yyDollar[2].node
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:513
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, nil, nil)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:514
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].token)
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:518
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, nil, nil)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:519
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].token)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:523
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:524
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:528
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:533
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:537
		{
			yyVAL.node = nil
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:538
		{
			yyVAL.node = yyDollar[1].node
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:539
		{
			yyVAL.node = yyDollar[1].node
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:540
		{
			yyVAL.node = yyDollar[1].node
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:541
		{
			yyVAL.node = yyDollar[1].node
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:542
		{
			yyVAL.node = yyDollar[1].node
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:544
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:556
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:565
		{
			yyVAL.node = yyDollar[1].node
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:569
		{
			yyVAL.node = yyDollar[1].node
		}
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:573
		{
			yyDollar[5].node.(*ast.StmtWhile).WhileTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtWhile).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtWhile).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtWhile).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtWhile).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:583
		{
			yyVAL.node = &ast.StmtDo{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				DoTkn:               yyDollar[1].token,
				Stmt:                yyDollar[2].node,
				WhileTkn:            yyDollar[3].token,
				OpenParenthesisTkn:  yyDollar[4].token,
				Cond:                yyDollar[5].node,
				CloseParenthesisTkn: yyDollar[6].token,
				SemiColonTkn:        yyDollar[7].token,
			}
		}
	case 158:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:596
		{
			yyDollar[9].node.(*ast.StmtFor).ForTkn = yyDollar[1].token
			yyDollar[9].node.(*ast.StmtFor).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[9].node.(*ast.StmtFor).Init = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).InitSeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).InitSemiColonTkn = yyDollar[4].token
			yyDollar[9].node.(*ast.StmtFor).Cond = yyDollar[5].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).CondSeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CondSemiColonTkn = yyDollar[6].token
			yyDollar[9].node.(*ast.StmtFor).Loop = yyDollar[7].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).LoopSeparatorTkns = yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CloseParenthesisTkn = yyDollar[8].token
			yyDollar[9].node.(*ast.StmtFor).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			yyVAL.node = yyDollar[9].node
		}
	case 159:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:613
		{
			yyDollar[5].node.(*ast.StmtSwitch).SwitchTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtSwitch).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtSwitch).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtSwitch).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtSwitch).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:623
		{
			yyVAL.node = &ast.StmtBreak{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				BreakTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:632
		{
			yyVAL.node = &ast.StmtContinue{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ContinueTkn:  yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:641
		{
			yyVAL.node = &ast.StmtReturn{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ReturnTkn:    yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:650
		{
			yyDollar[2].node.(*ast.StmtGlobal).GlobalTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtGlobal).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtGlobal).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:658
		{
			yyDollar[2].node.(*ast.StmtStatic).StaticTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtStatic).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtStatic).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:666
		{
			yyDollar[2].node.(*ast.StmtEcho).EchoTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtEcho).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtEcho).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:674
		{
			yyVAL.node = &ast.StmtInlineHtml{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				InlineHtmlTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:682
		{
			yyVAL.node = yylex.(*Parser).builder.NewExpressionStmt(yyDollar[1].node, yyDollar[2].token)
		}
	case 168:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:686
		{
			yyDollar[3].node.(*ast.StmtUnset).UnsetTkn = yyDollar[1].token
			yyDollar[3].node.(*ast.StmtUnset).OpenParenthesisTkn = yyDollar[2].token
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[4].token)
			}
			yyDollar[3].node.(*ast.StmtUnset).CloseParenthesisTkn = yyDollar[5].token
			yyDollar[3].node.(*ast.StmtUnset).SemiColonTkn = yyDollar[6].token
			yyDollar[3].node.(*ast.StmtUnset).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			yyVAL.node = yyDollar[3].node
		}
	case 169:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:699
		{
			foreach := yyDollar[7].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[7].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Var = yyDollar[5].node
			foreach.CloseParenthesisTkn = yyDollar[6].token

			if val, ok := yyDollar[5].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 170:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:718
		{
			foreach := yyDollar[9].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Key = yyDollar[5].node
			foreach.DoubleArrowTkn = yyDollar[6].token
			foreach.Var = yyDollar[7].node
			foreach.CloseParenthesisTkn = yyDollar[8].token

			if val, ok := yyDollar[7].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 171:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:739
		{
			yyDollar[5].node.(*ast.StmtDeclare).DeclareTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtDeclare).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtDeclare).Consts = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[5].node.(*ast.StmtDeclare).SeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[5].node.(*ast.StmtDeclare).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtDeclare).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:750
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 173:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:757
		{
			yyVAL.node = yylex.(*Parser).builder.NewTry(yyDollar[1].token, yyDollar[2].token, yyDollar[3].list, yyDollar[4].token, yyDollar[5].node, yyDollar[6].node)
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:761
		{
			yyVAL.node = &ast.StmtGoto{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				GotoTkn:  yyDollar[1].token,
				Label: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:774
		{
			yyVAL.node = &ast.StmtLabel{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				ColonTkn: yyDollar[2].token,
			}
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:787
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:788
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, nil, yyDollar[2].node)
		}
	case 178:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:793
		{
			yyVAL.node = yylex.(*Parser).builder.NewCatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:797
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:798
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:803
		{
			yyVAL.node = nil
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:807
		{
			yyVAL.node = &ast.StmtFinally{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				FinallyTkn:           yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:820
		{
			yyVAL.node = &ast.StmtUnset{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:826
		{
			yyDollar[1].node.(*ast.StmtUnset).Vars = append(yyDollar[1].node.(*ast.StmtUnset).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:835
		{
			yyVAL.node = yyDollar[1].node
		}
	case 186:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:840
		{
			yyVAL.node = yylex.(*Parser).builder.NewFunction(nil, yyDollar[1].token, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].token, yyDollar[7].node, yyDollar[8].token, yyDollar[9].list, yyDollar[10].token)
		}
	case 187:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:843
		{
			yyVAL.node = yylex.(*Parser).builder.NewFunction(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token, yyDollar[8].node, yyDollar[9].token, yyDollar[10].list, yyDollar[11].token)
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:847
		{
			yyVAL.token = nil
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:848
		{
			yyVAL.token = yyDollar[1].token
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:852
		{
			yyVAL.token = nil
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:853
		{
			yyVAL.token = yyDollar[1].token
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:857
		{
			yyVAL.list = nil
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:858
		{
			yyVAL.list = yyDollar[1].list
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:862
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:863
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:867
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:868
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 198:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:874
		{
			yyVAL.node = yylex.(*Parser).builder.NewClass(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].node, yyDollar[7].token, yyDollar[8].list, yyDollar[9].token)
		}
	case 199:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:880
		{
			yyVAL.node = yylex.(*Parser).builder.NewTrait(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].list, yyDollar[6].token)
		}
	case 200:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:886
		{
			yyVAL.node = yylex.(*Parser).builder.NewInterface(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token, yyDollar[6].list, yyDollar[7].token)
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:891
		{
			yyVAL.node = nil
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:895
		{
			yyVAL.node = &ast.StmtClass{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExtendsTkn: yyDollar[1].token,
				Extends:    yyDollar[2].node,
			}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:906
		{
			yyVAL.node = nil
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:910
		{
			yyVAL.node = &ast.StmtInterface{
				Position:             yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ExtendsTkn:           yyDollar[1].token,
				Extends:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ExtendsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:922
		{
			yyVAL.node = nil
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:926
		{
			yyVAL.node = &ast.StmtClass{
				Position:                yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ImplementsTkn:           yyDollar[1].token,
				Implements:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ImplementsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:938
		{
			yyVAL.node = yyDollar[1].node
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:942
		{
			yyVAL.node = &ast.StmtForeach{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Var:          yyDollar[2].node,
			}
		}
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:950
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ListTkn:         yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:961
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:974
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:981
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForTkn:    yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:997
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 214:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1004
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForeachTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1020
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1027
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndDeclareTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1043
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Cases:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1052
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CaseSeparatorTkn:     yyDollar[2].token,
				Cases:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1062
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn:     yyDollar[1].token,
				Cases:        yyDollar[2].list,
				EndSwitchTkn: yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 220:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1072
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				ColonTkn:         yyDollar[1].token,
				CaseSeparatorTkn: yyDollar[2].token,
				Cases:            yyDollar[3].list,
				EndSwitchTkn:     yyDollar[4].token,
				SemiColonTkn:     yyDollar[5].token,
			}
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1086
		{
			yyVAL.list = nil
		}
	case 222:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1090
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtCase{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list),
				CaseTkn:          yyDollar[2].token,
				Cond:             yyDollar[3].node,
				CaseSeparatorTkn: yyDollar[4].token,
				Stmts:            yyDollar[5].list,
			})
		}
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1100
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtDefault{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				DefaultTkn:       yyDollar[2].token,
				CaseSeparatorTkn: yyDollar[3].token,
				Stmts:            yyDollar[4].list,
			})
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1111
		{
			yyVAL.token = yyDollar[1].token
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1112
		{
			yyVAL.token = yyDollar[1].token
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1117
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1124
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndWhileTkn:  yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1140
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				Stmt:                yyDollar[5].node,
			}
		}
	case 229:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1151
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				Stmt:                yyDollar[6].node,
			})

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)

			yyVAL.node = yyDollar[1].node
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1169
		{
			yyVAL.node = yyDollar[1].node
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1173
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[3].node),
				ElseTkn:  yyDollar[2].token,
				Stmt:     yyDollar[3].node,
			}

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 232:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1188
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[6].list),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				ColonTkn:            yyDollar[5].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[6].list),
					Stmts:    yyDollar[6].list,
				},
			}
		}
	case 233:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1203
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[7].list),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[7].list),
					Stmts:    yyDollar[7].list,
				},
			})

			yyVAL.node = yyDollar[1].node
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1223
		{
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[2].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[3].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			yyVAL.node = yyDollar[1].node
		}
	case 235:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1231
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				ElseTkn:  yyDollar[2].token,
				ColonTkn: yyDollar[3].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[4].list),
					Stmts:    yyDollar[4].list,
				},
			}
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[5].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[6].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token)

			yyVAL.node = yyDollar[1].node
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1250
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 237:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1251
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1255
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1256
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 240:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1260
		{
			yyVAL.list = nil
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1261
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1265
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1266
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1267
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1268
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 246:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1274
		{
			yyVAL.node = yylex.(*Parser).builder.NewParameter(yyDollar[1].list, yyDollar[2].list, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, nil, nil, false)
		}
	case 247:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1277
		{
			yyVAL.node = yylex.(*Parser).builder.NewParameter(yyDollar[1].list, yyDollar[2].list, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].token, yyDollar[8].node, true)
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1281
		{
			yyVAL.node = yyDollar[1].node
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1282
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1283
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1287
		{
			yyVAL.node = yyDollar[1].node
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1288
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1292
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1293
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1294
		{
			yyVAL.node = yyDollar[1].node
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1298
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1299
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1304
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1306
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1310
		{
			yyVAL.node = yyDollar[1].node
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1311
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1312
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1316
		{
			yyVAL.node = nil
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1317
		{
			yyVAL.node = yyDollar[1].node
		}
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1321
		{
			yyVAL.node = &ReturnType{}
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1322
		{
			yyVAL.node = yylex.(*Parser).builder.NewReturnType(yyDollar[1].token, yyDollar[2].node)
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1327
		{
			yyVAL.node = &ArgumentList{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				CloseParenthesisTkn: yyDollar[2].token,
			}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1335
		{
			argumentList := yyDollar[2].node.(*ArgumentList)
			argumentList.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			argumentList.OpenParenthesisTkn = yyDollar[1].token
			if yyDollar[3].token != nil {
				argumentList.SeparatorTkns = append(argumentList.SeparatorTkns, yyDollar[3].token)
			}
			argumentList.CloseParenthesisTkn = yyDollar[4].token

			yyVAL.node = argumentList
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1350
		{
			yyVAL.node = &ArgumentList{
				Arguments: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1356
		{
			yyDollar[1].node.(*ArgumentList).SeparatorTkns = append(yyDollar[1].node.(*ArgumentList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ArgumentList).Arguments = append(yyDollar[1].node.(*ArgumentList).Arguments, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1365
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgument(yyDollar[1].node)
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1366
		{
			yyVAL.node = yylex.(*Parser).builder.NewVariadicArgument(yyDollar[1].token, yyDollar[2].node)
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1367
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamedArgument(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node)
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1372
		{
			yyDollar[1].node.(*ast.StmtGlobal).Vars = append(yyDollar[1].node.(*ast.StmtGlobal).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1379
		{
			yyVAL.node = &ast.StmtGlobal{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1387
		{
			yyVAL.node = yyDollar[1].node
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1392
		{
			yyDollar[1].node.(*ast.StmtStatic).Vars = append(yyDollar[1].node.(*ast.StmtStatic).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1399
		{
			yyVAL.node = &ast.StmtStatic{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1408
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1422
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1440
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1441
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 283:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1446
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyList(yyDollar[1].list, yyDollar[2].list, yyDollar[3].node, yyDollar[4].node, yyDollar[5].token)
		}
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1448
		{
			yyVAL.node = yylex.(*Parser).builder.NewClassConstList(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token)
		}
	case 285:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:1450
		{
			yyVAL.node = yylex.(*Parser).builder.NewClassMethod(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].node, yyDollar[8].token, yyDollar[9].node, yyDollar[10].node)
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1452
		{
			traitUse := &ast.StmtTraitUse{
				Position:      yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				UseTkn:        yyDollar[1].token,
				Traits:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}

			switch n := yyDollar[3].node.(type) {
			case *TraitAdaptationList:
				traitUse.OpenCurlyBracketTkn = n.OpenCurlyBracketTkn
				traitUse.Adaptations = n.Adaptations
				traitUse.CloseCurlyBracketTkn = n.CloseCurlyBracketTkn
			case *ast.StmtNop:
				traitUse.SemiColonTkn = n.SemiColonTkn
			}

			yyVAL.node = traitUse
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1474
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1475
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1480
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1487
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CloseCurlyBracketTkn: yyDollar[2].token,
			}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1495
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Adaptations:          yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1506
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1507
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1512
		{
			yyDollar[1].node.(*ast.StmtTraitUsePrecedence).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1518
		{
			yyDollar[1].node.(*ast.StmtTraitUseAlias).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1527
		{
			yyVAL.node = &ast.StmtTraitUsePrecedence{
				Position:       yylex.(*Parser).builder.Pos.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].node.(*ParserSeparatedList).Items),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				InsteadofTkn:   yyDollar[2].token,
				Insteadof:      yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1542
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1557
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1572
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1588
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
			}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1602
		{
			yyVAL.node = &TraitMethodRef{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1613
		{
			yyVAL.node = yyDollar[1].node
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1620
		{
			yyVAL.node = &TraitMethodRef{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1636
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1643
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1654
		{
			yyVAL.list = yyDollar[1].list
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1655
		{
			yyVAL.list = []ast.Vertex{yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)}
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1659
		{
			yyVAL.list = nil
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1660
		{
			yyVAL.list = yyDollar[1].list
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1664
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1665
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1669
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1670
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1671
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1672
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1673
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1674
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1675
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1679
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1680
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1685
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				Expr: nil,
			}
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1700
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1718
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1719
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1724
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1740
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1756
		{
			yyDollar[1].node.(*ast.StmtEcho).Exprs = append(yyDollar[1].node.(*ast.StmtEcho).Exprs, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1763
		{
			yyVAL.node = &ast.StmtEcho{
				Exprs: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1771
		{
			yyVAL.node = yyDollar[1].node
		}
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1775
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1776
		{
			yyVAL.node = yyDollar[1].node
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1780
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1781
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 334:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1787
		{
			yyVAL.node = yylex.(*Parser).builder.NewAnonClass(yyDollar[1].list, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node, yyDollar[5].node, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1792
		{
			if yyDollar[3].node != nil {
				yyVAL.node = &ast.ExprNew{
					Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
					NewTkn:              yyDollar[1].token,
					Class:               yyDollar[2].node,
					OpenParenthesisTkn:  yyDollar[3].node.(*ArgumentList).OpenParenthesisTkn,
					Args:                yyDollar[3].node.(*ArgumentList).Arguments,
					SeparatorTkns:       yyDollar[3].node.(*ArgumentList).SeparatorTkns,
					CloseParenthesisTkn: yyDollar[3].node.(*ArgumentList).CloseParenthesisTkn,
				}
			} else {
				yyVAL.node = &ast.ExprNew{
					Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
					NewTkn:   yyDollar[1].token,
					Class:    yyDollar[2].node,
				}
			}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1812
		{
			yyVAL.node = &ast.ExprNew{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				NewTkn:   yyDollar[1].token,
				Class:    yyDollar[2].node,
			}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1823
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1827
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1828
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 340:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1833
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token)
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1838
		{
			yyVAL.node = nil
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1840
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1845
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1847
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1852
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(nil, nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1854
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(yyDollar[1].token, yyDollar[2].token, nil, yyDollar[3].token, yyDollar[4].node)
		}
	case 347:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1859
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
				EqualTkn: yyDollar[5].token,
				Expr:     yyDollar[6].node,
			}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1875
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
					OpenBracketTkn:  yyDollar[1].token,
					Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[3].token,
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1890
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1899
		{
			yyVAL.node = &ast.ExprAssignReference{
				Position:     yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Var:          yyDollar[1].node,
				EqualTkn:     yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Expr:         yyDollar[4].node,
			}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1909
		{
			yyVAL.node = &ast.ExprClone{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CloneTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1917
		{
			yyVAL.node = &ast.ExprAssignPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1926
		{
			yyVAL.node = &ast.ExprAssignMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1935
		{
			yyVAL.node = &ast.ExprAssignMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1944
		{
			yyVAL.node = &ast.ExprAssignPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1953
		{
			yyVAL.node = &ast.ExprAssignDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1962
		{
			yyVAL.node = &ast.ExprAssignConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1971
		{
			yyVAL.node = &ast.ExprAssignMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1980
		{
			yyVAL.node = &ast.ExprAssignBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1989
		{
			yyVAL.node = &ast.ExprAssignBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1998
		{
			yyVAL.node = &ast.ExprAssignBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2007
		{
			yyVAL.node = &ast.ExprAssignShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2016
		{
			yyVAL.node = &ast.ExprAssignShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2025
		{
			yyVAL.node = &ast.ExprAssignCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2034
		{
			yyVAL.node = &ast.ExprPostInc{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				IncTkn:   yyDollar[2].token,
			}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2042
		{
			yyVAL.node = &ast.ExprPreInc{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2050
		{
			yyVAL.node = &ast.ExprPostDec{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				DecTkn:   yyDollar[2].token,
			}
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2058
		{
			yyVAL.node = &ast.ExprPreDec{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DecTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2066
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2075
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2084
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2093
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2102
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2111
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2120
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2129
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2138
		{
			yyVAL.node = &ast.ExprBinaryConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2147
		{
			yyVAL.node = &ast.ExprBinaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2156
		{
			yyVAL.node = &ast.ExprBinaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2165
		{
			yyVAL.node = &ast.ExprBinaryMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2174
		{
			yyVAL.node = &ast.ExprBinaryPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2183
		{
			yyVAL.node = &ast.ExprBinaryDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2192
		{
			yyVAL.node = &ast.ExprBinaryMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2201
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2210
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2219
		{
			yyVAL.node = &ast.ExprUnaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PlusTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2227
		{
			yyVAL.node = &ast.ExprUnaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				MinusTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2235
		{
			yyVAL.node = &ast.ExprBooleanNot{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExclamationTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2243
		{
			yyVAL.node = &ast.ExprBitwiseNot{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				TildaTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2251
		{
			yyVAL.node = &ast.ExprBinaryIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2260
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2269
		{
			yyVAL.node = &ast.ExprBinaryEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2278
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2287
		{
			yyVAL.node = &ast.ExprBinarySmaller{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2296
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2305
		{
			yyVAL.node = &ast.ExprBinaryGreater{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2314
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2323
		{
			yyVAL.node = &ast.ExprBinarySpaceship{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2332
		{
			yyVAL.node = &ast.ExprInstanceOf{
				Position:      yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Expr:          yyDollar[1].node,
				InstanceOfTkn: yyDollar[2].token,
				Class:         yyDollar[3].node,
			}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2341
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2350
		{
			yyVAL.node = yyDollar[1].node
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2354
		{
			yyVAL.node = yyDollar[1].node
		}
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:2358
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[5].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				IfTrue:      yyDollar[3].node,
				ColonTkn:    yyDollar[4].token,
				IfFalse:     yyDollar[5].node,
			}
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2369
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				ColonTkn:    yyDollar[3].token,
				IfFalse:     yyDollar[4].node,
			}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2379
		{
			yyVAL.node = &ast.ExprBinaryCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2388
		{
			yyVAL.node = yyDollar[1].node
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2392
		{
			yyVAL.node = &ast.ExprCastInt{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2400
		{
			yyVAL.node = &ast.ExprCastDouble{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2408
		{
			yyVAL.node = &ast.ExprCastString{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2416
		{
			yyVAL.node = &ast.ExprCastArray{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2424
		{
			yyVAL.node = &ast.ExprCastObject{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2432
		{
			yyVAL.node = &ast.ExprCastBool{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2440
		{
			yyVAL.node = &ast.ExprCastUnset{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2448
		{
			exit := &ast.ExprExit{
				ExitTkn: yyDollar[1].token,
			}

			if yyDollar[2].node == nil {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token)
			} else {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				exit.OpenParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).OpenParenthesisTkn
				exit.Expr = yyDollar[2].node.(*ast.ExprBrackets).Expr
				exit.CloseParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).CloseParenthesisTkn
			}

			yyVAL.node = exit
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2465
		{
			yyVAL.node = &ast.ExprErrorSuppress{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AtTkn:    yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2473
		{
			yyVAL.node = yyDollar[1].node
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2477
		{
			yyVAL.node = &ast.ExprShellExec{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBacktickTkn:  yyDollar[1].token,
				Parts:            yyDollar[2].list,
				CloseBacktickTkn: yyDollar[3].token,
			}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2486
		{
			yyVAL.node = &ast.ExprPrint{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PrintTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2494
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				YieldTkn: yyDollar[1].token,
			}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2501
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldTkn: yyDollar[1].token,
				Val:      yyDollar[2].node,
			}
		}
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2509
		{
			yyVAL.node = &ast.ExprYield{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				YieldTkn:       yyDollar[1].token,
				Key:            yyDollar[2].node,
				DoubleArrowTkn: yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2519
		{
			yyVAL.node = &ast.ExprYieldFrom{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldFromTkn: yyDollar[1].token,
				Expr:         yyDollar[2].node,
			}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2527
		{
			yyVAL.node = yylex.(*Parser).builder.NewThrowExpr(yyDollar[1].token, yyDollar[2].node)
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2531
		{
			yyVAL.node = yyDollar[1].node
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2535
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			}

			yyVAL.node = yyDollar[2].node
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2550
		{
			yyVAL.node = yyDollar[1].node
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2552
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[2].node)
				n.AttrGroups = yyDollar[1].list
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[2].node)
				n.AttrGroups = yyDollar[1].list
			}

			yyVAL.node = yyDollar[2].node
		}
	case 428:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:2568
		{
			closure := yyDollar[7].node.(*ast.ExprClosure)

			closure.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token)
			closure.FunctionTkn = yyDollar[1].token
			closure.AmpersandTkn = yyDollar[2].token
			closure.OpenParenthesisTkn = yyDollar[4].token
			closure.Params = yyDollar[5].node.(*ParserSeparatedList).Items
			closure.SeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			closure.CloseParenthesisTkn = yyDollar[6].token
			closure.ColonTkn = yyDollar[8].node.(*ReturnType).ColonTkn
			closure.ReturnType = yyDollar[8].node.(*ReturnType).Type
			closure.OpenCurlyBracketTkn = yyDollar[9].token
			closure.Stmts = yyDollar[10].list
			closure.CloseCurlyBracketTkn = yyDollar[11].token

			yyVAL.node = closure
		}
	case 429:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:2587
		{
			yyVAL.node = &ast.ExprArrowFunction{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node),
				FnTkn:               yyDollar[1].token,
				AmpersandTkn:        yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Params:              yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[6].node.(*ReturnType).Type,
				DoubleArrowTkn:      yyDollar[8].token,
				Expr:                yyDollar[9].node,
			}
		}
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2609
		{
			yyVAL.token = nil
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2610
		{
			yyVAL.token = yyDollar[1].token
		}
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2615
		{
			yyVAL.node = &ast.ExprClosure{}
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2617
		{
			yyVAL.node = &ast.ExprClosure{
				UseTkn:                 yyDollar[1].token,
				UseOpenParenthesisTkn:  yyDollar[2].token,
				Uses:                   yyDollar[3].node.(*ParserSeparatedList).Items,
				UseSeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				UseCloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2629
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2633
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2634
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2639
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2653
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				AmpersandTkn: yyDollar[1].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						IdentifierTkn: yyDollar[2].token,
						Value:         yyDollar[2].token.Value,
					},
				},
			}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2671
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2682
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2703
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2716
		{
			yyVAL.node = yyDollar[1].node
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2717
		{
			yyVAL.node = yyDollar[1].node
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2721
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2722
		{
			yyVAL.node = yyDollar[1].node
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2726
		{
			yyVAL.node = yyDollar[1].node
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2727
		{
			yyVAL.node = yyDollar[1].node
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2728
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2732
		{
			yyVAL.node = nil
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2733
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2738
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2742
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
			}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2752
		{
			yyVAL.list = yyDollar[1].list
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2758
		{
			yyVAL.node = nil
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2759
		{
			yyVAL.node = yyDollar[1].node
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2764
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ArrayTkn:        yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2775
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2785
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2793
		{
			yyVAL.node = &ast.ScalarEncapsed{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenQuoteTkn:  yyDollar[1].token,
				Parts:         yyDollar[2].list,
				CloseQuoteTkn: yyDollar[3].token,
			}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2805
		{
			yyVAL.node = &ast.ScalarLnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2813
		{
			yyVAL.node = &ast.ScalarDnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2821
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:       yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn: yyDollar[1].token,
				Parts: []ast.Vertex{
					&ast.ScalarEncapsedStringPart{
						Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						EncapsedStrTkn: yyDollar[2].token,
						Value:          yyDollar[2].token.Value,
					},
				},
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2836
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenHeredocTkn:  yyDollar[1].token,
				CloseHeredocTkn: yyDollar[2].token,
			}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2844
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn:  yyDollar[1].token,
				Parts:           yyDollar[2].list,
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2852
		{
			yyVAL.node = yyDollar[1].node
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2853
		{
			yyVAL.node = yyDollar[1].node
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2854
		{
			yyVAL.node = yyDollar[1].node
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2859
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2874
		{
			yyVAL.node = yylex.(*Parser).builder.NewConstFetch(yyDollar[1].node)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2875
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2876
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2877
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2878
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2879
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2880
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2881
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2882
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2886
		{
			yyVAL.node = yyDollar[1].node
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2887
		{
			yyVAL.node = yyDollar[1].node
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2891
		{
			yyVAL.node = nil
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2892
		{
			yyVAL.node = yyDollar[1].node
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2896
		{
			yyVAL.node = yyDollar[1].node
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2897
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2898
		{
			yyVAL.node = yyDollar[1].node
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2899
		{
			yyVAL.node = yyDollar[1].node
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2903
		{
			yyVAL.node = yyDollar[1].node
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2904
		{
			yyVAL.node = yyDollar[1].node
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2908
		{
			yyVAL.node = yyDollar[1].node
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2909
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2910
		{
			yyVAL.node = yyDollar[1].node
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2915
		{
			yyVAL.node = yyDollar[1].node
		}
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2917
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2927
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2939
		{
			yyVAL.node = yylex.(*Parser).builder.NewMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2941
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafeMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2943
		{
			yyVAL.node = yyDollar[1].node
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2948
		{
			yyVAL.node = yyDollar[1].node
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2950
		{
			yyVAL.node = yyDollar[1].node
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2952
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2954
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2959
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2970
		{
			yyVAL.node = &ast.ExprVariable{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				DollarTkn:            yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Name:                 yyDollar[3].node,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2980
		{
			yyVAL.node = &ast.ExprVariable{
				Position:  yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DollarTkn: yyDollar[1].token,
				Name:      yyDollar[2].node,
			}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2991
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3003
		{
			yyVAL.node = yyDollar[1].node
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3007
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3017
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3029
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3033
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3037
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3046
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3057
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3058
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3059
		{
			yyVAL.node = yyDollar[1].node
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3063
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3064
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3065
		{
			yyVAL.node = yyDollar[1].node
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3070
		{
			pairList := yyDollar[1].node.(*ParserSeparatedList)
			fistPair := pairList.Items[0].(*ast.ExprArrayItem)

			if fistPair.Key == nil && fistPair.Val == nil && len(pairList.Items) == 1 {
				pairList.Items = nil
			}

			yyVAL.node = yyDollar[1].node
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3083
		{
			yyVAL.node = &ast.ExprArrayItem{}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3084
		{
			yyVAL.node = yyDollar[1].node
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3089
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3091
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3096
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val:            yyDollar[3].node,
			}
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3105
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Val:      yyDollar[1].node,
			}
		}
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3112
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				AmpersandTkn:   yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3122
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Val:          yyDollar[2].node,
			}
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3130
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:    yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				EllipsisTkn: yyDollar[1].token,
				Val:         yyDollar[2].node,
			}
		}
	case 529:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:3138
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[3].token, yyDollar[6].token),
					ListTkn:         yyDollar[3].token,
					OpenBracketTkn:  yyDollar[4].token,
					Items:           yyDollar[5].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[6].token,
				},
			}
		}
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3154
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
			}
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3171
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3175
		{
			yyVAL.list = append(
				yyDollar[1].list,
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					EncapsedStrTkn: yyDollar[2].token,
					Value:          yyDollar[2].token.Value,
				},
			)
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3186
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3190
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
				yyDollar[2].node,
			}
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3204
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3215
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3232
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3236
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3240
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name:                      yyDollar[2].node,
				CloseCurlyBracketTkn:      yyDollar[3].token,
			}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3249
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 541:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:3262
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenSquareBracketTkn:  yyDollar[3].token,
				Dim:                   yyDollar[4].node,
				CloseSquareBracketTkn: yyDollar[5].token,
				CloseCurlyBracketTkn:  yyDollar[6].token,
			}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3278
		{
			yyVAL.node = &ast.ScalarEncapsedStringBrackets{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Var:                  yyDollar[2].node,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3290
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3298
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(string(yyDollar[1].token.Value)); err == nil {
				yyVAL.node = &ast.ScalarLnumber{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					NumberTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					StringTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3315
		{
			_, err := strconv.Atoi(string(yyDollar[2].token.Value))
			isInt := err == nil

			if isInt {
				yyVAL.node = &ast.ExprUnaryMinus{
					Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn: yyDollar[1].token,
					Expr: &ast.ScalarLnumber{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						NumberTkn: yyDollar[2].token,
						Value:     yyDollar[2].token.Value,
					},
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn:  yyDollar[1].token,
					StringTkn: yyDollar[2].token,
					Value:     append([]byte("-"), yyDollar[2].token.Value...),
				}
			}
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3339
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:3353
		{
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[4].token)
			}

			yyVAL.node = &ast.ExprIsset{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				IssetTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Vars:                yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
			}
		}
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3368
		{
			yyVAL.node = &ast.ExprEmpty{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EmptyTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3378
		{
			yyVAL.node = &ast.ExprInclude{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3386
		{
			yyVAL.node = &ast.ExprIncludeOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3394
		{
			yyVAL.node = &ast.ExprEval{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EvalTkn:             yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3404
		{
			yyVAL.node = &ast.ExprRequire{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3412
		{
			yyVAL.node = &ast.ExprRequireOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3422
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3423
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3427
		{
			yyVAL.node = yyDollar[1].node
		}
	}
	goto yystack /* stack new state and value */
}
