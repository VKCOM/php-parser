// Code generated by goyacc -o internal/php8/php8.go internal/php8/php8.y. DO NOT EDIT.

// line internal/php8/php8.y:1

package php8

import __yyfmt__ "fmt"

// line internal/php8/php8.y:3

import (
	"strconv"

	"github.com/z7zmey/php-parser/pkg/ast"
	"github.com/z7zmey/php-parser/pkg/token"
)

// line internal/php8/php8.y:13
type yySymType struct {
	yys   int
	node  ast.Vertex
	token *token.Token
	list  []ast.Vertex
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_FN = 57380
const T_CONST = 57381
const T_RETURN = 57382
const T_TRY = 57383
const T_CATCH = 57384
const T_FINALLY = 57385
const T_THROW = 57386
const T_USE = 57387
const T_INSTEADOF = 57388
const T_GLOBAL = 57389
const T_VAR = 57390
const T_UNSET = 57391
const T_ISSET = 57392
const T_EMPTY = 57393
const T_HALT_COMPILER = 57394
const T_CLASS = 57395
const T_TRAIT = 57396
const T_INTERFACE = 57397
const T_EXTENDS = 57398
const T_IMPLEMENTS = 57399
const T_OBJECT_OPERATOR = 57400
const T_DOUBLE_ARROW = 57401
const T_LIST = 57402
const T_ARRAY = 57403
const T_CALLABLE = 57404
const T_CLASS_C = 57405
const T_TRAIT_C = 57406
const T_METHOD_C = 57407
const T_FUNC_C = 57408
const T_LINE = 57409
const T_FILE = 57410
const T_COMMENT = 57411
const T_DOC_COMMENT = 57412
const T_OPEN_TAG = 57413
const T_OPEN_TAG_WITH_ECHO = 57414
const T_CLOSE_TAG = 57415
const T_WHITESPACE = 57416
const T_START_HEREDOC = 57417
const T_END_HEREDOC = 57418
const T_DOLLAR_OPEN_CURLY_BRACES = 57419
const T_CURLY_OPEN = 57420
const T_PAAMAYIM_NEKUDOTAYIM = 57421
const T_NAMESPACE = 57422
const T_NS_C = 57423
const T_DIR = 57424
const T_NS_SEPARATOR = 57425
const T_ELLIPSIS = 57426
const T_EVAL = 57427
const T_REQUIRE = 57428
const T_REQUIRE_ONCE = 57429
const T_LOGICAL_OR = 57430
const T_LOGICAL_XOR = 57431
const T_LOGICAL_AND = 57432
const T_INSTANCEOF = 57433
const T_NEW = 57434
const T_CLONE = 57435
const T_ELSEIF = 57436
const T_ELSE = 57437
const T_ENDIF = 57438
const T_PRINT = 57439
const T_YIELD = 57440
const T_STATIC = 57441
const T_ABSTRACT = 57442
const T_FINAL = 57443
const T_PRIVATE = 57444
const T_PROTECTED = 57445
const T_PUBLIC = 57446
const T_INC = 57447
const T_DEC = 57448
const T_YIELD_FROM = 57449
const T_INT_CAST = 57450
const T_DOUBLE_CAST = 57451
const T_STRING_CAST = 57452
const T_ARRAY_CAST = 57453
const T_OBJECT_CAST = 57454
const T_BOOL_CAST = 57455
const T_UNSET_CAST = 57456
const T_COALESCE = 57457
const T_SPACESHIP = 57458
const T_NOELSE = 57459
const T_PLUS_EQUAL = 57460
const T_MINUS_EQUAL = 57461
const T_MUL_EQUAL = 57462
const T_POW_EQUAL = 57463
const T_DIV_EQUAL = 57464
const T_CONCAT_EQUAL = 57465
const T_MOD_EQUAL = 57466
const T_AND_EQUAL = 57467
const T_OR_EQUAL = 57468
const T_XOR_EQUAL = 57469
const T_SL_EQUAL = 57470
const T_SR_EQUAL = 57471
const T_COALESCE_EQUAL = 57472
const T_BOOLEAN_OR = 57473
const T_BOOLEAN_AND = 57474
const T_POW = 57475
const T_SL = 57476
const T_SR = 57477
const T_IS_IDENTICAL = 57478
const T_IS_NOT_IDENTICAL = 57479
const T_IS_EQUAL = 57480
const T_IS_NOT_EQUAL = 57481
const T_IS_SMALLER_OR_EQUAL = 57482
const T_IS_GREATER_OR_EQUAL = 57483
const T_NULLSAFE_OBJECT_OPERATOR = 57484
const T_MATCH = 57485

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_FN",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_COALESCE_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"T_NULLSAFE_OBJECT_OPERATOR",
	"T_MATCH",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

// line internal/php8/php8.y:4390

// line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	-2, 0,
	-1, 43,
	58, 455,
	79, 455,
	142, 455,
	146, 455,
	152, 455,
	-2, 450,
	-1, 47,
	150, 458,
	-2, 468,
	-1, 86,
	58, 457,
	79, 457,
	142, 457,
	146, 457,
	150, 460,
	152, 457,
	-2, 445,
	-1, 111,
	79, 418,
	-2, 447,
	-1, 236,
	58, 455,
	79, 455,
	142, 455,
	146, 455,
	152, 455,
	-2, 342,
	-1, 239,
	150, 460,
	-2, 457,
	-1, 242,
	58, 455,
	79, 455,
	142, 455,
	146, 455,
	152, 455,
	-2, 344,
	-1, 363,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 366,
	-1, 364,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 367,
	-1, 365,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 368,
	-1, 366,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 369,
	-1, 367,
	140, 0,
	141, 0,
	169, 0,
	170, 0,
	-2, 370,
	-1, 368,
	140, 0,
	141, 0,
	169, 0,
	170, 0,
	-2, 371,
	-1, 369,
	140, 0,
	141, 0,
	169, 0,
	170, 0,
	-2, 372,
	-1, 370,
	140, 0,
	141, 0,
	169, 0,
	170, 0,
	-2, 373,
	-1, 371,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 374,
	-1, 378,
	151, 170,
	162, 170,
	-2, 455,
	-1, 423,
	151, 498,
	153, 498,
	162, 498,
	-2, 455,
	-1, 428,
	58, 456,
	79, 456,
	142, 456,
	146, 456,
	150, 459,
	152, 456,
	-2, 376,
	-1, 443,
	150, 484,
	-2, 448,
	-1, 444,
	150, 486,
	-2, 475,
	-1, 525,
	150, 484,
	-2, 449,
	-1, 526,
	150, 486,
	-2, 476,
	-1, 545,
	151, 220,
	-2, 240,
	-1, 553,
	149, 80,
	-2, 87,
	-1, 557,
	149, 13,
	-2, 421,
	-1, 559,
	149, 46,
	-2, 395,
	-1, 561,
	149, 72,
	-2, 417,
	-1, 571,
	149, 65,
	-2, 433,
	-1, 572,
	149, 66,
	-2, 434,
	-1, 573,
	149, 67,
	-2, 435,
	-1, 574,
	149, 62,
	-2, 436,
	-1, 575,
	149, 64,
	-2, 437,
	-1, 576,
	149, 63,
	-2, 438,
	-1, 577,
	149, 68,
	-2, 439,
	-1, 578,
	149, 61,
	-2, 440,
	-1, 579,
	150, 405,
	-2, 42,
	-1, 580,
	150, 405,
	-2, 69,
	-1, 618,
	151, 220,
	-2, 240,
	-1, 644,
	150, 459,
	-2, 456,
	-1, 715,
	151, 190,
	-2, 455,
	-1, 723,
	151, 220,
	-2, 240,
	-1, 739,
	151, 497,
	153, 497,
	162, 497,
	-2, 455,
	-1, 754,
	151, 114,
	-2, 240,
	-1, 781,
	151, 191,
	-2, 455,
	-1, 798,
	37, 286,
	39, 286,
	-2, 283,
	-1, 812,
	94, 215,
	95, 215,
	96, 215,
	-2, 0,
	-1, 850,
	151, 190,
	-2, 455,
	-1, 852,
	151, 193,
	-2, 429,
	-1, 867,
	94, 216,
	95, 216,
	96, 216,
	-2, 0,
	-1, 937,
	31, 206,
	32, 206,
	33, 206,
	147, 206,
	-2, 0,
	-1, 969,
	29, 78,
	-2, 87,
	-1, 977,
	31, 205,
	32, 205,
	33, 205,
	147, 205,
	-2, 0,
	-1, 1005,
	151, 220,
	-2, 240,
}

const yyPrivate = 57344

const yyLast = 8368

var yyAct = [...]int{

	28, 135, 824, 675, 948, 800, 962, 625, 448, 913,
	846, 680, 916, 894, 881, 109, 819, 917, 728, 714,
	678, 131, 143, 143, 143, 227, 384, 156, 332, 323,
	696, 677, 5, 763, 695, 549, 111, 447, 538, 620,
	377, 153, 386, 327, 229, 774, 9, 414, 137, 155,
	84, 133, 231, 235, 292, 130, 243, 244, 245, 246,
	247, 152, 148, 82, 248, 249, 250, 251, 252, 253,
	254, 86, 257, 2, 527, 265, 266, 267, 268, 326,
	43, 325, 8, 324, 7, 528, 6, 78, 442, 262,
	958, 193, 282, 283, 132, 285, 286, 955, 272, 115,
	931, 737, 638, 921, 142, 920, 343, 415, 319, 115,
	930, 928, 759, 151, 757, 730, 956, 237, 237, 730,
	116, 261, 262, 262, 277, 239, 239, 145, 146, 983,
	957, 952, 120, 126, 236, 242, 615, 329, 274, 589,
	984, 334, 335, 344, 341, 953, 832, 318, 878, 316,
	876, 873, 767, 312, 754, 688, 672, 345, 342, 346,
	347, 348, 349, 350, 351, 352, 353, 354, 355, 356,
	357, 358, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 339, 373, 375, 317, 379,
	311, 115, 381, 331, 613, 305, 604, 295, 297, 340,
	421, 115, 318, 194, 312, 115, 396, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	756, 277, 411, 143, 413, 388, 852, 231, 122, 746,
	115, 392, 151, 742, 424, 274, 659, 645, 300, 426,
	302, 632, 231, 416, 648, 309, 115, 649, 315, 655,
	943, 237, 419, 420, 656, 269, 1016, 143, 110, 239,
	979, 902, 901, 435, 437, 892, 184, 427, 378, 868,
	143, 276, 856, 418, 790, 262, 262, 612, 779, 760,
	536, 539, 540, 372, 380, 541, 122, 184, 443, 525,
	752, 750, 741, 712, 546, 701, 237, 550, 139, 231,
	691, 117, 646, 262, 239, 262, 262, 262, 170, 637,
	122, 301, 115, 423, 1005, 909, 855, 240, 896, 895,
	599, 782, 740, 723, 583, 293, 298, 412, 237, 170,
	173, 174, 316, 284, 554, 5, 239, 683, 684, 825,
	110, 169, 171, 172, 608, 439, 156, 436, 950, 9,
	110, 535, 168, 167, 281, 299, 139, 434, 153, 117,
	524, 429, 169, 171, 172, 280, 279, 166, 592, 224,
	598, 81, 184, 709, 441, 611, 710, 810, 586, 110,
	139, 431, 432, 117, 532, 8, 256, 7, 226, 6,
	650, 296, 627, 618, 628, 609, 149, 629, 630, 240,
	602, 600, 545, 606, 607, 534, 425, 393, 391, 431,
	617, 432, 432, 431, 170, 221, 624, 635, 304, 189,
	303, 188, 231, 640, 622, 187, 231, 626, 619, 141,
	681, 591, 140, 594, 136, 118, 690, 168, 167, 841,
	842, 658, 160, 162, 161, 184, 661, 169, 171, 172,
	651, 643, 166, 225, 1020, 395, 1019, 223, 192, 278,
	1011, 110, 994, 222, 122, 993, 639, 978, 533, 186,
	183, 938, 531, 841, 842, 903, 898, 891, 530, 838,
	811, 778, 294, 777, 775, 158, 159, 170, 173, 174,
	175, 176, 177, 178, 180, 182, 773, 184, 770, 603,
	634, 588, 896, 895, 636, 585, 394, 382, 185, 164,
	168, 167, 338, 337, 336, 683, 684, 163, 306, 165,
	169, 171, 172, 179, 181, 166, 932, 122, 660, 890,
	887, 143, 665, 871, 139, 797, 869, 117, 799, 170,
	173, 174, 834, 657, 999, 584, 180, 182, 584, 946,
	945, 584, 689, 885, 897, 870, 278, 235, 859, 265,
	266, 268, 168, 167, 584, 854, 792, 282, 283, 749,
	285, 286, 169, 171, 172, 179, 181, 166, 669, 729,
	666, 667, 685, 623, 190, 430, 184, 828, 840, 804,
	805, 806, 803, 802, 801, 170, 417, 417, 119, 277,
	119, 122, 122, 705, 334, 707, 125, 299, 882, 122,
	662, 711, 997, 274, 115, 316, 5, 697, 529, 433,
	927, 260, 724, 202, 204, 203, 700, 271, 170, 727,
	9, 703, 706, 925, 331, 664, 128, 970, 129, 738,
	200, 201, 444, 526, 122, 720, 270, 726, 314, 151,
	195, 621, 683, 684, 713, 685, 314, 744, 626, 725,
	122, 734, 874, 121, 780, 387, 8, 390, 7, 995,
	6, 139, 139, 539, 117, 117, 314, 237, 237, 263,
	264, 765, 127, 858, 699, 239, 239, 693, 314, 550,
	885, 762, 115, 758, 378, 715, 996, 79, 80, 314,
	595, 45, 299, 122, 330, 237, 771, 788, 787, 748,
	694, 751, 149, 239, 594, 764, 594, 593, 685, 231,
	768, 697, 739, 784, 761, 743, 554, 789, 289, 290,
	597, 308, 115, 310, 769, 138, 108, 812, 813, 196,
	122, 231, 590, 863, 783, 862, 544, 653, 807, 698,
	823, 652, 791, 313, 683, 684, 776, 263, 264, 115,
	685, 809, 124, 115, 433, 115, 814, 808, 433, 829,
	291, 830, 134, 139, 334, 816, 117, 899, 841, 842,
	237, 115, 596, 231, 584, 385, 826, 764, 239, 697,
	383, 685, 199, 198, 685, 197, 685, 781, 835, 833,
	849, 191, 839, 1, 865, 864, 37, 798, 851, 847,
	115, 860, 867, 795, 594, 671, 861, 115, 796, 594,
	594, 843, 287, 845, 263, 264, 687, 543, 263, 264,
	263, 264, 685, 115, 626, 138, 108, 884, 259, 844,
	841, 842, 893, 886, 237, 542, 263, 264, 961, 258,
	900, 879, 239, 786, 888, 722, 904, 818, 122, 907,
	908, 850, 685, 804, 805, 806, 803, 802, 801, 817,
	61, 822, 820, 857, 823, 924, 389, 914, 910, 926,
	376, 288, 263, 264, 702, 128, 594, 129, 594, 922,
	923, 933, 906, 1018, 884, 708, 937, 929, 263, 264,
	919, 663, 682, 679, 417, 417, 668, 936, 883, 880,
	230, 42, 940, 41, 915, 537, 947, 16, 918, 685,
	912, 944, 934, 548, 15, 949, 971, 905, 972, 154,
	647, 847, 975, 275, 278, 48, 959, 976, 977, 968,
	884, 954, 884, 973, 47, 974, 112, 981, 982, 49,
	85, 83, 72, 594, 753, 255, 987, 228, 967, 989,
	62, 273, 60, 986, 966, 685, 985, 685, 992, 914,
	988, 965, 964, 766, 963, 794, 150, 147, 44, 968,
	980, 785, 719, 676, 333, 320, 990, 123, 307, 1002,
	3, 942, 552, 827, 755, 0, 0, 0, 967, 0,
	949, 1012, 1009, 1006, 0, 1008, 0, 0, 0, 1013,
	160, 162, 161, 184, 1003, 1010, 1004, 0, 0, 1017,
	0, 0, 1021, 0, 0, 0, 0, 1014, 0, 0,
	0, 0, 626, 0, 0, 0, 0, 186, 183, 0,
	0, 831, 685, 0, 0, 0, 0, 836, 0, 0,
	0, 0, 0, 158, 159, 170, 173, 174, 175, 176,
	177, 178, 180, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 815, 185, 164, 168, 167,
	0, 0, 0, 0, 0, 163, 0, 165, 169, 171,
	172, 179, 181, 166, 0, 0, 872, 0, 0, 875,
	877, 566, 567, 557, 467, 96, 97, 553, 0, 115,
	0, 889, 0, 0, 0, 114, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 501, 502, 503,
	504, 505, 493, 494, 579, 580, 496, 497, 482, 483,
	484, 560, 486, 487, 488, 489, 490, 564, 565, 0,
	513, 511, 512, 508, 509, 0, 0, 555, 581, 507,
	578, 574, 575, 576, 571, 572, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 0, 582, 577, 573,
	117, 551, 568, 569, 570, 460, 461, 462, 463, 562,
	556, 468, 469, 470, 558, 559, 561, 450, 451, 452,
	453, 454, 53, 54, 76, 63, 64, 65, 66, 67,
	68, 69, 219, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 0,
	563, 107, 73, 0, 0, 0, 0, 59, 547, 51,
	0, 0, 0, 56, 55, 57, 58, 71, 110, 566,
	567, 557, 467, 96, 97, 553, 0, 115, 0, 0,
	0, 205, 0, 114, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 501, 502, 503, 504, 505,
	493, 494, 579, 580, 496, 497, 482, 483, 484, 560,
	486, 487, 488, 489, 490, 564, 565, 0, 513, 511,
	512, 508, 509, 0, 0, 555, 581, 507, 578, 574,
	575, 576, 571, 572, 797, 0, 0, 799, 0, 0,
	106, 0, 0, 0, 0, 582, 577, 573, 117, 551,
	568, 569, 570, 460, 461, 462, 463, 562, 556, 468,
	469, 470, 558, 559, 561, 450, 451, 452, 453, 454,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 804, 805,
	806, 803, 802, 801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 563, 107,
	73, 0, 0, 0, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 4, 0, 91,
	92, 70, 46, 96, 97, 35, 951, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 13, 23, 33, 0, 0, 77,
	12, 0, 24, 0, 29, 89, 90, 10, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 797, 0, 0, 799, 0, 0,
	106, 0, 0, 0, 0, 11, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 804, 805,
	806, 803, 802, 801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 692, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 4, 0, 91,
	92, 70, 46, 96, 97, 35, 911, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 13, 23, 33, 0, 0, 77,
	12, 0, 24, 0, 29, 89, 90, 10, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 797, 0, 0, 799, 0, 0,
	106, 0, 0, 0, 0, 11, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 804, 805,
	806, 803, 802, 801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 587, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 4, 0, 91,
	92, 70, 46, 96, 97, 35, 866, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 13, 23, 33, 0, 0, 77,
	12, 0, 24, 0, 29, 89, 90, 10, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 797, 0, 0, 799, 0, 0,
	106, 0, 0, 0, 0, 11, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 804, 805,
	806, 803, 802, 801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 0, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 793, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 1022, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 1015, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 1001, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 1000, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 998,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 0, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 941, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 939, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 0, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 853, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 0, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 837, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 0, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 733, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 0, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 616, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 321, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 0, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 455, 456, 466,
	467, 0, 0, 446, 0, 115, 0, 0, 0, 0,
	0, 0, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 501, 502, 503, 504, 505, 493, 494,
	495, 522, 496, 497, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 513, 511, 512, 508,
	509, 0, 0, 500, 506, 507, 514, 515, 517, 516,
	518, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 510, 521, 520, 0, 0, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 468, 469, 470,
	498, 499, 449, 450, 451, 452, 453, 454, 0, 0,
	0, 91, 92, 70, 46, 96, 97, 35, 0, 115,
	0, 27, 0, 0, 0, 114, 26, 18, 17, 0,
	19, 0, 30, 0, 31, 0, 0, 20, 0, 0,
	0, 21, 22, 34, 138, 108, 523, 23, 33, 445,
	0, 77, 0, 0, 24, 0, 29, 89, 90, 0,
	0, 0, 0, 0, 110, 0, 0, 50, 113, 0,
	105, 101, 102, 103, 98, 99, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 0, 139, 104, 100,
	117, 0, 93, 94, 95, 0, 0, 0, 0, 87,
	52, 0, 0, 0, 74, 75, 25, 0, 0, 0,
	0, 0, 53, 54, 76, 63, 64, 65, 66, 67,
	68, 69, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 107, 73, 14, 0, 32, 848, 59, 0, 51,
	0, 0, 0, 56, 55, 57, 58, 71, 110, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 138, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 0, 0, 0,
	0, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 0, 0, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 0, 32, 935, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 91, 92, 70,
	46, 96, 97, 35, 0, 115, 0, 27, 0, 0,
	0, 114, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 34,
	138, 108, 0, 23, 33, 0, 0, 77, 0, 0,
	24, 0, 29, 89, 90, 0, 0, 0, 0, 0,
	0, 0, 0, 50, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 139, 104, 100, 117, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 52, 0, 0, 0,
	74, 75, 25, 0, 0, 0, 0, 0, 53, 54,
	76, 63, 64, 65, 66, 67, 68, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 73, 14,
	0, 32, 735, 59, 0, 51, 0, 0, 0, 56,
	55, 57, 58, 71, 110, 91, 92, 70, 46, 96,
	97, 35, 0, 115, 0, 27, 0, 0, 0, 114,
	26, 18, 17, 0, 19, 0, 30, 0, 31, 0,
	0, 20, 0, 0, 0, 21, 22, 34, 138, 108,
	0, 23, 33, 0, 0, 77, 0, 0, 24, 0,
	29, 89, 90, 0, 0, 0, 0, 0, 0, 0,
	0, 50, 113, 0, 105, 101, 102, 103, 98, 99,
	0, 0, 0, 0, 0, 0, 106, 0, 0, 0,
	0, 139, 104, 100, 117, 0, 93, 94, 95, 0,
	0, 0, 0, 87, 52, 0, 0, 0, 74, 75,
	25, 0, 0, 0, 0, 0, 53, 54, 76, 63,
	64, 65, 66, 67, 68, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 88, 107, 73, 14, 0, 32,
	721, 59, 0, 51, 0, 0, 0, 56, 55, 57,
	58, 71, 110, 91, 92, 70, 46, 96, 97, 35,
	0, 115, 0, 27, 0, 0, 0, 114, 26, 18,
	17, 0, 19, 0, 30, 0, 31, 0, 0, 20,
	0, 0, 0, 21, 22, 34, 138, 108, 0, 23,
	33, 0, 0, 77, 0, 0, 24, 0, 29, 89,
	90, 0, 0, 0, 0, 0, 0, 0, 0, 50,
	113, 0, 105, 101, 102, 103, 98, 99, 0, 0,
	0, 0, 0, 0, 106, 0, 0, 0, 0, 139,
	104, 100, 117, 0, 93, 94, 95, 0, 0, 0,
	0, 87, 52, 0, 0, 0, 74, 75, 25, 0,
	0, 0, 0, 0, 53, 54, 76, 63, 64, 65,
	66, 67, 68, 69, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 107, 73, 14, 0, 32, 704, 59,
	0, 51, 0, 0, 0, 56, 55, 57, 58, 71,
	110, 91, 92, 70, 46, 96, 97, 35, 0, 115,
	0, 27, 0, 0, 0, 114, 26, 18, 17, 0,
	19, 0, 30, 0, 31, 0, 0, 20, 0, 0,
	0, 21, 22, 34, 138, 108, 0, 23, 33, 0,
	0, 77, 0, 0, 24, 0, 29, 89, 90, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 113, 0,
	105, 101, 102, 103, 98, 99, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 0, 139, 104, 100,
	117, 0, 93, 94, 95, 0, 0, 0, 0, 87,
	52, 0, 0, 0, 74, 75, 25, 0, 0, 0,
	0, 0, 53, 54, 76, 63, 64, 65, 66, 67,
	68, 69, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 107, 73, 14, 0, 32, 0, 59, 0, 51,
	0, 0, 0, 56, 55, 57, 58, 71, 110, 455,
	456, 466, 467, 0, 0, 969, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 501, 502, 503, 504, 505,
	493, 494, 495, 522, 496, 497, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 513, 511,
	512, 508, 509, 0, 0, 500, 506, 507, 514, 515,
	517, 516, 518, 519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 521, 520, 117, 0,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 468,
	469, 470, 498, 499, 449, 450, 451, 452, 453, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 455, 456,
	466, 467, 0, 0, 969, 0, 0, 0, 523, 0,
	0, 0, 991, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 501, 502, 503, 504, 505, 493,
	494, 495, 522, 496, 497, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 513, 511, 512,
	508, 509, 0, 0, 500, 506, 507, 514, 515, 517,
	516, 518, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 521, 520, 117, 0, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 468, 469,
	470, 498, 499, 449, 450, 451, 452, 453, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 455, 456, 466,
	467, 0, 0, 446, 0, 0, 0, 523, 0, 0,
	0, 960, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 501, 502, 503, 504, 505, 493, 494,
	495, 522, 496, 497, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 513, 511, 512, 508,
	509, 0, 0, 500, 506, 507, 514, 515, 517, 516,
	518, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 510, 521, 520, 0, 0, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 468, 469, 470,
	498, 499, 449, 450, 451, 452, 453, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 455, 456, 466, 467, 0, 0, 1007, 0,
	0, 0, 0, 0, 0, 0, 523, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 501, 502,
	503, 504, 505, 493, 494, 495, 522, 496, 497, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 513, 511, 512, 508, 509, 0, 0, 500, 506,
	507, 514, 515, 517, 516, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 510, 521,
	520, 0, 0, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 468, 469, 470, 498, 499, 804, 805, 806,
	803, 802, 801, 91, 92, 70, 0, 96, 97, 122,
	0, 115, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 108, 0, 0,
	0, 523, 0, 77, 0, 0, 0, 0, 0, 89,
	90, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	113, 0, 105, 101, 102, 103, 98, 99, 0, 0,
	0, 0, 0, 0, 106, 0, 0, 0, 0, 139,
	104, 100, 117, 233, 93, 94, 95, 0, 0, 0,
	0, 87, 52, 0, 0, 0, 74, 75, 144, 0,
	0, 0, 0, 0, 53, 54, 76, 63, 64, 65,
	66, 67, 68, 69, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 91, 92, 70, 0, 96, 97, 122, 0,
	115, 0, 88, 107, 73, 0, 114, 0, 0, 59,
	0, 51, 0, 0, 232, 56, 55, 57, 58, 71,
	110, 821, 0, 0, 0, 138, 108, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 0, 0, 89, 90,
	0, 0, 0, 0, 0, 0, 0, 0, 50, 113,
	0, 105, 101, 102, 103, 98, 99, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 139, 104,
	100, 117, 0, 93, 94, 95, 0, 0, 0, 0,
	87, 52, 0, 0, 0, 74, 75, 144, 0, 0,
	0, 0, 0, 53, 54, 76, 63, 64, 65, 66,
	67, 68, 69, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	91, 92, 70, 0, 96, 97, 122, 0, 115, 0,
	0, 88, 107, 73, 114, 0, 0, 0, 59, 0,
	51, 0, 0, 0, 56, 55, 57, 58, 71, 110,
	0, 0, 0, 138, 108, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 89, 90, 0, 0,
	0, 0, 0, 0, 0, 0, 642, 113, 0, 105,
	101, 102, 103, 98, 99, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 139, 104, 100, 117,
	0, 93, 94, 95, 0, 0, 0, 0, 87, 52,
	0, 0, 0, 74, 75, 144, 0, 0, 0, 0,
	0, 53, 54, 76, 63, 64, 65, 66, 67, 68,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 91, 92,
	70, 0, 96, 97, 122, 438, 115, 0, 0, 88,
	107, 73, 114, 0, 0, 0, 59, 0, 51, 0,
	0, 641, 56, 55, 57, 58, 71, 110, 0, 0,
	0, 138, 108, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 0, 0, 89, 90, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 139, 104, 100, 117, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 52, 0, 0,
	0, 74, 75, 144, 0, 0, 0, 0, 0, 53,
	54, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 91, 92, 70, 0,
	96, 97, 122, 0, 115, 0, 0, 88, 107, 73,
	114, 0, 0, 0, 59, 0, 51, 0, 0, 0,
	56, 55, 57, 58, 71, 110, 0, 0, 0, 138,
	108, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 89, 90, 0, 0, 0, 0, 0, 0,
	0, 0, 50, 113, 0, 105, 101, 102, 103, 98,
	99, 0, 0, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 139, 104, 100, 117, 0, 93, 94, 95,
	0, 0, 0, 0, 87, 52, 0, 0, 0, 74,
	75, 144, 0, 0, 0, 0, 0, 53, 54, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 91, 92, 70, 0, 96, 97,
	122, 0, 115, 0, 0, 88, 107, 73, 114, 0,
	0, 0, 59, 0, 51, 0, 0, 397, 56, 55,
	57, 58, 71, 110, 0, 0, 0, 138, 108, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 0,
	89, 90, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 113, 0, 105, 101, 102, 103, 98, 99, 0,
	0, 0, 0, 0, 0, 106, 0, 0, 0, 0,
	139, 104, 100, 117, 0, 93, 94, 95, 0, 0,
	0, 0, 87, 52, 0, 0, 0, 74, 75, 144,
	0, 0, 0, 0, 0, 53, 54, 76, 63, 64,
	65, 66, 67, 68, 69, 0, 0, 122, 0, 115,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	0, 0, 91, 92, 70, 0, 96, 97, 122, 0,
	115, 0, 0, 88, 107, 73, 114, 0, 0, 374,
	59, 0, 51, 0, 0, 0, 56, 55, 57, 58,
	71, 110, 0, 0, 0, 138, 108, 717, 113, 0,
	0, 0, 77, 0, 0, 0, 0, 0, 89, 90,
	0, 0, 0, 0, 0, 0, 0, 139, 50, 113,
	117, 105, 101, 102, 103, 98, 99, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 240, 0, 139, 104,
	100, 117, 0, 93, 94, 95, 0, 0, 0, 0,
	87, 52, 0, 0, 0, 74, 75, 144, 0, 0,
	0, 0, 0, 53, 54, 76, 63, 64, 65, 66,
	67, 68, 69, 0, 0, 0, 0, 160, 162, 161,
	184, 0, 0, 0, 0, 0, 0, 238, 0, 718,
	0, 0, 716, 0, 0, 0, 0, 0, 110, 0,
	0, 88, 107, 73, 186, 183, 0, 0, 59, 0,
	51, 0, 0, 0, 56, 55, 57, 58, 71, 110,
	158, 159, 170, 173, 174, 175, 176, 177, 178, 180,
	182, 0, 0, 0, 160, 162, 161, 184, 0, 0,
	772, 0, 0, 185, 164, 168, 167, 0, 0, 0,
	0, 0, 163, 0, 165, 169, 171, 172, 179, 181,
	166, 186, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 159, 170,
	173, 174, 175, 176, 177, 178, 180, 182, 0, 0,
	0, 0, 0, 747, 160, 162, 161, 184, 0, 0,
	185, 164, 168, 167, 0, 0, 0, 0, 0, 163,
	0, 165, 169, 171, 172, 179, 181, 166, 0, 0,
	0, 186, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 159, 170,
	173, 174, 175, 176, 177, 178, 180, 182, 0, 0,
	0, 0, 0, 745, 160, 162, 161, 184, 0, 0,
	185, 164, 168, 167, 0, 0, 0, 0, 0, 163,
	0, 165, 169, 171, 172, 179, 181, 166, 0, 0,
	0, 186, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 159, 170,
	173, 174, 175, 176, 177, 178, 180, 182, 0, 0,
	0, 0, 0, 736, 160, 162, 161, 184, 0, 0,
	185, 164, 168, 167, 0, 0, 0, 0, 0, 163,
	0, 165, 169, 171, 172, 179, 181, 166, 0, 0,
	0, 186, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 159, 170,
	173, 174, 175, 176, 177, 178, 180, 182, 0, 0,
	0, 160, 162, 161, 184, 0, 0, 732, 0, 0,
	185, 164, 168, 167, 0, 0, 0, 0, 0, 163,
	0, 165, 169, 171, 172, 179, 181, 166, 186, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 159, 170, 173, 174, 175,
	176, 177, 178, 180, 182, 0, 0, 0, 160, 162,
	161, 184, 0, 0, 731, 0, 0, 185, 164, 168,
	167, 0, 0, 0, 0, 0, 163, 0, 165, 169,
	171, 172, 179, 181, 166, 186, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 159, 170, 173, 174, 175, 176, 177, 178,
	180, 182, 0, 0, 0, 0, 0, 686, 160, 162,
	161, 184, 0, 0, 185, 164, 168, 167, 0, 0,
	0, 0, 0, 163, 0, 165, 169, 171, 172, 179,
	181, 166, 0, 0, 0, 186, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 159, 170, 173, 174, 175, 176, 177, 178,
	180, 182, 0, 0, 0, 160, 162, 161, 184, 0,
	0, 674, 0, 0, 185, 164, 168, 167, 0, 0,
	0, 0, 0, 163, 0, 165, 169, 171, 172, 179,
	181, 166, 186, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 159,
	170, 173, 174, 175, 176, 177, 178, 180, 182, 0,
	0, 0, 160, 162, 161, 184, 0, 0, 673, 0,
	0, 185, 164, 168, 167, 0, 0, 0, 0, 0,
	163, 0, 165, 169, 171, 172, 179, 181, 166, 186,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 159, 170, 173, 174,
	175, 176, 177, 178, 180, 182, 0, 0, 0, 160,
	162, 161, 184, 0, 0, 670, 0, 0, 185, 164,
	168, 167, 0, 0, 0, 0, 0, 163, 0, 165,
	169, 171, 172, 179, 181, 166, 186, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 159, 170, 173, 174, 175, 176, 177,
	178, 180, 182, 0, 0, 0, 0, 0, 654, 160,
	162, 161, 184, 0, 0, 185, 164, 168, 167, 0,
	0, 0, 0, 0, 163, 0, 165, 169, 171, 172,
	179, 181, 166, 0, 0, 0, 186, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 159, 170, 173, 174, 175, 176, 177,
	178, 180, 182, 0, 0, 0, 160, 162, 161, 184,
	0, 0, 644, 0, 0, 185, 164, 168, 167, 0,
	0, 0, 0, 0, 163, 0, 165, 169, 171, 172,
	179, 181, 166, 186, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	159, 170, 173, 174, 175, 176, 177, 178, 180, 182,
	0, 0, 0, 0, 614, 633, 160, 162, 161, 184,
	0, 0, 185, 164, 168, 167, 0, 0, 0, 0,
	0, 163, 0, 165, 169, 171, 172, 179, 181, 166,
	0, 0, 0, 186, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	159, 170, 173, 174, 175, 176, 177, 178, 180, 182,
	0, 0, 0, 160, 162, 161, 184, 0, 0, 631,
	0, 0, 185, 164, 168, 167, 0, 0, 0, 0,
	0, 163, 0, 165, 169, 171, 172, 179, 181, 166,
	186, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 159, 170, 173,
	174, 175, 176, 177, 178, 180, 182, 0, 0, 0,
	160, 162, 161, 184, 0, 0, 0, 0, 0, 185,
	164, 168, 167, 0, 0, 0, 0, 0, 163, 0,
	165, 169, 171, 172, 179, 181, 166, 186, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 159, 170, 173, 174, 175, 176,
	177, 178, 180, 182, 0, 0, 0, 160, 162, 161,
	184, 610, 0, 0, 0, 0, 185, 164, 168, 167,
	0, 0, 0, 0, 0, 163, 0, 165, 169, 171,
	172, 179, 181, 166, 186, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 159, 170, 173, 174, 175, 176, 177, 178, 180,
	182, 0, 0, 0, 160, 162, 161, 184, 0, 0,
	605, 0, 0, 185, 164, 168, 167, 0, 0, 0,
	0, 0, 163, 0, 165, 169, 171, 172, 179, 181,
	166, 186, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 159, 170,
	173, 174, 175, 176, 177, 178, 180, 182, 0, 0,
	0, 160, 162, 161, 184, 0, 0, 601, 0, 0,
	185, 164, 168, 167, 0, 0, 0, 0, 0, 163,
	0, 165, 169, 171, 172, 179, 181, 166, 186, 183,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 159, 170, 173, 174, 175,
	176, 177, 178, 180, 182, 0, 0, 0, 0, 160,
	162, 161, 184, 0, 428, 0, 0, 185, 164, 168,
	167, 0, 0, 0, 0, 0, 163, 0, 165, 169,
	171, 172, 179, 181, 166, 0, 186, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 159, 170, 173, 174, 175, 176, 177,
	178, 180, 182, 0, 0, 0, 160, 162, 161, 184,
	0, 0, 0, 0, 0, 185, 164, 168, 167, 0,
	0, 0, 0, 0, 163, 0, 165, 169, 171, 172,
	179, 181, 166, 186, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	159, 170, 173, 174, 175, 176, 177, 178, 180, 182,
	0, 0, 0, 0, 0, 0, 157, 160, 162, 161,
	184, 0, 185, 164, 168, 167, 0, 0, 0, 0,
	0, 163, 0, 165, 169, 171, 172, 179, 181, 166,
	0, 0, 0, 0, 186, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 159, 170, 173, 174, 175, 176, 177, 178, 180,
	182, 0, 0, 0, 0, 162, 161, 184, 0, 0,
	0, 0, 0, 185, 164, 168, 167, 0, 0, 0,
	0, 0, 163, 0, 165, 169, 171, 172, 179, 181,
	166, 186, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 159, 170,
	173, 174, 175, 176, 177, 178, 180, 182, 0, 0,
	0, 0, 0, 161, 184, 0, 0, 0, 0, 0,
	185, 164, 168, 167, 0, 0, 0, 0, 0, 163,
	0, 165, 169, 171, 172, 179, 181, 166, 186, 183,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 159, 170, 173, 174, 175,
	176, 177, 178, 180, 182, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 185, 164, 168,
	167, 0, 0, 0, 0, 0, 163, 0, 165, 169,
	171, 172, 179, 181, 166, 0, 186, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 159, 170, 173, 174, 175, 176, 177,
	178, 180, 182, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 185, 164, 168, 167, 0,
	0, 0, 0, 0, 163, 0, 165, 169, 171, 172,
	179, 181, 166, 186, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	159, 170, 173, 174, 175, 176, 177, 178, 180, 182,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 185, 164, 168, 167, 0, 0, 0, 0,
	0, 163, 0, 165, 169, 171, 172, 179, 181, 166,
	186, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 159, 170, 173,
	174, 175, 176, 177, 178, 180, 182, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 0,
	164, 168, 167, 0, 0, 0, 0, 0, 163, 0,
	165, 169, 171, 172, 179, 181, 166, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 170, 173, 174, 175, 176, 177,
	178, 180, 182, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 0, 0, 0, 0, 164, 168, 167, 0,
	0, 0, 0, 0, 163, 0, 165, 169, 171, 172,
	179, 181, 166, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 173, 174, 175, 176, 177, 178, 180, 182, 0,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 0,
	0, 0, 164, 168, 167, 0, 0, 0, 0, 0,
	163, 0, 165, 169, 171, 172, 179, 181, 166, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 173, 174, 175,
	176, 177, 178, 180, 182, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 164, 168,
	167, 0, 0, 0, 0, 0, 0, 0, 165, 169,
	171, 172, 179, 181, 166, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 173, 174, 175, 176, 177, 178, 180,
	182, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 0, 164, 168, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 171, 172, 179, 181,
	166, 183, 0, 0, 0, 0, 122, 0, 115, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 170, 173,
	174, 175, 176, 177, 178, 180, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 171, 172, 179, 181, 166, 113, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 139, 0, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 110,
}
var yyPact = [...]int{

	-1000, -1000, 1735, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	285, 517, 599, 762, -1000, -1000, -1000, 284, 4867, 282,
	279, 6278, 6278, 6278, 189, 798, 6278, -1000, 7468, 275,
	271, 269, -1000, 438, 791, 309, 48, 597, 785, 783,
	782, 546, 529, 1107, -1000, -1000, 265, -1000, -1000, 311,
	238, 5509, 6278, 8206, 8206, 6278, 6278, 6278, 6278, 6278,
	-1000, -1000, -1000, 6278, 6278, 6278, 6278, 6278, 6278, 6278,
	236, 6278, -1000, 821, 6278, 6278, 6278, 6278, -1000, -1000,
	-1000, -1000, 103, -1000, 567, 548, -1000, 218, 216, 215,
	204, 6278, 6278, 183, 6278, 6278, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 805, 753, 48, -1000,
	179, 241, 241, 176, -1000, -1000, 524, 730, 160, 730,
	272, -1000, -1000, 370, 650, 42, 670, 730, -1000, -1000,
	-1000, -1000, 40, -1000, -56, 3655, 6278, 683, 48, 515,
	6278, 6278, 366, 7529, 698, 365, 364, 37, -1000, -1000,
	-4, -1000, -1000, -58, -5, -1000, 7529, -1000, 6278, 6278,
	6278, 6278, 6278, 6278, 6278, 6278, 6278, 6278, 6278, 6278,
	6278, 6278, 6278, 6278, 6278, 6278, 6278, 6278, 6278, 6278,
	6278, 6278, 6278, 6278, 300, 6150, 6278, 8206, 6278, 762,
	-1000, 359, -1000, 780, -1000, 775, -1000, 609, -1000, 611,
	258, 4867, 257, 358, 306, 6022, 6278, 6278, 6278, 6278,
	6278, 6278, 6278, 6278, 6278, 6278, 6278, 6278, 6278, -1000,
	-1000, 6278, 6278, 6278, 97, 97, 5509, 100, 38, -1000,
	-1000, 7411, 8206, 6278, 256, -1000, -1000, 103, 6278, -1000,
	-1000, 5509, -1000, 462, 462, 495, 462, 7353, 462, 462,
	462, 462, 462, 462, 462, -1000, 6278, 462, 440, 680,
	747, -1000, 205, 5894, 8206, 7758, 7701, 7758, 7529, 6278,
	3973, 3973, 241, -1000, 539, 326, 241, -1000, -1000, 6278,
	6278, 6278, 7529, 7529, 6278, 7529, 7529, 769, -1000, 751,
	602, 680, 252, 6278, -1000, -1000, 1097, -1000, 5509, 774,
	524, 357, 524, -1000, -1000, 1575, -1000, 353, -9, 659,
	730, -1000, 634, 554, 772, 647, -1000, -1000, 762, 6278,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 251, 7296,
	250, -1000, 351, 34, 7529, 7239, -1000, -1000, -1000, -1000,
	189, -1000, 720, 6278, -1000, 6278, 7871, 7927, 7586, 7758,
	7643, 7983, 8095, 8039, 175, 175, 175, 495, 462, 495,
	495, 281, 281, 406, 406, 406, 406, 196, 196, 196,
	196, 406, -1000, 7182, 6278, 7815, 32, -1000, -1000, 7125,
	-15, 3495, -1000, -1000, 243, 609, 594, 592, 437, -1000,
	592, 6278, -1000, 6278, -1000, -1000, 7758, 6278, 7758, 7758,
	7758, 7758, 7758, 7758, 7758, 7758, 7758, 7758, 7758, 7758,
	7758, 7068, 88, 7008, 241, -1000, 6278, -1000, 241, 158,
	-62, 5509, 5766, -1000, 7529, 5509, 6951, 84, -1000, 151,
	-1000, -1000, -1000, -1000, 234, 741, 737, 6891, 102, 396,
	6278, 83, 241, -1000, -1000, 6278, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 241, -1000, -1000, -1000, -1000, 189,
	6278, 6278, 97, 97, 189, 609, 6834, -6, -1000, 7529,
	6777, 6720, -1000, -1000, -1000, 276, 6660, -1000, -7, -1000,
	7529, 6278, 287, -1000, -1000, 238, 6278, 236, 6278, 6278,
	6278, 698, 218, 216, 215, 204, 6278, 6278, 183, 6278,
	6278, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 48,
	48, 176, 515, 149, -1000, -1000, 1415, -1000, -1000, -1000,
	541, 627, -1000, 730, 619, 848, -1000, 538, -1000, 7529,
	144, 4709, 6278, 6278, 6278, 227, -1000, -1000, 7529, -1000,
	6278, 7815, 142, 8206, 6257, 4551, -1000, 173, 276, 594,
	-1000, 592, -1000, -1000, 433, -47, -1000, 6603, 6546, 3335,
	8095, 4393, -1000, -1000, -1000, 6486, -1000, -63, 6278, -1000,
	7529, 8206, 172, 141, -1000, -1000, -1000, 80, -1000, -1000,
	712, -1000, -1000, -1000, -1000, -1000, 6278, -1000, 7758, -1000,
	-1000, 6426, -1000, -1000, 76, 6366, -1000, -1000, -1000, 594,
	423, 140, 6278, -1000, -1000, 139, -8, -1000, 65, -1000,
	-49, 693, -51, -1000, -1000, -1000, -1000, 128, 1255, 7529,
	6278, -1000, -1000, 730, 535, -10, -1000, -1000, 730, 848,
	-1000, 350, -1000, -1000, -1000, 6309, 348, 7529, -1000, 336,
	335, 7815, 333, -1000, 127, 605, 8206, 171, 5509, -1000,
	-1000, -1000, 665, 276, 123, -1000, 420, -47, 1759, -1000,
	592, 4867, 228, 332, -1000, -1000, -1000, 6278, 7758, -1000,
	5509, -63, -1000, -1000, 922, -1000, -1000, -1000, -1000, 5638,
	-1000, -1000, 190, -1000, 276, 503, -1000, 693, -1000, 693,
	-1000, -1000, 7529, -16, -1000, 730, 395, 848, -1000, -10,
	-1000, 3175, 331, 6278, 441, -1000, 808, -1000, -1000, 4077,
	6257, -1000, 5509, 73, 3015, -1000, -1000, 419, 166, 121,
	638, 412, -1000, -1000, -1000, 276, 706, 592, 764, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1599, -1000, -1000,
	-1000, -1000, 3815, 7758, 118, 389, 409, 386, -11, -1000,
	603, -12, -14, 7529, -1000, 454, -1000, 720, -1000, -1000,
	-1000, 383, 730, -16, -1000, -1000, 382, 329, -1000, 114,
	-1000, 6278, 170, 407, 328, 746, -1000, -1000, -1000, 111,
	-1000, 110, -1000, 327, -1000, 592, 190, 190, 165, -1000,
	1439, 720, 5283, 48, -43, -1000, -1000, 3815, -63, -1000,
	-1000, -1000, -1000, 5638, 6278, 574, -1000, -1000, 6278, 561,
	-1000, -52, 591, -53, -1000, -1000, -64, -1000, -1000, 379,
	-1000, -1000, 4235, 354, -1000, -1000, -1000, -1000, -1000, 323,
	2855, 4077, -1000, -1000, 2695, 87, -1000, 404, 403, 193,
	1279, -1000, -17, -1000, -67, -32, -1000, -74, 5283, -1000,
	-1000, 5154, 490, -1000, 7529, 6278, 7529, 6278, 591, -1000,
	591, 6278, -1000, -1000, -1000, -1000, -1000, 3815, -1000, 319,
	-1000, -1000, 109, 592, -1000, -1000, -1000, -22, -1000, -1000,
	720, -1000, -1000, 720, -1000, 6278, -1000, 5283, 6278, -1000,
	-1000, 5025, -1000, 317, 314, 623, 667, 533, -1000, -1000,
	-1000, 7529, 7529, -1000, -1000, 7529, 2535, 3815, -1000, 398,
	-1000, 2375, 2215, -1000, 193, -1000, -1000, 7529, -1000, 7529,
	164, -1000, -1000, -1000, -1000, 592, 5408, 5283, 312, -1000,
	-1000, -1000, -1000, -1000, -1000, 276, -47, -1000, -1000, 5283,
	-1000, -1000, 2055, 105, -1000, -1000, 190, 308, -1000, -1000,
	-1000, 1895, -1000,
}
var yyPgo = [...]int{

	0, 994, 993, 54, 8, 37, 17, 992, 15, 991,
	277, 13, 990, 36, 29, 83, 81, 79, 43, 988,
	30, 987, 55, 21, 51, 985, 28, 984, 0, 104,
	3, 983, 982, 981, 40, 80, 31, 35, 978, 977,
	62, 976, 61, 975, 6, 974, 972, 971, 964, 9,
	49, 962, 961, 50, 98, 371, 960, 957, 25, 955,
	952, 4, 951, 88, 47, 950, 71, 63, 949, 946,
	944, 935, 933, 121, 930, 929, 927, 7, 924, 94,
	923, 920, 917, 916, 915, 914, 913, 33, 34, 606,
	12, 120, 911, 910, 44, 38, 909, 14, 908, 2,
	903, 11, 902, 20, 701, 85, 74, 900, 895, 893,
	10, 891, 884, 87, 880, 42, 39, 876, 873, 872,
	871, 870, 16, 869, 857, 855, 853, 5, 749, 19,
	621, 849, 45, 848, 73, 1, 18, 818, 813, 807,
	806, 803, 26,
}
var yyR1 = [...]int{

	0, 141, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 9, 9, 8, 134, 134, 91, 91, 13,
	13, 13, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 128, 128, 19,
	19, 21, 21, 10, 10, 88, 88, 87, 87, 89,
	89, 20, 20, 23, 23, 22, 22, 79, 79, 135,
	135, 25, 25, 25, 25, 25, 25, 25, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 125, 125, 126, 76, 76, 33, 33, 114, 114,
	34, 15, 1, 1, 2, 2, 16, 16, 140, 140,
	104, 104, 17, 18, 115, 115, 117, 117, 116, 116,
	129, 129, 129, 129, 111, 111, 110, 110, 32, 32,
	108, 108, 108, 108, 132, 132, 132, 11, 11, 112,
	112, 86, 86, 78, 78, 92, 92, 82, 82, 30,
	30, 31, 31, 36, 36, 96, 96, 96, 97, 97,
	101, 101, 101, 98, 98, 102, 102, 100, 100, 100,
	103, 103, 99, 99, 105, 105, 80, 80, 37, 37,
	37, 39, 39, 40, 41, 41, 42, 42, 136, 136,
	43, 43, 43, 43, 77, 77, 107, 107, 107, 133,
	133, 44, 44, 45, 46, 46, 46, 46, 48, 48,
	47, 109, 109, 138, 138, 137, 137, 139, 139, 127,
	127, 127, 127, 127, 127, 81, 81, 49, 49, 85,
	85, 90, 24, 75, 75, 50, 26, 26, 27, 27,
	52, 51, 51, 119, 120, 120, 121, 123, 123, 124,
	124, 122, 122, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 113, 113, 142, 3, 3, 118, 118, 83,
	83, 61, 61, 62, 62, 62, 62, 53, 53, 54,
	54, 59, 59, 131, 131, 131, 106, 106, 66, 66,
	66, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 67, 67, 67,
	28, 28, 29, 29, 65, 68, 68, 68, 69, 69,
	69, 70, 70, 70, 70, 70, 70, 70, 35, 35,
	35, 35, 55, 55, 55, 71, 71, 72, 72, 72,
	72, 72, 72, 72, 63, 63, 63, 64, 64, 64,
	58, 94, 94, 57, 57, 93, 93, 93, 93, 93,
	93, 93, 130, 130, 130, 130, 73, 73, 73, 73,
	73, 73, 73, 73, 74, 74, 74, 74, 56, 56,
	56, 56, 56, 56, 56, 84, 84, 95,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 2, 0, 1, 3, 1,
	3, 2, 1, 1, 1, 1, 1, 1, 4, 3,
	5, 4, 3, 4, 3, 4, 3, 1, 1, 6,
	7, 6, 7, 0, 1, 3, 1, 3, 1, 3,
	1, 1, 2, 1, 3, 1, 2, 3, 1, 2,
	0, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	1, 5, 7, 9, 5, 3, 3, 3, 3, 3,
	3, 1, 2, 6, 7, 9, 5, 1, 6, 3,
	2, 0, 2, 8, 1, 3, 0, 4, 1, 3,
	1, 11, 0, 1, 0, 1, 9, 8, 1, 2,
	1, 1, 6, 7, 0, 2, 0, 2, 0, 2,
	1, 2, 4, 3, 1, 4, 1, 4, 1, 4,
	3, 4, 4, 5, 0, 5, 4, 1, 1, 1,
	4, 5, 6, 1, 3, 6, 7, 3, 6, 2,
	0, 1, 3, 4, 6, 1, 2, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 1, 2, 1,
	0, 1, 0, 2, 2, 4, 1, 3, 1, 2,
	3, 3, 1, 1, 3, 1, 1, 3, 2, 0,
	4, 4, 3, 10, 1, 3, 1, 2, 3, 1,
	2, 2, 2, 3, 3, 3, 4, 3, 1, 1,
	3, 1, 3, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 4, 3,
	1, 4, 4, 3, 1, 1, 0, 1, 3, 1,
	8, 3, 2, 2, 3, 1, 7, 0, 2, 1,
	3, 3, 4, 6, 5, 3, 4, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 5,
	4, 3, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 3, 2, 1, 2, 4, 2, 2,
	1, 2, 11, 9, 0, 0, 1, 0, 4, 3,
	1, 1, 2, 2, 4, 4, 2, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 0, 1, 4, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 2, 3, 3, 1, 1, 1, 3, 3,
	1, 1, 0, 1, 1, 1, 3, 1, 1, 3,
	1, 1, 4, 4, 4, 4, 4, 1, 1, 1,
	3, 3, 1, 4, 2, 3, 3, 1, 4, 4,
	3, 3, 3, 3, 1, 3, 1, 1, 3, 1,
	1, 0, 1, 3, 1, 3, 1, 4, 2, 2,
	6, 4, 2, 2, 1, 2, 1, 4, 3, 3,
	3, 3, 6, 3, 1, 1, 2, 1, 5, 4,
	2, 2, 4, 2, 2, 1, 3, 1,
}
var yyChk = [...]int{

	-1000, -141, -134, -12, 2, -14, -15, -16, -17, -18,
	52, 80, 45, 39, 146, -78, -82, 21, 20, 23,
	30, 34, 35, 40, 47, 99, 19, 14, -28, 49,
	25, 27, 148, 41, 36, 10, 37, -140, 53, 54,
	55, -86, -92, -35, -38, -104, 7, -70, -71, -68,
	60, 152, 93, 105, 106, 157, 156, 158, 159, 150,
	-51, -121, -56, 108, 109, 110, 111, 112, 113, 114,
	6, 160, -60, 145, 97, 98, 107, 44, -113, 100,
	101, -55, -67, -62, -53, -65, -66, 92, 143, 50,
	51, 4, 5, 85, 86, 87, 8, 9, 67, 68,
	82, 64, 65, 66, 81, 63, 75, 144, 38, -8,
	161, -13, -69, 61, 18, 12, -91, 83, 150, 83,
	-91, 146, 10, -21, -128, -89, -91, 83, 37, 39,
	-22, -23, -79, -24, 10, -135, 150, -14, 37, 80,
	150, 150, -29, -28, 99, -29, -29, -39, -40, -55,
	-41, -113, -42, -8, -75, -50, -28, 148, 131, 132,
	88, 90, 89, 163, 155, 165, 171, 157, 156, 166,
	133, 167, 168, 134, 135, 136, 137, 138, 139, 169,
	140, 170, 141, 116, 91, 154, 115, 150, 150, 150,
	146, 10, 149, -3, 155, 53, -104, 10, 10, 10,
	94, 95, 94, 96, 95, 164, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 105,
	106, 150, 152, 146, 58, 142, 150, -58, -57, -94,
	-93, -28, 155, 84, 60, -28, -35, -67, 150, -66,
	99, 152, -35, -28, -28, -28, -28, -28, -28, -28,
	-28, -28, -28, -28, -28, -59, 150, -28, -131, 17,
	-130, -73, -8, 77, 78, -28, -28, -28, -28, 152,
	79, 79, -54, -52, -53, -72, 53, -13, -55, 150,
	150, 150, -28, -28, 150, -28, -28, 17, 76, -130,
	-130, 17, -3, 146, -55, -105, 150, -105, 150, 83,
	-91, 151, -91, 148, 146, -134, 148, -19, -89, -91,
	83, 148, 162, 83, 29, -91, -23, 148, 162, 164,
	-25, 147, 2, -14, -15, -16, -17, -18, 52, -28,
	21, -3, -26, -27, -28, -28, 148, 148, 148, 148,
	162, 148, 162, 164, 148, 162, -28, -28, -28, -28,
	-28, -28, -28, -28, -28, -28, -28, -28, -28, -28,
	-28, -28, -28, -28, -28, -28, -28, -28, -28, -28,
	-28, -28, -54, -28, 149, -28, -114, -34, -35, -28,
	-79, -135, 148, 10, -142, 10, -115, 56, -142, -117,
	56, 150, -14, 150, 148, 149, -28, 155, -28, -28,
	-28, -28, -28, -28, -28, -28, -28, -28, -28, -28,
	-28, -28, -29, -28, -64, 10, 146, -55, -64, -58,
	153, 162, 59, -35, -28, 150, -28, -58, 151, -29,
	145, -73, -73, 17, 152, 58, 142, -28, 11, -35,
	59, -29, -63, -6, -55, 146, 10, -5, -4, 99,
	100, 101, 102, 103, 104, 4, 5, 85, 86, 87,
	88, 89, 90, 91, 92, 93, 6, 7, 94, 95,
	96, 19, 20, 21, 22, 23, 24, 25, 26, 27,
	28, 29, 41, 42, 43, 44, 45, 46, 47, 48,
	49, 50, 51, 35, 36, 37, 39, 40, 97, 98,
	60, 30, 31, 32, 33, 34, 61, 62, 56, 57,
	80, 54, 55, 53, 63, 64, 66, 65, 67, 68,
	82, 81, 38, 143, -63, -6, -55, -106, -105, 79,
	152, 146, 58, 142, 79, -106, -28, -84, -95, -28,
	-28, -28, 76, 76, 144, 150, -28, 151, -80, -37,
	-28, 84, -7, 10, -5, 60, 93, 6, 97, 98,
	44, 99, 92, 143, 50, 51, 4, 5, 85, 86,
	87, 67, 68, 82, 64, 65, 66, 81, 63, 37,
	38, 61, 80, -58, 10, 148, -134, 147, 148, 148,
	83, -91, -22, 83, -91, 146, 10, 83, -24, -28,
	150, 151, 150, 148, 162, 151, -40, -42, -28, -50,
	149, -28, -10, 162, 29, 151, 147, -142, 150, -115,
	-116, 57, -13, 146, -142, -77, -13, -28, -28, -135,
	-28, 151, 153, 147, -105, -28, -105, 151, 164, -94,
	-28, 155, 60, -58, 151, 153, 151, -74, 10, 13,
	156, -8, 10, 10, 147, 147, 152, 147, -28, 153,
	-105, -28, -105, -55, -29, -28, -64, -64, -55, -115,
	151, -10, 162, 151, 151, -30, -31, -36, -103, -100,
	-101, 154, -102, 61, 62, -13, 147, -10, 162, -28,
	149, 151, 147, 146, 83, -88, -20, -23, -128, 146,
	-142, 151, -112, -14, 149, -28, -26, -28, -108, 146,
	149, -28, 151, -34, -129, -35, 155, 60, 152, -32,
	-14, 149, -125, 150, -30, -116, -142, -77, -136, 146,
	162, 151, 151, 96, -14, 149, 147, 164, -28, -35,
	150, 151, 153, 13, -28, 147, 153, 147, -116, 146,
	151, -95, 151, -10, 162, -1, 155, 163, -101, 163,
	151, -37, -28, -87, -23, 146, -10, 162, -23, -88,
	148, -135, 151, 148, -132, 148, -132, 148, 148, 151,
	59, -35, 150, -58, -135, -33, -126, 43, 42, -30,
	151, -142, 146, 147, -43, -138, -137, 45, -139, 48,
	-127, 104, 103, 102, 99, 100, 101, -136, -13, -14,
	149, 148, -135, -28, -58, 153, -142, -123, -124, -122,
	-119, 33, -120, -28, -99, 149, -36, -2, 84, -101,
	-101, -10, 162, -87, 147, -20, -10, 22, 148, -26,
	147, 32, 33, -132, 31, -132, -110, -14, 149, -129,
	-35, -58, 153, 28, 146, 150, 151, -118, 45, 146,
	-136, -103, 39, 37, -77, -127, 147, -135, 151, 147,
	146, 147, -10, 162, 59, -10, 162, -10, 162, -142,
	-96, -97, 154, -98, -101, 99, -8, 147, -23, -10,
	147, 148, 151, -28, -11, 149, 148, 147, 148, 31,
	-135, 151, 151, 148, -135, -76, -13, -99, -99, 150,
	-136, 147, -81, -49, -8, -85, -90, -6, -3, -107,
	148, 146, -136, -122, -28, 59, -28, 59, 163, -97,
	163, 164, 147, -111, -14, 149, -11, -135, 148, 26,
	-110, 147, -9, 163, -8, 146, 146, -83, -61, -8,
	155, 147, 148, 162, -142, 164, 148, 162, 164, -6,
	147, -133, -44, -45, -46, -47, -48, -13, -6, 10,
	147, -28, -28, -97, -97, -28, -135, -135, 148, 151,
	-13, -135, -135, 151, 162, -8, -49, -28, -90, -28,
	-142, 147, -44, 148, 148, 46, 29, 79, 24, 146,
	147, 147, -61, -142, -142, 150, -77, 10, -4, -127,
	-6, 148, -135, -30, -6, 147, 151, -99, -109, 148,
	146, -135, 147,
}
var yyDef = [...]int{

	86, -2, -2, 85, 92, 93, 94, 95, 96, 97,
	0, 0, 0, 0, 130, 139, 140, 0, 0, 0,
	0, 452, 452, 452, 0, 417, 0, 151, 0, 0,
	0, 0, 157, 0, 0, 87, 405, 0, 0, 0,
	0, 213, 0, -2, 451, 178, 0, -2, 469, 454,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 382, 0, 0, 0, 0, 0, 0, 0,
	421, 0, 392, 423, 0, 395, 0, 0, 400, 180,
	181, 461, 446, 467, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 0, 405, 472,
	0, -2, 0, 0, 430, 84, 89, 0, 0, 0,
	0, 86, 87, 0, 0, 0, 123, 0, 107, 108,
	120, 125, 0, 128, 0, 0, 0, 0, 405, 0,
	306, 0, 0, 453, 417, 0, 0, 0, 252, 253,
	0, 401, 255, 256, 0, 304, 305, 152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	130, 0, 160, 404, 406, 0, 179, 184, 404, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	343, 0, 452, 0, 0, 0, 491, 0, 490, 494,
	492, 496, 0, 0, 0, 327, -2, 0, 0, -2,
	417, 491, -2, 362, 363, 364, 365, 0, 383, 384,
	385, 386, 387, 388, 389, 390, 452, 391, 0, 424,
	425, 504, 506, 0, 0, 394, 396, 398, 399, 452,
	0, 0, 426, 312, 419, 420, 426, 418, 477, 0,
	0, 0, 520, 521, 0, 523, 524, 0, 442, 0,
	0, 0, 0, 0, 474, 413, 0, 416, 491, 0,
	91, 0, 90, 99, 86, 0, 102, 0, 0, 123,
	0, 104, 0, 0, 0, 123, 126, 106, 0, 0,
	129, 138, 131, 132, 133, 134, 135, 136, 0, 0,
	0, 404, 0, 307, 309, 0, 145, 146, 147, 148,
	0, 149, 0, 0, 150, 0, 345, 346, 347, 348,
	349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
	359, 360, 361, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 375, 0, 0, 381, 113, 168, -2, 0,
	0, 0, 159, 404, 0, 184, 188, 0, 0, 404,
	0, 0, 214, 0, 217, 130, 325, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 336, 337, 338, 339,
	340, 0, 0, 0, 470, 487, 0, 489, 471, 0,
	429, 491, 0, -2, 499, 491, 0, 0, -2, 0,
	393, 505, 502, 503, 0, 0, 0, 0, 0, 455,
	0, 0, 0, -2, -2, 0, 78, 79, 71, 72,
	73, 74, 75, 76, 77, 2, 3, 4, 5, 6,
	7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
	17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
	27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
	37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
	47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 0, -2, -2, 311, 427, 0,
	452, 0, 0, 0, 0, 184, 0, 113, 525, 527,
	0, 0, 441, 444, 443, -2, 0, 244, 113, 246,
	248, 0, 0, -2, 81, 47, 12, -2, 45, -2,
	32, -2, 11, 70, 38, 39, 2, 3, 4, 5,
	6, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 53, 57, 0, 88, 98, 0, 101, 103, 105,
	0, 123, 119, 0, 123, 0, 124, 0, 127, 404,
	0, 0, 0, 306, 0, 0, 251, 254, 257, 303,
	0, 380, 0, 114, 0, 0, 161, 0, -2, 188,
	404, 0, 185, 259, 0, 187, 264, 0, 0, 0,
	326, 0, 462, 464, 465, 0, 466, 0, 0, 493,
	495, 0, 0, 0, -2, 429, 422, 0, 514, 515,
	0, 517, 508, 509, 510, 511, 0, 513, 397, 463,
	414, 0, 415, 482, 0, 0, 480, 481, 483, 188,
	0, 0, 114, 519, 522, 0, 113, 221, 172, 241,
	237, 0, 239, 230, 231, 232, 473, 0, 114, 249,
	0, 428, 100, 0, 0, 113, 116, 121, 0, 0,
	302, 0, 141, 209, 130, 0, 0, 308, 144, 204,
	204, 379, 0, 169, 0, -2, 0, 0, 491, 156,
	198, 130, 166, -2, 0, 404, 0, 189, 285, 259,
	0, 0, 0, 0, 211, 130, 488, 0, 324, -2,
	491, 501, 507, 516, 0, 485, 478, 479, 404, 317,
	518, 526, 242, 219, -2, 174, 173, 0, 238, 0,
	245, 247, 250, 113, 118, 0, 0, 114, 122, 113,
	137, 0, 0, 306, 0, 204, 0, 204, 153, 0,
	0, -2, 491, 0, 0, 158, 162, 0, 0, 0,
	407, 0, 259, 182, 258, 240, 0, 0, -2, 284,
	287, 289, 290, 291, 292, 293, 294, 285, 265, 212,
	130, 218, -2, 323, 0, 0, 0, 0, 113, 319,
	0, 113, 113, 315, 404, 0, 222, 0, 175, 235,
	236, 0, 114, 113, 111, 115, 0, 0, 142, 0,
	200, 0, 0, 0, 0, 0, 154, 196, 130, 0,
	-2, 0, -2, 0, 130, 0, 242, 242, 0, 259,
	285, 0, 0, 405, 0, 288, 183, -2, 500, 512,
	259, 316, 318, 114, 0, 0, 114, 313, 114, 0,
	243, 225, 0, 227, 228, 229, 223, 109, 117, 0,
	112, 210, 0, 0, 130, 207, 208, 201, 202, 0,
	0, 0, 192, 199, 0, 82, 164, 0, 0, 0,
	285, 177, 0, 296, 404, 0, 300, 0, 0, 262,
	266, 0, 285, 320, 321, 0, 314, 0, 0, 226,
	0, 0, 110, 143, 194, 130, 130, -2, 203, 0,
	155, 167, 0, 0, 83, 130, 130, 0, 410, 411,
	0, 176, 260, 0, 297, 0, 261, 0, 0, 404,
	267, 0, 269, 0, 0, 279, 0, 0, 278, -2,
	310, 322, 403, 233, 234, 224, 0, -2, 197, 0,
	165, 0, 0, 408, 0, 412, 295, 404, 299, 404,
	0, 268, 270, 271, 272, 0, 0, 0, 0, 130,
	171, 402, 409, 298, 301, -2, 273, 274, 275, 277,
	280, 195, 0, 0, 276, 163, 242, 0, 263, 281,
	130, 0, 282,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 158, 144, 3, 161, 168, 155, 3,
	150, 151, 166, 157, 162, 156, 171, 167, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 149, 148,
	169, 164, 170, 154, 160, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 152, 3, 153, 165, 3, 145, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 146, 163, 147, 159,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

// line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:294
		{
			yylex.(*Parser).currentToken.Value = nil

			yylex.(*Parser).rootNode = &ast.Root{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].list),
				Stmts:    yyDollar[1].list,
				EndTkn:   yylex.(*Parser).currentToken,
			}
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:329
		{
			yyVAL.token = yyDollar[1].token
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:334
		{
			yyVAL.token = nil
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:335
		{
			yyVAL.token = yyDollar[1].token
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:339
		{
			yyVAL.token = yyDollar[1].token
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:344
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:350
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:357
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.NamePart{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						StringTkn: yyDollar[1].token,
						Value:     yyDollar[1].token.Value,
					},
				},
			}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:369
		{
			part := &ast.NamePart{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
				StringTkn: yyDollar[3].token,
				Value:     yyDollar[3].token.Value,
			}

			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, part)

			yyVAL.node = yyDollar[1].node
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:385
		{
			yyVAL.node = &ast.Name{
				Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
				Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:393
		{
			yyVAL.node = &ast.NameRelative{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].node.(*ParserSeparatedList).Items),
				NsTkn:          yyDollar[1].token,
				NsSeparatorTkn: yyDollar[2].token,
				Parts:          yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:403
		{
			yyVAL.node = &ast.NameFullyQualified{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				NsSeparatorTkn: yyDollar[1].token,
				Parts:          yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:415
		{
			// error
			yyVAL.node = nil
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:420
		{
			yyVAL.node = yyDollar[1].node
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:424
		{
			yyVAL.node = yyDollar[1].node
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:428
		{
			yyVAL.node = yyDollar[1].node
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:432
		{
			yyVAL.node = yyDollar[1].node
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:436
		{
			yyVAL.node = yyDollar[1].node
		}
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:440
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:450
		{
			yyVAL.node = &ast.StmtNamespace{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				NsTkn:    yyDollar[1].token,
				Name: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 100:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:463
		{
			yyVAL.node = &ast.StmtNamespace{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				NsTkn:    yyDollar[1].token,
				Name: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Stmts:                yyDollar[4].list,
				CloseCurlyBracketTkn: yyDollar[5].token,
			}
		}
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:478
		{
			yyVAL.node = &ast.StmtNamespace{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				NsTkn:                yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:488
		{
			use := yyDollar[2].node.(*ast.StmtGroupUseList)

			use.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)
			use.UseTkn = yyDollar[1].token
			use.SemiColonTkn = yyDollar[3].token

			yyVAL.node = yyDollar[2].node
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:498
		{
			use := yyDollar[3].node.(*ast.StmtGroupUseList)

			use.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			use.UseTkn = yyDollar[1].token
			use.Type = yyDollar[2].node
			use.SemiColonTkn = yyDollar[4].token

			yyVAL.node = yyDollar[3].node
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:509
		{
			yyVAL.node = &ast.StmtUseList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				UseTkn:        yyDollar[1].token,
				Uses:          yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:519
		{
			yyVAL.node = &ast.StmtUseList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				UseTkn:        yyDollar[1].token,
				Type:          yyDollar[2].node,
				Uses:          yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:530
		{
			yyVAL.node = &ast.StmtConstList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ConstTkn:      yyDollar[1].token,
				Consts:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:543
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:551
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 109:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:562
		{
			if yyDollar[5].token != nil {
				yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[5].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[6].token),
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[2].token,
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Uses:                 yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 110:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:582
		{
			if yyDollar[6].token != nil {
				yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[6].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position:              yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				LeadingNsSeparatorTkn: yyDollar[1].token,
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[3].token,
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Uses:                 yyDollar[5].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}
		}
	case 111:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:606
		{
			if yyDollar[5].token != nil {
				yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[5].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[6].token),
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[2].token,
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Uses:                 yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 112:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:626
		{
			if yyDollar[6].token != nil {
				yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[6].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position:              yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				LeadingNsSeparatorTkn: yyDollar[1].token,
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[3].token,
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Uses:                 yyDollar[5].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}
		}
	case 113:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:650
		{
			yyVAL.token = nil
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:654
		{
			yyVAL.token = yyDollar[1].token
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:661
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:668
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:677
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:684
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:693
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:700
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:709
		{
			yyVAL.node = yyDollar[1].node
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:713
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.Type = yyDollar[1].node
			decl.Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node)

			yyVAL.node = yyDollar[2].node
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:724
		{
			yyVAL.node = &ast.StmtUse{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
				Use: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
			}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:735
		{
			yyVAL.node = &ast.StmtUse{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].token),
				Use: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				AsTkn: yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:755
		{
			yyVAL.node = yyDollar[1].node
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:759
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.NsSeparatorTkn = yyDollar[1].token
			decl.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			yyVAL.node = yyDollar[2].node
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:770
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:777
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:786
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:792
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:799
		{
			// error
			yyVAL.node = nil
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:804
		{
			yyVAL.node = yyDollar[1].node
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:808
		{
			yyVAL.node = yyDollar[1].node
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:812
		{
			yyVAL.node = yyDollar[1].node
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:816
		{
			yyVAL.node = yyDollar[1].node
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:820
		{
			yyVAL.node = yyDollar[1].node
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:824
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:836
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:845
		{
			yyVAL.node = yyDollar[1].node
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:849
		{
			yyVAL.node = yyDollar[1].node
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:853
		{
			yyDollar[5].node.(*ast.StmtWhile).WhileTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtWhile).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtWhile).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtWhile).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtWhile).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 142:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:863
		{
			yyVAL.node = &ast.StmtDo{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				DoTkn:               yyDollar[1].token,
				Stmt:                yyDollar[2].node,
				WhileTkn:            yyDollar[3].token,
				OpenParenthesisTkn:  yyDollar[4].token,
				Cond:                yyDollar[5].node,
				CloseParenthesisTkn: yyDollar[6].token,
				SemiColonTkn:        yyDollar[7].token,
			}
		}
	case 143:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:876
		{
			yyDollar[9].node.(*ast.StmtFor).ForTkn = yyDollar[1].token
			yyDollar[9].node.(*ast.StmtFor).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[9].node.(*ast.StmtFor).Init = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).InitSeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).InitSemiColonTkn = yyDollar[4].token
			yyDollar[9].node.(*ast.StmtFor).Cond = yyDollar[5].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).CondSeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CondSemiColonTkn = yyDollar[6].token
			yyDollar[9].node.(*ast.StmtFor).Loop = yyDollar[7].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).LoopSeparatorTkns = yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CloseParenthesisTkn = yyDollar[8].token
			yyDollar[9].node.(*ast.StmtFor).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			yyVAL.node = yyDollar[9].node
		}
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:893
		{
			yyDollar[5].node.(*ast.StmtSwitch).SwitchTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtSwitch).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtSwitch).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtSwitch).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtSwitch).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:903
		{
			yyVAL.node = &ast.StmtBreak{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				BreakTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:912
		{
			yyVAL.node = &ast.StmtContinue{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ContinueTkn:  yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:921
		{
			yyVAL.node = &ast.StmtReturn{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ReturnTkn:    yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:930
		{
			yyDollar[2].node.(*ast.StmtGlobal).GlobalTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtGlobal).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtGlobal).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:938
		{
			yyDollar[2].node.(*ast.StmtStatic).StaticTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtStatic).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtStatic).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:946
		{
			yyDollar[2].node.(*ast.StmtEcho).EchoTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtEcho).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtEcho).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:954
		{
			yyVAL.node = &ast.StmtInlineHtml{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				InlineHtmlTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:962
		{
			yyVAL.node = yylex.(*Parser).builder.NewExpressionStmt(yyDollar[1].node, yyDollar[2].token)
		}
	case 153:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:966
		{
			yyDollar[3].node.(*ast.StmtUnset).UnsetTkn = yyDollar[1].token
			yyDollar[3].node.(*ast.StmtUnset).OpenParenthesisTkn = yyDollar[2].token
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[4].token)
			}
			yyDollar[3].node.(*ast.StmtUnset).CloseParenthesisTkn = yyDollar[5].token
			yyDollar[3].node.(*ast.StmtUnset).SemiColonTkn = yyDollar[6].token
			yyDollar[3].node.(*ast.StmtUnset).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			yyVAL.node = yyDollar[3].node
		}
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:979
		{
			foreach := yyDollar[7].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[7].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Var = yyDollar[5].node
			foreach.CloseParenthesisTkn = yyDollar[6].token

			if val, ok := yyDollar[5].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 155:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:998
		{
			foreach := yyDollar[9].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Key = yyDollar[5].node
			foreach.DoubleArrowTkn = yyDollar[6].token
			foreach.Var = yyDollar[7].node
			foreach.CloseParenthesisTkn = yyDollar[8].token

			if val, ok := yyDollar[7].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1019
		{
			yyDollar[5].node.(*ast.StmtDeclare).DeclareTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtDeclare).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtDeclare).Consts = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[5].node.(*ast.StmtDeclare).SeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[5].node.(*ast.StmtDeclare).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtDeclare).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1030
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 158:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1037
		{
			yyVAL.node = yylex.(*Parser).builder.NewTry(yyDollar[1].token, yyDollar[2].token, yyDollar[3].list, yyDollar[4].token, yyDollar[5].node, yyDollar[6].node)
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1041
		{
			yyVAL.node = &ast.StmtGoto{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				GotoTkn:  yyDollar[1].token,
				Label: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1054
		{
			yyVAL.node = &ast.StmtLabel{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				ColonTkn: yyDollar[2].token,
			}
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1067
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1068
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, nil, yyDollar[2].node)
		}
	case 163:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1073
		{
			yyVAL.node = yylex.(*Parser).builder.NewCatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1077
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1078
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1083
		{
			yyVAL.node = nil
		}
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1087
		{
			yyVAL.node = &ast.StmtFinally{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				FinallyTkn:           yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1100
		{
			yyVAL.node = &ast.StmtUnset{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1106
		{
			yyDollar[1].node.(*ast.StmtUnset).Vars = append(yyDollar[1].node.(*ast.StmtUnset).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1116
		{
			yyVAL.node = yyDollar[1].node
		}
	case 171:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:1123
		{
			yyVAL.node = &ast.StmtFunction{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token),
				FunctionTkn:  yyDollar[1].token,
				AmpersandTkn: yyDollar[2].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
				OpenParenthesisTkn:   yyDollar[5].token,
				Params:               yyDollar[6].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[6].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn:  yyDollar[7].token,
				ColonTkn:             yyDollar[8].node.(*ReturnType).ColonTkn,
				ReturnType:           yyDollar[8].node.(*ReturnType).Type,
				OpenCurlyBracketTkn:  yyDollar[9].token,
				Stmts:                yyDollar[10].list,
				CloseCurlyBracketTkn: yyDollar[11].token,
			}
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1148
		{
			yyVAL.token = nil
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1152
		{
			yyVAL.token = yyDollar[1].token
		}
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1159
		{
			yyVAL.token = nil
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1163
		{
			yyVAL.token = yyDollar[1].token
		}
	case 176:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:1170
		{
			class := &ast.StmtClass{
				Position:  yylex.(*Parser).builder.Pos.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[9].token),
				Modifiers: yyDollar[1].list,
				ClassTkn:  yyDollar[2].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[7].token,
				Stmts:                yyDollar[8].list,
				CloseCurlyBracketTkn: yyDollar[9].token,
			}

			if yyDollar[4].node != nil {
				class.ExtendsTkn = yyDollar[4].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[4].node.(*ast.StmtClass).Extends
			}

			if yyDollar[5].node != nil {
				class.ImplementsTkn = yyDollar[5].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[5].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[5].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 177:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1199
		{
			class := &ast.StmtClass{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[8].token),
				ClassTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[6].token,
				Stmts:                yyDollar[7].list,
				CloseCurlyBracketTkn: yyDollar[8].token,
			}

			if yyDollar[3].node != nil {
				class.ExtendsTkn = yyDollar[3].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[3].node.(*ast.StmtClass).Extends
			}

			if yyDollar[4].node != nil {
				class.ImplementsTkn = yyDollar[4].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[4].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[4].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1230
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1234
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1241
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1249
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 182:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1260
		{
			yyVAL.node = &ast.StmtTrait{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token),
				TraitTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Stmts:                yyDollar[5].list,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 183:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1278
		{
			iface := &ast.StmtInterface{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				InterfaceTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[5].token,
				Stmts:                yyDollar[6].list,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}

			if yyDollar[3].node != nil {
				iface.ExtendsTkn = yyDollar[3].node.(*ast.StmtInterface).ExtendsTkn
				iface.Extends = yyDollar[3].node.(*ast.StmtInterface).Extends
				iface.ExtendsSeparatorTkns = yyDollar[3].node.(*ast.StmtInterface).ExtendsSeparatorTkns
			}

			yyVAL.node = iface
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1304
		{
			yyVAL.node = nil
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1308
		{
			yyVAL.node = &ast.StmtClass{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExtendsTkn: yyDollar[1].token,
				Extends:    yyDollar[2].node,
			}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1319
		{
			yyVAL.node = nil
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1323
		{
			yyVAL.node = &ast.StmtInterface{
				Position:             yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ExtendsTkn:           yyDollar[1].token,
				Extends:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ExtendsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1335
		{
			yyVAL.node = nil
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1339
		{
			yyVAL.node = &ast.StmtClass{
				Position:                yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ImplementsTkn:           yyDollar[1].token,
				Implements:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ImplementsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1351
		{
			yyVAL.node = yyDollar[1].node
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1355
		{
			yyVAL.node = &ast.StmtForeach{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Var:          yyDollar[2].node,
			}
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1363
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ListTkn:         yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1374
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1387
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1394
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForTkn:    yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1410
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1417
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForeachTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1433
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1440
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndDeclareTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1456
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Cases:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 201:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1465
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CaseSeparatorTkn:     yyDollar[2].token,
				Cases:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1475
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn:     yyDollar[1].token,
				Cases:        yyDollar[2].list,
				EndSwitchTkn: yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1485
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				ColonTkn:         yyDollar[1].token,
				CaseSeparatorTkn: yyDollar[2].token,
				Cases:            yyDollar[3].list,
				EndSwitchTkn:     yyDollar[4].token,
				SemiColonTkn:     yyDollar[5].token,
			}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1499
		{
			yyVAL.list = nil
		}
	case 205:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1503
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtCase{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list),
				CaseTkn:          yyDollar[2].token,
				Cond:             yyDollar[3].node,
				CaseSeparatorTkn: yyDollar[4].token,
				Stmts:            yyDollar[5].list,
			})
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1513
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtDefault{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				DefaultTkn:       yyDollar[2].token,
				CaseSeparatorTkn: yyDollar[3].token,
				Stmts:            yyDollar[4].list,
			})
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1525
		{
			yyVAL.token = yyDollar[1].token
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1529
		{
			yyVAL.token = yyDollar[1].token
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1536
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1543
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndWhileTkn:  yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1559
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				Stmt:                yyDollar[5].node,
			}
		}
	case 212:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1570
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				Stmt:                yyDollar[6].node,
			})

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)

			yyVAL.node = yyDollar[1].node
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1588
		{
			yyVAL.node = yyDollar[1].node
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1592
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[3].node),
				ElseTkn:  yyDollar[2].token,
				Stmt:     yyDollar[3].node,
			}

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 215:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1607
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[6].list),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				ColonTkn:            yyDollar[5].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[6].list),
					Stmts:    yyDollar[6].list,
				},
			}
		}
	case 216:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1622
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[7].list),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[7].list),
					Stmts:    yyDollar[7].list,
				},
			})

			yyVAL.node = yyDollar[1].node
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1642
		{
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[2].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[3].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			yyVAL.node = yyDollar[1].node
		}
	case 218:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1650
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				ElseTkn:  yyDollar[2].token,
				ColonTkn: yyDollar[3].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[4].list),
					Stmts:    yyDollar[4].list,
				},
			}
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[5].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[6].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token)

			yyVAL.node = yyDollar[1].node
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1669
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1670
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1674
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1675
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1680
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token)
			if yyDollar[1].node != nil {
				pos = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)
			} else if yyDollar[2].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[2].token, yyDollar[4].token)
			} else if yyDollar[3].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[3].token, yyDollar[4].token)
			}

			yyVAL.node = &ast.Parameter{
				Position:     pos,
				Type:         yyDollar[1].node,
				AmpersandTkn: yyDollar[2].token,
				VariadicTkn:  yyDollar[3].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
						IdentifierTkn: yyDollar[4].token,
						Value:         yyDollar[4].token.Value,
					},
				},
			}
		}
	case 224:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1706
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node)
			if yyDollar[1].node != nil {
				pos = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)
			} else if yyDollar[2].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node)
			} else if yyDollar[3].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[3].token, yyDollar[6].node)
			}

			yyVAL.node = &ast.Parameter{
				Position:     pos,
				Type:         yyDollar[1].node,
				AmpersandTkn: yyDollar[2].token,
				VariadicTkn:  yyDollar[3].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
						IdentifierTkn: yyDollar[4].token,
						Value:         yyDollar[4].token.Value,
					},
				},
				EqualTkn:     yyDollar[5].token,
				DefaultValue: yyDollar[6].node,
			}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1736
		{
			yyVAL.node = yyDollar[1].node
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1737
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1738
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1742
		{
			yyVAL.node = yyDollar[1].node
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1743
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1747
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1748
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1749
		{
			yyVAL.node = yyDollar[1].node
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1753
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1754
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1759
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1761
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1765
		{
			yyVAL.node = yyDollar[1].node
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1766
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1767
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 240:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1771
		{
			yyVAL.node = nil
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1772
		{
			yyVAL.node = yyDollar[1].node
		}
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1776
		{
			yyVAL.node = &ReturnType{}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1777
		{
			yyVAL.node = yylex.(*Parser).builder.NewReturnType(yyDollar[1].token, yyDollar[2].node)
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1782
		{
			yyVAL.node = &ArgumentList{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				CloseParenthesisTkn: yyDollar[2].token,
			}
		}
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1790
		{
			argumentList := yyDollar[2].node.(*ArgumentList)
			argumentList.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			argumentList.OpenParenthesisTkn = yyDollar[1].token
			if yyDollar[3].token != nil {
				argumentList.SeparatorTkns = append(argumentList.SeparatorTkns, yyDollar[3].token)
			}
			argumentList.CloseParenthesisTkn = yyDollar[4].token

			yyVAL.node = argumentList
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1805
		{
			yyVAL.node = &ArgumentList{
				Arguments: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1811
		{
			yyDollar[1].node.(*ArgumentList).SeparatorTkns = append(yyDollar[1].node.(*ArgumentList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ArgumentList).Arguments = append(yyDollar[1].node.(*ArgumentList).Arguments, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1821
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgument(yyDollar[1].node)
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1825
		{
			yyVAL.node = yylex.(*Parser).builder.NewVariadicArgument(yyDollar[1].token, yyDollar[2].node)
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1829
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamedArgument(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node)
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1836
		{
			yyDollar[1].node.(*ast.StmtGlobal).Vars = append(yyDollar[1].node.(*ast.StmtGlobal).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1843
		{
			yyVAL.node = &ast.StmtGlobal{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1852
		{
			yyVAL.node = yyDollar[1].node
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1859
		{
			yyDollar[1].node.(*ast.StmtStatic).Vars = append(yyDollar[1].node.(*ast.StmtStatic).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1866
		{
			yyVAL.node = &ast.StmtStatic{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1875
		{

			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1890
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1909
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 259:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1913
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1920
		{
			yyVAL.node = &ast.StmtPropertyList{
				Position:      yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[4].token),
				Modifiers:     yyDollar[1].list,
				Type:          yyDollar[2].node,
				Props:         yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1931
		{
			yyVAL.node = &ast.StmtClassConstList{
				Position:      yylex.(*Parser).builder.Pos.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[4].token),
				Modifiers:     yyDollar[1].list,
				ConstTkn:      yyDollar[2].token,
				Consts:        yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1942
		{
			traitUse := &ast.StmtTraitUse{
				Position:      yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				UseTkn:        yyDollar[1].token,
				Traits:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}

			switch n := yyDollar[3].node.(type) {
			case *TraitAdaptationList:
				traitUse.OpenCurlyBracketTkn = n.OpenCurlyBracketTkn
				traitUse.Adaptations = n.Adaptations
				traitUse.CloseCurlyBracketTkn = n.CloseCurlyBracketTkn
			case *ast.StmtNop:
				traitUse.SemiColonTkn = n.SemiColonTkn
			}

			yyVAL.node = traitUse
		}
	case 263:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:1962
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[10].node)
			if yyDollar[1].list != nil {
				pos = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[10].node)
			}

			yyVAL.node = &ast.StmtClassMethod{
				Position:     pos,
				Modifiers:    yyDollar[1].list,
				FunctionTkn:  yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
				OpenParenthesisTkn:  yyDollar[6].token,
				Params:              yyDollar[7].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[8].token,
				ColonTkn:            yyDollar[9].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[9].node.(*ReturnType).Type,
				Stmt:                yyDollar[10].node,
			}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1991
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1997
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2007
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2014
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CloseCurlyBracketTkn: yyDollar[2].token,
			}
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2022
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Adaptations:          yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2034
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2038
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2045
		{
			yyDollar[1].node.(*ast.StmtTraitUsePrecedence).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2051
		{
			yyDollar[1].node.(*ast.StmtTraitUseAlias).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2060
		{
			yyVAL.node = &ast.StmtTraitUsePrecedence{
				Position:       yylex.(*Parser).builder.Pos.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].node.(*ParserSeparatedList).Items),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				InsteadofTkn:   yyDollar[2].token,
				Insteadof:      yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2075
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2090
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2105
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2121
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
			}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2135
		{
			yyVAL.node = &TraitMethodRef{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2146
		{
			yyVAL.node = yyDollar[1].node
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2153
		{
			yyVAL.node = &TraitMethodRef{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2169
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2176
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2188
		{
			yyVAL.list = yyDollar[1].list
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2192
		{
			yyVAL.list = []ast.Vertex{
				&ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2205
		{
			yyVAL.list = nil
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2209
		{
			yyVAL.list = yyDollar[1].list
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2216
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2220
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2227
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2235
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2243
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2251
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2259
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2267
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2278
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2285
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2294
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				Expr: nil,
			}
		}
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2309
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2328
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2335
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2344
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2360
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2376
		{
			yyDollar[1].node.(*ast.StmtEcho).Exprs = append(yyDollar[1].node.(*ast.StmtEcho).Exprs, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2383
		{
			yyVAL.node = &ast.StmtEcho{
				Exprs: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2392
		{
			yyVAL.node = yyDollar[1].node
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2399
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2403
		{
			yyVAL.node = yyDollar[1].node
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2410
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2417
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 310:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:2426
		{
			if yyDollar[2].node == nil {
				yyDollar[2].node = &ArgumentList{}
			}

			class := &ast.StmtClass{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[8].token),
				ClassTkn:             yyDollar[1].token,
				OpenParenthesisTkn:   yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                 yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:        yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn:  yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
				OpenCurlyBracketTkn:  yyDollar[6].token,
				Stmts:                yyDollar[7].list,
				CloseCurlyBracketTkn: yyDollar[8].token,
			}

			if yyDollar[3].node != nil {
				class.ExtendsTkn = yyDollar[3].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[3].node.(*ast.StmtClass).Extends
			}

			if yyDollar[4].node != nil {
				class.ImplementsTkn = yyDollar[4].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[4].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[4].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2460
		{
			if yyDollar[3].node != nil {
				yyVAL.node = &ast.ExprNew{
					Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
					NewTkn:              yyDollar[1].token,
					Class:               yyDollar[2].node,
					OpenParenthesisTkn:  yyDollar[3].node.(*ArgumentList).OpenParenthesisTkn,
					Args:                yyDollar[3].node.(*ArgumentList).Arguments,
					SeparatorTkns:       yyDollar[3].node.(*ArgumentList).SeparatorTkns,
					CloseParenthesisTkn: yyDollar[3].node.(*ArgumentList).CloseParenthesisTkn,
				}
			} else {
				yyVAL.node = &ast.ExprNew{
					Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
					NewTkn:   yyDollar[1].token,
					Class:    yyDollar[2].node,
				}
			}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2480
		{
			yyVAL.node = &ast.ExprNew{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				NewTkn:   yyDollar[1].token,
				Class:    yyDollar[2].node,
			}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2491
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2498
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2503
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 316:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:2510
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token)
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2517
		{
			yyVAL.node = nil
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2522
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2529
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2534
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2541
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(nil, nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2546
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(yyDollar[1].token, yyDollar[2].token, nil, yyDollar[3].token, yyDollar[4].node)
		}
	case 323:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:2553
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
				EqualTkn: yyDollar[5].token,
				Expr:     yyDollar[6].node,
			}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:2569
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
					OpenBracketTkn:  yyDollar[1].token,
					Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[3].token,
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2584
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2593
		{
			yyVAL.node = &ast.ExprAssignReference{
				Position:     yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Var:          yyDollar[1].node,
				EqualTkn:     yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Expr:         yyDollar[4].node,
			}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2603
		{
			yyVAL.node = &ast.ExprClone{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CloneTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2611
		{
			yyVAL.node = &ast.ExprAssignPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2620
		{
			yyVAL.node = &ast.ExprAssignMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2629
		{
			yyVAL.node = &ast.ExprAssignMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2638
		{
			yyVAL.node = &ast.ExprAssignPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2647
		{
			yyVAL.node = &ast.ExprAssignDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2656
		{
			yyVAL.node = &ast.ExprAssignConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2665
		{
			yyVAL.node = &ast.ExprAssignMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2674
		{
			yyVAL.node = &ast.ExprAssignBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2683
		{
			yyVAL.node = &ast.ExprAssignBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2692
		{
			yyVAL.node = &ast.ExprAssignBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2701
		{
			yyVAL.node = &ast.ExprAssignShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2710
		{
			yyVAL.node = &ast.ExprAssignShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2719
		{
			yyVAL.node = &ast.ExprAssignCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2728
		{
			yyVAL.node = &ast.ExprPostInc{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				IncTkn:   yyDollar[2].token,
			}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2736
		{
			yyVAL.node = &ast.ExprPreInc{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2744
		{
			yyVAL.node = &ast.ExprPostDec{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				DecTkn:   yyDollar[2].token,
			}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2752
		{
			yyVAL.node = &ast.ExprPreDec{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DecTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2760
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2769
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2778
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2787
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2796
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2805
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2814
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2823
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2832
		{
			yyVAL.node = &ast.ExprBinaryConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2841
		{
			yyVAL.node = &ast.ExprBinaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2850
		{
			yyVAL.node = &ast.ExprBinaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2859
		{
			yyVAL.node = &ast.ExprBinaryMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2868
		{
			yyVAL.node = &ast.ExprBinaryPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2877
		{
			yyVAL.node = &ast.ExprBinaryDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2886
		{
			yyVAL.node = &ast.ExprBinaryMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2895
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2904
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2913
		{
			yyVAL.node = &ast.ExprUnaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PlusTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2921
		{
			yyVAL.node = &ast.ExprUnaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				MinusTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2929
		{
			yyVAL.node = &ast.ExprBooleanNot{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExclamationTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2937
		{
			yyVAL.node = &ast.ExprBitwiseNot{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				TildaTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2945
		{
			yyVAL.node = &ast.ExprBinaryIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2954
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2963
		{
			yyVAL.node = &ast.ExprBinaryEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2972
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2981
		{
			yyVAL.node = &ast.ExprBinarySmaller{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2990
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2999
		{
			yyVAL.node = &ast.ExprBinaryGreater{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3008
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3017
		{
			yyVAL.node = &ast.ExprBinarySpaceship{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3026
		{
			yyVAL.node = &ast.ExprInstanceOf{
				Position:      yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Expr:          yyDollar[1].node,
				InstanceOfTkn: yyDollar[2].token,
				Class:         yyDollar[3].node,
			}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3035
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3044
		{
			yyVAL.node = yyDollar[1].node
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3048
		{
			yyVAL.node = yyDollar[1].node
		}
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:3052
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[5].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				IfTrue:      yyDollar[3].node,
				ColonTkn:    yyDollar[4].token,
				IfFalse:     yyDollar[5].node,
			}
		}
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3063
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				ColonTkn:    yyDollar[3].token,
				IfFalse:     yyDollar[4].node,
			}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3073
		{
			yyVAL.node = &ast.ExprBinaryCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3082
		{
			yyVAL.node = yyDollar[1].node
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3086
		{
			yyVAL.node = &ast.ExprCastInt{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3094
		{
			yyVAL.node = &ast.ExprCastDouble{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3102
		{
			yyVAL.node = &ast.ExprCastString{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3110
		{
			yyVAL.node = &ast.ExprCastArray{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3118
		{
			yyVAL.node = &ast.ExprCastObject{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3126
		{
			yyVAL.node = &ast.ExprCastBool{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3134
		{
			yyVAL.node = &ast.ExprCastUnset{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3142
		{
			exit := &ast.ExprExit{
				ExitTkn: yyDollar[1].token,
			}

			if yyDollar[2].node == nil {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token)
			} else {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				exit.OpenParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).OpenParenthesisTkn
				exit.Expr = yyDollar[2].node.(*ast.ExprBrackets).Expr
				exit.CloseParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).CloseParenthesisTkn
			}

			yyVAL.node = exit
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3159
		{
			yyVAL.node = &ast.ExprErrorSuppress{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AtTkn:    yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3167
		{
			yyVAL.node = yyDollar[1].node
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3171
		{
			yyVAL.node = &ast.ExprShellExec{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBacktickTkn:  yyDollar[1].token,
				Parts:            yyDollar[2].list,
				CloseBacktickTkn: yyDollar[3].token,
			}
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3180
		{
			yyVAL.node = &ast.ExprPrint{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PrintTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3188
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				YieldTkn: yyDollar[1].token,
			}
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3195
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldTkn: yyDollar[1].token,
				Val:      yyDollar[2].node,
			}
		}
	case 397:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3203
		{
			yyVAL.node = &ast.ExprYield{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				YieldTkn:       yyDollar[1].token,
				Key:            yyDollar[2].node,
				DoubleArrowTkn: yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3213
		{
			yyVAL.node = &ast.ExprYieldFrom{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldFromTkn: yyDollar[1].token,
				Expr:         yyDollar[2].node,
			}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3221
		{
			yyVAL.node = yylex.(*Parser).builder.NewThrowExpr(yyDollar[1].token, yyDollar[2].node)
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3225
		{
			yyVAL.node = yyDollar[1].node
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3229
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			}

			yyVAL.node = yyDollar[2].node
		}
	case 402:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:3245
		{
			closure := yyDollar[7].node.(*ast.ExprClosure)

			closure.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token)
			closure.FunctionTkn = yyDollar[1].token
			closure.AmpersandTkn = yyDollar[2].token
			closure.OpenParenthesisTkn = yyDollar[4].token
			closure.Params = yyDollar[5].node.(*ParserSeparatedList).Items
			closure.SeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			closure.CloseParenthesisTkn = yyDollar[6].token
			closure.ColonTkn = yyDollar[8].node.(*ReturnType).ColonTkn
			closure.ReturnType = yyDollar[8].node.(*ReturnType).Type
			closure.OpenCurlyBracketTkn = yyDollar[9].token
			closure.Stmts = yyDollar[10].list
			closure.CloseCurlyBracketTkn = yyDollar[11].token

			yyVAL.node = closure
		}
	case 403:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:3264
		{
			yyVAL.node = &ast.ExprArrowFunction{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node),
				FnTkn:               yyDollar[1].token,
				AmpersandTkn:        yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Params:              yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[6].node.(*ReturnType).Type,
				DoubleArrowTkn:      yyDollar[8].token,
				Expr:                yyDollar[9].node,
			}
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3287
		{
			yyVAL.token = nil
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3291
		{
			yyVAL.token = yyDollar[1].token
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3298
		{
			yyVAL.node = &ast.ExprClosure{}
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3302
		{
			yyVAL.node = &ast.ExprClosure{
				UseTkn:                 yyDollar[1].token,
				UseOpenParenthesisTkn:  yyDollar[2].token,
				Uses:                   yyDollar[3].node.(*ParserSeparatedList).Items,
				UseSeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				UseCloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3315
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3322
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3331
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3345
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				AmpersandTkn: yyDollar[1].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						IdentifierTkn: yyDollar[2].token,
						Value:         yyDollar[2].token.Value,
					},
				},
			}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3363
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3374
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3395
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3416
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3430
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3438
		{
			yyVAL.node = yyDollar[1].node
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3445
		{
			yyVAL.node = yyDollar[1].node
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3449
		{
			yyVAL.node = yyDollar[1].node
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3456
		{
			yyVAL.node = nil
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3460
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3472
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3476
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
			}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3486
		{
			yyVAL.list = yyDollar[1].list
		}
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3493
		{
			yyVAL.node = nil
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3497
		{
			yyVAL.node = yyDollar[1].node
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3504
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ArrayTkn:        yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3515
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3525
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3536
		{
			yyVAL.node = &ast.ScalarLnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3544
		{
			yyVAL.node = &ast.ScalarDnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3552
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3560
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3568
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3576
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3584
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3592
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3600
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3608
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3616
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:       yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn: yyDollar[1].token,
				Parts: []ast.Vertex{
					&ast.ScalarEncapsedStringPart{
						Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						EncapsedStrTkn: yyDollar[2].token,
						Value:          yyDollar[2].token.Value,
					},
				},
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3631
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenHeredocTkn:  yyDollar[1].token,
				CloseHeredocTkn: yyDollar[2].token,
			}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3639
		{
			yyVAL.node = &ast.ScalarEncapsed{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenQuoteTkn:  yyDollar[1].token,
				Parts:         yyDollar[2].list,
				CloseQuoteTkn: yyDollar[3].token,
			}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3648
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn:  yyDollar[1].token,
				Parts:           yyDollar[2].list,
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3657
		{
			yyVAL.node = yyDollar[1].node
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3661
		{
			yyVAL.node = yyDollar[1].node
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3668
		{
			yyVAL.node = &ast.ExprConstFetch{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Const:    yyDollar[1].node,
			}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3675
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3688
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3704
		{
			yyVAL.node = yyDollar[1].node
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3708
		{
			yyVAL.node = yyDollar[1].node
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3715
		{
			yyVAL.node = nil
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3719
		{
			yyVAL.node = yyDollar[1].node
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3726
		{
			yyVAL.node = yyDollar[1].node
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3733
		{
			yyVAL.node = yyDollar[1].node
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3737
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3746
		{
			yyVAL.node = yyDollar[1].node
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3753
		{
			yyVAL.node = yyDollar[1].node
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3757
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3766
		{
			yyVAL.node = yyDollar[1].node
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3773
		{
			yyVAL.node = yyDollar[1].node
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3777
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3787
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3797
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3809
		{
			yyVAL.node = yylex.(*Parser).builder.NewMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3813
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafeMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3817
		{
			yyVAL.node = yyDollar[1].node
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3824
		{
			yyVAL.node = yyDollar[1].node
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3828
		{
			yyVAL.node = yyDollar[1].node
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3832
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3836
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3843
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3854
		{
			yyVAL.node = &ast.ExprVariable{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				DollarTkn:            yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Name:                 yyDollar[3].node,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3864
		{
			yyVAL.node = &ast.ExprVariable{
				Position:  yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DollarTkn: yyDollar[1].token,
				Name:      yyDollar[2].node,
			}
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3875
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3884
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3896
		{
			yyVAL.node = yyDollar[1].node
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3900
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3910
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3922
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3926
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3930
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3939
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3951
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3959
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3968
		{
			yyVAL.node = yyDollar[1].node
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3975
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3983
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3992
		{
			yyVAL.node = yyDollar[1].node
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3999
		{
			pairList := yyDollar[1].node.(*ParserSeparatedList)
			fistPair := pairList.Items[0].(*ast.ExprArrayItem)

			if fistPair.Key == nil && fistPair.Val == nil && len(pairList.Items) == 1 {
				pairList.Items = nil
			}

			yyVAL.node = yyDollar[1].node
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:4013
		{
			yyVAL.node = &ast.ExprArrayItem{}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4017
		{
			yyVAL.node = yyDollar[1].node
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4024
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4031
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4040
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val:            yyDollar[3].node,
			}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4049
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Val:      yyDollar[1].node,
			}
		}
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4056
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				AmpersandTkn:   yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4066
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Val:          yyDollar[2].node,
			}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4074
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:    yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				EllipsisTkn: yyDollar[1].token,
				Val:         yyDollar[2].node,
			}
		}
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:4082
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[3].token, yyDollar[6].token),
					ListTkn:         yyDollar[3].token,
					OpenBracketTkn:  yyDollar[4].token,
					Items:           yyDollar[5].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[6].token,
				},
			}
		}
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4098
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
			}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4115
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4119
		{
			yyVAL.list = append(
				yyDollar[1].list,
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					EncapsedStrTkn: yyDollar[2].token,
					Value:          yyDollar[2].token.Value,
				},
			)
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4130
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4134
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
				yyDollar[2].node,
			}
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4148
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4159
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4176
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4180
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4184
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name:                      yyDollar[2].node,
				CloseCurlyBracketTkn:      yyDollar[3].token,
			}
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4193
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 512:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:4206
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenSquareBracketTkn:  yyDollar[3].token,
				Dim:                   yyDollar[4].node,
				CloseSquareBracketTkn: yyDollar[5].token,
				CloseCurlyBracketTkn:  yyDollar[6].token,
			}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4222
		{
			yyVAL.node = &ast.ScalarEncapsedStringBrackets{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Var:                  yyDollar[2].node,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4234
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4242
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(string(yyDollar[1].token.Value)); err == nil {
				yyVAL.node = &ast.ScalarLnumber{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					NumberTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					StringTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4259
		{
			_, err := strconv.Atoi(string(yyDollar[2].token.Value))
			isInt := err == nil

			if isInt {
				yyVAL.node = &ast.ExprUnaryMinus{
					Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn: yyDollar[1].token,
					Expr: &ast.ScalarLnumber{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						NumberTkn: yyDollar[2].token,
						Value:     yyDollar[2].token.Value,
					},
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn:  yyDollar[1].token,
					StringTkn: yyDollar[2].token,
					Value:     append([]byte("-"), yyDollar[2].token.Value...),
				}
			}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4283
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:4297
		{
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[4].token)
			}

			yyVAL.node = &ast.ExprIsset{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				IssetTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Vars:                yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
			}
		}
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4312
		{
			yyVAL.node = &ast.ExprEmpty{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EmptyTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4322
		{
			yyVAL.node = &ast.ExprInclude{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4330
		{
			yyVAL.node = &ast.ExprIncludeOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4338
		{
			yyVAL.node = &ast.ExprEval{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EvalTkn:             yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4348
		{
			yyVAL.node = &ast.ExprRequire{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4356
		{
			yyVAL.node = &ast.ExprRequireOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4367
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4373
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4383
		{
			yyVAL.node = yyDollar[1].node
		}
	}
	goto yystack /* stack new state and value */
}
