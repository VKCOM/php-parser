// Code generated by goyacc -o internal/php8/php8.go internal/php8/php8.y. DO NOT EDIT.

// line internal/php8/php8.y:1

package php8

import __yyfmt__ "fmt"

// line internal/php8/php8.y:3

import (
	"strconv"

	"github.com/z7zmey/php-parser/pkg/ast"
	"github.com/z7zmey/php-parser/pkg/token"
)

// line internal/php8/php8.y:13
type yySymType struct {
	yys   int
	node  ast.Vertex
	token *token.Token
	list  []ast.Vertex
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_FN = 57380
const T_CONST = 57381
const T_RETURN = 57382
const T_TRY = 57383
const T_CATCH = 57384
const T_FINALLY = 57385
const T_THROW = 57386
const T_USE = 57387
const T_INSTEADOF = 57388
const T_GLOBAL = 57389
const T_VAR = 57390
const T_UNSET = 57391
const T_ISSET = 57392
const T_EMPTY = 57393
const T_HALT_COMPILER = 57394
const T_CLASS = 57395
const T_TRAIT = 57396
const T_INTERFACE = 57397
const T_EXTENDS = 57398
const T_IMPLEMENTS = 57399
const T_OBJECT_OPERATOR = 57400
const T_DOUBLE_ARROW = 57401
const T_LIST = 57402
const T_ARRAY = 57403
const T_CALLABLE = 57404
const T_CLASS_C = 57405
const T_TRAIT_C = 57406
const T_METHOD_C = 57407
const T_FUNC_C = 57408
const T_LINE = 57409
const T_FILE = 57410
const T_COMMENT = 57411
const T_DOC_COMMENT = 57412
const T_OPEN_TAG = 57413
const T_OPEN_TAG_WITH_ECHO = 57414
const T_CLOSE_TAG = 57415
const T_WHITESPACE = 57416
const T_START_HEREDOC = 57417
const T_END_HEREDOC = 57418
const T_DOLLAR_OPEN_CURLY_BRACES = 57419
const T_CURLY_OPEN = 57420
const T_PAAMAYIM_NEKUDOTAYIM = 57421
const T_NAMESPACE = 57422
const T_NS_C = 57423
const T_DIR = 57424
const T_NS_SEPARATOR = 57425
const T_ELLIPSIS = 57426
const T_EVAL = 57427
const T_REQUIRE = 57428
const T_REQUIRE_ONCE = 57429
const T_LOGICAL_OR = 57430
const T_LOGICAL_XOR = 57431
const T_LOGICAL_AND = 57432
const T_INSTANCEOF = 57433
const T_NEW = 57434
const T_CLONE = 57435
const T_ELSEIF = 57436
const T_ELSE = 57437
const T_ENDIF = 57438
const T_PRINT = 57439
const T_YIELD = 57440
const T_STATIC = 57441
const T_ABSTRACT = 57442
const T_FINAL = 57443
const T_PRIVATE = 57444
const T_PROTECTED = 57445
const T_PUBLIC = 57446
const T_INC = 57447
const T_DEC = 57448
const T_YIELD_FROM = 57449
const T_INT_CAST = 57450
const T_DOUBLE_CAST = 57451
const T_STRING_CAST = 57452
const T_ARRAY_CAST = 57453
const T_OBJECT_CAST = 57454
const T_BOOL_CAST = 57455
const T_UNSET_CAST = 57456
const T_COALESCE = 57457
const T_SPACESHIP = 57458
const T_NOELSE = 57459
const T_PLUS_EQUAL = 57460
const T_MINUS_EQUAL = 57461
const T_MUL_EQUAL = 57462
const T_POW_EQUAL = 57463
const T_DIV_EQUAL = 57464
const T_CONCAT_EQUAL = 57465
const T_MOD_EQUAL = 57466
const T_AND_EQUAL = 57467
const T_OR_EQUAL = 57468
const T_XOR_EQUAL = 57469
const T_SL_EQUAL = 57470
const T_SR_EQUAL = 57471
const T_COALESCE_EQUAL = 57472
const T_BOOLEAN_OR = 57473
const T_BOOLEAN_AND = 57474
const T_POW = 57475
const T_SL = 57476
const T_SR = 57477
const T_IS_IDENTICAL = 57478
const T_IS_NOT_IDENTICAL = 57479
const T_IS_EQUAL = 57480
const T_IS_NOT_EQUAL = 57481
const T_IS_SMALLER_OR_EQUAL = 57482
const T_IS_GREATER_OR_EQUAL = 57483
const T_NULLSAFE_OBJECT_OPERATOR = 57484
const T_MATCH = 57485

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_FN",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_COALESCE_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"T_NULLSAFE_OBJECT_OPERATOR",
	"T_MATCH",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

// line internal/php8/php8.y:4471

// line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	-2, 0,
	-1, 44,
	58, 441,
	79, 441,
	142, 441,
	146, 441,
	152, 441,
	-2, 436,
	-1, 48,
	150, 444,
	-2, 454,
	-1, 86,
	58, 443,
	79, 443,
	142, 443,
	146, 443,
	150, 446,
	152, 443,
	-2, 431,
	-1, 111,
	79, 404,
	-2, 433,
	-1, 236,
	58, 441,
	79, 441,
	142, 441,
	146, 441,
	152, 441,
	-2, 329,
	-1, 239,
	150, 446,
	-2, 443,
	-1, 242,
	58, 441,
	79, 441,
	142, 441,
	146, 441,
	152, 441,
	-2, 331,
	-1, 362,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 353,
	-1, 363,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 354,
	-1, 364,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 355,
	-1, 365,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 356,
	-1, 366,
	140, 0,
	141, 0,
	169, 0,
	170, 0,
	-2, 357,
	-1, 367,
	140, 0,
	141, 0,
	169, 0,
	170, 0,
	-2, 358,
	-1, 368,
	140, 0,
	141, 0,
	169, 0,
	170, 0,
	-2, 359,
	-1, 369,
	140, 0,
	141, 0,
	169, 0,
	170, 0,
	-2, 360,
	-1, 370,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 361,
	-1, 377,
	151, 167,
	162, 167,
	-2, 441,
	-1, 423,
	151, 484,
	153, 484,
	162, 484,
	-2, 441,
	-1, 428,
	58, 442,
	79, 442,
	142, 442,
	146, 442,
	150, 445,
	152, 442,
	-2, 363,
	-1, 443,
	150, 470,
	-2, 434,
	-1, 444,
	150, 472,
	-2, 461,
	-1, 525,
	150, 470,
	-2, 435,
	-1, 526,
	150, 472,
	-2, 462,
	-1, 545,
	151, 217,
	-2, 222,
	-1, 553,
	149, 80,
	-2, 84,
	-1, 557,
	149, 13,
	-2, 407,
	-1, 559,
	149, 46,
	-2, 382,
	-1, 560,
	149, 72,
	-2, 403,
	-1, 570,
	149, 65,
	-2, 419,
	-1, 571,
	149, 66,
	-2, 420,
	-1, 572,
	149, 67,
	-2, 421,
	-1, 573,
	149, 62,
	-2, 422,
	-1, 574,
	149, 64,
	-2, 423,
	-1, 575,
	149, 63,
	-2, 424,
	-1, 576,
	149, 68,
	-2, 425,
	-1, 577,
	149, 61,
	-2, 426,
	-1, 578,
	150, 391,
	-2, 42,
	-1, 579,
	150, 391,
	-2, 69,
	-1, 617,
	151, 217,
	-2, 222,
	-1, 643,
	150, 445,
	-2, 442,
	-1, 713,
	151, 187,
	-2, 441,
	-1, 721,
	151, 217,
	-2, 222,
	-1, 737,
	151, 483,
	153, 483,
	162, 483,
	-2, 441,
	-1, 776,
	151, 188,
	-2, 441,
	-1, 792,
	37, 273,
	39, 273,
	-2, 270,
	-1, 806,
	94, 212,
	95, 212,
	96, 212,
	-2, 0,
	-1, 842,
	151, 187,
	-2, 441,
	-1, 844,
	151, 190,
	-2, 415,
	-1, 859,
	94, 213,
	95, 213,
	96, 213,
	-2, 0,
	-1, 921,
	31, 203,
	32, 203,
	33, 203,
	147, 203,
	-2, 0,
	-1, 952,
	29, 78,
	-2, 84,
	-1, 958,
	31, 202,
	32, 202,
	33, 202,
	147, 202,
	-2, 0,
	-1, 986,
	151, 217,
	-2, 222,
}

const yyPrivate = 57344

const yyLast = 8343

var yyAct = [...]int{

	28, 134, 818, 674, 624, 904, 384, 794, 448, 945,
	931, 903, 838, 881, 900, 813, 726, 291, 111, 677,
	678, 130, 142, 142, 142, 712, 331, 155, 694, 322,
	693, 758, 5, 676, 769, 190, 447, 538, 619, 549,
	227, 679, 376, 229, 154, 82, 326, 325, 136, 9,
	8, 386, 132, 231, 235, 193, 84, 243, 244, 245,
	246, 247, 151, 147, 414, 248, 249, 250, 251, 252,
	253, 254, 129, 257, 611, 2, 265, 266, 267, 86,
	141, 324, 323, 44, 7, 6, 78, 527, 442, 271,
	941, 938, 281, 282, 131, 284, 285, 925, 915, 735,
	237, 237, 637, 144, 145, 342, 276, 908, 318, 907,
	939, 415, 150, 109, 121, 964, 109, 728, 614, 115,
	824, 261, 870, 728, 940, 868, 965, 865, 935, 317,
	762, 119, 125, 588, 239, 239, 328, 343, 236, 242,
	333, 334, 936, 109, 273, 751, 528, 311, 315, 686,
	671, 344, 612, 109, 603, 330, 421, 275, 345, 346,
	347, 348, 349, 350, 351, 352, 353, 354, 355, 356,
	357, 358, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 138, 372, 374, 116, 378, 194,
	340, 380, 932, 753, 844, 647, 304, 650, 648, 744,
	740, 658, 276, 240, 341, 388, 396, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	644, 338, 411, 142, 413, 631, 268, 231, 420, 183,
	150, 392, 237, 435, 424, 339, 299, 316, 301, 426,
	273, 310, 231, 308, 654, 183, 314, 416, 926, 655,
	997, 317, 916, 960, 889, 311, 121, 142, 294, 296,
	888, 879, 110, 860, 437, 110, 239, 419, 848, 142,
	377, 169, 224, 371, 784, 443, 525, 292, 237, 536,
	539, 540, 427, 379, 541, 774, 755, 169, 750, 986,
	418, 748, 110, 546, 167, 166, 550, 739, 231, 121,
	710, 109, 110, 412, 168, 170, 171, 681, 682, 165,
	237, 699, 239, 689, 645, 636, 423, 436, 300, 598,
	168, 170, 171, 896, 883, 882, 138, 434, 846, 116,
	298, 315, 554, 777, 5, 933, 532, 429, 582, 738,
	721, 649, 297, 607, 239, 155, 283, 707, 439, 441,
	708, 9, 8, 280, 279, 278, 225, 534, 256, 524,
	223, 226, 295, 535, 992, 617, 222, 601, 599, 138,
	597, 545, 116, 425, 610, 393, 391, 221, 188, 585,
	187, 431, 432, 186, 591, 140, 7, 6, 240, 608,
	616, 139, 626, 303, 627, 302, 623, 628, 629, 135,
	680, 117, 819, 605, 606, 1001, 621, 1000, 431, 625,
	432, 432, 431, 833, 834, 833, 834, 634, 804, 688,
	533, 395, 231, 639, 531, 192, 231, 975, 974, 590,
	530, 593, 959, 922, 890, 885, 878, 618, 830, 219,
	220, 657, 159, 161, 160, 183, 660, 805, 773, 772,
	110, 770, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 638, 642, 768, 765, 185,
	182, 602, 587, 584, 394, 382, 337, 336, 335, 791,
	81, 305, 793, 121, 877, 157, 158, 169, 172, 173,
	174, 175, 176, 177, 179, 181, 874, 183, 205, 863,
	861, 583, 883, 882, 826, 148, 583, 583, 184, 163,
	167, 166, 656, 262, 980, 929, 928, 162, 433, 164,
	168, 170, 171, 178, 180, 165, 583, 430, 884, 183,
	832, 142, 664, 798, 799, 800, 797, 796, 795, 169,
	172, 173, 862, 851, 847, 786, 179, 181, 747, 727,
	622, 189, 687, 169, 124, 822, 118, 235, 260, 265,
	266, 633, 167, 166, 683, 635, 281, 282, 277, 284,
	285, 169, 168, 170, 171, 178, 180, 165, 263, 264,
	276, 953, 202, 204, 203, 118, 298, 668, 978, 659,
	121, 293, 313, 195, 200, 201, 330, 665, 666, 313,
	313, 529, 703, 333, 705, 698, 270, 269, 183, 121,
	709, 663, 670, 914, 315, 5, 695, 912, 273, 120,
	866, 722, 313, 685, 775, 725, 724, 976, 121, 704,
	701, 620, 9, 8, 387, 390, 683, 760, 736, 625,
	79, 80, 697, 691, 718, 544, 298, 150, 313, 850,
	169, 172, 173, 692, 596, 711, 742, 723, 237, 237,
	732, 121, 594, 592, 277, 288, 289, 7, 6, 781,
	782, 661, 539, 167, 166, 855, 589, 854, 307, 681,
	682, 121, 309, 168, 170, 171, 237, 550, 165, 757,
	262, 329, 239, 239, 977, 433, 377, 713, 138, 683,
	121, 116, 312, 901, 766, 417, 417, 746, 127, 749,
	128, 741, 593, 759, 593, 262, 152, 231, 763, 695,
	239, 779, 754, 554, 737, 783, 756, 127, 764, 128,
	785, 138, 137, 108, 116, 806, 807, 966, 46, 231,
	683, 137, 108, 771, 801, 696, 873, 802, 817, 262,
	444, 526, 152, 810, 126, 263, 264, 778, 123, 803,
	237, 798, 799, 800, 797, 796, 795, 121, 761, 333,
	683, 262, 791, 652, 651, 793, 433, 196, 231, 808,
	263, 264, 759, 133, 695, 820, 1, 595, 262, 583,
	385, 827, 825, 290, 239, 831, 856, 262, 776, 383,
	857, 841, 286, 852, 839, 835, 859, 837, 683, 853,
	625, 593, 199, 542, 263, 264, 593, 593, 843, 262,
	148, 237, 38, 198, 259, 871, 798, 799, 800, 797,
	796, 795, 197, 823, 880, 543, 263, 264, 683, 828,
	872, 191, 887, 886, 833, 834, 875, 792, 789, 893,
	790, 894, 895, 263, 264, 239, 836, 833, 834, 842,
	944, 287, 263, 264, 720, 892, 817, 911, 897, 258,
	812, 913, 811, 905, 934, 62, 816, 814, 849, 909,
	593, 910, 593, 921, 263, 264, 389, 864, 375, 700,
	867, 869, 917, 999, 920, 706, 906, 230, 43, 42,
	876, 924, 791, 902, 537, 793, 930, 16, 937, 918,
	899, 942, 548, 954, 951, 955, 956, 15, 839, 891,
	153, 957, 958, 646, 274, 49, 48, 950, 112, 50,
	962, 963, 85, 83, 73, 255, 228, 63, 272, 968,
	61, 949, 970, 948, 593, 961, 947, 946, 788, 971,
	951, 967, 969, 149, 973, 146, 798, 799, 800, 797,
	796, 795, 45, 950, 780, 717, 675, 332, 319, 122,
	306, 3, 552, 821, 752, 984, 983, 985, 0, 0,
	0, 987, 993, 0, 991, 990, 989, 0, 0, 0,
	994, 0, 0, 0, 0, 625, 995, 0, 0, 0,
	998, 0, 0, 1002, 898, 683, 0, 0, 0, 0,
	662, 0, 0, 417, 417, 667, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 565,
	566, 557, 467, 96, 97, 553, 0, 109, 0, 0,
	0, 0, 277, 114, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 501, 502, 503, 504, 505,
	493, 494, 578, 579, 496, 497, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 563, 564, 0, 513, 511,
	512, 508, 509, 0, 0, 555, 580, 507, 577, 573,
	574, 575, 570, 571, 791, 0, 0, 793, 0, 0,
	106, 0, 0, 0, 0, 581, 576, 572, 116, 551,
	567, 568, 569, 460, 461, 462, 463, 561, 556, 468,
	469, 470, 558, 559, 560, 450, 451, 452, 453, 454,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 798, 799,
	800, 797, 796, 795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 562, 107,
	74, 0, 0, 0, 0, 60, 547, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 110, 565, 566, 557,
	467, 96, 97, 553, 0, 109, 858, 0, 0, 0,
	0, 114, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 501, 502, 503, 504, 505, 493, 494,
	578, 579, 496, 497, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 563, 564, 0, 513, 511, 512, 508,
	509, 0, 0, 555, 580, 507, 577, 573, 574, 575,
	570, 571, 791, 0, 0, 793, 0, 0, 106, 0,
	0, 0, 0, 581, 576, 572, 116, 551, 567, 568,
	569, 460, 461, 462, 463, 561, 556, 468, 469, 470,
	558, 559, 560, 450, 451, 452, 453, 454, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 798, 799, 800, 797,
	796, 795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 107, 74, 0,
	0, 0, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 110, 4, 0, 91, 92, 71,
	47, 96, 97, 36, 787, 109, 0, 27, 0, 0,
	0, 114, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 108, 13, 23, 33, 0, 0, 34, 12, 0,
	24, 0, 29, 89, 90, 10, 39, 40, 41, 0,
	0, 0, 0, 51, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 11, 104, 100, 116, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 53, 0, 0, 0,
	75, 76, 25, 79, 80, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 74, 14,
	690, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 110, 4, 0, 91, 92, 71,
	47, 96, 97, 36, 0, 109, 0, 27, 0, 0,
	0, 114, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 108, 13, 23, 33, 0, 0, 34, 12, 0,
	24, 0, 29, 89, 90, 10, 39, 40, 41, 0,
	0, 0, 0, 51, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 11, 104, 100, 116, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 53, 0, 0, 0,
	75, 76, 25, 79, 80, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 74, 14,
	586, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 110, 4, 0, 91, 92, 71,
	47, 96, 97, 36, 0, 109, 0, 27, 0, 0,
	0, 114, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 108, 13, 23, 33, 0, 0, 34, 12, 0,
	24, 0, 29, 89, 90, 10, 39, 40, 41, 0,
	0, 0, 0, 51, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 11, 104, 100, 116, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 53, 0, 0, 0,
	75, 76, 25, 79, 80, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 74, 14,
	0, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 110, 321, 0, 91, 92, 71,
	47, 96, 97, 36, 0, 109, 0, 27, 0, 0,
	0, 114, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 108, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 89, 90, 327, 39, 40, 41, 0,
	0, 0, 0, 51, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 138, 104, 100, 116, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 53, 0, 0, 0,
	75, 76, 25, 79, 80, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 74, 14,
	1003, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 110, 321, 0, 91, 92, 71,
	47, 96, 97, 36, 0, 109, 0, 27, 0, 0,
	0, 114, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 108, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 89, 90, 327, 39, 40, 41, 0,
	0, 0, 0, 51, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 138, 104, 100, 116, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 53, 0, 0, 0,
	75, 76, 25, 79, 80, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 74, 14,
	996, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 110, 321, 0, 91, 92, 71,
	47, 96, 97, 36, 0, 109, 0, 27, 0, 0,
	0, 114, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 108, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 89, 90, 327, 39, 40, 41, 0,
	0, 0, 0, 51, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 138, 104, 100, 116, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 53, 0, 0, 0,
	75, 76, 25, 79, 80, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 74, 14,
	982, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 110, 321, 0, 91, 92, 71,
	47, 96, 97, 36, 0, 109, 0, 27, 0, 0,
	0, 114, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 108, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 89, 90, 327, 39, 40, 41, 0,
	0, 0, 0, 51, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 138, 104, 100, 116, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 53, 0, 0, 0,
	75, 76, 25, 79, 80, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 74, 14,
	981, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 110, 321, 0, 91, 92, 71,
	47, 96, 97, 36, 0, 109, 0, 27, 0, 0,
	0, 114, 26, 18, 17, 0, 19, 979, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 108, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 89, 90, 327, 39, 40, 41, 0,
	0, 0, 0, 51, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 138, 104, 100, 116, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 53, 0, 0, 0,
	75, 76, 25, 79, 80, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 74, 14,
	0, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 110, 321, 0, 91, 92, 71,
	47, 96, 97, 36, 0, 109, 0, 27, 0, 0,
	0, 114, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 108, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 89, 90, 327, 39, 40, 41, 0,
	0, 0, 0, 51, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 138, 104, 100, 116, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 53, 0, 0, 0,
	75, 76, 25, 79, 80, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 74, 14,
	927, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 110, 321, 0, 91, 92, 71,
	47, 96, 97, 36, 0, 109, 0, 27, 0, 0,
	0, 114, 26, 18, 17, 0, 19, 0, 30, 923,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 108, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 89, 90, 327, 39, 40, 41, 0,
	0, 0, 0, 51, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 138, 104, 100, 116, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 53, 0, 0, 0,
	75, 76, 25, 79, 80, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 74, 14,
	0, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 110, 321, 0, 91, 92, 71,
	47, 96, 97, 36, 0, 109, 0, 27, 0, 0,
	0, 114, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 845, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 108, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 89, 90, 327, 39, 40, 41, 0,
	0, 0, 0, 51, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 138, 104, 100, 116, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 53, 0, 0, 0,
	75, 76, 25, 79, 80, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 74, 14,
	0, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 110, 321, 0, 91, 92, 71,
	47, 96, 97, 36, 0, 109, 0, 27, 0, 0,
	0, 114, 26, 18, 17, 829, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 108, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 89, 90, 327, 39, 40, 41, 0,
	0, 0, 0, 51, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 138, 104, 100, 116, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 53, 0, 0, 0,
	75, 76, 25, 79, 80, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 74, 14,
	0, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 110, 321, 0, 91, 92, 71,
	47, 96, 97, 36, 0, 109, 0, 27, 0, 0,
	0, 114, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 108, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 89, 90, 327, 39, 40, 41, 0,
	0, 0, 0, 51, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 138, 104, 100, 116, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 53, 0, 0, 731,
	75, 76, 25, 79, 80, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 74, 14,
	0, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 110, 321, 0, 91, 92, 71,
	47, 96, 97, 36, 0, 109, 0, 27, 0, 0,
	0, 114, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 108, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 89, 90, 327, 39, 40, 41, 0,
	0, 0, 0, 51, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 138, 104, 100, 116, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 53, 0, 0, 0,
	75, 76, 25, 79, 80, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 74, 14,
	615, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 110, 321, 0, 91, 92, 71,
	47, 96, 97, 36, 0, 109, 0, 27, 0, 0,
	0, 114, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 108, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 89, 90, 327, 39, 40, 41, 0,
	0, 0, 0, 51, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 138, 104, 100, 116, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 53, 0, 0, 0,
	75, 76, 25, 79, 80, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 74, 14,
	320, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 110, 321, 0, 91, 92, 71,
	47, 96, 97, 36, 0, 109, 0, 27, 0, 0,
	0, 114, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 108, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 89, 90, 327, 39, 40, 41, 0,
	0, 0, 0, 51, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 138, 104, 100, 116, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 53, 0, 0, 0,
	75, 76, 25, 79, 80, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 74, 14,
	0, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 110, 455, 456, 466, 467, 0,
	0, 446, 0, 109, 0, 0, 0, 0, 0, 0,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 501, 502, 503, 504, 505, 493, 494, 495, 522,
	496, 497, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 513, 511, 512, 508, 509, 0,
	0, 500, 506, 507, 514, 515, 517, 516, 518, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 510, 521, 520, 0, 0, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 468, 469, 470, 498, 499,
	449, 450, 451, 452, 453, 454, 0, 0, 0, 91,
	92, 71, 47, 96, 97, 36, 0, 109, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 35, 137, 108, 523, 23, 33, 445, 0, 34,
	0, 0, 24, 0, 29, 89, 90, 0, 0, 0,
	0, 0, 110, 0, 0, 51, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 138, 104, 100, 116, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 53, 0,
	0, 0, 75, 76, 25, 0, 0, 0, 0, 0,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	74, 14, 0, 32, 840, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 110, 91, 92, 71,
	47, 96, 97, 36, 0, 109, 0, 27, 0, 0,
	0, 114, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	137, 108, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 89, 90, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 138, 104, 100, 116, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 53, 0, 0, 0,
	75, 76, 25, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 74, 14,
	0, 32, 919, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 110, 91, 92, 71, 47, 96,
	97, 36, 0, 109, 0, 27, 0, 0, 0, 114,
	26, 18, 17, 0, 19, 0, 30, 0, 31, 0,
	0, 20, 0, 0, 0, 21, 22, 35, 137, 108,
	0, 23, 33, 0, 0, 34, 0, 0, 24, 0,
	29, 89, 90, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 113, 0, 105, 101, 102, 103, 98, 99,
	0, 0, 0, 0, 0, 0, 106, 0, 0, 0,
	0, 138, 104, 100, 116, 0, 93, 94, 95, 0,
	0, 0, 0, 87, 53, 0, 0, 0, 75, 76,
	25, 0, 0, 0, 0, 0, 54, 55, 77, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 88, 107, 74, 14, 0, 32,
	733, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 72, 110, 91, 92, 71, 47, 96, 97, 36,
	0, 109, 0, 27, 0, 0, 0, 114, 26, 18,
	17, 0, 19, 0, 30, 0, 31, 0, 0, 20,
	0, 0, 0, 21, 22, 35, 137, 108, 0, 23,
	33, 0, 0, 34, 0, 0, 24, 0, 29, 89,
	90, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	113, 0, 105, 101, 102, 103, 98, 99, 0, 0,
	0, 0, 0, 0, 106, 0, 0, 0, 0, 138,
	104, 100, 116, 0, 93, 94, 95, 0, 0, 0,
	0, 87, 53, 0, 0, 0, 75, 76, 25, 0,
	0, 0, 0, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 107, 74, 14, 0, 32, 719, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 72,
	110, 91, 92, 71, 47, 96, 97, 36, 0, 109,
	0, 27, 0, 0, 0, 114, 26, 18, 17, 0,
	19, 0, 30, 0, 31, 0, 0, 20, 0, 0,
	0, 21, 22, 35, 137, 108, 0, 23, 33, 0,
	0, 34, 0, 0, 24, 0, 29, 89, 90, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 113, 0,
	105, 101, 102, 103, 98, 99, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 0, 138, 104, 100,
	116, 0, 93, 94, 95, 0, 0, 0, 0, 87,
	53, 0, 0, 0, 75, 76, 25, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 107, 74, 14, 0, 32, 702, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 72, 110, 91,
	92, 71, 47, 96, 97, 36, 0, 109, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 35, 137, 108, 0, 23, 33, 0, 0, 34,
	0, 0, 24, 0, 29, 89, 90, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 138, 104, 100, 116, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 53, 0,
	0, 0, 75, 76, 25, 0, 0, 0, 0, 0,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	74, 14, 0, 32, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 110, 455, 456, 466,
	467, 0, 0, 952, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 501, 502, 503, 504, 505, 493, 494,
	495, 522, 496, 497, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 513, 511, 512, 508,
	509, 0, 0, 500, 506, 507, 514, 515, 517, 516,
	518, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 581, 521, 520, 116, 0, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 468, 469, 470,
	498, 499, 449, 450, 451, 452, 453, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 455, 456, 466, 467,
	0, 0, 952, 0, 0, 0, 523, 0, 0, 0,
	972, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 501, 502, 503, 504, 505, 493, 494, 495,
	522, 496, 497, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 513, 511, 512, 508, 509,
	0, 0, 500, 506, 507, 514, 515, 517, 516, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 521, 520, 116, 0, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 468, 469, 470, 498,
	499, 449, 450, 451, 452, 453, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 455, 456, 466, 467, 0,
	0, 446, 0, 0, 0, 523, 0, 0, 0, 943,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 501, 502, 503, 504, 505, 493, 494, 495, 522,
	496, 497, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 0, 513, 511, 512, 508, 509, 0,
	0, 500, 506, 507, 514, 515, 517, 516, 518, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 510, 521, 520, 0, 0, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 468, 469, 470, 498, 499,
	449, 450, 451, 452, 453, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	455, 456, 466, 467, 0, 0, 988, 0, 0, 0,
	0, 0, 0, 0, 523, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 501, 502, 503, 504,
	505, 493, 494, 495, 522, 496, 497, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 0, 513,
	511, 512, 508, 509, 0, 0, 500, 506, 507, 514,
	515, 517, 516, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 510, 521, 520, 0,
	0, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	468, 469, 470, 498, 499, 798, 799, 800, 797, 796,
	795, 91, 92, 71, 0, 96, 97, 121, 0, 109,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 108, 0, 0, 0, 523,
	0, 0, 0, 0, 0, 0, 0, 89, 90, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 113, 0,
	105, 101, 102, 103, 98, 99, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 0, 138, 104, 100,
	116, 233, 93, 94, 95, 0, 0, 0, 0, 87,
	53, 0, 0, 0, 75, 76, 143, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 91, 92, 71,
	0, 96, 97, 121, 0, 109, 0, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 107, 74, 0, 0, 0, 815, 60, 0, 52,
	137, 108, 232, 57, 56, 58, 59, 72, 110, 0,
	0, 0, 0, 89, 90, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 138, 104, 100, 116, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 53, 0, 0, 0,
	75, 76, 143, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 91, 92, 71, 0, 96, 97, 121,
	0, 109, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 74, 0,
	0, 0, 0, 60, 0, 52, 137, 108, 0, 57,
	56, 58, 59, 72, 110, 0, 0, 0, 0, 89,
	90, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	113, 0, 105, 101, 102, 103, 98, 99, 0, 0,
	0, 0, 0, 0, 106, 0, 0, 0, 0, 138,
	104, 100, 116, 0, 93, 94, 95, 0, 0, 0,
	0, 87, 53, 0, 0, 0, 75, 76, 143, 0,
	0, 0, 0, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 91,
	92, 71, 0, 96, 97, 121, 438, 109, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 107, 74, 0, 0, 0, 0, 60,
	0, 52, 137, 108, 640, 57, 56, 58, 59, 72,
	110, 0, 0, 0, 0, 89, 90, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 138, 104, 100, 116, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 53, 0,
	0, 0, 75, 76, 143, 0, 0, 0, 0, 0,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 91, 92, 71, 0, 96,
	97, 121, 0, 109, 0, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	74, 0, 0, 0, 0, 60, 0, 52, 137, 108,
	0, 57, 56, 58, 59, 72, 110, 0, 0, 0,
	0, 89, 90, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 113, 0, 105, 101, 102, 103, 98, 99,
	0, 0, 0, 0, 0, 0, 106, 0, 0, 0,
	0, 138, 104, 100, 116, 0, 93, 94, 95, 0,
	0, 0, 0, 87, 53, 0, 0, 0, 75, 76,
	143, 0, 0, 0, 0, 0, 54, 55, 77, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 0,
	0, 91, 92, 71, 0, 96, 97, 121, 0, 109,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	0, 0, 0, 0, 88, 107, 74, 0, 0, 0,
	0, 60, 0, 52, 137, 108, 397, 57, 56, 58,
	59, 72, 110, 0, 0, 0, 0, 89, 90, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 113, 0,
	105, 101, 102, 103, 98, 99, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 0, 138, 104, 100,
	116, 0, 93, 94, 95, 0, 0, 0, 0, 87,
	53, 0, 0, 0, 75, 76, 143, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 91, 92, 71,
	0, 96, 97, 121, 0, 109, 0, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 107, 74, 0, 0, 0, 373, 60, 0, 52,
	137, 108, 0, 57, 56, 58, 59, 72, 110, 0,
	0, 0, 0, 89, 90, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 138, 104, 100, 116, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 53, 0, 0, 0,
	75, 76, 143, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 159, 161, 160, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 74, 185,
	182, 0, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 110, 157, 158, 169, 172, 173,
	174, 175, 176, 177, 179, 181, 0, 0, 0, 159,
	161, 160, 183, 0, 0, 0, 0, 809, 184, 163,
	167, 166, 0, 0, 0, 0, 0, 162, 0, 164,
	168, 170, 171, 178, 180, 165, 185, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 158, 169, 172, 173, 174, 175, 176,
	177, 179, 181, 0, 0, 0, 159, 161, 160, 183,
	0, 0, 767, 0, 0, 184, 163, 167, 166, 0,
	0, 0, 0, 0, 162, 0, 164, 168, 170, 171,
	178, 180, 165, 185, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	158, 169, 172, 173, 174, 175, 176, 177, 179, 181,
	0, 0, 0, 0, 0, 745, 159, 161, 160, 183,
	0, 0, 184, 163, 167, 166, 0, 0, 0, 0,
	0, 162, 0, 164, 168, 170, 171, 178, 180, 165,
	0, 0, 0, 185, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	158, 169, 172, 173, 174, 175, 176, 177, 179, 181,
	0, 0, 0, 0, 0, 743, 159, 161, 160, 183,
	0, 0, 184, 163, 167, 166, 0, 0, 0, 0,
	0, 162, 0, 164, 168, 170, 171, 178, 180, 165,
	0, 0, 0, 185, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	158, 169, 172, 173, 174, 175, 176, 177, 179, 181,
	0, 0, 0, 0, 0, 734, 159, 161, 160, 183,
	0, 0, 184, 163, 167, 166, 0, 0, 0, 0,
	0, 162, 0, 164, 168, 170, 171, 178, 180, 165,
	0, 0, 0, 185, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	158, 169, 172, 173, 174, 175, 176, 177, 179, 181,
	0, 0, 0, 159, 161, 160, 183, 0, 0, 730,
	0, 0, 184, 163, 167, 166, 0, 0, 0, 0,
	0, 162, 0, 164, 168, 170, 171, 178, 180, 165,
	185, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 158, 169, 172,
	173, 174, 175, 176, 177, 179, 181, 0, 0, 0,
	159, 161, 160, 183, 0, 0, 729, 0, 0, 184,
	163, 167, 166, 0, 0, 0, 0, 0, 162, 0,
	164, 168, 170, 171, 178, 180, 165, 185, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 158, 169, 172, 173, 174, 175,
	176, 177, 179, 181, 0, 0, 0, 0, 0, 684,
	159, 161, 160, 183, 0, 0, 184, 163, 167, 166,
	0, 0, 0, 0, 0, 162, 0, 164, 168, 170,
	171, 178, 180, 165, 0, 0, 0, 185, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 158, 169, 172, 173, 174, 175,
	176, 177, 179, 181, 0, 0, 0, 159, 161, 160,
	183, 0, 0, 673, 0, 0, 184, 163, 167, 166,
	0, 0, 0, 0, 0, 162, 0, 164, 168, 170,
	171, 178, 180, 165, 185, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 158, 169, 172, 173, 174, 175, 176, 177, 179,
	181, 0, 0, 0, 159, 161, 160, 183, 0, 0,
	672, 0, 0, 184, 163, 167, 166, 0, 0, 0,
	0, 0, 162, 0, 164, 168, 170, 171, 178, 180,
	165, 185, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 158, 169,
	172, 173, 174, 175, 176, 177, 179, 181, 0, 0,
	0, 159, 161, 160, 183, 0, 0, 669, 0, 0,
	184, 163, 167, 166, 0, 0, 0, 0, 0, 162,
	0, 164, 168, 170, 171, 178, 180, 165, 185, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 158, 169, 172, 173, 174,
	175, 176, 177, 179, 181, 0, 0, 0, 0, 0,
	653, 159, 161, 160, 183, 0, 0, 184, 163, 167,
	166, 0, 0, 0, 0, 0, 162, 0, 164, 168,
	170, 171, 178, 180, 165, 0, 0, 0, 185, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 158, 169, 172, 173, 174,
	175, 176, 177, 179, 181, 0, 0, 0, 159, 161,
	160, 183, 0, 0, 643, 0, 0, 184, 163, 167,
	166, 0, 0, 0, 0, 0, 162, 0, 164, 168,
	170, 171, 178, 180, 165, 185, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 158, 169, 172, 173, 174, 175, 176, 177,
	179, 181, 0, 0, 0, 0, 613, 632, 159, 161,
	160, 183, 0, 0, 184, 163, 167, 166, 0, 0,
	0, 0, 0, 162, 0, 164, 168, 170, 171, 178,
	180, 165, 0, 0, 0, 185, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 158, 169, 172, 173, 174, 175, 176, 177,
	179, 181, 0, 0, 0, 159, 161, 160, 183, 0,
	0, 630, 0, 0, 184, 163, 167, 166, 0, 0,
	0, 0, 0, 162, 0, 164, 168, 170, 171, 178,
	180, 165, 185, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 158,
	169, 172, 173, 174, 175, 176, 177, 179, 181, 0,
	0, 0, 159, 161, 160, 183, 0, 0, 0, 0,
	0, 184, 163, 167, 166, 0, 0, 0, 0, 0,
	162, 0, 164, 168, 170, 171, 178, 180, 165, 185,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 158, 169, 172, 173,
	174, 175, 176, 177, 179, 181, 0, 0, 0, 159,
	161, 160, 183, 609, 0, 0, 0, 0, 184, 163,
	167, 166, 0, 0, 0, 0, 0, 162, 0, 164,
	168, 170, 171, 178, 180, 165, 185, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 158, 169, 172, 173, 174, 175, 176,
	177, 179, 181, 0, 0, 0, 159, 161, 160, 183,
	0, 0, 604, 0, 0, 184, 163, 167, 166, 0,
	0, 0, 0, 0, 162, 0, 164, 168, 170, 171,
	178, 180, 165, 185, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	158, 169, 172, 173, 174, 175, 176, 177, 179, 181,
	0, 0, 0, 159, 161, 160, 183, 0, 0, 600,
	0, 0, 184, 163, 167, 166, 0, 0, 0, 0,
	0, 162, 0, 164, 168, 170, 171, 178, 180, 165,
	185, 182, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 158, 169, 172,
	173, 174, 175, 176, 177, 179, 181, 0, 0, 0,
	0, 159, 161, 160, 183, 0, 428, 0, 0, 184,
	163, 167, 166, 0, 0, 0, 0, 0, 162, 0,
	164, 168, 170, 171, 178, 180, 165, 0, 185, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 158, 169, 172, 173, 174,
	175, 176, 177, 179, 181, 0, 0, 0, 159, 161,
	160, 183, 0, 0, 0, 0, 0, 184, 163, 167,
	166, 0, 0, 0, 0, 0, 162, 0, 164, 168,
	170, 171, 178, 180, 165, 185, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 158, 169, 172, 173, 174, 175, 176, 177,
	179, 181, 0, 0, 0, 0, 0, 0, 381, 159,
	161, 160, 183, 0, 184, 163, 167, 166, 0, 0,
	0, 0, 0, 162, 0, 164, 168, 170, 171, 178,
	180, 165, 0, 0, 0, 0, 185, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 158, 169, 172, 173, 174, 175, 176,
	177, 179, 181, 0, 0, 0, 0, 0, 0, 156,
	159, 161, 160, 183, 0, 184, 163, 167, 166, 0,
	0, 0, 0, 0, 162, 0, 164, 168, 170, 171,
	178, 180, 165, 0, 0, 0, 0, 185, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 158, 169, 172, 173, 174, 175,
	176, 177, 179, 181, 0, 0, 0, 0, 161, 160,
	183, 0, 0, 0, 0, 0, 184, 163, 167, 166,
	0, 0, 0, 0, 0, 162, 0, 164, 168, 170,
	171, 178, 180, 165, 185, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 158, 169, 172, 173, 174, 175, 176, 177, 179,
	181, 0, 0, 0, 0, 0, 160, 183, 0, 0,
	0, 0, 0, 184, 163, 167, 166, 0, 0, 0,
	0, 0, 162, 0, 164, 168, 170, 171, 178, 180,
	165, 185, 182, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 158, 169,
	172, 173, 174, 175, 176, 177, 179, 181, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	184, 163, 167, 166, 0, 0, 0, 0, 0, 162,
	0, 164, 168, 170, 171, 178, 180, 165, 0, 185,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 158, 169, 172, 173,
	174, 175, 176, 177, 179, 181, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 184, 163,
	167, 166, 0, 0, 0, 0, 0, 162, 0, 164,
	168, 170, 171, 178, 180, 165, 185, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 158, 169, 172, 173, 174, 175, 176,
	177, 179, 181, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 184, 163, 167, 166, 0,
	0, 0, 0, 0, 162, 0, 164, 168, 170, 171,
	178, 180, 165, 185, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	158, 169, 172, 173, 174, 175, 176, 177, 179, 181,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 163, 167, 166, 0, 0, 0, 0,
	0, 162, 0, 164, 168, 170, 171, 178, 180, 165,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 169, 172, 173,
	174, 175, 176, 177, 179, 181, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 163,
	167, 166, 0, 0, 0, 0, 0, 162, 0, 164,
	168, 170, 171, 178, 180, 165, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 172, 173, 174, 175, 176, 177,
	179, 181, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 163, 167, 166, 0, 0,
	0, 0, 0, 162, 0, 164, 168, 170, 171, 178,
	180, 165, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	172, 173, 174, 175, 176, 177, 179, 181, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 163, 167, 166, 0, 0, 0, 0, 0, 0,
	0, 164, 168, 170, 171, 178, 180, 165, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 172, 173, 174, 175,
	176, 177, 179, 181, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 163, 167, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 170,
	171, 178, 180, 165, 182, 0, 0, 0, 0, 0,
	121, 121, 109, 109, 0, 0, 0, 0, 114, 114,
	0, 169, 172, 173, 174, 175, 176, 177, 179, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 170, 171, 178, 180, 165,
	715, 113, 113, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 138, 0, 116, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 238, 716, 241, 0, 714, 0, 0, 0, 0,
	0, 110, 110,
}
var yyPact = [...]int{

	-1000, -1000, 1663, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	251, 473, 671, 773, -1000, -1000, -1000, 249, 4795, 241,
	235, 6133, 6133, 6133, 141, 704, 6133, -1000, 7441, 233,
	230, 228, -1000, 405, 6133, 831, 276, 34, 540, 822,
	813, 802, 500, 488, 334, -1000, -1000, 227, -1000, -1000,
	214, 211, 5437, 6133, 8181, 8181, 6133, 6133, 6133, 6133,
	6133, -1000, -1000, -1000, 6133, 6133, 6133, 6133, 6133, 6133,
	6133, 208, 6133, -1000, 807, 6133, 6133, 6133, -1000, -1000,
	-1000, -1000, 74, -1000, 528, 527, -1000, 104, 205, 204,
	203, 6133, 6133, 196, 6133, 6133, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 785, 776, 34, -1000,
	131, 212, 212, 192, -1000, 503, 757, 167, 757, 247,
	-1000, -1000, 333, 599, 93, 619, 757, -1000, -1000, -1000,
	-1000, 89, -1000, -56, 3583, 6133, 670, 34, 502, 6133,
	6133, 330, 7502, 695, 329, 328, 73, -1000, -1000, 42,
	-1000, -1000, -59, -11, -1000, 7502, -1000, 6133, 6133, 6133,
	6133, 6133, 6133, 6133, 6133, 6133, 6133, 6133, 6133, 6133,
	6133, 6133, 6133, 6133, 6133, 6133, 6133, 6133, 6133, 6133,
	6133, 6133, 6133, 289, 6017, 6133, 8181, 6133, 773, -1000,
	7380, 327, -1000, 789, -1000, 780, -1000, 578, -1000, 579,
	226, 4795, 225, 326, 272, 5901, 6133, 6133, 6133, 6133,
	6133, 6133, 6133, 6133, 6133, 6133, 6133, 6133, 6133, -1000,
	-1000, 6133, 6133, 6133, 101, 101, 5437, 75, -6, -1000,
	-1000, 7323, 8181, 6133, 223, -1000, -1000, 74, 6133, -1000,
	-1000, 5437, -1000, 420, 420, 438, 420, 7265, 420, 420,
	420, 420, 420, 420, 420, -1000, 6133, 420, 382, 703,
	678, -1000, 175, 5785, 8181, 7731, 7674, 7731, 6133, 3901,
	3901, 212, -1000, 522, 278, 212, -1000, -1000, 6133, 6133,
	6133, 7502, 7502, 6133, 7502, 7502, 737, -1000, 759, 501,
	703, 221, 6133, -1000, -1000, 1025, -1000, 5437, 779, 503,
	325, 503, -1000, -1000, 1503, -1000, 324, -15, 593, 757,
	-1000, 580, 516, 777, 571, -1000, -1000, 773, 6133, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 218, 7208, 217,
	-1000, 323, -8, 7502, 7151, -1000, -1000, -1000, -1000, 141,
	-1000, 740, 6133, -1000, 6133, 7844, 7900, 7559, 7731, 7616,
	7956, 8068, 8012, 154, 154, 154, 438, 420, 438, 438,
	138, 138, 406, 406, 406, 406, 517, 517, 517, 517,
	406, -1000, 7094, 6133, 7788, -10, -1000, -1000, 7037, -33,
	3423, -1000, -1000, -1000, 215, 578, 574, 651, 404, -1000,
	651, 6133, -1000, 6133, -1000, -1000, 7731, 6133, 7731, 7731,
	7731, 7731, 7731, 7731, 7731, 7731, 7731, 7731, 7731, 7731,
	7731, 6980, 72, 6920, 212, -1000, 6133, -1000, 212, 164,
	-62, 5437, 5669, -1000, 7502, 5437, 6863, 67, -1000, 163,
	-1000, -1000, -1000, -1000, 185, 764, 763, 6803, 97, 365,
	6133, 48, 212, -1000, -1000, 6133, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 212, -1000, -1000, -1000, -1000, 141,
	6133, 6133, 101, 101, 141, 578, 6746, -12, -1000, 7502,
	6689, 6632, -1000, -1000, -1000, 246, 6572, -1000, -13, -1000,
	7502, 6133, 270, -1000, -1000, 211, 6133, 208, 6133, 6133,
	695, 104, 205, 204, 203, 6133, 6133, 196, 6133, 6133,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34, 34,
	192, 502, 162, -1000, -1000, 1343, -1000, -1000, -1000, 497,
	570, -1000, 757, 563, 690, -1000, 496, -1000, 7502, 160,
	4637, 6133, 6133, 6133, 201, -1000, -1000, 7502, -1000, 6133,
	7788, 149, 8181, 8180, 4479, -1000, 190, 246, 574, -1000,
	651, -1000, -1000, 403, -45, -1000, 6515, 6458, 3263, 8068,
	4321, -1000, -1000, -1000, 6398, -1000, -65, 6133, -1000, 7502,
	8181, 189, 146, -1000, -1000, -1000, 47, -1000, -1000, 698,
	-1000, -1000, -1000, -1000, -1000, 6133, -1000, 7731, -1000, -1000,
	6338, -1000, -1000, 46, 6278, -1000, -1000, -1000, 574, 402,
	140, 6133, -1000, -1000, 137, -17, -1000, 38, -1000, -1000,
	618, -1000, -1000, -1000, -1000, 135, 1183, 7502, 6133, -1000,
	-1000, 757, 491, -32, -1000, -1000, 757, 690, -1000, 320,
	-1000, -1000, -1000, 6221, 319, 7502, -1000, 303, 301, 7788,
	300, -1000, 134, 565, 8181, 183, 5437, -1000, -1000, -1000,
	627, 246, 123, -1000, 399, -45, 1207, -1000, 651, 4795,
	269, 299, -1000, -1000, -1000, 6133, 7731, -1000, 5437, -65,
	-1000, -1000, 6164, -1000, -1000, -1000, -1000, 5553, -1000, -1000,
	253, 246, 471, -1000, -1000, -1000, -1000, 7502, -42, -1000,
	757, 357, 690, -1000, -32, -1000, 3103, 290, 6133, 383,
	-1000, 825, -1000, -1000, 4005, 8180, -1000, 5437, 41, 2943,
	-1000, 178, 398, 117, 604, 397, -1000, -1000, -1000, 246,
	638, 651, 662, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1049, -1000, -1000, -1000, -1000, 3743, 7731, 112, 353,
	396, 352, -35, -1000, 561, -37, -40, 7502, -1000, 246,
	-1000, 734, -1000, 349, 757, -42, -1000, -1000, 337, 288,
	-1000, 110, -1000, 6133, 176, 381, 287, 812, -1000, -1000,
	-1000, 109, -1000, 103, -1000, 286, 651, -1000, 253, 253,
	173, -1000, 857, 691, 5211, 34, -39, -1000, -1000, 3743,
	-65, -1000, -1000, -1000, -1000, 5553, 6133, 558, -1000, -1000,
	6133, 554, -1000, -66, -1000, -1000, 105, -1000, -1000, 4163,
	354, -1000, -1000, -1000, -1000, -1000, 285, 2783, 4005, -1000,
	-1000, 85, -1000, 2623, 370, 369, 180, 727, -1000, -20,
	-1000, -73, -38, -1000, -74, 5211, -1000, -1000, 5082, 434,
	-1000, 7502, 6133, 7502, 6133, 6133, -1000, -1000, -1000, -1000,
	-1000, 3743, -1000, 284, -1000, 102, 651, -1000, -1000, -1000,
	-36, -1000, -1000, 725, -1000, -1000, 691, -1000, 6133, -1000,
	5211, 6133, -1000, -1000, 4953, -1000, 280, 279, 581, 665,
	509, -1000, -1000, -1000, 7502, 7731, 7502, 2463, 3743, -1000,
	368, -1000, 2303, 2143, -1000, 180, -1000, -1000, 7502, -1000,
	7502, 139, -1000, -1000, -1000, -1000, 651, 5336, 5211, 216,
	-1000, -1000, -1000, -1000, -1000, -1000, 246, -45, -1000, -1000,
	5211, -1000, -1000, 1983, 99, -1000, -1000, 253, 259, -1000,
	-1000, -1000, 1823, -1000,
}
var yyPgo = [...]int{

	0, 974, 973, 17, 8, 36, 5, 972, 74, 13,
	971, 18, 29, 82, 81, 47, 46, 970, 28, 969,
	72, 21, 52, 968, 26, 967, 0, 80, 3, 966,
	965, 964, 42, 83, 33, 19, 39, 962, 955, 63,
	953, 62, 948, 9, 947, 946, 943, 941, 14, 44,
	940, 938, 56, 89, 480, 937, 936, 40, 935, 934,
	10, 933, 88, 64, 932, 79, 45, 929, 928, 926,
	925, 924, 121, 923, 920, 919, 4, 917, 94, 912,
	910, 907, 906, 904, 903, 899, 31, 30, 554, 11,
	119, 898, 897, 43, 37, 41, 2, 20, 738, 146,
	87, 896, 895, 893, 12, 892, 889, 86, 888, 51,
	38, 886, 878, 877, 876, 875, 15, 872, 870, 7,
	745, 25, 558, 869, 864, 34, 860, 75, 1, 16,
	850, 848, 847, 822, 786, 6,
}
var yyR1 = [...]int{

	0, 134, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 127, 127, 90, 90, 11, 11, 11, 10,
	10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
	10, 10, 10, 10, 120, 120, 17, 17, 19, 19,
	8, 8, 87, 87, 86, 86, 88, 88, 18, 18,
	21, 21, 20, 20, 78, 78, 128, 128, 23, 23,
	23, 23, 23, 23, 23, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 124,
	124, 75, 75, 31, 31, 108, 108, 32, 13, 1,
	1, 2, 2, 14, 14, 133, 133, 98, 98, 15,
	16, 109, 109, 111, 111, 110, 110, 121, 121, 121,
	121, 105, 105, 104, 104, 30, 30, 102, 102, 102,
	102, 125, 125, 125, 9, 9, 106, 106, 85, 85,
	77, 77, 91, 91, 81, 81, 28, 28, 29, 29,
	34, 34, 35, 35, 97, 97, 95, 95, 95, 96,
	96, 99, 99, 79, 79, 36, 36, 36, 38, 38,
	39, 40, 40, 41, 41, 129, 129, 42, 42, 42,
	42, 76, 76, 101, 101, 101, 126, 126, 43, 43,
	44, 45, 45, 45, 45, 47, 47, 46, 103, 103,
	131, 131, 130, 130, 132, 132, 119, 119, 119, 119,
	119, 119, 80, 80, 48, 48, 84, 84, 89, 22,
	74, 74, 49, 24, 24, 25, 25, 51, 50, 50,
	113, 114, 114, 115, 117, 117, 118, 118, 116, 116,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 107, 107,
	135, 3, 3, 112, 112, 82, 82, 60, 60, 61,
	61, 61, 61, 52, 52, 53, 53, 58, 58, 123,
	123, 123, 100, 100, 65, 65, 65, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 66, 66, 66, 26, 26, 27, 27,
	64, 67, 67, 67, 68, 68, 68, 69, 69, 69,
	69, 69, 69, 69, 33, 33, 33, 33, 54, 54,
	54, 70, 70, 71, 71, 71, 71, 71, 71, 71,
	62, 62, 62, 63, 63, 63, 57, 93, 93, 56,
	56, 92, 92, 92, 92, 92, 92, 92, 122, 122,
	122, 122, 72, 72, 72, 72, 72, 72, 72, 72,
	73, 73, 73, 73, 55, 55, 55, 55, 55, 55,
	55, 83, 83, 94,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 0, 1, 3, 1, 3, 2, 1,
	1, 1, 1, 1, 1, 4, 3, 5, 4, 3,
	4, 3, 4, 3, 1, 1, 6, 7, 6, 7,
	0, 1, 3, 1, 3, 1, 3, 1, 1, 2,
	1, 3, 1, 2, 3, 1, 2, 0, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 1, 5, 7,
	9, 5, 3, 3, 3, 3, 3, 3, 1, 2,
	6, 7, 9, 5, 1, 6, 3, 3, 2, 0,
	9, 1, 3, 0, 4, 1, 3, 1, 11, 0,
	1, 0, 1, 9, 8, 1, 2, 1, 1, 6,
	7, 0, 2, 0, 2, 0, 2, 1, 2, 4,
	3, 1, 4, 1, 4, 1, 4, 3, 4, 4,
	5, 0, 5, 4, 1, 1, 1, 4, 5, 6,
	1, 3, 6, 7, 3, 6, 1, 0, 1, 3,
	4, 6, 0, 1, 1, 2, 1, 1, 1, 0,
	2, 2, 4, 1, 3, 1, 2, 3, 3, 1,
	1, 3, 1, 1, 3, 2, 0, 4, 4, 3,
	10, 1, 3, 1, 2, 3, 1, 2, 2, 2,
	3, 3, 3, 4, 3, 1, 1, 3, 1, 3,
	1, 1, 0, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 4, 3, 1, 4, 4,
	3, 1, 1, 0, 1, 3, 1, 8, 3, 2,
	2, 3, 1, 7, 0, 2, 1, 3, 3, 4,
	6, 5, 3, 4, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 5, 4, 3, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	3, 2, 1, 2, 4, 2, 1, 2, 11, 9,
	0, 0, 1, 0, 4, 3, 1, 1, 2, 2,
	4, 4, 2, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 0, 1, 4, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 3,
	3, 1, 1, 1, 3, 3, 1, 1, 0, 1,
	1, 1, 3, 1, 1, 3, 1, 1, 4, 4,
	4, 4, 4, 1, 1, 1, 3, 3, 1, 4,
	2, 3, 3, 1, 4, 4, 3, 3, 3, 3,
	1, 3, 1, 1, 3, 1, 1, 0, 1, 3,
	1, 3, 1, 4, 2, 2, 6, 4, 2, 2,
	1, 2, 1, 4, 3, 3, 3, 3, 6, 3,
	1, 1, 2, 1, 5, 4, 2, 2, 4, 2,
	2, 1, 3, 1,
}
var yyChk = [...]int{

	-1000, -134, -127, -10, 2, -12, -13, -14, -15, -16,
	52, 80, 45, 39, 146, -77, -81, 21, 20, 23,
	30, 34, 35, 40, 47, 99, 19, 14, -26, 49,
	25, 27, 148, 41, 44, 36, 10, 37, -133, 53,
	54, 55, -85, -91, -33, -37, -98, 7, -69, -70,
	-67, 60, 152, 93, 105, 106, 157, 156, 158, 159,
	150, -50, -115, -55, 108, 109, 110, 111, 112, 113,
	114, 6, 160, -59, 145, 97, 98, 107, -107, 100,
	101, -54, -66, -61, -52, -64, -65, 92, 143, 50,
	51, 4, 5, 85, 86, 87, 8, 9, 67, 68,
	82, 64, 65, 66, 81, 63, 75, 144, 38, 12,
	161, -11, -68, 61, 18, -90, 83, 150, 83, -90,
	146, 10, -19, -120, -88, -90, 83, 37, 39, -20,
	-21, -78, -22, 10, -128, 150, -12, 37, 80, 150,
	150, -27, -26, 99, -27, -27, -38, -39, -54, -40,
	-107, -41, 12, -74, -49, -26, 148, 131, 132, 88,
	90, 89, 163, 155, 165, 171, 157, 156, 166, 133,
	167, 168, 134, 135, 136, 137, 138, 139, 169, 140,
	170, 141, 116, 91, 154, 115, 150, 150, 150, 146,
	-26, 10, 149, -3, 155, 53, -98, 10, 10, 10,
	94, 95, 94, 96, 95, 164, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 105,
	106, 150, 152, 146, 58, 142, 150, -57, -56, -93,
	-92, -26, 155, 84, 60, -26, -33, -66, 150, -65,
	99, 152, -33, -26, -26, -26, -26, -26, -26, -26,
	-26, -26, -26, -26, -26, -58, 150, -26, -123, 17,
	-122, -72, 12, 77, 78, -26, -26, -26, 152, 79,
	79, -53, -51, -52, -71, 53, -11, -54, 150, 150,
	150, -26, -26, 150, -26, -26, 17, 76, -122, -122,
	17, -3, 146, -54, -99, 150, -99, 150, 83, -90,
	151, -90, 148, 146, -127, 148, -17, -88, -90, 83,
	148, 162, 83, 29, -90, -21, 148, 162, 164, -23,
	147, 2, -12, -13, -14, -15, -16, 52, -26, 21,
	-3, -24, -25, -26, -26, 148, 148, 148, 148, 162,
	148, 162, 164, 148, 162, -26, -26, -26, -26, -26,
	-26, -26, -26, -26, -26, -26, -26, -26, -26, -26,
	-26, -26, -26, -26, -26, -26, -26, -26, -26, -26,
	-26, -53, -26, 149, -26, -108, -32, -33, -26, -78,
	-128, 148, 148, 10, -135, 10, -109, 56, -135, -111,
	56, 150, -12, 150, 148, 149, -26, 155, -26, -26,
	-26, -26, -26, -26, -26, -26, -26, -26, -26, -26,
	-26, -26, -27, -26, -63, 10, 146, -54, -63, -57,
	153, 162, 59, -33, -26, 150, -26, -57, 151, -27,
	145, -72, -72, 17, 152, 58, 142, -26, 11, -33,
	59, -27, -62, -6, -54, 146, 10, -5, -4, 99,
	100, 101, 102, 103, 104, 4, 5, 85, 86, 87,
	88, 89, 90, 91, 92, 93, 6, 7, 94, 95,
	96, 19, 20, 21, 22, 23, 24, 25, 26, 27,
	28, 29, 41, 42, 43, 44, 45, 46, 47, 48,
	49, 50, 51, 35, 36, 37, 39, 40, 97, 98,
	60, 30, 31, 32, 33, 34, 61, 62, 56, 57,
	80, 54, 55, 53, 63, 64, 66, 65, 67, 68,
	82, 81, 38, 143, -62, -6, -54, -100, -99, 79,
	152, 146, 58, 142, 79, -100, -26, -83, -94, -26,
	-26, -26, 76, 76, 144, 150, -26, 151, -79, -36,
	-26, 84, -7, 10, -5, 60, 93, 6, 97, 98,
	99, 92, 143, 50, 51, 4, 5, 85, 86, 87,
	67, 68, 82, 64, 65, 66, 81, 63, 37, 38,
	61, 80, -57, 10, 148, -127, 147, 148, 148, 83,
	-90, -20, 83, -90, 146, 10, 83, -22, -26, 150,
	151, 150, 148, 162, 151, -39, -41, -26, -49, 149,
	-26, -8, 162, 29, 151, 147, -135, 150, -109, -110,
	57, -11, 146, -135, -76, -11, -26, -26, -128, -26,
	151, 153, 147, -99, -26, -99, 151, 164, -93, -26,
	155, 60, -57, 151, 153, 151, -73, 10, 13, 156,
	12, 10, 10, 147, 147, 152, 147, -26, 153, -99,
	-26, -99, -54, -27, -26, -63, -63, -54, -109, 151,
	-8, 162, 151, 151, -28, -29, -34, -35, -97, -95,
	154, 61, 62, -11, 147, -8, 162, -26, 149, 151,
	147, 146, 83, -87, -18, -21, -120, 146, -135, 151,
	-106, -12, 149, -26, -24, -26, -102, 146, 149, -26,
	151, -32, -121, -33, 155, 60, 152, -30, -12, 149,
	-124, 150, -28, -110, -135, -76, -129, 146, 162, 151,
	151, 96, -12, 149, 147, 164, -26, -33, 150, 151,
	153, 13, -26, 147, 153, 147, -110, 146, 151, -94,
	151, 162, -1, 155, -95, 151, -36, -26, -86, -21,
	146, -8, 162, -21, -87, 148, -128, 151, 148, -125,
	148, -125, 148, 148, 151, 59, -33, 150, -57, -128,
	-31, 42, 43, -28, 151, -135, 146, 147, -42, -131,
	-130, 45, -132, 48, -119, 104, 103, 102, 99, 100,
	101, -129, -11, -12, 149, 148, -128, -26, -57, 153,
	-135, -117, -118, -116, -113, 33, -114, -26, -96, 149,
	-34, -2, 84, -8, 162, -86, 147, -18, -8, 22,
	148, -24, 147, 32, 33, -125, 31, -125, -104, -12,
	149, -121, -33, -57, 153, 28, 150, 146, 151, -112,
	45, 146, -129, -35, 39, 37, -76, -119, 147, -128,
	151, 147, 146, 147, -8, 162, 59, -8, 162, -8,
	162, -135, -97, 12, 147, -21, -8, 147, 148, 151,
	-26, -9, 149, 148, 147, 148, 31, -128, 151, 151,
	148, -75, -11, -128, -96, -96, 150, -129, 147, -80,
	-48, 12, -84, -89, -6, -3, -101, 148, 146, -129,
	-116, -26, 59, -26, 59, 164, 147, -105, -12, 149,
	-9, -128, 148, 26, -104, 12, 163, 147, 146, 146,
	-82, -60, 12, 155, 147, 148, 162, -135, 164, 148,
	162, 164, -6, 147, -126, -43, -44, -45, -46, -47,
	-11, -6, 10, 147, -26, -26, -26, -128, -128, 148,
	151, -11, -128, -128, 151, 162, 12, -48, -26, -89,
	-26, -135, 147, -43, 148, 148, 46, 29, 79, 24,
	146, 147, 147, -60, -135, -135, 150, -76, 10, -4,
	-119, -6, 148, -128, -28, -6, 147, 151, -96, -103,
	148, 146, -128, 147,
}
var yyDef = [...]int{

	83, -2, -2, 82, 89, 90, 91, 92, 93, 94,
	0, 0, 0, 0, 127, 136, 137, 0, 0, 0,
	0, 438, 438, 438, 0, 403, 0, 148, 0, 0,
	0, 0, 154, 0, 0, 0, 84, 391, 0, 0,
	0, 0, 210, 0, -2, 437, 175, 0, -2, 455,
	440, 0, 477, 0, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 369, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 379, 409, 0, 382, 0, 386, 177,
	178, 447, 432, 453, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 0, 0, 391, 458,
	0, -2, 0, 0, 416, 86, 0, 0, 0, 0,
	83, 84, 0, 0, 0, 120, 0, 104, 105, 117,
	122, 0, 125, 0, 0, 0, 0, 391, 0, 293,
	0, 0, 439, 403, 0, 0, 0, 239, 240, 0,
	387, 242, 243, 0, 291, 292, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 158, 390, 392, 0, 176, 181, 390, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	330, 0, 438, 0, 0, 0, 477, 0, 476, 480,
	478, 482, 0, 0, 0, 314, -2, 0, 0, -2,
	403, 477, -2, 349, 350, 351, 352, 0, 370, 371,
	372, 373, 374, 375, 376, 377, 438, 378, 0, 410,
	411, 490, 492, 0, 0, 381, 383, 385, 438, 0,
	0, 412, 299, 405, 406, 412, 404, 463, 0, 0,
	0, 506, 507, 0, 509, 510, 0, 428, 0, 0,
	0, 0, 0, 460, 399, 0, 402, 477, 0, 88,
	0, 87, 96, 83, 0, 99, 0, 0, 120, 0,
	101, 0, 0, 0, 120, 123, 103, 0, 0, 126,
	135, 128, 129, 130, 131, 132, 133, 0, 0, 0,
	390, 0, 294, 296, 0, 142, 143, 144, 145, 0,
	146, 0, 0, 147, 0, 332, 333, 334, 335, 336,
	337, 338, 339, 340, 341, 342, 343, 344, 345, 346,
	347, 348, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 362, 0, 0, 368, 110, 165, -2, 0, 0,
	0, 156, 157, 390, 0, 181, 185, 0, 0, 390,
	0, 0, 211, 0, 214, 127, 312, 0, 315, 316,
	317, 318, 319, 320, 321, 322, 323, 324, 325, 326,
	327, 0, 0, 0, 456, 473, 0, 475, 457, 0,
	415, 477, 0, -2, 485, 477, 0, 0, -2, 0,
	380, 491, 488, 489, 0, 0, 0, 0, 0, 441,
	0, 0, 0, -2, -2, 0, 78, 79, 71, 72,
	73, 74, 75, 76, 77, 2, 3, 4, 5, 6,
	7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
	17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
	27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
	37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
	47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 0, -2, -2, 298, 413, 0,
	438, 0, 0, 0, 0, 181, 0, 110, 511, 513,
	0, 0, 427, 430, 429, -2, 0, 231, 110, 233,
	235, 0, 0, -2, 81, 47, 12, -2, 45, -2,
	-2, 11, 70, 38, 39, 2, 3, 4, 5, 6,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	53, 57, 0, 85, 95, 0, 98, 100, 102, 0,
	120, 116, 0, 120, 0, 121, 0, 124, 390, 0,
	0, 0, 293, 0, 0, 238, 241, 244, 290, 0,
	367, 0, 111, 0, 0, 159, 0, -2, 185, 390,
	0, 182, 246, 0, 184, 251, 0, 0, 0, 313,
	0, 448, 450, 451, 0, 452, 0, 0, 479, 481,
	0, 0, 0, -2, 415, 408, 0, 500, 501, 0,
	503, 494, 495, 496, 497, 0, 499, 384, 449, 400,
	0, 401, 468, 0, 0, 466, 467, 469, 185, 0,
	0, 111, 505, 508, 0, 216, 218, 169, 223, 224,
	0, 226, 227, 228, 459, 0, 111, 236, 0, 414,
	97, 0, 0, 110, 113, 118, 0, 0, 289, 0,
	138, 206, 127, 0, 0, 295, 141, 201, 201, 366,
	0, 166, 0, -2, 0, 0, 477, 153, 195, 127,
	163, -2, 0, 390, 0, 186, 272, 246, 0, 0,
	0, 0, 208, 127, 474, 0, 311, -2, 477, 487,
	493, 502, 0, 471, 464, 465, 390, 304, 504, 512,
	229, 222, 171, 170, 225, 232, 234, 237, 110, 115,
	0, 0, 111, 119, 110, 134, 0, 0, 293, 0,
	201, 0, 201, 150, 0, 0, -2, 477, 0, 0,
	155, 0, 0, 0, 393, 0, 246, 179, 245, 222,
	0, 0, -2, 271, 274, 276, 277, 278, 279, 280,
	281, 272, 252, 209, 127, 215, -2, 310, 0, 0,
	0, 0, 110, 306, 0, 110, 110, 302, 390, 0,
	219, 0, 172, 0, 111, 110, 108, 112, 0, 0,
	139, 0, 197, 0, 0, 0, 0, 0, 151, 193,
	127, 0, -2, 0, -2, 0, 0, 127, 229, 229,
	0, 246, 272, 0, 0, 391, 0, 275, 180, -2,
	486, 498, 246, 303, 305, 111, 0, 0, 111, 300,
	111, 0, 230, 220, 106, 114, 0, 109, 207, 0,
	0, 127, 204, 205, 198, 199, 0, 0, 0, 189,
	196, 0, 161, 0, 0, 0, 0, 272, 174, 0,
	283, 390, 0, 287, 0, 0, 249, 253, 0, 272,
	307, 308, 0, 301, 0, 0, 107, 140, 191, 127,
	127, -2, 200, 0, 152, 0, 0, 164, 127, 127,
	0, 396, 397, 0, 173, 247, 0, 284, 0, 248,
	0, 0, 390, 254, 0, 256, 0, 0, 266, 0,
	0, 265, -2, 297, 309, 389, 221, 0, -2, 194,
	0, 162, 0, 0, 394, 0, 398, 282, 390, 286,
	390, 0, 255, 257, 258, 259, 0, 0, 0, 0,
	127, 168, 388, 395, 285, 288, -2, 260, 261, 262,
	264, 267, 192, 0, 0, 263, 160, 229, 0, 250,
	268, 127, 0, 269,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 158, 144, 3, 161, 168, 155, 3,
	150, 151, 166, 157, 162, 156, 171, 167, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 149, 148,
	169, 164, 170, 154, 160, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 152, 3, 153, 165, 3, 145, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 146, 163, 147, 159,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

// line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:287
		{
			yylex.(*Parser).currentToken.Value = nil

			yylex.(*Parser).rootNode = &ast.Root{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].list),
				Stmts:    yyDollar[1].list,
				EndTkn:   yylex.(*Parser).currentToken,
			}
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:329
		{
			yyVAL.token = yyDollar[1].token
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:333
		{
			yyVAL.token = yyDollar[1].token
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:340
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:346
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:353
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.NamePart{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						StringTkn: yyDollar[1].token,
						Value:     yyDollar[1].token.Value,
					},
				},
			}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:365
		{
			part := &ast.NamePart{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
				StringTkn: yyDollar[3].token,
				Value:     yyDollar[3].token.Value,
			}

			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, part)

			yyVAL.node = yyDollar[1].node
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:381
		{
			yyVAL.node = &ast.Name{
				Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
				Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:389
		{
			yyVAL.node = &ast.NameRelative{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].node.(*ParserSeparatedList).Items),
				NsTkn:          yyDollar[1].token,
				NsSeparatorTkn: yyDollar[2].token,
				Parts:          yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:399
		{
			yyVAL.node = &ast.NameFullyQualified{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				NsSeparatorTkn: yyDollar[1].token,
				Parts:          yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:411
		{
			// error
			yyVAL.node = nil
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:416
		{
			yyVAL.node = yyDollar[1].node
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:420
		{
			yyVAL.node = yyDollar[1].node
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:424
		{
			yyVAL.node = yyDollar[1].node
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:428
		{
			yyVAL.node = yyDollar[1].node
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:432
		{
			yyVAL.node = yyDollar[1].node
		}
	case 95:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:436
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:446
		{
			yyVAL.node = &ast.StmtNamespace{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				NsTkn:    yyDollar[1].token,
				Name: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 97:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:459
		{
			yyVAL.node = &ast.StmtNamespace{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				NsTkn:    yyDollar[1].token,
				Name: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Stmts:                yyDollar[4].list,
				CloseCurlyBracketTkn: yyDollar[5].token,
			}
		}
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:474
		{
			yyVAL.node = &ast.StmtNamespace{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				NsTkn:                yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:484
		{
			use := yyDollar[2].node.(*ast.StmtGroupUseList)

			use.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)
			use.UseTkn = yyDollar[1].token
			use.SemiColonTkn = yyDollar[3].token

			yyVAL.node = yyDollar[2].node
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:494
		{
			use := yyDollar[3].node.(*ast.StmtGroupUseList)

			use.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			use.UseTkn = yyDollar[1].token
			use.Type = yyDollar[2].node
			use.SemiColonTkn = yyDollar[4].token

			yyVAL.node = yyDollar[3].node
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:505
		{
			yyVAL.node = &ast.StmtUseList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				UseTkn:        yyDollar[1].token,
				Uses:          yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:515
		{
			yyVAL.node = &ast.StmtUseList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				UseTkn:        yyDollar[1].token,
				Type:          yyDollar[2].node,
				Uses:          yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:526
		{
			yyVAL.node = &ast.StmtConstList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ConstTkn:      yyDollar[1].token,
				Consts:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:539
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:547
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 106:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:558
		{
			if yyDollar[5].token != nil {
				yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[5].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[6].token),
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[2].token,
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Uses:                 yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 107:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:578
		{
			if yyDollar[6].token != nil {
				yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[6].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position:              yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				LeadingNsSeparatorTkn: yyDollar[1].token,
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[3].token,
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Uses:                 yyDollar[5].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}
		}
	case 108:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:602
		{
			if yyDollar[5].token != nil {
				yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[5].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[6].token),
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[2].token,
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Uses:                 yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 109:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:622
		{
			if yyDollar[6].token != nil {
				yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[6].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position:              yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				LeadingNsSeparatorTkn: yyDollar[1].token,
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[3].token,
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Uses:                 yyDollar[5].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:646
		{
			yyVAL.token = nil
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:650
		{
			yyVAL.token = yyDollar[1].token
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:657
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:664
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:673
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:680
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:689
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:696
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:705
		{
			yyVAL.node = yyDollar[1].node
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:709
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.Type = yyDollar[1].node
			decl.Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node)

			yyVAL.node = yyDollar[2].node
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:720
		{
			yyVAL.node = &ast.StmtUse{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
				Use: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
			}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:731
		{
			yyVAL.node = &ast.StmtUse{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].token),
				Use: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				AsTkn: yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:751
		{
			yyVAL.node = yyDollar[1].node
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:755
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.NsSeparatorTkn = yyDollar[1].token
			decl.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			yyVAL.node = yyDollar[2].node
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:766
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:773
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:782
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:788
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:795
		{
			// error
			yyVAL.node = nil
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:800
		{
			yyVAL.node = yyDollar[1].node
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:804
		{
			yyVAL.node = yyDollar[1].node
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:808
		{
			yyVAL.node = yyDollar[1].node
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:812
		{
			yyVAL.node = yyDollar[1].node
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:816
		{
			yyVAL.node = yyDollar[1].node
		}
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:820
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:832
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:841
		{
			yyVAL.node = yyDollar[1].node
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:845
		{
			yyVAL.node = yyDollar[1].node
		}
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:849
		{
			yyDollar[5].node.(*ast.StmtWhile).WhileTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtWhile).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtWhile).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtWhile).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtWhile).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 139:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:859
		{
			yyVAL.node = &ast.StmtDo{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				DoTkn:               yyDollar[1].token,
				Stmt:                yyDollar[2].node,
				WhileTkn:            yyDollar[3].token,
				OpenParenthesisTkn:  yyDollar[4].token,
				Cond:                yyDollar[5].node,
				CloseParenthesisTkn: yyDollar[6].token,
				SemiColonTkn:        yyDollar[7].token,
			}
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:872
		{
			yyDollar[9].node.(*ast.StmtFor).ForTkn = yyDollar[1].token
			yyDollar[9].node.(*ast.StmtFor).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[9].node.(*ast.StmtFor).Init = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).InitSeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).InitSemiColonTkn = yyDollar[4].token
			yyDollar[9].node.(*ast.StmtFor).Cond = yyDollar[5].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).CondSeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CondSemiColonTkn = yyDollar[6].token
			yyDollar[9].node.(*ast.StmtFor).Loop = yyDollar[7].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).LoopSeparatorTkns = yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CloseParenthesisTkn = yyDollar[8].token
			yyDollar[9].node.(*ast.StmtFor).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			yyVAL.node = yyDollar[9].node
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:889
		{
			yyDollar[5].node.(*ast.StmtSwitch).SwitchTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtSwitch).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtSwitch).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtSwitch).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtSwitch).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:899
		{
			yyVAL.node = &ast.StmtBreak{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				BreakTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:908
		{
			yyVAL.node = &ast.StmtContinue{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ContinueTkn:  yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:917
		{
			yyVAL.node = &ast.StmtReturn{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ReturnTkn:    yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:926
		{
			yyDollar[2].node.(*ast.StmtGlobal).GlobalTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtGlobal).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtGlobal).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:934
		{
			yyDollar[2].node.(*ast.StmtStatic).StaticTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtStatic).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtStatic).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:942
		{
			yyDollar[2].node.(*ast.StmtEcho).EchoTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtEcho).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtEcho).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:950
		{
			yyVAL.node = &ast.StmtInlineHtml{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				InlineHtmlTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:958
		{
			yyVAL.node = &ast.StmtExpression{
				Position:     yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Expr:         yyDollar[1].node,
				SemiColonTkn: yyDollar[2].token,
			}
		}
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:966
		{
			yyDollar[3].node.(*ast.StmtUnset).UnsetTkn = yyDollar[1].token
			yyDollar[3].node.(*ast.StmtUnset).OpenParenthesisTkn = yyDollar[2].token
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[4].token)
			}
			yyDollar[3].node.(*ast.StmtUnset).CloseParenthesisTkn = yyDollar[5].token
			yyDollar[3].node.(*ast.StmtUnset).SemiColonTkn = yyDollar[6].token
			yyDollar[3].node.(*ast.StmtUnset).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			yyVAL.node = yyDollar[3].node
		}
	case 151:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:979
		{
			foreach := yyDollar[7].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[7].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Var = yyDollar[5].node
			foreach.CloseParenthesisTkn = yyDollar[6].token

			if val, ok := yyDollar[5].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:998
		{
			foreach := yyDollar[9].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Key = yyDollar[5].node
			foreach.DoubleArrowTkn = yyDollar[6].token
			foreach.Var = yyDollar[7].node
			foreach.CloseParenthesisTkn = yyDollar[8].token

			if val, ok := yyDollar[7].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 153:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1019
		{
			yyDollar[5].node.(*ast.StmtDeclare).DeclareTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtDeclare).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtDeclare).Consts = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[5].node.(*ast.StmtDeclare).SeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[5].node.(*ast.StmtDeclare).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtDeclare).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1030
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 155:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1037
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[5].list)
			if yyDollar[6].node != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node)
			}

			yyVAL.node = &ast.StmtTry{
				Position:             pos,
				TryTkn:               yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
				Catches:              yyDollar[5].list,
				Finally:              yyDollar[6].node,
			}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1054
		{
			yyVAL.node = &ast.StmtThrow{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ThrowTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1063
		{
			yyVAL.node = &ast.StmtGoto{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				GotoTkn:  yyDollar[1].token,
				Label: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1076
		{
			yyVAL.node = &ast.StmtLabel{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				ColonTkn: yyDollar[2].token,
			}
		}
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1090
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 160:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:1094
		{
			catch := yyDollar[4].node.(*ast.StmtCatch)
			catch.CatchTkn = yyDollar[2].token
			catch.OpenParenthesisTkn = yyDollar[3].token
			catch.Var = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[5].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[5].token),
					IdentifierTkn: yyDollar[5].token,
					Value:         yyDollar[5].token.Value,
				},
			}
			catch.CloseParenthesisTkn = yyDollar[6].token
			catch.OpenCurlyBracketTkn = yyDollar[7].token
			catch.Stmts = yyDollar[8].list
			catch.CloseCurlyBracketTkn = yyDollar[9].token
			catch.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[2].token, yyDollar[9].token)

			yyVAL.list = append(yyDollar[1].list, catch)
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1117
		{
			yyVAL.node = &ast.StmtCatch{
				Types: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1123
		{
			yyDollar[1].node.(*ast.StmtCatch).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtCatch).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.StmtCatch).Types = append(yyDollar[1].node.(*ast.StmtCatch).Types, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1133
		{
			yyVAL.node = nil
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1137
		{
			yyVAL.node = &ast.StmtFinally{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				FinallyTkn:           yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1150
		{
			yyVAL.node = &ast.StmtUnset{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1156
		{
			yyDollar[1].node.(*ast.StmtUnset).Vars = append(yyDollar[1].node.(*ast.StmtUnset).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1166
		{
			yyVAL.node = yyDollar[1].node
		}
	case 168:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:1173
		{
			yyVAL.node = &ast.StmtFunction{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token),
				FunctionTkn:  yyDollar[1].token,
				AmpersandTkn: yyDollar[2].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
				OpenParenthesisTkn:   yyDollar[5].token,
				Params:               yyDollar[6].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[6].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn:  yyDollar[7].token,
				ColonTkn:             yyDollar[8].node.(*ReturnType).ColonTkn,
				ReturnType:           yyDollar[8].node.(*ReturnType).Type,
				OpenCurlyBracketTkn:  yyDollar[9].token,
				Stmts:                yyDollar[10].list,
				CloseCurlyBracketTkn: yyDollar[11].token,
			}
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1198
		{
			yyVAL.token = nil
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1202
		{
			yyVAL.token = yyDollar[1].token
		}
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1209
		{
			yyVAL.token = nil
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1213
		{
			yyVAL.token = yyDollar[1].token
		}
	case 173:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:1220
		{
			class := &ast.StmtClass{
				Position:  yylex.(*Parser).builder.Pos.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[9].token),
				Modifiers: yyDollar[1].list,
				ClassTkn:  yyDollar[2].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[7].token,
				Stmts:                yyDollar[8].list,
				CloseCurlyBracketTkn: yyDollar[9].token,
			}

			if yyDollar[4].node != nil {
				class.ExtendsTkn = yyDollar[4].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[4].node.(*ast.StmtClass).Extends
			}

			if yyDollar[5].node != nil {
				class.ImplementsTkn = yyDollar[5].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[5].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[5].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 174:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1249
		{
			class := &ast.StmtClass{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[8].token),
				ClassTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[6].token,
				Stmts:                yyDollar[7].list,
				CloseCurlyBracketTkn: yyDollar[8].token,
			}

			if yyDollar[3].node != nil {
				class.ExtendsTkn = yyDollar[3].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[3].node.(*ast.StmtClass).Extends
			}

			if yyDollar[4].node != nil {
				class.ImplementsTkn = yyDollar[4].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[4].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[4].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1280
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1284
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1291
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1299
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 179:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1310
		{
			yyVAL.node = &ast.StmtTrait{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token),
				TraitTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Stmts:                yyDollar[5].list,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 180:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1328
		{
			iface := &ast.StmtInterface{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				InterfaceTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[5].token,
				Stmts:                yyDollar[6].list,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}

			if yyDollar[3].node != nil {
				iface.ExtendsTkn = yyDollar[3].node.(*ast.StmtInterface).ExtendsTkn
				iface.Extends = yyDollar[3].node.(*ast.StmtInterface).Extends
				iface.ExtendsSeparatorTkns = yyDollar[3].node.(*ast.StmtInterface).ExtendsSeparatorTkns
			}

			yyVAL.node = iface
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1354
		{
			yyVAL.node = nil
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1358
		{
			yyVAL.node = &ast.StmtClass{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExtendsTkn: yyDollar[1].token,
				Extends:    yyDollar[2].node,
			}
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1369
		{
			yyVAL.node = nil
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1373
		{
			yyVAL.node = &ast.StmtInterface{
				Position:             yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ExtendsTkn:           yyDollar[1].token,
				Extends:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ExtendsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1385
		{
			yyVAL.node = nil
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1389
		{
			yyVAL.node = &ast.StmtClass{
				Position:                yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ImplementsTkn:           yyDollar[1].token,
				Implements:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ImplementsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1401
		{
			yyVAL.node = yyDollar[1].node
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1405
		{
			yyVAL.node = &ast.StmtForeach{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Var:          yyDollar[2].node,
			}
		}
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1413
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ListTkn:         yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1424
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1437
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1444
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForTkn:    yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1460
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1467
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForeachTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1483
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1490
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndDeclareTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1506
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Cases:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 198:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1515
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CaseSeparatorTkn:     yyDollar[2].token,
				Cases:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1525
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn:     yyDollar[1].token,
				Cases:        yyDollar[2].list,
				EndSwitchTkn: yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1535
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				ColonTkn:         yyDollar[1].token,
				CaseSeparatorTkn: yyDollar[2].token,
				Cases:            yyDollar[3].list,
				EndSwitchTkn:     yyDollar[4].token,
				SemiColonTkn:     yyDollar[5].token,
			}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1549
		{
			yyVAL.list = nil
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1553
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtCase{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list),
				CaseTkn:          yyDollar[2].token,
				Cond:             yyDollar[3].node,
				CaseSeparatorTkn: yyDollar[4].token,
				Stmts:            yyDollar[5].list,
			})
		}
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1563
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtDefault{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				DefaultTkn:       yyDollar[2].token,
				CaseSeparatorTkn: yyDollar[3].token,
				Stmts:            yyDollar[4].list,
			})
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1575
		{
			yyVAL.token = yyDollar[1].token
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1579
		{
			yyVAL.token = yyDollar[1].token
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1586
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1593
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndWhileTkn:  yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1609
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				Stmt:                yyDollar[5].node,
			}
		}
	case 209:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1620
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				Stmt:                yyDollar[6].node,
			})

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)

			yyVAL.node = yyDollar[1].node
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1638
		{
			yyVAL.node = yyDollar[1].node
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1642
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[3].node),
				ElseTkn:  yyDollar[2].token,
				Stmt:     yyDollar[3].node,
			}

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 212:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1657
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[6].list),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				ColonTkn:            yyDollar[5].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[6].list),
					Stmts:    yyDollar[6].list,
				},
			}
		}
	case 213:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1672
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[7].list),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[7].list),
					Stmts:    yyDollar[7].list,
				},
			})

			yyVAL.node = yyDollar[1].node
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1692
		{
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[2].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[3].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			yyVAL.node = yyDollar[1].node
		}
	case 215:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1700
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				ElseTkn:  yyDollar[2].token,
				ColonTkn: yyDollar[3].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[4].list),
					Stmts:    yyDollar[4].list,
				},
			}
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[5].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[6].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token)

			yyVAL.node = yyDollar[1].node
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1720
		{
			yyVAL.node = yyDollar[1].node
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1724
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1731
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1737
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1747
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token)
			if yyDollar[1].node != nil {
				pos = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)
			} else if yyDollar[2].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[2].token, yyDollar[4].token)
			} else if yyDollar[3].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[3].token, yyDollar[4].token)
			}

			yyVAL.node = &ast.Parameter{
				Position:     pos,
				Type:         yyDollar[1].node,
				AmpersandTkn: yyDollar[2].token,
				VariadicTkn:  yyDollar[3].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
						IdentifierTkn: yyDollar[4].token,
						Value:         yyDollar[4].token.Value,
					},
				},
			}
		}
	case 221:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1773
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node)
			if yyDollar[1].node != nil {
				pos = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)
			} else if yyDollar[2].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node)
			} else if yyDollar[3].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[3].token, yyDollar[6].node)
			}

			yyVAL.node = &ast.Parameter{
				Position:     pos,
				Type:         yyDollar[1].node,
				AmpersandTkn: yyDollar[2].token,
				VariadicTkn:  yyDollar[3].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
						IdentifierTkn: yyDollar[4].token,
						Value:         yyDollar[4].token.Value,
					},
				},
				EqualTkn:     yyDollar[5].token,
				DefaultValue: yyDollar[6].node,
			}
		}
	case 222:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1804
		{
			yyVAL.node = nil
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1808
		{
			yyVAL.node = yyDollar[1].node
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1815
		{
			yyVAL.node = yyDollar[1].node
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1819
		{
			yyVAL.node = &ast.Nullable{
				Position:    yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				QuestionTkn: yyDollar[1].token,
				Expr:        yyDollar[2].node,
			}
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1830
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1838
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1846
		{
			yyVAL.node = yyDollar[1].node
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1853
		{
			yyVAL.node = &ReturnType{}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1857
		{
			yyVAL.node = &ReturnType{
				ColonTkn: yyDollar[1].token,
				Type:     yyDollar[2].node,
			}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1867
		{
			yyVAL.node = &ArgumentList{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				CloseParenthesisTkn: yyDollar[2].token,
			}
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1875
		{
			argumentList := yyDollar[2].node.(*ArgumentList)
			argumentList.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			argumentList.OpenParenthesisTkn = yyDollar[1].token
			if yyDollar[3].token != nil {
				argumentList.SeparatorTkns = append(argumentList.SeparatorTkns, yyDollar[3].token)
			}
			argumentList.CloseParenthesisTkn = yyDollar[4].token

			yyVAL.node = argumentList
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1890
		{
			yyVAL.node = &ArgumentList{
				Arguments: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1896
		{
			yyDollar[1].node.(*ArgumentList).SeparatorTkns = append(yyDollar[1].node.(*ArgumentList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ArgumentList).Arguments = append(yyDollar[1].node.(*ArgumentList).Arguments, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1906
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgument(yyDollar[1].node)
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1910
		{
			yyVAL.node = yylex.(*Parser).builder.NewVariadicArgument(yyDollar[1].token, yyDollar[2].node)
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1914
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamedArgument(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node)
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1921
		{
			yyDollar[1].node.(*ast.StmtGlobal).Vars = append(yyDollar[1].node.(*ast.StmtGlobal).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1928
		{
			yyVAL.node = &ast.StmtGlobal{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1937
		{
			yyVAL.node = yyDollar[1].node
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1944
		{
			yyDollar[1].node.(*ast.StmtStatic).Vars = append(yyDollar[1].node.(*ast.StmtStatic).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1951
		{
			yyVAL.node = &ast.StmtStatic{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1960
		{

			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1975
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1994
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 246:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1998
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2005
		{
			yyVAL.node = &ast.StmtPropertyList{
				Position:      yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[4].token),
				Modifiers:     yyDollar[1].list,
				Type:          yyDollar[2].node,
				Props:         yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2016
		{
			yyVAL.node = &ast.StmtClassConstList{
				Position:      yylex.(*Parser).builder.Pos.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[4].token),
				Modifiers:     yyDollar[1].list,
				ConstTkn:      yyDollar[2].token,
				Consts:        yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2027
		{
			traitUse := &ast.StmtTraitUse{
				Position:      yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				UseTkn:        yyDollar[1].token,
				Traits:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}

			switch n := yyDollar[3].node.(type) {
			case *TraitAdaptationList:
				traitUse.OpenCurlyBracketTkn = n.OpenCurlyBracketTkn
				traitUse.Adaptations = n.Adaptations
				traitUse.CloseCurlyBracketTkn = n.CloseCurlyBracketTkn
			case *ast.StmtNop:
				traitUse.SemiColonTkn = n.SemiColonTkn
			}

			yyVAL.node = traitUse
		}
	case 250:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:2047
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[10].node)
			if yyDollar[1].list != nil {
				pos = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[10].node)
			}

			yyVAL.node = &ast.StmtClassMethod{
				Position:     pos,
				Modifiers:    yyDollar[1].list,
				FunctionTkn:  yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
				OpenParenthesisTkn:  yyDollar[6].token,
				Params:              yyDollar[7].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[8].token,
				ColonTkn:            yyDollar[9].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[9].node.(*ReturnType).Type,
				Stmt:                yyDollar[10].node,
			}
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2076
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2082
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2092
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2099
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CloseCurlyBracketTkn: yyDollar[2].token,
			}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2107
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Adaptations:          yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2119
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2123
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2130
		{
			yyDollar[1].node.(*ast.StmtTraitUsePrecedence).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2136
		{
			yyDollar[1].node.(*ast.StmtTraitUseAlias).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2145
		{
			yyVAL.node = &ast.StmtTraitUsePrecedence{
				Position:       yylex.(*Parser).builder.Pos.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].node.(*ParserSeparatedList).Items),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				InsteadofTkn:   yyDollar[2].token,
				Insteadof:      yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2160
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2175
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2190
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2206
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
			}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2220
		{
			yyVAL.node = &TraitMethodRef{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2231
		{
			yyVAL.node = yyDollar[1].node
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2238
		{
			yyVAL.node = &TraitMethodRef{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2254
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2261
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2273
		{
			yyVAL.list = yyDollar[1].list
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2277
		{
			yyVAL.list = []ast.Vertex{
				&ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2290
		{
			yyVAL.list = nil
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2294
		{
			yyVAL.list = yyDollar[1].list
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2301
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2305
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2312
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2320
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2328
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2336
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2344
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2352
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2363
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2370
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2379
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				Expr: nil,
			}
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2394
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2413
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2420
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2429
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 289:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2445
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2461
		{
			yyDollar[1].node.(*ast.StmtEcho).Exprs = append(yyDollar[1].node.(*ast.StmtEcho).Exprs, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2468
		{
			yyVAL.node = &ast.StmtEcho{
				Exprs: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2477
		{
			yyVAL.node = yyDollar[1].node
		}
	case 293:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2484
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2488
		{
			yyVAL.node = yyDollar[1].node
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2495
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2502
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 297:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:2511
		{
			if yyDollar[2].node == nil {
				yyDollar[2].node = &ArgumentList{}
			}

			class := &ast.StmtClass{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[8].token),
				ClassTkn:             yyDollar[1].token,
				OpenParenthesisTkn:   yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                 yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:        yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn:  yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
				OpenCurlyBracketTkn:  yyDollar[6].token,
				Stmts:                yyDollar[7].list,
				CloseCurlyBracketTkn: yyDollar[8].token,
			}

			if yyDollar[3].node != nil {
				class.ExtendsTkn = yyDollar[3].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[3].node.(*ast.StmtClass).Extends
			}

			if yyDollar[4].node != nil {
				class.ImplementsTkn = yyDollar[4].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[4].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[4].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2545
		{
			if yyDollar[3].node != nil {
				yyVAL.node = &ast.ExprNew{
					Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
					NewTkn:              yyDollar[1].token,
					Class:               yyDollar[2].node,
					OpenParenthesisTkn:  yyDollar[3].node.(*ArgumentList).OpenParenthesisTkn,
					Args:                yyDollar[3].node.(*ArgumentList).Arguments,
					SeparatorTkns:       yyDollar[3].node.(*ArgumentList).SeparatorTkns,
					CloseParenthesisTkn: yyDollar[3].node.(*ArgumentList).CloseParenthesisTkn,
				}
			} else {
				yyVAL.node = &ast.ExprNew{
					Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
					NewTkn:   yyDollar[1].token,
					Class:    yyDollar[2].node,
				}
			}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2565
		{
			yyVAL.node = &ast.ExprNew{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				NewTkn:   yyDollar[1].token,
				Class:    yyDollar[2].node,
			}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2576
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2583
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2588
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 303:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:2595
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token)
		}
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2602
		{
			yyVAL.node = nil
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2607
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2614
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2619
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2626
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(nil, nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2631
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(yyDollar[1].token, yyDollar[2].token, nil, yyDollar[3].token, yyDollar[4].node)
		}
	case 310:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:2638
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
				EqualTkn: yyDollar[5].token,
				Expr:     yyDollar[6].node,
			}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:2654
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
					OpenBracketTkn:  yyDollar[1].token,
					Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[3].token,
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2669
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2678
		{
			yyVAL.node = &ast.ExprAssignReference{
				Position:     yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Var:          yyDollar[1].node,
				EqualTkn:     yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Expr:         yyDollar[4].node,
			}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2688
		{
			yyVAL.node = &ast.ExprClone{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CloneTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2696
		{
			yyVAL.node = &ast.ExprAssignPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2705
		{
			yyVAL.node = &ast.ExprAssignMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2714
		{
			yyVAL.node = &ast.ExprAssignMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2723
		{
			yyVAL.node = &ast.ExprAssignPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2732
		{
			yyVAL.node = &ast.ExprAssignDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2741
		{
			yyVAL.node = &ast.ExprAssignConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2750
		{
			yyVAL.node = &ast.ExprAssignMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2759
		{
			yyVAL.node = &ast.ExprAssignBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2768
		{
			yyVAL.node = &ast.ExprAssignBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2777
		{
			yyVAL.node = &ast.ExprAssignBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2786
		{
			yyVAL.node = &ast.ExprAssignShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2795
		{
			yyVAL.node = &ast.ExprAssignShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2804
		{
			yyVAL.node = &ast.ExprAssignCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2813
		{
			yyVAL.node = &ast.ExprPostInc{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				IncTkn:   yyDollar[2].token,
			}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2821
		{
			yyVAL.node = &ast.ExprPreInc{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2829
		{
			yyVAL.node = &ast.ExprPostDec{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				DecTkn:   yyDollar[2].token,
			}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2837
		{
			yyVAL.node = &ast.ExprPreDec{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DecTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2845
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2854
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2863
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2872
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2881
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2890
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2899
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2908
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2917
		{
			yyVAL.node = &ast.ExprBinaryConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2926
		{
			yyVAL.node = &ast.ExprBinaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2935
		{
			yyVAL.node = &ast.ExprBinaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2944
		{
			yyVAL.node = &ast.ExprBinaryMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2953
		{
			yyVAL.node = &ast.ExprBinaryPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2962
		{
			yyVAL.node = &ast.ExprBinaryDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2971
		{
			yyVAL.node = &ast.ExprBinaryMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2980
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2989
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2998
		{
			yyVAL.node = &ast.ExprUnaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PlusTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3006
		{
			yyVAL.node = &ast.ExprUnaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				MinusTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3014
		{
			yyVAL.node = &ast.ExprBooleanNot{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExclamationTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3022
		{
			yyVAL.node = &ast.ExprBitwiseNot{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				TildaTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3030
		{
			yyVAL.node = &ast.ExprBinaryIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3039
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3048
		{
			yyVAL.node = &ast.ExprBinaryEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3057
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3066
		{
			yyVAL.node = &ast.ExprBinarySmaller{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3075
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3084
		{
			yyVAL.node = &ast.ExprBinaryGreater{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3093
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3102
		{
			yyVAL.node = &ast.ExprBinarySpaceship{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3111
		{
			yyVAL.node = &ast.ExprInstanceOf{
				Position:      yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Expr:          yyDollar[1].node,
				InstanceOfTkn: yyDollar[2].token,
				Class:         yyDollar[3].node,
			}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3120
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3129
		{
			yyVAL.node = yyDollar[1].node
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3133
		{
			yyVAL.node = yyDollar[1].node
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:3137
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[5].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				IfTrue:      yyDollar[3].node,
				ColonTkn:    yyDollar[4].token,
				IfFalse:     yyDollar[5].node,
			}
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3148
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				ColonTkn:    yyDollar[3].token,
				IfFalse:     yyDollar[4].node,
			}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3158
		{
			yyVAL.node = &ast.ExprBinaryCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3167
		{
			yyVAL.node = yyDollar[1].node
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3171
		{
			yyVAL.node = &ast.ExprCastInt{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3179
		{
			yyVAL.node = &ast.ExprCastDouble{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3187
		{
			yyVAL.node = &ast.ExprCastString{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3195
		{
			yyVAL.node = &ast.ExprCastArray{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3203
		{
			yyVAL.node = &ast.ExprCastObject{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3211
		{
			yyVAL.node = &ast.ExprCastBool{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3219
		{
			yyVAL.node = &ast.ExprCastUnset{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3227
		{
			exit := &ast.ExprExit{
				ExitTkn: yyDollar[1].token,
			}

			if yyDollar[2].node == nil {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token)
			} else {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				exit.OpenParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).OpenParenthesisTkn
				exit.Expr = yyDollar[2].node.(*ast.ExprBrackets).Expr
				exit.CloseParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).CloseParenthesisTkn
			}

			yyVAL.node = exit
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3244
		{
			yyVAL.node = &ast.ExprErrorSuppress{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AtTkn:    yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3252
		{
			yyVAL.node = yyDollar[1].node
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3256
		{
			yyVAL.node = &ast.ExprShellExec{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBacktickTkn:  yyDollar[1].token,
				Parts:            yyDollar[2].list,
				CloseBacktickTkn: yyDollar[3].token,
			}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3265
		{
			yyVAL.node = &ast.ExprPrint{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PrintTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3273
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				YieldTkn: yyDollar[1].token,
			}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3280
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldTkn: yyDollar[1].token,
				Val:      yyDollar[2].node,
			}
		}
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3288
		{
			yyVAL.node = &ast.ExprYield{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				YieldTkn:       yyDollar[1].token,
				Key:            yyDollar[2].node,
				DoubleArrowTkn: yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3298
		{
			yyVAL.node = &ast.ExprYieldFrom{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldFromTkn: yyDollar[1].token,
				Expr:         yyDollar[2].node,
			}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3306
		{
			yyVAL.node = yyDollar[1].node
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3310
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			}

			yyVAL.node = yyDollar[2].node
		}
	case 388:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:3326
		{
			closure := yyDollar[7].node.(*ast.ExprClosure)

			closure.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token)
			closure.FunctionTkn = yyDollar[1].token
			closure.AmpersandTkn = yyDollar[2].token
			closure.OpenParenthesisTkn = yyDollar[4].token
			closure.Params = yyDollar[5].node.(*ParserSeparatedList).Items
			closure.SeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			closure.CloseParenthesisTkn = yyDollar[6].token
			closure.ColonTkn = yyDollar[8].node.(*ReturnType).ColonTkn
			closure.ReturnType = yyDollar[8].node.(*ReturnType).Type
			closure.OpenCurlyBracketTkn = yyDollar[9].token
			closure.Stmts = yyDollar[10].list
			closure.CloseCurlyBracketTkn = yyDollar[11].token

			yyVAL.node = closure
		}
	case 389:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:3345
		{
			yyVAL.node = &ast.ExprArrowFunction{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node),
				FnTkn:               yyDollar[1].token,
				AmpersandTkn:        yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Params:              yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[6].node.(*ReturnType).Type,
				DoubleArrowTkn:      yyDollar[8].token,
				Expr:                yyDollar[9].node,
			}
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3368
		{
			yyVAL.token = nil
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3372
		{
			yyVAL.token = yyDollar[1].token
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3379
		{
			yyVAL.node = &ast.ExprClosure{}
		}
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3383
		{
			yyVAL.node = &ast.ExprClosure{
				UseTkn:                 yyDollar[1].token,
				UseOpenParenthesisTkn:  yyDollar[2].token,
				Uses:                   yyDollar[3].node.(*ParserSeparatedList).Items,
				UseSeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				UseCloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3396
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3403
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3412
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3426
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				AmpersandTkn: yyDollar[1].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						IdentifierTkn: yyDollar[2].token,
						Value:         yyDollar[2].token.Value,
					},
				},
			}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3444
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3455
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3476
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3497
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3511
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3519
		{
			yyVAL.node = yyDollar[1].node
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3526
		{
			yyVAL.node = yyDollar[1].node
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3530
		{
			yyVAL.node = yyDollar[1].node
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3537
		{
			yyVAL.node = nil
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3541
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3553
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3557
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
			}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3567
		{
			yyVAL.list = yyDollar[1].list
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3574
		{
			yyVAL.node = nil
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3578
		{
			yyVAL.node = yyDollar[1].node
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3585
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ArrayTkn:        yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3596
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3606
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3617
		{
			yyVAL.node = &ast.ScalarLnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3625
		{
			yyVAL.node = &ast.ScalarDnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3633
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3641
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3649
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3657
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3665
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3673
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3681
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3689
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3697
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:       yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn: yyDollar[1].token,
				Parts: []ast.Vertex{
					&ast.ScalarEncapsedStringPart{
						Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						EncapsedStrTkn: yyDollar[2].token,
						Value:          yyDollar[2].token.Value,
					},
				},
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3712
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenHeredocTkn:  yyDollar[1].token,
				CloseHeredocTkn: yyDollar[2].token,
			}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3720
		{
			yyVAL.node = &ast.ScalarEncapsed{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenQuoteTkn:  yyDollar[1].token,
				Parts:         yyDollar[2].list,
				CloseQuoteTkn: yyDollar[3].token,
			}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3729
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn:  yyDollar[1].token,
				Parts:           yyDollar[2].list,
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3738
		{
			yyVAL.node = yyDollar[1].node
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3742
		{
			yyVAL.node = yyDollar[1].node
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3749
		{
			yyVAL.node = &ast.ExprConstFetch{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Const:    yyDollar[1].node,
			}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3756
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3769
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3785
		{
			yyVAL.node = yyDollar[1].node
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3789
		{
			yyVAL.node = yyDollar[1].node
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3796
		{
			yyVAL.node = nil
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3800
		{
			yyVAL.node = yyDollar[1].node
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3807
		{
			yyVAL.node = yyDollar[1].node
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3814
		{
			yyVAL.node = yyDollar[1].node
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3818
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3827
		{
			yyVAL.node = yyDollar[1].node
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3834
		{
			yyVAL.node = yyDollar[1].node
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3838
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3847
		{
			yyVAL.node = yyDollar[1].node
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3854
		{
			yyVAL.node = yyDollar[1].node
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3858
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3868
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3878
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3890
		{
			yyVAL.node = yylex.(*Parser).builder.NewMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3894
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafeMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3898
		{
			yyVAL.node = yyDollar[1].node
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3905
		{
			yyVAL.node = yyDollar[1].node
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3909
		{
			yyVAL.node = yyDollar[1].node
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3913
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3917
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3924
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3935
		{
			yyVAL.node = &ast.ExprVariable{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				DollarTkn:            yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Name:                 yyDollar[3].node,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3945
		{
			yyVAL.node = &ast.ExprVariable{
				Position:  yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DollarTkn: yyDollar[1].token,
				Name:      yyDollar[2].node,
			}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3956
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3965
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3977
		{
			yyVAL.node = yyDollar[1].node
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3981
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3991
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4003
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4007
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4011
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4020
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4032
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4040
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4049
		{
			yyVAL.node = yyDollar[1].node
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4056
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4064
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4073
		{
			yyVAL.node = yyDollar[1].node
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4080
		{
			pairList := yyDollar[1].node.(*ParserSeparatedList)
			fistPair := pairList.Items[0].(*ast.ExprArrayItem)

			if fistPair.Key == nil && fistPair.Val == nil && len(pairList.Items) == 1 {
				pairList.Items = nil
			}

			yyVAL.node = yyDollar[1].node
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:4094
		{
			yyVAL.node = &ast.ExprArrayItem{}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4098
		{
			yyVAL.node = yyDollar[1].node
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4105
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4112
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4121
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val:            yyDollar[3].node,
			}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4130
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Val:      yyDollar[1].node,
			}
		}
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4137
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				AmpersandTkn:   yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4147
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Val:          yyDollar[2].node,
			}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4155
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:    yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				EllipsisTkn: yyDollar[1].token,
				Val:         yyDollar[2].node,
			}
		}
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:4163
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[3].token, yyDollar[6].token),
					ListTkn:         yyDollar[3].token,
					OpenBracketTkn:  yyDollar[4].token,
					Items:           yyDollar[5].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[6].token,
				},
			}
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4179
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
			}
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4196
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4200
		{
			yyVAL.list = append(
				yyDollar[1].list,
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					EncapsedStrTkn: yyDollar[2].token,
					Value:          yyDollar[2].token.Value,
				},
			)
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4211
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4215
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
				yyDollar[2].node,
			}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4229
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4240
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4257
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4261
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4265
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name:                      yyDollar[2].node,
				CloseCurlyBracketTkn:      yyDollar[3].token,
			}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4274
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 498:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:4287
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenSquareBracketTkn:  yyDollar[3].token,
				Dim:                   yyDollar[4].node,
				CloseSquareBracketTkn: yyDollar[5].token,
				CloseCurlyBracketTkn:  yyDollar[6].token,
			}
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4303
		{
			yyVAL.node = &ast.ScalarEncapsedStringBrackets{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Var:                  yyDollar[2].node,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4315
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4323
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(string(yyDollar[1].token.Value)); err == nil {
				yyVAL.node = &ast.ScalarLnumber{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					NumberTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					StringTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4340
		{
			_, err := strconv.Atoi(string(yyDollar[2].token.Value))
			isInt := err == nil

			if isInt {
				yyVAL.node = &ast.ExprUnaryMinus{
					Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn: yyDollar[1].token,
					Expr: &ast.ScalarLnumber{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						NumberTkn: yyDollar[2].token,
						Value:     yyDollar[2].token.Value,
					},
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn:  yyDollar[1].token,
					StringTkn: yyDollar[2].token,
					Value:     append([]byte("-"), yyDollar[2].token.Value...),
				}
			}
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4364
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:4378
		{
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[4].token)
			}

			yyVAL.node = &ast.ExprIsset{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				IssetTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Vars:                yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
			}
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4393
		{
			yyVAL.node = &ast.ExprEmpty{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EmptyTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4403
		{
			yyVAL.node = &ast.ExprInclude{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4411
		{
			yyVAL.node = &ast.ExprIncludeOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4419
		{
			yyVAL.node = &ast.ExprEval{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EvalTkn:             yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4429
		{
			yyVAL.node = &ast.ExprRequire{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4437
		{
			yyVAL.node = &ast.ExprRequireOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4448
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4454
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4464
		{
			yyVAL.node = yyDollar[1].node
		}
	}
	goto yystack /* stack new state and value */
}
