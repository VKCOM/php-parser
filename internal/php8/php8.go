// Code generated by goyacc -o internal/php8/php8.go internal/php8/php8.y. DO NOT EDIT.

// line internal/php8/php8.y:1

package php8

import __yyfmt__ "fmt"

// line internal/php8/php8.y:3

import (
	"strconv"

	"github.com/z7zmey/php-parser/pkg/ast"
	"github.com/z7zmey/php-parser/pkg/token"
)

// line internal/php8/php8.y:13
type yySymType struct {
	yys   int
	node  ast.Vertex
	token *token.Token
	list  []ast.Vertex
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_FN = 57380
const T_CONST = 57381
const T_RETURN = 57382
const T_TRY = 57383
const T_CATCH = 57384
const T_FINALLY = 57385
const T_THROW = 57386
const T_USE = 57387
const T_INSTEADOF = 57388
const T_GLOBAL = 57389
const T_VAR = 57390
const T_UNSET = 57391
const T_ISSET = 57392
const T_EMPTY = 57393
const T_HALT_COMPILER = 57394
const T_CLASS = 57395
const T_TRAIT = 57396
const T_INTERFACE = 57397
const T_EXTENDS = 57398
const T_IMPLEMENTS = 57399
const T_OBJECT_OPERATOR = 57400
const T_DOUBLE_ARROW = 57401
const T_LIST = 57402
const T_ARRAY = 57403
const T_CALLABLE = 57404
const T_CLASS_C = 57405
const T_TRAIT_C = 57406
const T_METHOD_C = 57407
const T_FUNC_C = 57408
const T_LINE = 57409
const T_FILE = 57410
const T_COMMENT = 57411
const T_DOC_COMMENT = 57412
const T_OPEN_TAG = 57413
const T_OPEN_TAG_WITH_ECHO = 57414
const T_CLOSE_TAG = 57415
const T_WHITESPACE = 57416
const T_START_HEREDOC = 57417
const T_END_HEREDOC = 57418
const T_DOLLAR_OPEN_CURLY_BRACES = 57419
const T_CURLY_OPEN = 57420
const T_PAAMAYIM_NEKUDOTAYIM = 57421
const T_NAMESPACE = 57422
const T_NS_C = 57423
const T_DIR = 57424
const T_NS_SEPARATOR = 57425
const T_ELLIPSIS = 57426
const T_EVAL = 57427
const T_REQUIRE = 57428
const T_REQUIRE_ONCE = 57429
const T_LOGICAL_OR = 57430
const T_LOGICAL_XOR = 57431
const T_LOGICAL_AND = 57432
const T_INSTANCEOF = 57433
const T_NEW = 57434
const T_CLONE = 57435
const T_ELSEIF = 57436
const T_ELSE = 57437
const T_ENDIF = 57438
const T_PRINT = 57439
const T_YIELD = 57440
const T_STATIC = 57441
const T_ABSTRACT = 57442
const T_FINAL = 57443
const T_PRIVATE = 57444
const T_PROTECTED = 57445
const T_PUBLIC = 57446
const T_INC = 57447
const T_DEC = 57448
const T_YIELD_FROM = 57449
const T_INT_CAST = 57450
const T_DOUBLE_CAST = 57451
const T_STRING_CAST = 57452
const T_ARRAY_CAST = 57453
const T_OBJECT_CAST = 57454
const T_BOOL_CAST = 57455
const T_UNSET_CAST = 57456
const T_COALESCE = 57457
const T_SPACESHIP = 57458
const T_NOELSE = 57459
const T_PLUS_EQUAL = 57460
const T_MINUS_EQUAL = 57461
const T_MUL_EQUAL = 57462
const T_POW_EQUAL = 57463
const T_DIV_EQUAL = 57464
const T_CONCAT_EQUAL = 57465
const T_MOD_EQUAL = 57466
const T_AND_EQUAL = 57467
const T_OR_EQUAL = 57468
const T_XOR_EQUAL = 57469
const T_SL_EQUAL = 57470
const T_SR_EQUAL = 57471
const T_COALESCE_EQUAL = 57472
const T_BOOLEAN_OR = 57473
const T_BOOLEAN_AND = 57474
const T_POW = 57475
const T_SL = 57476
const T_SR = 57477
const T_IS_IDENTICAL = 57478
const T_IS_NOT_IDENTICAL = 57479
const T_IS_EQUAL = 57480
const T_IS_NOT_EQUAL = 57481
const T_IS_SMALLER_OR_EQUAL = 57482
const T_IS_GREATER_OR_EQUAL = 57483
const T_NULLSAFE_OBJECT_OPERATOR = 57484
const T_MATCH = 57485

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_FN",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_COALESCE_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"T_NULLSAFE_OBJECT_OPERATOR",
	"T_MATCH",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

// line internal/php8/php8.y:4457

// line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	-2, 0,
	-1, 44,
	58, 451,
	79, 451,
	142, 451,
	146, 451,
	152, 451,
	-2, 446,
	-1, 48,
	150, 454,
	-2, 464,
	-1, 86,
	58, 453,
	79, 453,
	142, 453,
	146, 453,
	150, 456,
	152, 453,
	-2, 441,
	-1, 111,
	79, 414,
	-2, 443,
	-1, 236,
	58, 451,
	79, 451,
	142, 451,
	146, 451,
	152, 451,
	-2, 339,
	-1, 239,
	150, 456,
	-2, 453,
	-1, 242,
	58, 451,
	79, 451,
	142, 451,
	146, 451,
	152, 451,
	-2, 341,
	-1, 362,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 363,
	-1, 363,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 364,
	-1, 364,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 365,
	-1, 365,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 366,
	-1, 366,
	140, 0,
	141, 0,
	169, 0,
	170, 0,
	-2, 367,
	-1, 367,
	140, 0,
	141, 0,
	169, 0,
	170, 0,
	-2, 368,
	-1, 368,
	140, 0,
	141, 0,
	169, 0,
	170, 0,
	-2, 369,
	-1, 369,
	140, 0,
	141, 0,
	169, 0,
	170, 0,
	-2, 370,
	-1, 370,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 371,
	-1, 377,
	151, 167,
	162, 167,
	-2, 451,
	-1, 423,
	151, 494,
	153, 494,
	162, 494,
	-2, 451,
	-1, 428,
	58, 452,
	79, 452,
	142, 452,
	146, 452,
	150, 455,
	152, 452,
	-2, 373,
	-1, 443,
	150, 480,
	-2, 444,
	-1, 444,
	150, 482,
	-2, 471,
	-1, 525,
	150, 480,
	-2, 445,
	-1, 526,
	150, 482,
	-2, 472,
	-1, 545,
	151, 217,
	-2, 237,
	-1, 553,
	149, 80,
	-2, 84,
	-1, 557,
	149, 13,
	-2, 417,
	-1, 559,
	149, 46,
	-2, 392,
	-1, 560,
	149, 72,
	-2, 413,
	-1, 570,
	149, 65,
	-2, 429,
	-1, 571,
	149, 66,
	-2, 430,
	-1, 572,
	149, 67,
	-2, 431,
	-1, 573,
	149, 62,
	-2, 432,
	-1, 574,
	149, 64,
	-2, 433,
	-1, 575,
	149, 63,
	-2, 434,
	-1, 576,
	149, 68,
	-2, 435,
	-1, 577,
	149, 61,
	-2, 436,
	-1, 578,
	150, 401,
	-2, 42,
	-1, 579,
	150, 401,
	-2, 69,
	-1, 617,
	151, 217,
	-2, 237,
	-1, 643,
	150, 455,
	-2, 452,
	-1, 714,
	151, 187,
	-2, 451,
	-1, 722,
	151, 217,
	-2, 237,
	-1, 738,
	151, 493,
	153, 493,
	162, 493,
	-2, 451,
	-1, 779,
	151, 188,
	-2, 451,
	-1, 795,
	37, 283,
	39, 283,
	-2, 280,
	-1, 809,
	94, 212,
	95, 212,
	96, 212,
	-2, 0,
	-1, 847,
	151, 187,
	-2, 451,
	-1, 849,
	151, 190,
	-2, 425,
	-1, 864,
	94, 213,
	95, 213,
	96, 213,
	-2, 0,
	-1, 934,
	31, 203,
	32, 203,
	33, 203,
	147, 203,
	-2, 0,
	-1, 965,
	29, 78,
	-2, 84,
	-1, 973,
	31, 202,
	32, 202,
	33, 202,
	147, 202,
	-2, 0,
	-1, 1001,
	151, 217,
	-2, 237,
}

const yyPrivate = 57344

const yyLast = 8302

var yyAct = [...]int{

	28, 134, 821, 797, 674, 914, 384, 448, 944, 624,
	958, 913, 878, 843, 910, 891, 727, 816, 291, 772,
	679, 677, 142, 142, 142, 761, 676, 155, 713, 331,
	611, 694, 447, 549, 82, 190, 695, 538, 619, 376,
	414, 386, 326, 322, 227, 9, 5, 111, 325, 324,
	229, 8, 7, 231, 235, 78, 193, 243, 244, 245,
	246, 247, 136, 84, 141, 248, 249, 250, 251, 252,
	253, 254, 86, 257, 154, 147, 265, 266, 267, 151,
	323, 150, 528, 6, 132, 527, 442, 144, 145, 237,
	237, 129, 281, 282, 131, 284, 285, 954, 130, 951,
	938, 271, 928, 736, 918, 2, 917, 637, 342, 318,
	979, 952, 948, 927, 121, 925, 109, 757, 755, 115,
	729, 980, 614, 588, 343, 953, 949, 239, 239, 340,
	338, 119, 125, 317, 729, 276, 328, 311, 344, 829,
	333, 334, 875, 341, 339, 873, 415, 870, 109, 765,
	752, 273, 687, 261, 109, 671, 330, 275, 345, 346,
	347, 348, 349, 350, 351, 352, 353, 354, 355, 356,
	357, 358, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 138, 372, 374, 116, 378, 109,
	316, 380, 612, 603, 294, 296, 421, 44, 945, 150,
	121, 194, 109, 240, 317, 388, 396, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	754, 237, 411, 142, 413, 315, 304, 231, 849, 745,
	310, 276, 183, 435, 424, 268, 299, 741, 301, 426,
	658, 224, 231, 308, 311, 392, 314, 273, 644, 654,
	631, 939, 236, 242, 655, 1001, 420, 142, 1012, 239,
	647, 121, 650, 648, 437, 110, 418, 237, 975, 142,
	138, 419, 899, 116, 169, 443, 525, 898, 889, 536,
	539, 540, 416, 379, 541, 371, 427, 412, 292, 240,
	183, 865, 822, 546, 532, 853, 550, 110, 231, 237,
	787, 81, 777, 110, 758, 239, 751, 168, 170, 171,
	749, 740, 682, 683, 711, 534, 700, 436, 690, 598,
	645, 429, 636, 300, 906, 225, 148, 434, 554, 223,
	851, 138, 169, 441, 116, 222, 298, 239, 110, 893,
	892, 946, 582, 607, 780, 155, 739, 9, 5, 807,
	882, 110, 722, 8, 7, 167, 166, 524, 297, 708,
	283, 535, 709, 1007, 280, 168, 170, 171, 279, 278,
	165, 256, 226, 295, 610, 617, 601, 599, 533, 545,
	425, 393, 531, 391, 377, 6, 990, 221, 530, 277,
	616, 188, 626, 187, 627, 186, 623, 628, 629, 303,
	989, 302, 597, 591, 140, 879, 649, 139, 315, 585,
	135, 183, 293, 431, 432, 605, 117, 634, 1016, 608,
	1015, 606, 231, 639, 689, 395, 231, 618, 192, 590,
	423, 593, 121, 974, 935, 621, 182, 900, 625, 440,
	431, 657, 432, 432, 431, 895, 660, 838, 839, 838,
	839, 888, 835, 169, 172, 173, 174, 175, 176, 177,
	179, 181, 439, 808, 183, 776, 775, 773, 995, 771,
	642, 183, 638, 768, 602, 163, 167, 166, 587, 584,
	394, 382, 337, 682, 683, 277, 168, 170, 171, 178,
	180, 165, 336, 335, 305, 185, 182, 633, 929, 887,
	884, 635, 138, 868, 866, 116, 169, 172, 173, 121,
	831, 157, 158, 169, 172, 173, 174, 175, 176, 177,
	179, 181, 656, 262, 583, 659, 417, 417, 433, 167,
	166, 142, 664, 583, 184, 163, 167, 166, 942, 168,
	170, 171, 941, 162, 165, 164, 168, 170, 171, 178,
	180, 165, 688, 583, 867, 856, 583, 235, 852, 265,
	266, 430, 894, 169, 837, 789, 281, 282, 670, 284,
	285, 444, 526, 665, 666, 748, 680, 668, 728, 686,
	622, 189, 118, 313, 124, 202, 204, 203, 263, 264,
	121, 183, 825, 684, 121, 663, 260, 330, 200, 201,
	121, 118, 704, 333, 706, 699, 195, 661, 298, 276,
	710, 121, 993, 529, 270, 269, 150, 127, 924, 128,
	922, 871, 723, 313, 794, 273, 725, 796, 9, 5,
	726, 778, 705, 169, 8, 7, 855, 298, 737, 620,
	794, 148, 387, 796, 702, 120, 313, 237, 237, 390,
	991, 992, 712, 79, 80, 544, 743, 724, 719, 329,
	763, 313, 313, 126, 138, 684, 6, 116, 625, 698,
	784, 785, 539, 592, 733, 237, 742, 693, 801, 802,
	803, 800, 799, 798, 309, 239, 239, 262, 550, 692,
	760, 315, 594, 696, 801, 802, 803, 800, 799, 798,
	596, 756, 46, 288, 289, 769, 121, 747, 307, 750,
	137, 108, 593, 239, 593, 589, 312, 121, 231, 121,
	554, 759, 782, 911, 981, 764, 966, 786, 684, 774,
	767, 788, 860, 127, 859, 128, 809, 810, 152, 883,
	231, 196, 947, 152, 652, 804, 896, 838, 839, 820,
	237, 542, 263, 264, 813, 801, 802, 803, 800, 799,
	798, 262, 781, 137, 108, 651, 433, 697, 682, 683,
	684, 121, 333, 133, 806, 595, 826, 805, 827, 823,
	123, 231, 583, 385, 811, 383, 199, 138, 239, 830,
	116, 762, 828, 840, 198, 842, 766, 696, 833, 862,
	684, 836, 832, 684, 861, 684, 857, 846, 197, 864,
	377, 714, 593, 237, 858, 262, 191, 593, 593, 1,
	290, 844, 682, 683, 262, 848, 263, 264, 876, 259,
	38, 662, 262, 795, 417, 417, 667, 433, 738, 890,
	684, 138, 625, 881, 116, 262, 869, 897, 792, 872,
	874, 239, 793, 957, 903, 721, 904, 905, 258, 815,
	882, 886, 762, 277, 696, 841, 838, 839, 814, 62,
	684, 820, 921, 907, 819, 817, 923, 854, 389, 915,
	263, 264, 375, 593, 919, 593, 701, 930, 920, 263,
	264, 1014, 926, 934, 707, 916, 543, 263, 264, 902,
	881, 681, 794, 678, 880, 796, 933, 877, 230, 43,
	263, 264, 937, 779, 262, 42, 912, 537, 950, 286,
	943, 955, 16, 967, 964, 968, 909, 684, 885, 971,
	548, 15, 901, 931, 972, 973, 153, 646, 969, 274,
	970, 49, 844, 977, 978, 48, 881, 112, 881, 593,
	50, 85, 983, 83, 73, 985, 801, 802, 803, 800,
	799, 798, 986, 964, 982, 984, 963, 255, 988, 228,
	63, 272, 61, 684, 962, 684, 847, 961, 287, 263,
	264, 960, 959, 791, 149, 146, 45, 976, 783, 998,
	999, 718, 1000, 675, 332, 319, 1005, 1008, 122, 1006,
	1004, 1002, 306, 3, 908, 963, 1009, 552, 824, 753,
	0, 1010, 0, 0, 0, 1013, 0, 0, 1017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 625,
	565, 566, 557, 467, 96, 97, 553, 0, 109, 684,
	0, 0, 0, 0, 114, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 501, 502, 503, 504,
	505, 493, 494, 578, 579, 496, 497, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 563, 564, 0, 513,
	511, 512, 508, 509, 0, 0, 555, 580, 507, 577,
	573, 574, 575, 570, 571, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 581, 576, 572, 116,
	551, 567, 568, 569, 460, 461, 462, 463, 561, 556,
	468, 469, 470, 558, 559, 560, 450, 451, 452, 453,
	454, 54, 55, 77, 64, 65, 66, 67, 68, 69,
	70, 219, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 0, 0, 562,
	107, 74, 0, 0, 0, 0, 60, 547, 52, 0,
	0, 0, 57, 56, 58, 59, 72, 110, 565, 566,
	557, 467, 96, 97, 553, 0, 109, 0, 0, 0,
	205, 0, 114, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 501, 502, 503, 504, 505, 493,
	494, 578, 579, 496, 497, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 563, 564, 0, 513, 511, 512,
	508, 509, 0, 0, 555, 580, 507, 577, 573, 574,
	575, 570, 571, 794, 0, 0, 796, 0, 0, 106,
	0, 0, 0, 0, 581, 576, 572, 116, 551, 567,
	568, 569, 460, 461, 462, 463, 561, 556, 468, 469,
	470, 558, 559, 560, 450, 451, 452, 453, 454, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 801, 802, 803,
	800, 799, 798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 562, 107, 74,
	0, 0, 0, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 110, 4, 0, 91, 92,
	71, 47, 96, 97, 36, 863, 109, 0, 27, 0,
	0, 0, 114, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 108, 13, 23, 33, 0, 0, 34, 12,
	0, 24, 0, 29, 89, 90, 10, 39, 40, 41,
	0, 0, 0, 0, 51, 113, 0, 105, 101, 102,
	103, 98, 99, 794, 0, 0, 796, 0, 0, 106,
	0, 0, 0, 0, 11, 104, 100, 116, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 53, 0, 0,
	0, 75, 76, 25, 79, 80, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 801, 802, 803,
	800, 799, 798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 107, 74,
	14, 691, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 110, 4, 0, 91, 92,
	71, 47, 96, 97, 36, 790, 109, 0, 27, 0,
	0, 0, 114, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 108, 13, 23, 33, 0, 0, 34, 12,
	0, 24, 0, 29, 89, 90, 10, 39, 40, 41,
	0, 0, 0, 0, 51, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 11, 104, 100, 116, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 53, 0, 0,
	0, 75, 76, 25, 79, 80, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 107, 74,
	14, 586, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 110, 4, 0, 91, 92,
	71, 47, 96, 97, 36, 0, 109, 0, 27, 0,
	0, 0, 114, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 108, 13, 23, 33, 0, 0, 34, 12,
	0, 24, 0, 29, 89, 90, 10, 39, 40, 41,
	0, 0, 0, 0, 51, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 11, 104, 100, 116, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 53, 0, 0,
	0, 75, 76, 25, 79, 80, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 107, 74,
	14, 0, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 110, 321, 0, 91, 92,
	71, 47, 96, 97, 36, 0, 109, 0, 27, 0,
	0, 0, 114, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 108, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 89, 90, 327, 39, 40, 41,
	0, 0, 0, 0, 51, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 138, 104, 100, 116, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 53, 0, 0,
	0, 75, 76, 25, 79, 80, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 107, 74,
	14, 1018, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 110, 321, 0, 91, 92,
	71, 47, 96, 97, 36, 0, 109, 0, 27, 0,
	0, 0, 114, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 108, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 89, 90, 327, 39, 40, 41,
	0, 0, 0, 0, 51, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 138, 104, 100, 116, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 53, 0, 0,
	0, 75, 76, 25, 79, 80, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 107, 74,
	14, 1011, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 110, 321, 0, 91, 92,
	71, 47, 96, 97, 36, 0, 109, 0, 27, 0,
	0, 0, 114, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 108, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 89, 90, 327, 39, 40, 41,
	0, 0, 0, 0, 51, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 138, 104, 100, 116, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 53, 0, 0,
	0, 75, 76, 25, 79, 80, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 107, 74,
	14, 997, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 110, 321, 0, 91, 92,
	71, 47, 96, 97, 36, 0, 109, 0, 27, 0,
	0, 0, 114, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 108, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 89, 90, 327, 39, 40, 41,
	0, 0, 0, 0, 51, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 138, 104, 100, 116, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 53, 0, 0,
	0, 75, 76, 25, 79, 80, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 107, 74,
	14, 996, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 110, 321, 0, 91, 92,
	71, 47, 96, 97, 36, 0, 109, 0, 27, 0,
	0, 0, 114, 26, 18, 17, 0, 19, 994, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 108, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 89, 90, 327, 39, 40, 41,
	0, 0, 0, 0, 51, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 138, 104, 100, 116, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 53, 0, 0,
	0, 75, 76, 25, 79, 80, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 107, 74,
	14, 0, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 110, 321, 0, 91, 92,
	71, 47, 96, 97, 36, 0, 109, 0, 27, 0,
	0, 0, 114, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 108, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 89, 90, 327, 39, 40, 41,
	0, 0, 0, 0, 51, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 138, 104, 100, 116, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 53, 0, 0,
	0, 75, 76, 25, 79, 80, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 107, 74,
	14, 940, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 110, 321, 0, 91, 92,
	71, 47, 96, 97, 36, 0, 109, 0, 27, 0,
	0, 0, 114, 26, 18, 17, 0, 19, 0, 30,
	936, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 108, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 89, 90, 327, 39, 40, 41,
	0, 0, 0, 0, 51, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 138, 104, 100, 116, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 53, 0, 0,
	0, 75, 76, 25, 79, 80, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 107, 74,
	14, 0, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 110, 321, 0, 91, 92,
	71, 47, 96, 97, 36, 0, 109, 0, 27, 0,
	0, 0, 114, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 850, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 108, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 89, 90, 327, 39, 40, 41,
	0, 0, 0, 0, 51, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 138, 104, 100, 116, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 53, 0, 0,
	0, 75, 76, 25, 79, 80, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 107, 74,
	14, 0, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 110, 321, 0, 91, 92,
	71, 47, 96, 97, 36, 0, 109, 0, 27, 0,
	0, 0, 114, 26, 18, 17, 834, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 108, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 89, 90, 327, 39, 40, 41,
	0, 0, 0, 0, 51, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 138, 104, 100, 116, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 53, 0, 0,
	0, 75, 76, 25, 79, 80, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 107, 74,
	14, 0, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 110, 321, 0, 91, 92,
	71, 47, 96, 97, 36, 0, 109, 0, 27, 0,
	0, 0, 114, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 108, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 89, 90, 327, 39, 40, 41,
	0, 0, 0, 0, 51, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 138, 104, 100, 116, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 53, 0, 0,
	732, 75, 76, 25, 79, 80, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 107, 74,
	14, 0, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 110, 321, 0, 91, 92,
	71, 47, 96, 97, 36, 0, 109, 0, 27, 0,
	0, 0, 114, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 108, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 89, 90, 327, 39, 40, 41,
	0, 0, 0, 0, 51, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 138, 104, 100, 116, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 53, 0, 0,
	0, 75, 76, 25, 79, 80, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 107, 74,
	14, 615, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 110, 321, 0, 91, 92,
	71, 47, 96, 97, 36, 0, 109, 0, 27, 0,
	0, 0, 114, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 108, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 89, 90, 327, 39, 40, 41,
	0, 0, 0, 0, 51, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 138, 104, 100, 116, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 53, 0, 0,
	0, 75, 76, 25, 79, 80, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 107, 74,
	14, 320, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 110, 321, 0, 91, 92,
	71, 47, 96, 97, 36, 0, 109, 0, 27, 0,
	0, 0, 114, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 108, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 89, 90, 327, 39, 40, 41,
	0, 0, 0, 0, 51, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 138, 104, 100, 116, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 53, 0, 0,
	0, 75, 76, 25, 79, 80, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 107, 74,
	14, 0, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 110, 455, 456, 466, 467,
	0, 0, 446, 0, 109, 0, 0, 0, 0, 0,
	0, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 501, 502, 503, 504, 505, 493, 494, 495,
	522, 496, 497, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 513, 511, 512, 508, 509,
	0, 0, 500, 506, 507, 514, 515, 517, 516, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 510, 521, 520, 0, 0, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 468, 469, 470, 498,
	499, 449, 450, 451, 452, 453, 454, 0, 0, 0,
	91, 92, 71, 47, 96, 97, 36, 0, 109, 0,
	27, 0, 0, 0, 114, 26, 18, 17, 0, 19,
	0, 30, 0, 31, 0, 0, 20, 0, 0, 0,
	21, 22, 35, 137, 108, 523, 23, 33, 445, 0,
	34, 0, 0, 24, 0, 29, 89, 90, 183, 0,
	0, 0, 0, 110, 0, 0, 51, 113, 0, 105,
	101, 102, 103, 98, 99, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 138, 104, 100, 116,
	0, 93, 94, 95, 0, 0, 0, 0, 87, 53,
	169, 172, 173, 75, 76, 25, 0, 179, 181, 0,
	0, 54, 55, 77, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 167, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 170, 171, 178, 180, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	107, 74, 14, 0, 32, 845, 60, 0, 52, 0,
	0, 0, 57, 56, 58, 59, 72, 110, 91, 92,
	71, 47, 96, 97, 36, 0, 109, 0, 27, 0,
	0, 0, 114, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 137, 108, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 89, 90, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 138, 104, 100, 116, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 53, 0, 0,
	0, 75, 76, 25, 0, 0, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 107, 74,
	14, 0, 32, 932, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 110, 91, 92, 71, 47,
	96, 97, 36, 0, 109, 0, 27, 0, 0, 0,
	114, 26, 18, 17, 0, 19, 0, 30, 0, 31,
	0, 0, 20, 0, 0, 0, 21, 22, 35, 137,
	108, 0, 23, 33, 0, 0, 34, 0, 0, 24,
	0, 29, 89, 90, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 113, 0, 105, 101, 102, 103, 98,
	99, 0, 0, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 138, 104, 100, 116, 0, 93, 94, 95,
	0, 0, 0, 0, 87, 53, 0, 0, 0, 75,
	76, 25, 0, 0, 0, 0, 0, 54, 55, 77,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 107, 74, 14, 0,
	32, 734, 60, 0, 52, 0, 0, 0, 57, 56,
	58, 59, 72, 110, 91, 92, 71, 47, 96, 97,
	36, 0, 109, 0, 27, 0, 0, 0, 114, 26,
	18, 17, 0, 19, 0, 30, 0, 31, 0, 0,
	20, 0, 0, 0, 21, 22, 35, 137, 108, 0,
	23, 33, 0, 0, 34, 0, 0, 24, 0, 29,
	89, 90, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 113, 0, 105, 101, 102, 103, 98, 99, 0,
	0, 0, 0, 0, 0, 106, 0, 0, 0, 0,
	138, 104, 100, 116, 0, 93, 94, 95, 0, 0,
	0, 0, 87, 53, 0, 0, 0, 75, 76, 25,
	0, 0, 0, 0, 0, 54, 55, 77, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 88, 107, 74, 14, 0, 32, 720,
	60, 0, 52, 0, 0, 0, 57, 56, 58, 59,
	72, 110, 91, 92, 71, 47, 96, 97, 36, 0,
	109, 0, 27, 0, 0, 0, 114, 26, 18, 17,
	0, 19, 0, 30, 0, 31, 0, 0, 20, 0,
	0, 0, 21, 22, 35, 137, 108, 0, 23, 33,
	0, 0, 34, 0, 0, 24, 0, 29, 89, 90,
	0, 0, 0, 0, 0, 0, 0, 0, 51, 113,
	0, 105, 101, 102, 103, 98, 99, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 138, 104,
	100, 116, 0, 93, 94, 95, 0, 0, 0, 0,
	87, 53, 0, 0, 0, 75, 76, 25, 0, 0,
	0, 0, 0, 54, 55, 77, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 107, 74, 14, 0, 32, 703, 60, 0,
	52, 0, 0, 0, 57, 56, 58, 59, 72, 110,
	91, 92, 71, 47, 96, 97, 36, 0, 109, 0,
	27, 0, 0, 0, 114, 26, 18, 17, 0, 19,
	0, 30, 0, 31, 0, 0, 20, 0, 0, 0,
	21, 22, 35, 137, 108, 0, 23, 33, 0, 0,
	34, 0, 0, 24, 0, 29, 89, 90, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 113, 0, 105,
	101, 102, 103, 98, 99, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 138, 104, 100, 116,
	0, 93, 94, 95, 0, 0, 0, 0, 87, 53,
	0, 0, 0, 75, 76, 25, 0, 0, 0, 0,
	0, 54, 55, 77, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	107, 74, 14, 0, 32, 0, 60, 0, 52, 0,
	0, 0, 57, 56, 58, 59, 72, 110, 455, 456,
	466, 467, 0, 0, 965, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 501, 502, 503, 504, 505, 493,
	494, 495, 522, 496, 497, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 513, 511, 512,
	508, 509, 0, 0, 500, 506, 507, 514, 515, 517,
	516, 518, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 581, 521, 520, 116, 0, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 468, 469,
	470, 498, 499, 449, 450, 451, 452, 453, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 455, 456, 466,
	467, 0, 0, 965, 0, 0, 0, 523, 0, 0,
	0, 987, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 501, 502, 503, 504, 505, 493, 494,
	495, 522, 496, 497, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 513, 511, 512, 508,
	509, 0, 0, 500, 506, 507, 514, 515, 517, 516,
	518, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 581, 521, 520, 116, 0, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 468, 469, 470,
	498, 499, 449, 450, 451, 452, 453, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 455, 456, 466, 467,
	0, 0, 446, 0, 0, 0, 523, 0, 0, 0,
	956, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 501, 502, 503, 504, 505, 493, 494, 495,
	522, 496, 497, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 513, 511, 512, 508, 509,
	0, 0, 500, 506, 507, 514, 515, 517, 516, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 510, 521, 520, 0, 0, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 468, 469, 470, 498,
	499, 449, 450, 451, 452, 453, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 455, 456, 466, 467, 0, 0, 1003, 0, 0,
	0, 0, 0, 0, 0, 523, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 501, 502, 503,
	504, 505, 493, 494, 495, 522, 496, 497, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 0,
	513, 511, 512, 508, 509, 0, 0, 500, 506, 507,
	514, 515, 517, 516, 518, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 510, 521, 520,
	0, 0, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 468, 469, 470, 498, 499, 801, 802, 803, 800,
	799, 798, 91, 92, 71, 0, 96, 97, 121, 0,
	109, 0, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 108, 0, 0, 0,
	523, 0, 0, 0, 0, 0, 0, 0, 89, 90,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 113,
	0, 105, 101, 102, 103, 98, 99, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 138, 104,
	100, 116, 233, 93, 94, 95, 0, 0, 0, 0,
	87, 53, 0, 0, 0, 75, 76, 143, 0, 0,
	0, 0, 0, 54, 55, 77, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 0, 0, 91, 92,
	71, 0, 96, 97, 121, 0, 109, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 107, 74, 0, 0, 0, 818, 60, 0,
	52, 137, 108, 232, 57, 56, 58, 59, 72, 110,
	0, 0, 0, 0, 89, 90, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 138, 104, 100, 116, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 53, 0, 0,
	0, 75, 76, 143, 0, 0, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 91, 92, 71, 0, 96, 97,
	121, 0, 109, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 107, 74,
	0, 0, 0, 0, 60, 0, 52, 137, 108, 0,
	57, 56, 58, 59, 72, 110, 0, 0, 0, 0,
	89, 90, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 113, 0, 105, 101, 102, 103, 98, 99, 0,
	0, 0, 0, 0, 0, 106, 0, 0, 0, 0,
	138, 104, 100, 116, 0, 93, 94, 95, 0, 0,
	0, 0, 87, 53, 0, 0, 0, 75, 76, 143,
	0, 0, 0, 0, 0, 54, 55, 77, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 0, 0,
	91, 92, 71, 0, 96, 97, 121, 438, 109, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 88, 107, 74, 0, 0, 0, 0,
	60, 0, 52, 137, 108, 640, 57, 56, 58, 59,
	72, 110, 0, 0, 0, 0, 89, 90, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 113, 0, 105,
	101, 102, 103, 98, 99, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 138, 104, 100, 116,
	0, 93, 94, 95, 0, 0, 0, 0, 87, 53,
	0, 0, 0, 75, 76, 143, 0, 0, 0, 0,
	0, 54, 55, 77, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 0, 0, 91, 92, 71, 0,
	96, 97, 121, 0, 109, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	107, 74, 0, 0, 0, 0, 60, 0, 52, 137,
	108, 0, 57, 56, 58, 59, 72, 110, 0, 0,
	0, 0, 89, 90, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 113, 0, 105, 101, 102, 103, 98,
	99, 0, 0, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 138, 104, 100, 116, 0, 93, 94, 95,
	0, 0, 0, 0, 87, 53, 0, 0, 0, 75,
	76, 143, 0, 0, 0, 0, 0, 54, 55, 77,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 0,
	0, 0, 91, 92, 71, 0, 96, 97, 121, 0,
	109, 0, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 107, 74, 0, 0,
	0, 0, 60, 0, 52, 137, 108, 397, 57, 56,
	58, 59, 72, 110, 0, 0, 0, 0, 89, 90,
	0, 0, 0, 0, 0, 0, 0, 0, 51, 113,
	0, 105, 101, 102, 103, 98, 99, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 138, 104,
	100, 116, 0, 93, 94, 95, 0, 0, 0, 0,
	87, 53, 0, 0, 0, 75, 76, 143, 0, 0,
	0, 0, 0, 54, 55, 77, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 0, 0, 91, 92,
	71, 0, 96, 97, 121, 0, 109, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 107, 74, 0, 0, 0, 373, 60, 0,
	52, 137, 108, 0, 57, 56, 58, 59, 72, 110,
	0, 0, 0, 0, 89, 90, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 138, 104, 100, 116, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 53, 0, 0,
	0, 75, 76, 143, 0, 0, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 159, 161, 160, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 107, 74,
	185, 182, 0, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 110, 157, 158, 169, 172,
	173, 174, 175, 176, 177, 179, 181, 0, 0, 0,
	0, 0, 0, 893, 892, 159, 161, 160, 183, 184,
	163, 167, 166, 0, 0, 0, 0, 0, 162, 0,
	164, 168, 170, 171, 178, 180, 165, 0, 0, 0,
	0, 0, 185, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 158,
	169, 172, 173, 174, 175, 176, 177, 179, 181, 0,
	0, 0, 159, 161, 160, 183, 0, 0, 0, 0,
	812, 184, 163, 167, 166, 0, 0, 0, 0, 0,
	162, 0, 164, 168, 170, 171, 178, 180, 165, 185,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 158, 169, 172, 173,
	174, 175, 176, 177, 179, 181, 0, 0, 0, 159,
	161, 160, 183, 0, 0, 770, 0, 0, 184, 163,
	167, 166, 0, 0, 0, 0, 0, 162, 0, 164,
	168, 170, 171, 178, 180, 165, 185, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 158, 169, 172, 173, 174, 175, 176,
	177, 179, 181, 0, 0, 0, 0, 0, 746, 159,
	161, 160, 183, 0, 0, 184, 163, 167, 166, 0,
	0, 0, 0, 0, 162, 0, 164, 168, 170, 171,
	178, 180, 165, 0, 0, 0, 185, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 158, 169, 172, 173, 174, 175, 176,
	177, 179, 181, 0, 0, 0, 0, 0, 744, 159,
	161, 160, 183, 0, 0, 184, 163, 167, 166, 0,
	0, 0, 0, 0, 162, 0, 164, 168, 170, 171,
	178, 180, 165, 0, 0, 0, 185, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 158, 169, 172, 173, 174, 175, 176,
	177, 179, 181, 0, 0, 0, 0, 0, 735, 159,
	161, 160, 183, 0, 0, 184, 163, 167, 166, 0,
	0, 0, 0, 0, 162, 0, 164, 168, 170, 171,
	178, 180, 165, 0, 0, 0, 185, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 158, 169, 172, 173, 174, 175, 176,
	177, 179, 181, 0, 0, 0, 159, 161, 160, 183,
	0, 0, 731, 0, 0, 184, 163, 167, 166, 0,
	0, 0, 0, 0, 162, 0, 164, 168, 170, 171,
	178, 180, 165, 185, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	158, 169, 172, 173, 174, 175, 176, 177, 179, 181,
	0, 0, 0, 159, 161, 160, 183, 0, 0, 730,
	0, 0, 184, 163, 167, 166, 0, 0, 0, 0,
	0, 162, 0, 164, 168, 170, 171, 178, 180, 165,
	185, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 158, 169, 172,
	173, 174, 175, 176, 177, 179, 181, 0, 0, 0,
	0, 0, 685, 159, 161, 160, 183, 0, 0, 184,
	163, 167, 166, 0, 0, 0, 0, 0, 162, 0,
	164, 168, 170, 171, 178, 180, 165, 0, 0, 0,
	185, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 158, 169, 172,
	173, 174, 175, 176, 177, 179, 181, 0, 0, 0,
	159, 161, 160, 183, 0, 0, 673, 0, 0, 184,
	163, 167, 166, 0, 0, 0, 0, 0, 162, 0,
	164, 168, 170, 171, 178, 180, 165, 185, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 158, 169, 172, 173, 174, 175,
	176, 177, 179, 181, 0, 0, 0, 159, 161, 160,
	183, 0, 0, 672, 0, 0, 184, 163, 167, 166,
	0, 0, 0, 0, 0, 162, 0, 164, 168, 170,
	171, 178, 180, 165, 185, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 158, 169, 172, 173, 174, 175, 176, 177, 179,
	181, 0, 0, 0, 159, 161, 160, 183, 0, 0,
	669, 0, 0, 184, 163, 167, 166, 0, 0, 0,
	0, 0, 162, 0, 164, 168, 170, 171, 178, 180,
	165, 185, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 158, 169,
	172, 173, 174, 175, 176, 177, 179, 181, 0, 0,
	0, 0, 0, 653, 159, 161, 160, 183, 0, 0,
	184, 163, 167, 166, 0, 0, 0, 0, 0, 162,
	0, 164, 168, 170, 171, 178, 180, 165, 0, 0,
	0, 185, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 158, 169,
	172, 173, 174, 175, 176, 177, 179, 181, 0, 0,
	0, 159, 161, 160, 183, 0, 0, 643, 0, 0,
	184, 163, 167, 166, 0, 0, 0, 0, 0, 162,
	0, 164, 168, 170, 171, 178, 180, 165, 185, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 158, 169, 172, 173, 174,
	175, 176, 177, 179, 181, 0, 0, 0, 0, 613,
	632, 159, 161, 160, 183, 0, 0, 184, 163, 167,
	166, 0, 0, 0, 0, 0, 162, 0, 164, 168,
	170, 171, 178, 180, 165, 0, 0, 0, 185, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 158, 169, 172, 173, 174,
	175, 176, 177, 179, 181, 0, 0, 0, 159, 161,
	160, 183, 0, 0, 630, 0, 0, 184, 163, 167,
	166, 0, 0, 0, 0, 0, 162, 0, 164, 168,
	170, 171, 178, 180, 165, 185, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 158, 169, 172, 173, 174, 175, 176, 177,
	179, 181, 0, 0, 0, 159, 161, 160, 183, 0,
	0, 0, 0, 0, 184, 163, 167, 166, 0, 0,
	0, 0, 0, 162, 0, 164, 168, 170, 171, 178,
	180, 165, 185, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 158,
	169, 172, 173, 174, 175, 176, 177, 179, 181, 0,
	0, 0, 159, 161, 160, 183, 609, 0, 0, 0,
	0, 184, 163, 167, 166, 0, 0, 0, 0, 0,
	162, 0, 164, 168, 170, 171, 178, 180, 165, 185,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 158, 169, 172, 173,
	174, 175, 176, 177, 179, 181, 0, 0, 0, 159,
	161, 160, 183, 0, 0, 604, 0, 0, 184, 163,
	167, 166, 0, 0, 0, 0, 0, 162, 0, 164,
	168, 170, 171, 178, 180, 165, 185, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 158, 169, 172, 173, 174, 175, 176,
	177, 179, 181, 0, 0, 0, 159, 161, 160, 183,
	0, 0, 600, 0, 0, 184, 163, 167, 166, 0,
	0, 0, 0, 0, 162, 0, 164, 168, 170, 171,
	178, 180, 165, 185, 182, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	158, 169, 172, 173, 174, 175, 176, 177, 179, 181,
	0, 0, 0, 0, 159, 161, 160, 183, 0, 428,
	0, 0, 184, 163, 167, 166, 0, 0, 0, 0,
	0, 162, 0, 164, 168, 170, 171, 178, 180, 165,
	0, 185, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 158, 169,
	172, 173, 174, 175, 176, 177, 179, 181, 0, 0,
	0, 159, 161, 160, 183, 0, 0, 0, 0, 0,
	184, 163, 167, 166, 0, 0, 0, 0, 0, 162,
	0, 164, 168, 170, 171, 178, 180, 165, 185, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 158, 169, 172, 173, 174,
	175, 176, 177, 179, 181, 0, 0, 0, 0, 0,
	0, 381, 159, 161, 160, 183, 0, 184, 163, 167,
	166, 0, 0, 0, 0, 0, 162, 0, 164, 168,
	170, 171, 178, 180, 165, 0, 0, 0, 0, 185,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 158, 169, 172, 173,
	174, 175, 176, 177, 179, 181, 0, 0, 0, 0,
	0, 0, 156, 159, 161, 160, 183, 0, 184, 163,
	167, 166, 0, 0, 0, 0, 0, 162, 0, 164,
	168, 170, 171, 178, 180, 165, 0, 0, 0, 0,
	185, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 158, 169, 172,
	173, 174, 175, 176, 177, 179, 181, 0, 0, 0,
	0, 161, 160, 183, 0, 0, 0, 0, 0, 184,
	163, 167, 166, 0, 0, 0, 0, 0, 162, 0,
	164, 168, 170, 171, 178, 180, 165, 185, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 158, 169, 172, 173, 174, 175,
	176, 177, 179, 181, 0, 0, 0, 0, 0, 160,
	183, 0, 0, 0, 0, 0, 184, 163, 167, 166,
	0, 0, 0, 0, 0, 162, 0, 164, 168, 170,
	171, 178, 180, 165, 185, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 158, 169, 172, 173, 174, 175, 176, 177, 179,
	181, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 184, 163, 167, 166, 0, 0, 0,
	0, 0, 162, 0, 164, 168, 170, 171, 178, 180,
	165, 185, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 158, 169,
	172, 173, 174, 175, 176, 177, 179, 181, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	184, 163, 167, 166, 0, 0, 0, 0, 0, 162,
	0, 164, 168, 170, 171, 178, 180, 165, 185, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 158, 169, 172, 173, 174,
	175, 176, 177, 179, 181, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 163, 167,
	166, 0, 0, 0, 0, 0, 162, 0, 164, 168,
	170, 171, 178, 180, 165, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 169, 172, 173, 174, 175, 176, 177, 179,
	181, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 163, 167, 166, 0, 0, 0,
	0, 0, 162, 0, 164, 168, 170, 171, 178, 180,
	165, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 172,
	173, 174, 175, 176, 177, 179, 181, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	163, 167, 166, 0, 0, 0, 0, 0, 162, 0,
	164, 168, 170, 171, 178, 180, 165, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 172, 173, 174, 175, 176,
	177, 179, 181, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 163, 167, 166, 0,
	0, 0, 0, 0, 0, 0, 164, 168, 170, 171,
	178, 180, 165, 182, 0, 0, 0, 0, 0, 121,
	121, 109, 109, 0, 0, 0, 0, 114, 114, 0,
	169, 172, 173, 174, 175, 176, 177, 179, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 170, 171, 178, 180, 165, 716,
	113, 113, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	138, 0, 116, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	238, 717, 241, 0, 715, 0, 0, 0, 0, 0,
	110, 110,
}
var yyPact = [...]int{

	-1000, -1000, 1674, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	266, 499, 580, 763, -1000, -1000, -1000, 260, 4806, 257,
	254, 6144, 6144, 6144, 177, 726, 6144, -1000, 7514, 245,
	243, 241, -1000, 435, 6144, 806, 279, 46, 553, 798,
	784, 776, 504, 491, 1046, -1000, -1000, 237, -1000, -1000,
	183, 222, 5448, 6144, 8140, 8140, 6144, 6144, 6144, 6144,
	6144, -1000, -1000, -1000, 6144, 6144, 6144, 6144, 6144, 6144,
	6144, 221, 6144, -1000, 812, 6144, 6144, 6144, -1000, -1000,
	-1000, -1000, 83, -1000, 536, 535, -1000, 104, 219, 218,
	214, 6144, 6144, 210, 6144, 6144, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 902, 803, 46, -1000,
	142, 223, 223, 208, -1000, 525, 709, 172, 709, 253,
	-1000, -1000, 346, 601, 82, 633, 709, -1000, -1000, -1000,
	-1000, 42, -1000, -55, 3594, 6144, 638, 46, 518, 6144,
	6144, 345, 7575, 673, 344, 334, -18, -1000, -1000, -19,
	-1000, -1000, -56, -24, -1000, 7575, -1000, 6144, 6144, 6144,
	6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144,
	6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144,
	6144, 6144, 6144, 190, 6028, 6144, 8140, 6144, 763, -1000,
	7453, 333, -1000, 775, -1000, 773, -1000, 586, -1000, 593,
	233, 4806, 231, 332, 276, 5912, 6144, 6144, 6144, 6144,
	6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, -1000,
	-1000, 6144, 6144, 6144, 136, 136, 5448, 103, 34, -1000,
	-1000, 7396, 8140, 6144, 230, -1000, -1000, 83, 6144, -1000,
	-1000, 5448, -1000, 430, 430, 500, 430, 7338, 430, 430,
	430, 430, 430, 430, 430, -1000, 6144, 430, 416, 833,
	749, -1000, 175, 5796, 8140, 7746, 380, 7746, 6144, 3912,
	3912, 223, -1000, 534, 236, 223, -1000, -1000, 6144, 6144,
	6144, 7575, 7575, 6144, 7575, 7575, 675, -1000, 820, 511,
	833, 229, 6144, -1000, -1000, 1036, -1000, 5448, 772, 525,
	331, 525, -1000, -1000, 1514, -1000, 330, -25, 632, 709,
	-1000, 590, 546, 765, 617, -1000, -1000, 763, 6144, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 227, 7281, 226,
	-1000, 326, 31, 7575, 7224, -1000, -1000, -1000, -1000, 177,
	-1000, 731, 6144, -1000, 6144, 7859, 7915, 7632, 7746, 7689,
	7971, 8027, 320, 141, 141, 141, 500, 430, 500, 500,
	199, 199, 3977, 3977, 3977, 3977, 373, 373, 373, 373,
	3977, -1000, 7167, 6144, 7803, 30, -1000, -1000, 7110, -29,
	3434, -1000, -1000, -1000, 225, 586, 582, 584, 434, -1000,
	584, 6144, -1000, 6144, -1000, -1000, 7746, 6144, 7746, 7746,
	7746, 7746, 7746, 7746, 7746, 7746, 7746, 7746, 7746, 7746,
	7746, 7053, 97, 6993, 223, -1000, 6144, -1000, 223, 171,
	-57, 5448, 5680, -1000, 7575, 5448, 6936, 95, -1000, 169,
	-1000, -1000, -1000, -1000, 250, 755, 734, 6876, 102, 375,
	6144, 87, 223, -1000, -1000, 6144, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 223, -1000, -1000, -1000, -1000, 177,
	6144, 6144, 136, 136, 177, 586, 6819, -7, -1000, 7575,
	6762, 6705, -1000, -1000, -1000, 422, 6645, -1000, -10, -1000,
	7575, 6144, 275, -1000, -1000, 222, 6144, 221, 6144, 6144,
	673, 104, 219, 218, 214, 6144, 6144, 210, 6144, 6144,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 46, 46,
	208, 518, 167, -1000, -1000, 1354, -1000, -1000, -1000, 543,
	594, -1000, 709, 554, 696, -1000, 523, -1000, 7575, 165,
	4648, 6144, 6144, 6144, 213, -1000, -1000, 7575, -1000, 6144,
	7803, 163, 8140, 8139, 4490, -1000, 202, 422, 582, -1000,
	584, -1000, -1000, 432, -28, -1000, 6588, 6531, 3274, 8027,
	4332, -1000, -1000, -1000, 6471, -1000, -61, 6144, -1000, 7575,
	8140, 196, 160, -1000, -1000, -1000, 84, -1000, -1000, 663,
	-1000, -1000, -1000, -1000, -1000, 6144, -1000, 7746, -1000, -1000,
	6411, -1000, -1000, 76, 6351, -1000, -1000, -1000, 582, 429,
	159, 6144, -1000, -1000, 155, -12, -1000, 65, -1000, -45,
	707, -46, -1000, -1000, -1000, -1000, 153, 1194, 7575, 6144,
	-1000, -1000, 709, 514, -13, -1000, -1000, 709, 696, -1000,
	325, -1000, -1000, -1000, 6294, 321, 7575, -1000, 319, 318,
	7803, 317, -1000, 151, 572, 8140, 194, 5448, -1000, -1000,
	-1000, 628, 422, 149, -1000, 419, -28, 1378, -1000, 584,
	4806, 200, 315, -1000, -1000, -1000, 6144, 7746, -1000, 5448,
	-61, -1000, -1000, 6237, -1000, -1000, -1000, -1000, 5564, -1000,
	-1000, 143, 422, 508, -1000, 707, -1000, 707, -1000, -1000,
	7575, -23, -1000, 709, 363, 696, -1000, -13, -1000, 3114,
	304, 6144, 417, -1000, 834, -1000, -1000, 4016, 8139, -1000,
	5448, 75, 2954, -1000, 180, 412, 144, 591, 409, -1000,
	-1000, -1000, 422, 695, 584, 656, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1218, -1000, -1000, -1000, -1000, 3754,
	7746, 140, 357, 408, 356, -15, -1000, 562, -17, -20,
	7575, -1000, 251, -1000, 727, -1000, -1000, -1000, 353, 709,
	-23, -1000, -1000, 352, 303, -1000, 127, -1000, 6144, 191,
	415, 297, 715, -1000, -1000, -1000, 126, -1000, 121, -1000,
	289, 584, -1000, 143, 143, 174, -1000, 857, 711, 5222,
	46, -42, -1000, -1000, 3754, -61, -1000, -1000, -1000, -1000,
	5564, 6144, 561, -1000, -1000, 6144, 559, -1000, -48, 761,
	-50, -1000, -1000, -62, -1000, -1000, 351, -1000, -1000, 4174,
	6175, -1000, -1000, -1000, -1000, -1000, 286, 2794, 4016, -1000,
	-1000, 88, -1000, 2634, 396, 392, 186, 595, -1000, -36,
	-1000, -65, -37, -1000, -67, 5222, -1000, -1000, 5093, 579,
	-1000, 7575, 6144, 7575, 6144, 761, -1000, 761, 6144, -1000,
	-1000, -1000, -1000, -1000, 3754, -1000, 285, -1000, 117, 584,
	-1000, -1000, -1000, -41, -1000, -1000, 712, -1000, -1000, 711,
	-1000, 6144, -1000, 5222, 6144, -1000, -1000, 4964, -1000, 252,
	238, 604, 622, 533, -1000, -1000, -1000, 7575, 7746, -1000,
	-1000, 7575, 2474, 3754, -1000, 322, -1000, 2314, 2154, -1000,
	186, -1000, -1000, 7575, -1000, 7575, 105, -1000, -1000, -1000,
	-1000, 584, 5347, 5222, 215, -1000, -1000, -1000, -1000, -1000,
	-1000, 422, -28, -1000, -1000, 5222, -1000, -1000, 1994, 107,
	-1000, -1000, 143, 272, -1000, -1000, -1000, 1834, -1000,
}
var yyPgo = [...]int{

	0, 1009, 1008, 18, 7, 32, 5, 1007, 30, 15,
	1003, 47, 43, 80, 49, 48, 42, 1002, 36, 998,
	91, 98, 84, 995, 29, 994, 0, 64, 4, 993,
	991, 988, 39, 197, 26, 33, 986, 985, 75, 984,
	79, 983, 10, 982, 981, 977, 974, 14, 74, 972,
	971, 63, 101, 301, 970, 969, 44, 967, 954, 8,
	953, 86, 40, 951, 72, 34, 950, 947, 945, 941,
	939, 153, 937, 936, 932, 9, 931, 94, 930, 926,
	922, 920, 917, 916, 915, 25, 31, 584, 11, 119,
	909, 908, 50, 37, 907, 12, 904, 2, 903, 20,
	901, 21, 702, 82, 85, 895, 894, 891, 13, 887,
	886, 55, 882, 41, 38, 878, 877, 875, 874, 869,
	17, 868, 859, 3, 767, 28, 596, 858, 855, 19,
	853, 105, 1, 16, 852, 848, 833, 830, 819, 6,
}
var yyR1 = [...]int{

	0, 138, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 131, 131, 89, 89, 11, 11, 11, 10,
	10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
	10, 10, 10, 10, 124, 124, 17, 17, 19, 19,
	8, 8, 86, 86, 85, 85, 87, 87, 18, 18,
	21, 21, 20, 20, 77, 77, 132, 132, 23, 23,
	23, 23, 23, 23, 23, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 128,
	128, 74, 74, 31, 31, 112, 112, 32, 13, 1,
	1, 2, 2, 14, 14, 137, 137, 102, 102, 15,
	16, 113, 113, 115, 115, 114, 114, 125, 125, 125,
	125, 109, 109, 108, 108, 30, 30, 106, 106, 106,
	106, 129, 129, 129, 9, 9, 110, 110, 84, 84,
	76, 76, 90, 90, 80, 80, 28, 28, 29, 29,
	34, 34, 94, 94, 94, 95, 95, 99, 99, 99,
	96, 96, 100, 100, 98, 98, 98, 101, 101, 97,
	97, 103, 103, 78, 78, 35, 35, 35, 37, 37,
	38, 39, 39, 40, 40, 133, 133, 41, 41, 41,
	41, 75, 75, 105, 105, 105, 130, 130, 42, 42,
	43, 44, 44, 44, 44, 46, 46, 45, 107, 107,
	135, 135, 134, 134, 136, 136, 123, 123, 123, 123,
	123, 123, 79, 79, 47, 47, 83, 83, 88, 22,
	73, 73, 48, 24, 24, 25, 25, 50, 49, 49,
	117, 118, 118, 119, 121, 121, 122, 122, 120, 120,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 111, 111,
	139, 3, 3, 116, 116, 81, 81, 59, 59, 60,
	60, 60, 60, 51, 51, 52, 52, 57, 57, 127,
	127, 127, 104, 104, 64, 64, 64, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 65, 65, 65, 26, 26, 27, 27,
	63, 66, 66, 66, 67, 67, 67, 68, 68, 68,
	68, 68, 68, 68, 33, 33, 33, 33, 53, 53,
	53, 69, 69, 70, 70, 70, 70, 70, 70, 70,
	61, 61, 61, 62, 62, 62, 56, 92, 92, 55,
	55, 91, 91, 91, 91, 91, 91, 91, 126, 126,
	126, 126, 71, 71, 71, 71, 71, 71, 71, 71,
	72, 72, 72, 72, 54, 54, 54, 54, 54, 54,
	54, 82, 82, 93,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 0, 1, 3, 1, 3, 2, 1,
	1, 1, 1, 1, 1, 4, 3, 5, 4, 3,
	4, 3, 4, 3, 1, 1, 6, 7, 6, 7,
	0, 1, 3, 1, 3, 1, 3, 1, 1, 2,
	1, 3, 1, 2, 3, 1, 2, 0, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 1, 5, 7,
	9, 5, 3, 3, 3, 3, 3, 3, 1, 2,
	6, 7, 9, 5, 1, 6, 3, 3, 2, 0,
	9, 1, 3, 0, 4, 1, 3, 1, 11, 0,
	1, 0, 1, 9, 8, 1, 2, 1, 1, 6,
	7, 0, 2, 0, 2, 0, 2, 1, 2, 4,
	3, 1, 4, 1, 4, 1, 4, 3, 4, 4,
	5, 0, 5, 4, 1, 1, 1, 4, 5, 6,
	1, 3, 6, 7, 3, 6, 1, 0, 1, 3,
	4, 6, 1, 2, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 2, 1, 0, 1, 0,
	2, 2, 4, 1, 3, 1, 2, 3, 3, 1,
	1, 3, 1, 1, 3, 2, 0, 4, 4, 3,
	10, 1, 3, 1, 2, 3, 1, 2, 2, 2,
	3, 3, 3, 4, 3, 1, 1, 3, 1, 3,
	1, 1, 0, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 4, 3, 1, 4, 4,
	3, 1, 1, 0, 1, 3, 1, 8, 3, 2,
	2, 3, 1, 7, 0, 2, 1, 3, 3, 4,
	6, 5, 3, 4, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 5, 4, 3, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	3, 2, 1, 2, 4, 2, 1, 2, 11, 9,
	0, 0, 1, 0, 4, 3, 1, 1, 2, 2,
	4, 4, 2, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 0, 1, 4, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 3,
	3, 1, 1, 1, 3, 3, 1, 1, 0, 1,
	1, 1, 3, 1, 1, 3, 1, 1, 4, 4,
	4, 4, 4, 1, 1, 1, 3, 3, 1, 4,
	2, 3, 3, 1, 4, 4, 3, 3, 3, 3,
	1, 3, 1, 1, 3, 1, 1, 0, 1, 3,
	1, 3, 1, 4, 2, 2, 6, 4, 2, 2,
	1, 2, 1, 4, 3, 3, 3, 3, 6, 3,
	1, 1, 2, 1, 5, 4, 2, 2, 4, 2,
	2, 1, 3, 1,
}
var yyChk = [...]int{

	-1000, -138, -131, -10, 2, -12, -13, -14, -15, -16,
	52, 80, 45, 39, 146, -76, -80, 21, 20, 23,
	30, 34, 35, 40, 47, 99, 19, 14, -26, 49,
	25, 27, 148, 41, 44, 36, 10, 37, -137, 53,
	54, 55, -84, -90, -33, -36, -102, 7, -68, -69,
	-66, 60, 152, 93, 105, 106, 157, 156, 158, 159,
	150, -49, -119, -54, 108, 109, 110, 111, 112, 113,
	114, 6, 160, -58, 145, 97, 98, 107, -111, 100,
	101, -53, -65, -60, -51, -63, -64, 92, 143, 50,
	51, 4, 5, 85, 86, 87, 8, 9, 67, 68,
	82, 64, 65, 66, 81, 63, 75, 144, 38, 12,
	161, -11, -67, 61, 18, -89, 83, 150, 83, -89,
	146, 10, -19, -124, -87, -89, 83, 37, 39, -20,
	-21, -77, -22, 10, -132, 150, -12, 37, 80, 150,
	150, -27, -26, 99, -27, -27, -37, -38, -53, -39,
	-111, -40, 12, -73, -48, -26, 148, 131, 132, 88,
	90, 89, 163, 155, 165, 171, 157, 156, 166, 133,
	167, 168, 134, 135, 136, 137, 138, 139, 169, 140,
	170, 141, 116, 91, 154, 115, 150, 150, 150, 146,
	-26, 10, 149, -3, 155, 53, -102, 10, 10, 10,
	94, 95, 94, 96, 95, 164, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 105,
	106, 150, 152, 146, 58, 142, 150, -56, -55, -92,
	-91, -26, 155, 84, 60, -26, -33, -65, 150, -64,
	99, 152, -33, -26, -26, -26, -26, -26, -26, -26,
	-26, -26, -26, -26, -26, -57, 150, -26, -127, 17,
	-126, -71, 12, 77, 78, -26, -26, -26, 152, 79,
	79, -52, -50, -51, -70, 53, -11, -53, 150, 150,
	150, -26, -26, 150, -26, -26, 17, 76, -126, -126,
	17, -3, 146, -53, -103, 150, -103, 150, 83, -89,
	151, -89, 148, 146, -131, 148, -17, -87, -89, 83,
	148, 162, 83, 29, -89, -21, 148, 162, 164, -23,
	147, 2, -12, -13, -14, -15, -16, 52, -26, 21,
	-3, -24, -25, -26, -26, 148, 148, 148, 148, 162,
	148, 162, 164, 148, 162, -26, -26, -26, -26, -26,
	-26, -26, -26, -26, -26, -26, -26, -26, -26, -26,
	-26, -26, -26, -26, -26, -26, -26, -26, -26, -26,
	-26, -52, -26, 149, -26, -112, -32, -33, -26, -77,
	-132, 148, 148, 10, -139, 10, -113, 56, -139, -115,
	56, 150, -12, 150, 148, 149, -26, 155, -26, -26,
	-26, -26, -26, -26, -26, -26, -26, -26, -26, -26,
	-26, -26, -27, -26, -62, 10, 146, -53, -62, -56,
	153, 162, 59, -33, -26, 150, -26, -56, 151, -27,
	145, -71, -71, 17, 152, 58, 142, -26, 11, -33,
	59, -27, -61, -6, -53, 146, 10, -5, -4, 99,
	100, 101, 102, 103, 104, 4, 5, 85, 86, 87,
	88, 89, 90, 91, 92, 93, 6, 7, 94, 95,
	96, 19, 20, 21, 22, 23, 24, 25, 26, 27,
	28, 29, 41, 42, 43, 44, 45, 46, 47, 48,
	49, 50, 51, 35, 36, 37, 39, 40, 97, 98,
	60, 30, 31, 32, 33, 34, 61, 62, 56, 57,
	80, 54, 55, 53, 63, 64, 66, 65, 67, 68,
	82, 81, 38, 143, -61, -6, -53, -104, -103, 79,
	152, 146, 58, 142, 79, -104, -26, -82, -93, -26,
	-26, -26, 76, 76, 144, 150, -26, 151, -78, -35,
	-26, 84, -7, 10, -5, 60, 93, 6, 97, 98,
	99, 92, 143, 50, 51, 4, 5, 85, 86, 87,
	67, 68, 82, 64, 65, 66, 81, 63, 37, 38,
	61, 80, -56, 10, 148, -131, 147, 148, 148, 83,
	-89, -20, 83, -89, 146, 10, 83, -22, -26, 150,
	151, 150, 148, 162, 151, -38, -40, -26, -48, 149,
	-26, -8, 162, 29, 151, 147, -139, 150, -113, -114,
	57, -11, 146, -139, -75, -11, -26, -26, -132, -26,
	151, 153, 147, -103, -26, -103, 151, 164, -92, -26,
	155, 60, -56, 151, 153, 151, -72, 10, 13, 156,
	12, 10, 10, 147, 147, 152, 147, -26, 153, -103,
	-26, -103, -53, -27, -26, -62, -62, -53, -113, 151,
	-8, 162, 151, 151, -28, -29, -34, -101, -98, -99,
	154, -100, 61, 62, -11, 147, -8, 162, -26, 149,
	151, 147, 146, 83, -86, -18, -21, -124, 146, -139,
	151, -110, -12, 149, -26, -24, -26, -106, 146, 149,
	-26, 151, -32, -125, -33, 155, 60, 152, -30, -12,
	149, -128, 150, -28, -114, -139, -75, -133, 146, 162,
	151, 151, 96, -12, 149, 147, 164, -26, -33, 150,
	151, 153, 13, -26, 147, 153, 147, -114, 146, 151,
	-93, 151, 162, -1, 155, 163, -99, 163, 151, -35,
	-26, -85, -21, 146, -8, 162, -21, -86, 148, -132,
	151, 148, -129, 148, -129, 148, 148, 151, 59, -33,
	150, -56, -132, -31, 42, 43, -28, 151, -139, 146,
	147, -41, -135, -134, 45, -136, 48, -123, 104, 103,
	102, 99, 100, 101, -133, -11, -12, 149, 148, -132,
	-26, -56, 153, -139, -121, -122, -120, -117, 33, -118,
	-26, -97, 149, -34, -2, 84, -99, -99, -8, 162,
	-85, 147, -18, -8, 22, 148, -24, 147, 32, 33,
	-129, 31, -129, -108, -12, 149, -125, -33, -56, 153,
	28, 150, 146, 151, -116, 45, 146, -133, -101, 39,
	37, -75, -123, 147, -132, 151, 147, 146, 147, -8,
	162, 59, -8, 162, -8, 162, -139, -94, -95, 154,
	-96, -99, 99, 12, 147, -21, -8, 147, 148, 151,
	-26, -9, 149, 148, 147, 148, 31, -132, 151, 151,
	148, -74, -11, -132, -97, -97, 150, -133, 147, -79,
	-47, 12, -83, -88, -6, -3, -105, 148, 146, -133,
	-120, -26, 59, -26, 59, 163, -95, 163, 164, 147,
	-109, -12, 149, -9, -132, 148, 26, -108, 12, 163,
	147, 146, 146, -81, -59, 12, 155, 147, 148, 162,
	-139, 164, 148, 162, 164, -6, 147, -130, -42, -43,
	-44, -45, -46, -11, -6, 10, 147, -26, -26, -95,
	-95, -26, -132, -132, 148, 151, -11, -132, -132, 151,
	162, 12, -47, -26, -88, -26, -139, 147, -42, 148,
	148, 46, 29, 79, 24, 146, 147, 147, -59, -139,
	-139, 150, -75, 10, -4, -123, -6, 148, -132, -28,
	-6, 147, 151, -97, -107, 148, 146, -132, 147,
}
var yyDef = [...]int{

	83, -2, -2, 82, 89, 90, 91, 92, 93, 94,
	0, 0, 0, 0, 127, 136, 137, 0, 0, 0,
	0, 448, 448, 448, 0, 413, 0, 148, 0, 0,
	0, 0, 154, 0, 0, 0, 84, 401, 0, 0,
	0, 0, 210, 0, -2, 447, 175, 0, -2, 465,
	450, 0, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 379, 0, 0, 0, 0, 0, 0,
	0, 417, 0, 389, 419, 0, 392, 0, 396, 177,
	178, 457, 442, 463, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 0, 0, 401, 468,
	0, -2, 0, 0, 426, 86, 0, 0, 0, 0,
	83, 84, 0, 0, 0, 120, 0, 104, 105, 117,
	122, 0, 125, 0, 0, 0, 0, 401, 0, 303,
	0, 0, 449, 413, 0, 0, 0, 249, 250, 0,
	397, 252, 253, 0, 301, 302, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 158, 400, 402, 0, 176, 181, 400, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 338,
	340, 0, 448, 0, 0, 0, 487, 0, 486, 490,
	488, 492, 0, 0, 0, 324, -2, 0, 0, -2,
	413, 487, -2, 359, 360, 361, 362, 0, 380, 381,
	382, 383, 384, 385, 386, 387, 448, 388, 0, 420,
	421, 500, 502, 0, 0, 391, 393, 395, 448, 0,
	0, 422, 309, 415, 416, 422, 414, 473, 0, 0,
	0, 516, 517, 0, 519, 520, 0, 438, 0, 0,
	0, 0, 0, 470, 409, 0, 412, 487, 0, 88,
	0, 87, 96, 83, 0, 99, 0, 0, 120, 0,
	101, 0, 0, 0, 120, 123, 103, 0, 0, 126,
	135, 128, 129, 130, 131, 132, 133, 0, 0, 0,
	400, 0, 304, 306, 0, 142, 143, 144, 145, 0,
	146, 0, 0, 147, 0, 342, 343, 344, 345, 346,
	347, 348, 349, 350, 351, 352, 353, 354, 355, 356,
	357, 358, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 372, 0, 0, 378, 110, 165, -2, 0, 0,
	0, 156, 157, 400, 0, 181, 185, 0, 0, 400,
	0, 0, 211, 0, 214, 127, 322, 0, 325, 326,
	327, 328, 329, 330, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 466, 483, 0, 485, 467, 0,
	425, 487, 0, -2, 495, 487, 0, 0, -2, 0,
	390, 501, 498, 499, 0, 0, 0, 0, 0, 451,
	0, 0, 0, -2, -2, 0, 78, 79, 71, 72,
	73, 74, 75, 76, 77, 2, 3, 4, 5, 6,
	7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
	17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
	27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
	37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
	47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 0, -2, -2, 308, 423, 0,
	448, 0, 0, 0, 0, 181, 0, 110, 521, 523,
	0, 0, 437, 440, 439, -2, 0, 241, 110, 243,
	245, 0, 0, -2, 81, 47, 12, -2, 45, -2,
	-2, 11, 70, 38, 39, 2, 3, 4, 5, 6,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	53, 57, 0, 85, 95, 0, 98, 100, 102, 0,
	120, 116, 0, 120, 0, 121, 0, 124, 400, 0,
	0, 0, 303, 0, 0, 248, 251, 254, 300, 0,
	377, 0, 111, 0, 0, 159, 0, -2, 185, 400,
	0, 182, 256, 0, 184, 261, 0, 0, 0, 323,
	0, 458, 460, 461, 0, 462, 0, 0, 489, 491,
	0, 0, 0, -2, 425, 418, 0, 510, 511, 0,
	513, 504, 505, 506, 507, 0, 509, 394, 459, 410,
	0, 411, 478, 0, 0, 476, 477, 479, 185, 0,
	0, 111, 515, 518, 0, 216, 218, 169, 238, 234,
	0, 236, 227, 228, 229, 469, 0, 111, 246, 0,
	424, 97, 0, 0, 110, 113, 118, 0, 0, 299,
	0, 138, 206, 127, 0, 0, 305, 141, 201, 201,
	376, 0, 166, 0, -2, 0, 0, 487, 153, 195,
	127, 163, -2, 0, 400, 0, 186, 282, 256, 0,
	0, 0, 0, 208, 127, 484, 0, 321, -2, 487,
	497, 503, 512, 0, 481, 474, 475, 400, 314, 514,
	522, 239, 237, 171, 170, 0, 235, 0, 242, 244,
	247, 110, 115, 0, 0, 111, 119, 110, 134, 0,
	0, 303, 0, 201, 0, 201, 150, 0, 0, -2,
	487, 0, 0, 155, 0, 0, 0, 403, 0, 256,
	179, 255, 237, 0, 0, -2, 281, 284, 286, 287,
	288, 289, 290, 291, 282, 262, 209, 127, 215, -2,
	320, 0, 0, 0, 0, 110, 316, 0, 110, 110,
	312, 400, 0, 219, 0, 172, 232, 233, 0, 111,
	110, 108, 112, 0, 0, 139, 0, 197, 0, 0,
	0, 0, 0, 151, 193, 127, 0, -2, 0, -2,
	0, 0, 127, 239, 239, 0, 256, 282, 0, 0,
	401, 0, 285, 180, -2, 496, 508, 256, 313, 315,
	111, 0, 0, 111, 310, 111, 0, 240, 222, 0,
	224, 225, 226, 220, 106, 114, 0, 109, 207, 0,
	0, 127, 204, 205, 198, 199, 0, 0, 0, 189,
	196, 0, 161, 0, 0, 0, 0, 282, 174, 0,
	293, 400, 0, 297, 0, 0, 259, 263, 0, 282,
	317, 318, 0, 311, 0, 0, 223, 0, 0, 107,
	140, 191, 127, 127, -2, 200, 0, 152, 0, 0,
	164, 127, 127, 0, 406, 407, 0, 173, 257, 0,
	294, 0, 258, 0, 0, 400, 264, 0, 266, 0,
	0, 276, 0, 0, 275, -2, 307, 319, 399, 230,
	231, 221, 0, -2, 194, 0, 162, 0, 0, 404,
	0, 408, 292, 400, 296, 400, 0, 265, 267, 268,
	269, 0, 0, 0, 0, 127, 168, 398, 405, 295,
	298, -2, 270, 271, 272, 274, 277, 192, 0, 0,
	273, 160, 239, 0, 260, 278, 127, 0, 279,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 158, 144, 3, 161, 168, 155, 3,
	150, 151, 166, 157, 162, 156, 171, 167, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 149, 148,
	169, 164, 170, 154, 160, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 152, 3, 153, 165, 3, 145, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 146, 163, 147, 159,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

// line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:291
		{
			yylex.(*Parser).currentToken.Value = nil

			yylex.(*Parser).rootNode = &ast.Root{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].list),
				Stmts:    yyDollar[1].list,
				EndTkn:   yylex.(*Parser).currentToken,
			}
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:306
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:333
		{
			yyVAL.token = yyDollar[1].token
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:337
		{
			yyVAL.token = yyDollar[1].token
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:344
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:350
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:357
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.NamePart{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						StringTkn: yyDollar[1].token,
						Value:     yyDollar[1].token.Value,
					},
				},
			}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:369
		{
			part := &ast.NamePart{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
				StringTkn: yyDollar[3].token,
				Value:     yyDollar[3].token.Value,
			}

			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, part)

			yyVAL.node = yyDollar[1].node
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:385
		{
			yyVAL.node = &ast.Name{
				Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
				Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:393
		{
			yyVAL.node = &ast.NameRelative{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].node.(*ParserSeparatedList).Items),
				NsTkn:          yyDollar[1].token,
				NsSeparatorTkn: yyDollar[2].token,
				Parts:          yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:403
		{
			yyVAL.node = &ast.NameFullyQualified{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				NsSeparatorTkn: yyDollar[1].token,
				Parts:          yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:415
		{
			// error
			yyVAL.node = nil
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:420
		{
			yyVAL.node = yyDollar[1].node
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:424
		{
			yyVAL.node = yyDollar[1].node
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:428
		{
			yyVAL.node = yyDollar[1].node
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:432
		{
			yyVAL.node = yyDollar[1].node
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:436
		{
			yyVAL.node = yyDollar[1].node
		}
	case 95:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:440
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:450
		{
			yyVAL.node = &ast.StmtNamespace{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				NsTkn:    yyDollar[1].token,
				Name: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 97:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:463
		{
			yyVAL.node = &ast.StmtNamespace{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				NsTkn:    yyDollar[1].token,
				Name: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Stmts:                yyDollar[4].list,
				CloseCurlyBracketTkn: yyDollar[5].token,
			}
		}
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:478
		{
			yyVAL.node = &ast.StmtNamespace{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				NsTkn:                yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:488
		{
			use := yyDollar[2].node.(*ast.StmtGroupUseList)

			use.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)
			use.UseTkn = yyDollar[1].token
			use.SemiColonTkn = yyDollar[3].token

			yyVAL.node = yyDollar[2].node
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:498
		{
			use := yyDollar[3].node.(*ast.StmtGroupUseList)

			use.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			use.UseTkn = yyDollar[1].token
			use.Type = yyDollar[2].node
			use.SemiColonTkn = yyDollar[4].token

			yyVAL.node = yyDollar[3].node
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:509
		{
			yyVAL.node = &ast.StmtUseList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				UseTkn:        yyDollar[1].token,
				Uses:          yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:519
		{
			yyVAL.node = &ast.StmtUseList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				UseTkn:        yyDollar[1].token,
				Type:          yyDollar[2].node,
				Uses:          yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:530
		{
			yyVAL.node = &ast.StmtConstList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ConstTkn:      yyDollar[1].token,
				Consts:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:543
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:551
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 106:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:562
		{
			if yyDollar[5].token != nil {
				yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[5].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[6].token),
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[2].token,
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Uses:                 yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 107:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:582
		{
			if yyDollar[6].token != nil {
				yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[6].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position:              yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				LeadingNsSeparatorTkn: yyDollar[1].token,
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[3].token,
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Uses:                 yyDollar[5].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}
		}
	case 108:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:606
		{
			if yyDollar[5].token != nil {
				yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[5].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[6].token),
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[2].token,
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Uses:                 yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 109:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:626
		{
			if yyDollar[6].token != nil {
				yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[6].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position:              yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				LeadingNsSeparatorTkn: yyDollar[1].token,
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[3].token,
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Uses:                 yyDollar[5].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:650
		{
			yyVAL.token = nil
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:654
		{
			yyVAL.token = yyDollar[1].token
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:661
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:668
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:677
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:684
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:693
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:700
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:709
		{
			yyVAL.node = yyDollar[1].node
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:713
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.Type = yyDollar[1].node
			decl.Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node)

			yyVAL.node = yyDollar[2].node
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:724
		{
			yyVAL.node = &ast.StmtUse{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
				Use: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
			}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:735
		{
			yyVAL.node = &ast.StmtUse{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].token),
				Use: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				AsTkn: yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:755
		{
			yyVAL.node = yyDollar[1].node
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:759
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.NsSeparatorTkn = yyDollar[1].token
			decl.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			yyVAL.node = yyDollar[2].node
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:770
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:777
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:786
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:792
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:799
		{
			// error
			yyVAL.node = nil
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:804
		{
			yyVAL.node = yyDollar[1].node
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:808
		{
			yyVAL.node = yyDollar[1].node
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:812
		{
			yyVAL.node = yyDollar[1].node
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:816
		{
			yyVAL.node = yyDollar[1].node
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:820
		{
			yyVAL.node = yyDollar[1].node
		}
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:824
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:836
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:845
		{
			yyVAL.node = yyDollar[1].node
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:849
		{
			yyVAL.node = yyDollar[1].node
		}
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:853
		{
			yyDollar[5].node.(*ast.StmtWhile).WhileTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtWhile).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtWhile).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtWhile).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtWhile).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 139:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:863
		{
			yyVAL.node = &ast.StmtDo{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				DoTkn:               yyDollar[1].token,
				Stmt:                yyDollar[2].node,
				WhileTkn:            yyDollar[3].token,
				OpenParenthesisTkn:  yyDollar[4].token,
				Cond:                yyDollar[5].node,
				CloseParenthesisTkn: yyDollar[6].token,
				SemiColonTkn:        yyDollar[7].token,
			}
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:876
		{
			yyDollar[9].node.(*ast.StmtFor).ForTkn = yyDollar[1].token
			yyDollar[9].node.(*ast.StmtFor).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[9].node.(*ast.StmtFor).Init = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).InitSeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).InitSemiColonTkn = yyDollar[4].token
			yyDollar[9].node.(*ast.StmtFor).Cond = yyDollar[5].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).CondSeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CondSemiColonTkn = yyDollar[6].token
			yyDollar[9].node.(*ast.StmtFor).Loop = yyDollar[7].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).LoopSeparatorTkns = yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CloseParenthesisTkn = yyDollar[8].token
			yyDollar[9].node.(*ast.StmtFor).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			yyVAL.node = yyDollar[9].node
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:893
		{
			yyDollar[5].node.(*ast.StmtSwitch).SwitchTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtSwitch).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtSwitch).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtSwitch).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtSwitch).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:903
		{
			yyVAL.node = &ast.StmtBreak{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				BreakTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:912
		{
			yyVAL.node = &ast.StmtContinue{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ContinueTkn:  yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:921
		{
			yyVAL.node = &ast.StmtReturn{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ReturnTkn:    yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:930
		{
			yyDollar[2].node.(*ast.StmtGlobal).GlobalTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtGlobal).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtGlobal).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:938
		{
			yyDollar[2].node.(*ast.StmtStatic).StaticTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtStatic).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtStatic).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:946
		{
			yyDollar[2].node.(*ast.StmtEcho).EchoTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtEcho).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtEcho).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:954
		{
			yyVAL.node = &ast.StmtInlineHtml{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				InlineHtmlTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:962
		{
			yyVAL.node = &ast.StmtExpression{
				Position:     yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Expr:         yyDollar[1].node,
				SemiColonTkn: yyDollar[2].token,
			}
		}
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:970
		{
			yyDollar[3].node.(*ast.StmtUnset).UnsetTkn = yyDollar[1].token
			yyDollar[3].node.(*ast.StmtUnset).OpenParenthesisTkn = yyDollar[2].token
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[4].token)
			}
			yyDollar[3].node.(*ast.StmtUnset).CloseParenthesisTkn = yyDollar[5].token
			yyDollar[3].node.(*ast.StmtUnset).SemiColonTkn = yyDollar[6].token
			yyDollar[3].node.(*ast.StmtUnset).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			yyVAL.node = yyDollar[3].node
		}
	case 151:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:983
		{
			foreach := yyDollar[7].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[7].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Var = yyDollar[5].node
			foreach.CloseParenthesisTkn = yyDollar[6].token

			if val, ok := yyDollar[5].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:1002
		{
			foreach := yyDollar[9].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Key = yyDollar[5].node
			foreach.DoubleArrowTkn = yyDollar[6].token
			foreach.Var = yyDollar[7].node
			foreach.CloseParenthesisTkn = yyDollar[8].token

			if val, ok := yyDollar[7].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 153:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1023
		{
			yyDollar[5].node.(*ast.StmtDeclare).DeclareTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtDeclare).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtDeclare).Consts = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[5].node.(*ast.StmtDeclare).SeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[5].node.(*ast.StmtDeclare).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtDeclare).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1034
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 155:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1041
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[5].list)
			if yyDollar[6].node != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node)
			}

			yyVAL.node = &ast.StmtTry{
				Position:             pos,
				TryTkn:               yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
				Catches:              yyDollar[5].list,
				Finally:              yyDollar[6].node,
			}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1058
		{
			yyVAL.node = &ast.StmtThrow{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ThrowTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1067
		{
			yyVAL.node = &ast.StmtGoto{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				GotoTkn:  yyDollar[1].token,
				Label: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1080
		{
			yyVAL.node = &ast.StmtLabel{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				ColonTkn: yyDollar[2].token,
			}
		}
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1094
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 160:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:1098
		{
			catch := yyDollar[4].node.(*ast.StmtCatch)
			catch.CatchTkn = yyDollar[2].token
			catch.OpenParenthesisTkn = yyDollar[3].token
			catch.Var = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[5].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[5].token),
					IdentifierTkn: yyDollar[5].token,
					Value:         yyDollar[5].token.Value,
				},
			}
			catch.CloseParenthesisTkn = yyDollar[6].token
			catch.OpenCurlyBracketTkn = yyDollar[7].token
			catch.Stmts = yyDollar[8].list
			catch.CloseCurlyBracketTkn = yyDollar[9].token
			catch.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[2].token, yyDollar[9].token)

			yyVAL.list = append(yyDollar[1].list, catch)
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1121
		{
			yyVAL.node = &ast.StmtCatch{
				Types: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1127
		{
			yyDollar[1].node.(*ast.StmtCatch).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtCatch).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.StmtCatch).Types = append(yyDollar[1].node.(*ast.StmtCatch).Types, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1137
		{
			yyVAL.node = nil
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1141
		{
			yyVAL.node = &ast.StmtFinally{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				FinallyTkn:           yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1154
		{
			yyVAL.node = &ast.StmtUnset{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1160
		{
			yyDollar[1].node.(*ast.StmtUnset).Vars = append(yyDollar[1].node.(*ast.StmtUnset).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1170
		{
			yyVAL.node = yyDollar[1].node
		}
	case 168:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:1177
		{
			yyVAL.node = &ast.StmtFunction{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token),
				FunctionTkn:  yyDollar[1].token,
				AmpersandTkn: yyDollar[2].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
				OpenParenthesisTkn:   yyDollar[5].token,
				Params:               yyDollar[6].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[6].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn:  yyDollar[7].token,
				ColonTkn:             yyDollar[8].node.(*ReturnType).ColonTkn,
				ReturnType:           yyDollar[8].node.(*ReturnType).Type,
				OpenCurlyBracketTkn:  yyDollar[9].token,
				Stmts:                yyDollar[10].list,
				CloseCurlyBracketTkn: yyDollar[11].token,
			}
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1202
		{
			yyVAL.token = nil
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1206
		{
			yyVAL.token = yyDollar[1].token
		}
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1213
		{
			yyVAL.token = nil
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1217
		{
			yyVAL.token = yyDollar[1].token
		}
	case 173:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:1224
		{
			class := &ast.StmtClass{
				Position:  yylex.(*Parser).builder.Pos.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[9].token),
				Modifiers: yyDollar[1].list,
				ClassTkn:  yyDollar[2].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[7].token,
				Stmts:                yyDollar[8].list,
				CloseCurlyBracketTkn: yyDollar[9].token,
			}

			if yyDollar[4].node != nil {
				class.ExtendsTkn = yyDollar[4].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[4].node.(*ast.StmtClass).Extends
			}

			if yyDollar[5].node != nil {
				class.ImplementsTkn = yyDollar[5].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[5].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[5].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 174:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1253
		{
			class := &ast.StmtClass{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[8].token),
				ClassTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[6].token,
				Stmts:                yyDollar[7].list,
				CloseCurlyBracketTkn: yyDollar[8].token,
			}

			if yyDollar[3].node != nil {
				class.ExtendsTkn = yyDollar[3].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[3].node.(*ast.StmtClass).Extends
			}

			if yyDollar[4].node != nil {
				class.ImplementsTkn = yyDollar[4].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[4].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[4].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1284
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1288
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1295
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1303
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 179:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1314
		{
			yyVAL.node = &ast.StmtTrait{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token),
				TraitTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Stmts:                yyDollar[5].list,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 180:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1332
		{
			iface := &ast.StmtInterface{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				InterfaceTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[5].token,
				Stmts:                yyDollar[6].list,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}

			if yyDollar[3].node != nil {
				iface.ExtendsTkn = yyDollar[3].node.(*ast.StmtInterface).ExtendsTkn
				iface.Extends = yyDollar[3].node.(*ast.StmtInterface).Extends
				iface.ExtendsSeparatorTkns = yyDollar[3].node.(*ast.StmtInterface).ExtendsSeparatorTkns
			}

			yyVAL.node = iface
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1358
		{
			yyVAL.node = nil
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1362
		{
			yyVAL.node = &ast.StmtClass{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExtendsTkn: yyDollar[1].token,
				Extends:    yyDollar[2].node,
			}
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1373
		{
			yyVAL.node = nil
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1377
		{
			yyVAL.node = &ast.StmtInterface{
				Position:             yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ExtendsTkn:           yyDollar[1].token,
				Extends:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ExtendsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1389
		{
			yyVAL.node = nil
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1393
		{
			yyVAL.node = &ast.StmtClass{
				Position:                yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ImplementsTkn:           yyDollar[1].token,
				Implements:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ImplementsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1405
		{
			yyVAL.node = yyDollar[1].node
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1409
		{
			yyVAL.node = &ast.StmtForeach{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Var:          yyDollar[2].node,
			}
		}
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1417
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ListTkn:         yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1428
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1441
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1448
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForTkn:    yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1464
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1471
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForeachTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1487
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1494
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndDeclareTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1510
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Cases:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 198:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1519
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CaseSeparatorTkn:     yyDollar[2].token,
				Cases:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1529
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn:     yyDollar[1].token,
				Cases:        yyDollar[2].list,
				EndSwitchTkn: yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1539
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				ColonTkn:         yyDollar[1].token,
				CaseSeparatorTkn: yyDollar[2].token,
				Cases:            yyDollar[3].list,
				EndSwitchTkn:     yyDollar[4].token,
				SemiColonTkn:     yyDollar[5].token,
			}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1553
		{
			yyVAL.list = nil
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1557
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtCase{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list),
				CaseTkn:          yyDollar[2].token,
				Cond:             yyDollar[3].node,
				CaseSeparatorTkn: yyDollar[4].token,
				Stmts:            yyDollar[5].list,
			})
		}
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1567
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtDefault{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				DefaultTkn:       yyDollar[2].token,
				CaseSeparatorTkn: yyDollar[3].token,
				Stmts:            yyDollar[4].list,
			})
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1579
		{
			yyVAL.token = yyDollar[1].token
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1583
		{
			yyVAL.token = yyDollar[1].token
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1590
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1597
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndWhileTkn:  yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1613
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				Stmt:                yyDollar[5].node,
			}
		}
	case 209:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1624
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				Stmt:                yyDollar[6].node,
			})

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)

			yyVAL.node = yyDollar[1].node
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1642
		{
			yyVAL.node = yyDollar[1].node
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1646
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[3].node),
				ElseTkn:  yyDollar[2].token,
				Stmt:     yyDollar[3].node,
			}

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 212:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1661
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[6].list),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				ColonTkn:            yyDollar[5].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[6].list),
					Stmts:    yyDollar[6].list,
				},
			}
		}
	case 213:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1676
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[7].list),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[7].list),
					Stmts:    yyDollar[7].list,
				},
			})

			yyVAL.node = yyDollar[1].node
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1696
		{
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[2].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[3].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			yyVAL.node = yyDollar[1].node
		}
	case 215:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1704
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				ElseTkn:  yyDollar[2].token,
				ColonTkn: yyDollar[3].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[4].list),
					Stmts:    yyDollar[4].list,
				},
			}
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[5].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[6].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token)

			yyVAL.node = yyDollar[1].node
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1724
		{
			yyVAL.node = yyDollar[1].node
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1728
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1735
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1741
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1751
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token)
			if yyDollar[1].node != nil {
				pos = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)
			} else if yyDollar[2].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[2].token, yyDollar[4].token)
			} else if yyDollar[3].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[3].token, yyDollar[4].token)
			}

			yyVAL.node = &ast.Parameter{
				Position:     pos,
				Type:         yyDollar[1].node,
				AmpersandTkn: yyDollar[2].token,
				VariadicTkn:  yyDollar[3].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
						IdentifierTkn: yyDollar[4].token,
						Value:         yyDollar[4].token.Value,
					},
				},
			}
		}
	case 221:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1777
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node)
			if yyDollar[1].node != nil {
				pos = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)
			} else if yyDollar[2].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node)
			} else if yyDollar[3].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[3].token, yyDollar[6].node)
			}

			yyVAL.node = &ast.Parameter{
				Position:     pos,
				Type:         yyDollar[1].node,
				AmpersandTkn: yyDollar[2].token,
				VariadicTkn:  yyDollar[3].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
						IdentifierTkn: yyDollar[4].token,
						Value:         yyDollar[4].token.Value,
					},
				},
				EqualTkn:     yyDollar[5].token,
				DefaultValue: yyDollar[6].node,
			}
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1807
		{
			yyVAL.node = yyDollar[1].node
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1808
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1809
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1813
		{
			yyVAL.node = yyDollar[1].node
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1814
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1818
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1819
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1820
		{
			yyVAL.node = yyDollar[1].node
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1824
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1825
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1830
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1832
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1836
		{
			yyVAL.node = yyDollar[1].node
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1837
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1838
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 237:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1842
		{
			yyVAL.node = nil
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1843
		{
			yyVAL.node = yyDollar[1].node
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1847
		{
			yyVAL.node = &ReturnType{}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1848
		{
			yyVAL.node = yylex.(*Parser).builder.NewReturnType(yyDollar[1].token, yyDollar[2].node)
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1853
		{
			yyVAL.node = &ArgumentList{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				CloseParenthesisTkn: yyDollar[2].token,
			}
		}
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1861
		{
			argumentList := yyDollar[2].node.(*ArgumentList)
			argumentList.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			argumentList.OpenParenthesisTkn = yyDollar[1].token
			if yyDollar[3].token != nil {
				argumentList.SeparatorTkns = append(argumentList.SeparatorTkns, yyDollar[3].token)
			}
			argumentList.CloseParenthesisTkn = yyDollar[4].token

			yyVAL.node = argumentList
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1876
		{
			yyVAL.node = &ArgumentList{
				Arguments: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1882
		{
			yyDollar[1].node.(*ArgumentList).SeparatorTkns = append(yyDollar[1].node.(*ArgumentList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ArgumentList).Arguments = append(yyDollar[1].node.(*ArgumentList).Arguments, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1892
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgument(yyDollar[1].node)
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1896
		{
			yyVAL.node = yylex.(*Parser).builder.NewVariadicArgument(yyDollar[1].token, yyDollar[2].node)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1900
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamedArgument(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node)
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1907
		{
			yyDollar[1].node.(*ast.StmtGlobal).Vars = append(yyDollar[1].node.(*ast.StmtGlobal).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1914
		{
			yyVAL.node = &ast.StmtGlobal{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1923
		{
			yyVAL.node = yyDollar[1].node
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1930
		{
			yyDollar[1].node.(*ast.StmtStatic).Vars = append(yyDollar[1].node.(*ast.StmtStatic).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1937
		{
			yyVAL.node = &ast.StmtStatic{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1946
		{

			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1961
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1980
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 256:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1984
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1991
		{
			yyVAL.node = &ast.StmtPropertyList{
				Position:      yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[4].token),
				Modifiers:     yyDollar[1].list,
				Type:          yyDollar[2].node,
				Props:         yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2002
		{
			yyVAL.node = &ast.StmtClassConstList{
				Position:      yylex.(*Parser).builder.Pos.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[4].token),
				Modifiers:     yyDollar[1].list,
				ConstTkn:      yyDollar[2].token,
				Consts:        yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2013
		{
			traitUse := &ast.StmtTraitUse{
				Position:      yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				UseTkn:        yyDollar[1].token,
				Traits:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}

			switch n := yyDollar[3].node.(type) {
			case *TraitAdaptationList:
				traitUse.OpenCurlyBracketTkn = n.OpenCurlyBracketTkn
				traitUse.Adaptations = n.Adaptations
				traitUse.CloseCurlyBracketTkn = n.CloseCurlyBracketTkn
			case *ast.StmtNop:
				traitUse.SemiColonTkn = n.SemiColonTkn
			}

			yyVAL.node = traitUse
		}
	case 260:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:2033
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[10].node)
			if yyDollar[1].list != nil {
				pos = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[10].node)
			}

			yyVAL.node = &ast.StmtClassMethod{
				Position:     pos,
				Modifiers:    yyDollar[1].list,
				FunctionTkn:  yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
				OpenParenthesisTkn:  yyDollar[6].token,
				Params:              yyDollar[7].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[8].token,
				ColonTkn:            yyDollar[9].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[9].node.(*ReturnType).Type,
				Stmt:                yyDollar[10].node,
			}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2062
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2068
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2078
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2085
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CloseCurlyBracketTkn: yyDollar[2].token,
			}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2093
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Adaptations:          yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2105
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2109
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2116
		{
			yyDollar[1].node.(*ast.StmtTraitUsePrecedence).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2122
		{
			yyDollar[1].node.(*ast.StmtTraitUseAlias).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2131
		{
			yyVAL.node = &ast.StmtTraitUsePrecedence{
				Position:       yylex.(*Parser).builder.Pos.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].node.(*ParserSeparatedList).Items),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				InsteadofTkn:   yyDollar[2].token,
				Insteadof:      yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2146
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2161
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2176
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2192
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
			}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2206
		{
			yyVAL.node = &TraitMethodRef{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2217
		{
			yyVAL.node = yyDollar[1].node
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2224
		{
			yyVAL.node = &TraitMethodRef{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2240
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2247
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2259
		{
			yyVAL.list = yyDollar[1].list
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2263
		{
			yyVAL.list = []ast.Vertex{
				&ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2276
		{
			yyVAL.list = nil
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2280
		{
			yyVAL.list = yyDollar[1].list
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2287
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2291
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2298
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2306
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2314
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2322
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2330
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2338
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2349
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2356
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2365
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				Expr: nil,
			}
		}
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2380
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2399
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2406
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2415
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2431
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2447
		{
			yyDollar[1].node.(*ast.StmtEcho).Exprs = append(yyDollar[1].node.(*ast.StmtEcho).Exprs, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2454
		{
			yyVAL.node = &ast.StmtEcho{
				Exprs: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2463
		{
			yyVAL.node = yyDollar[1].node
		}
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2470
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2474
		{
			yyVAL.node = yyDollar[1].node
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2481
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2488
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 307:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:2497
		{
			if yyDollar[2].node == nil {
				yyDollar[2].node = &ArgumentList{}
			}

			class := &ast.StmtClass{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[8].token),
				ClassTkn:             yyDollar[1].token,
				OpenParenthesisTkn:   yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                 yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:        yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn:  yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
				OpenCurlyBracketTkn:  yyDollar[6].token,
				Stmts:                yyDollar[7].list,
				CloseCurlyBracketTkn: yyDollar[8].token,
			}

			if yyDollar[3].node != nil {
				class.ExtendsTkn = yyDollar[3].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[3].node.(*ast.StmtClass).Extends
			}

			if yyDollar[4].node != nil {
				class.ImplementsTkn = yyDollar[4].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[4].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[4].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2531
		{
			if yyDollar[3].node != nil {
				yyVAL.node = &ast.ExprNew{
					Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
					NewTkn:              yyDollar[1].token,
					Class:               yyDollar[2].node,
					OpenParenthesisTkn:  yyDollar[3].node.(*ArgumentList).OpenParenthesisTkn,
					Args:                yyDollar[3].node.(*ArgumentList).Arguments,
					SeparatorTkns:       yyDollar[3].node.(*ArgumentList).SeparatorTkns,
					CloseParenthesisTkn: yyDollar[3].node.(*ArgumentList).CloseParenthesisTkn,
				}
			} else {
				yyVAL.node = &ast.ExprNew{
					Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
					NewTkn:   yyDollar[1].token,
					Class:    yyDollar[2].node,
				}
			}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2551
		{
			yyVAL.node = &ast.ExprNew{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				NewTkn:   yyDollar[1].token,
				Class:    yyDollar[2].node,
			}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2562
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2569
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2574
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 313:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:2581
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token)
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2588
		{
			yyVAL.node = nil
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2593
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2600
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2605
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2612
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(nil, nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2617
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(yyDollar[1].token, yyDollar[2].token, nil, yyDollar[3].token, yyDollar[4].node)
		}
	case 320:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:2624
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
				EqualTkn: yyDollar[5].token,
				Expr:     yyDollar[6].node,
			}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:2640
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
					OpenBracketTkn:  yyDollar[1].token,
					Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[3].token,
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2655
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2664
		{
			yyVAL.node = &ast.ExprAssignReference{
				Position:     yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Var:          yyDollar[1].node,
				EqualTkn:     yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Expr:         yyDollar[4].node,
			}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2674
		{
			yyVAL.node = &ast.ExprClone{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CloneTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2682
		{
			yyVAL.node = &ast.ExprAssignPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2691
		{
			yyVAL.node = &ast.ExprAssignMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2700
		{
			yyVAL.node = &ast.ExprAssignMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2709
		{
			yyVAL.node = &ast.ExprAssignPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2718
		{
			yyVAL.node = &ast.ExprAssignDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2727
		{
			yyVAL.node = &ast.ExprAssignConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2736
		{
			yyVAL.node = &ast.ExprAssignMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2745
		{
			yyVAL.node = &ast.ExprAssignBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2754
		{
			yyVAL.node = &ast.ExprAssignBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2763
		{
			yyVAL.node = &ast.ExprAssignBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2772
		{
			yyVAL.node = &ast.ExprAssignShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2781
		{
			yyVAL.node = &ast.ExprAssignShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2790
		{
			yyVAL.node = &ast.ExprAssignCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2799
		{
			yyVAL.node = &ast.ExprPostInc{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				IncTkn:   yyDollar[2].token,
			}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2807
		{
			yyVAL.node = &ast.ExprPreInc{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2815
		{
			yyVAL.node = &ast.ExprPostDec{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				DecTkn:   yyDollar[2].token,
			}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2823
		{
			yyVAL.node = &ast.ExprPreDec{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DecTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2831
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2840
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2849
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2858
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2867
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2876
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2885
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2894
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2903
		{
			yyVAL.node = &ast.ExprBinaryConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2912
		{
			yyVAL.node = &ast.ExprBinaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2921
		{
			yyVAL.node = &ast.ExprBinaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2930
		{
			yyVAL.node = &ast.ExprBinaryMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2939
		{
			yyVAL.node = &ast.ExprBinaryPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2948
		{
			yyVAL.node = &ast.ExprBinaryDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2957
		{
			yyVAL.node = &ast.ExprBinaryMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2966
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2975
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2984
		{
			yyVAL.node = &ast.ExprUnaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PlusTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2992
		{
			yyVAL.node = &ast.ExprUnaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				MinusTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3000
		{
			yyVAL.node = &ast.ExprBooleanNot{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExclamationTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3008
		{
			yyVAL.node = &ast.ExprBitwiseNot{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				TildaTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3016
		{
			yyVAL.node = &ast.ExprBinaryIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3025
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3034
		{
			yyVAL.node = &ast.ExprBinaryEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3043
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3052
		{
			yyVAL.node = &ast.ExprBinarySmaller{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3061
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3070
		{
			yyVAL.node = &ast.ExprBinaryGreater{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3079
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3088
		{
			yyVAL.node = &ast.ExprBinarySpaceship{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3097
		{
			yyVAL.node = &ast.ExprInstanceOf{
				Position:      yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Expr:          yyDollar[1].node,
				InstanceOfTkn: yyDollar[2].token,
				Class:         yyDollar[3].node,
			}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3106
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3115
		{
			yyVAL.node = yyDollar[1].node
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3119
		{
			yyVAL.node = yyDollar[1].node
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:3123
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[5].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				IfTrue:      yyDollar[3].node,
				ColonTkn:    yyDollar[4].token,
				IfFalse:     yyDollar[5].node,
			}
		}
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3134
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				ColonTkn:    yyDollar[3].token,
				IfFalse:     yyDollar[4].node,
			}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3144
		{
			yyVAL.node = &ast.ExprBinaryCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3153
		{
			yyVAL.node = yyDollar[1].node
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3157
		{
			yyVAL.node = &ast.ExprCastInt{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3165
		{
			yyVAL.node = &ast.ExprCastDouble{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3173
		{
			yyVAL.node = &ast.ExprCastString{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3181
		{
			yyVAL.node = &ast.ExprCastArray{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3189
		{
			yyVAL.node = &ast.ExprCastObject{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3197
		{
			yyVAL.node = &ast.ExprCastBool{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3205
		{
			yyVAL.node = &ast.ExprCastUnset{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3213
		{
			exit := &ast.ExprExit{
				ExitTkn: yyDollar[1].token,
			}

			if yyDollar[2].node == nil {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token)
			} else {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				exit.OpenParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).OpenParenthesisTkn
				exit.Expr = yyDollar[2].node.(*ast.ExprBrackets).Expr
				exit.CloseParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).CloseParenthesisTkn
			}

			yyVAL.node = exit
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3230
		{
			yyVAL.node = &ast.ExprErrorSuppress{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AtTkn:    yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3238
		{
			yyVAL.node = yyDollar[1].node
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3242
		{
			yyVAL.node = &ast.ExprShellExec{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBacktickTkn:  yyDollar[1].token,
				Parts:            yyDollar[2].list,
				CloseBacktickTkn: yyDollar[3].token,
			}
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3251
		{
			yyVAL.node = &ast.ExprPrint{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PrintTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3259
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				YieldTkn: yyDollar[1].token,
			}
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3266
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldTkn: yyDollar[1].token,
				Val:      yyDollar[2].node,
			}
		}
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3274
		{
			yyVAL.node = &ast.ExprYield{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				YieldTkn:       yyDollar[1].token,
				Key:            yyDollar[2].node,
				DoubleArrowTkn: yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3284
		{
			yyVAL.node = &ast.ExprYieldFrom{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldFromTkn: yyDollar[1].token,
				Expr:         yyDollar[2].node,
			}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3292
		{
			yyVAL.node = yyDollar[1].node
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3296
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			}

			yyVAL.node = yyDollar[2].node
		}
	case 398:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:3312
		{
			closure := yyDollar[7].node.(*ast.ExprClosure)

			closure.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token)
			closure.FunctionTkn = yyDollar[1].token
			closure.AmpersandTkn = yyDollar[2].token
			closure.OpenParenthesisTkn = yyDollar[4].token
			closure.Params = yyDollar[5].node.(*ParserSeparatedList).Items
			closure.SeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			closure.CloseParenthesisTkn = yyDollar[6].token
			closure.ColonTkn = yyDollar[8].node.(*ReturnType).ColonTkn
			closure.ReturnType = yyDollar[8].node.(*ReturnType).Type
			closure.OpenCurlyBracketTkn = yyDollar[9].token
			closure.Stmts = yyDollar[10].list
			closure.CloseCurlyBracketTkn = yyDollar[11].token

			yyVAL.node = closure
		}
	case 399:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:3331
		{
			yyVAL.node = &ast.ExprArrowFunction{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node),
				FnTkn:               yyDollar[1].token,
				AmpersandTkn:        yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Params:              yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[6].node.(*ReturnType).Type,
				DoubleArrowTkn:      yyDollar[8].token,
				Expr:                yyDollar[9].node,
			}
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3354
		{
			yyVAL.token = nil
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3358
		{
			yyVAL.token = yyDollar[1].token
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3365
		{
			yyVAL.node = &ast.ExprClosure{}
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3369
		{
			yyVAL.node = &ast.ExprClosure{
				UseTkn:                 yyDollar[1].token,
				UseOpenParenthesisTkn:  yyDollar[2].token,
				Uses:                   yyDollar[3].node.(*ParserSeparatedList).Items,
				UseSeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				UseCloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3382
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3389
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3398
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3412
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				AmpersandTkn: yyDollar[1].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						IdentifierTkn: yyDollar[2].token,
						Value:         yyDollar[2].token.Value,
					},
				},
			}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3430
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3441
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3462
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3483
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3497
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3505
		{
			yyVAL.node = yyDollar[1].node
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3512
		{
			yyVAL.node = yyDollar[1].node
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3516
		{
			yyVAL.node = yyDollar[1].node
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3523
		{
			yyVAL.node = nil
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3527
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3539
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3543
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
			}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3553
		{
			yyVAL.list = yyDollar[1].list
		}
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3560
		{
			yyVAL.node = nil
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3564
		{
			yyVAL.node = yyDollar[1].node
		}
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3571
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ArrayTkn:        yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3582
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3592
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3603
		{
			yyVAL.node = &ast.ScalarLnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3611
		{
			yyVAL.node = &ast.ScalarDnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3619
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3627
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3635
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3643
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3651
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3659
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3667
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3675
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3683
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:       yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn: yyDollar[1].token,
				Parts: []ast.Vertex{
					&ast.ScalarEncapsedStringPart{
						Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						EncapsedStrTkn: yyDollar[2].token,
						Value:          yyDollar[2].token.Value,
					},
				},
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3698
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenHeredocTkn:  yyDollar[1].token,
				CloseHeredocTkn: yyDollar[2].token,
			}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3706
		{
			yyVAL.node = &ast.ScalarEncapsed{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenQuoteTkn:  yyDollar[1].token,
				Parts:         yyDollar[2].list,
				CloseQuoteTkn: yyDollar[3].token,
			}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3715
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn:  yyDollar[1].token,
				Parts:           yyDollar[2].list,
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3724
		{
			yyVAL.node = yyDollar[1].node
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3728
		{
			yyVAL.node = yyDollar[1].node
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3735
		{
			yyVAL.node = &ast.ExprConstFetch{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Const:    yyDollar[1].node,
			}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3742
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3755
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3771
		{
			yyVAL.node = yyDollar[1].node
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3775
		{
			yyVAL.node = yyDollar[1].node
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3782
		{
			yyVAL.node = nil
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3786
		{
			yyVAL.node = yyDollar[1].node
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3793
		{
			yyVAL.node = yyDollar[1].node
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3800
		{
			yyVAL.node = yyDollar[1].node
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3804
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3813
		{
			yyVAL.node = yyDollar[1].node
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3820
		{
			yyVAL.node = yyDollar[1].node
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3824
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3833
		{
			yyVAL.node = yyDollar[1].node
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3840
		{
			yyVAL.node = yyDollar[1].node
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3844
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3854
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3864
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3876
		{
			yyVAL.node = yylex.(*Parser).builder.NewMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3880
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafeMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3884
		{
			yyVAL.node = yyDollar[1].node
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3891
		{
			yyVAL.node = yyDollar[1].node
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3895
		{
			yyVAL.node = yyDollar[1].node
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3899
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3903
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3910
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3921
		{
			yyVAL.node = &ast.ExprVariable{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				DollarTkn:            yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Name:                 yyDollar[3].node,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3931
		{
			yyVAL.node = &ast.ExprVariable{
				Position:  yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DollarTkn: yyDollar[1].token,
				Name:      yyDollar[2].node,
			}
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3942
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3951
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3963
		{
			yyVAL.node = yyDollar[1].node
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3967
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3977
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3989
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3993
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3997
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4006
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4018
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4026
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4035
		{
			yyVAL.node = yyDollar[1].node
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4042
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4050
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4059
		{
			yyVAL.node = yyDollar[1].node
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4066
		{
			pairList := yyDollar[1].node.(*ParserSeparatedList)
			fistPair := pairList.Items[0].(*ast.ExprArrayItem)

			if fistPair.Key == nil && fistPair.Val == nil && len(pairList.Items) == 1 {
				pairList.Items = nil
			}

			yyVAL.node = yyDollar[1].node
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:4080
		{
			yyVAL.node = &ast.ExprArrayItem{}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4084
		{
			yyVAL.node = yyDollar[1].node
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4091
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4098
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4107
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val:            yyDollar[3].node,
			}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4116
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Val:      yyDollar[1].node,
			}
		}
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4123
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				AmpersandTkn:   yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4133
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Val:          yyDollar[2].node,
			}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4141
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:    yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				EllipsisTkn: yyDollar[1].token,
				Val:         yyDollar[2].node,
			}
		}
	case 496:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:4149
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[3].token, yyDollar[6].token),
					ListTkn:         yyDollar[3].token,
					OpenBracketTkn:  yyDollar[4].token,
					Items:           yyDollar[5].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[6].token,
				},
			}
		}
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4165
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
			}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4182
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4186
		{
			yyVAL.list = append(
				yyDollar[1].list,
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					EncapsedStrTkn: yyDollar[2].token,
					Value:          yyDollar[2].token.Value,
				},
			)
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4197
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4201
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
				yyDollar[2].node,
			}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4215
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4226
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4243
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4247
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4251
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name:                      yyDollar[2].node,
				CloseCurlyBracketTkn:      yyDollar[3].token,
			}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4260
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:4273
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenSquareBracketTkn:  yyDollar[3].token,
				Dim:                   yyDollar[4].node,
				CloseSquareBracketTkn: yyDollar[5].token,
				CloseCurlyBracketTkn:  yyDollar[6].token,
			}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4289
		{
			yyVAL.node = &ast.ScalarEncapsedStringBrackets{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Var:                  yyDollar[2].node,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4301
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4309
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(string(yyDollar[1].token.Value)); err == nil {
				yyVAL.node = &ast.ScalarLnumber{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					NumberTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					StringTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			}
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4326
		{
			_, err := strconv.Atoi(string(yyDollar[2].token.Value))
			isInt := err == nil

			if isInt {
				yyVAL.node = &ast.ExprUnaryMinus{
					Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn: yyDollar[1].token,
					Expr: &ast.ScalarLnumber{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						NumberTkn: yyDollar[2].token,
						Value:     yyDollar[2].token.Value,
					},
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn:  yyDollar[1].token,
					StringTkn: yyDollar[2].token,
					Value:     append([]byte("-"), yyDollar[2].token.Value...),
				}
			}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4350
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:4364
		{
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[4].token)
			}

			yyVAL.node = &ast.ExprIsset{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				IssetTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Vars:                yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
			}
		}
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4379
		{
			yyVAL.node = &ast.ExprEmpty{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EmptyTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4389
		{
			yyVAL.node = &ast.ExprInclude{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4397
		{
			yyVAL.node = &ast.ExprIncludeOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4405
		{
			yyVAL.node = &ast.ExprEval{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EvalTkn:             yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4415
		{
			yyVAL.node = &ast.ExprRequire{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4423
		{
			yyVAL.node = &ast.ExprRequireOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4434
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4440
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4450
		{
			yyVAL.node = yyDollar[1].node
		}
	}
	goto yystack /* stack new state and value */
}
