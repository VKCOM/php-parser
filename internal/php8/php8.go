// Code generated by goyacc -o internal/php8/php8.go internal/php8/php8.y. DO NOT EDIT.

// line internal/php8/php8.y:1

package php8

import __yyfmt__ "fmt"

// line internal/php8/php8.y:3

import (
	"strconv"

	"github.com/VKCOM/php-parser/pkg/ast"
	"github.com/VKCOM/php-parser/pkg/token"
)

// line internal/php8/php8.y:13
type yySymType struct {
	yys   int
	node  ast.Vertex
	token *token.Token
	list  []ast.Vertex
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_FN = 57380
const T_CONST = 57381
const T_RETURN = 57382
const T_TRY = 57383
const T_CATCH = 57384
const T_FINALLY = 57385
const T_THROW = 57386
const T_USE = 57387
const T_INSTEADOF = 57388
const T_GLOBAL = 57389
const T_VAR = 57390
const T_UNSET = 57391
const T_ISSET = 57392
const T_EMPTY = 57393
const T_HALT_COMPILER = 57394
const T_CLASS = 57395
const T_TRAIT = 57396
const T_INTERFACE = 57397
const T_EXTENDS = 57398
const T_IMPLEMENTS = 57399
const T_OBJECT_OPERATOR = 57400
const T_DOUBLE_ARROW = 57401
const T_LIST = 57402
const T_ARRAY = 57403
const T_CALLABLE = 57404
const T_CLASS_C = 57405
const T_TRAIT_C = 57406
const T_METHOD_C = 57407
const T_FUNC_C = 57408
const T_LINE = 57409
const T_FILE = 57410
const T_COMMENT = 57411
const T_DOC_COMMENT = 57412
const T_OPEN_TAG = 57413
const T_OPEN_TAG_WITH_ECHO = 57414
const T_CLOSE_TAG = 57415
const T_WHITESPACE = 57416
const T_START_HEREDOC = 57417
const T_END_HEREDOC = 57418
const T_DOLLAR_OPEN_CURLY_BRACES = 57419
const T_CURLY_OPEN = 57420
const T_PAAMAYIM_NEKUDOTAYIM = 57421
const T_NAMESPACE = 57422
const T_NS_C = 57423
const T_DIR = 57424
const T_NS_SEPARATOR = 57425
const T_ELLIPSIS = 57426
const T_EVAL = 57427
const T_REQUIRE = 57428
const T_REQUIRE_ONCE = 57429
const T_LOGICAL_OR = 57430
const T_LOGICAL_XOR = 57431
const T_LOGICAL_AND = 57432
const T_INSTANCEOF = 57433
const T_NEW = 57434
const T_CLONE = 57435
const T_ELSEIF = 57436
const T_ELSE = 57437
const T_ENDIF = 57438
const T_PRINT = 57439
const T_YIELD = 57440
const T_STATIC = 57441
const T_ABSTRACT = 57442
const T_FINAL = 57443
const T_PRIVATE = 57444
const T_PROTECTED = 57445
const T_PUBLIC = 57446
const T_INC = 57447
const T_DEC = 57448
const T_YIELD_FROM = 57449
const T_INT_CAST = 57450
const T_DOUBLE_CAST = 57451
const T_STRING_CAST = 57452
const T_ARRAY_CAST = 57453
const T_OBJECT_CAST = 57454
const T_BOOL_CAST = 57455
const T_UNSET_CAST = 57456
const T_COALESCE = 57457
const T_SPACESHIP = 57458
const T_NOELSE = 57459
const T_PLUS_EQUAL = 57460
const T_MINUS_EQUAL = 57461
const T_MUL_EQUAL = 57462
const T_POW_EQUAL = 57463
const T_DIV_EQUAL = 57464
const T_CONCAT_EQUAL = 57465
const T_MOD_EQUAL = 57466
const T_AND_EQUAL = 57467
const T_OR_EQUAL = 57468
const T_XOR_EQUAL = 57469
const T_SL_EQUAL = 57470
const T_SR_EQUAL = 57471
const T_COALESCE_EQUAL = 57472
const T_BOOLEAN_OR = 57473
const T_BOOLEAN_AND = 57474
const T_POW = 57475
const T_SL = 57476
const T_SR = 57477
const T_IS_IDENTICAL = 57478
const T_IS_NOT_IDENTICAL = 57479
const T_IS_EQUAL = 57480
const T_IS_NOT_EQUAL = 57481
const T_IS_SMALLER_OR_EQUAL = 57482
const T_IS_GREATER_OR_EQUAL = 57483
const T_NULLSAFE_OBJECT_OPERATOR = 57484
const T_MATCH = 57485
const T_ATTRIBUTE = 57486
const T_NAME_RELATIVE = 57487
const T_NAME_QUALIFIED = 57488
const T_NAME_FULLY_QUALIFIED = 57489
const T_READONLY = 57490
const T_ENUM = 57491

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_FN",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_COALESCE_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"T_NULLSAFE_OBJECT_OPERATOR",
	"T_MATCH",
	"T_ATTRIBUTE",
	"T_NAME_RELATIVE",
	"T_NAME_QUALIFIED",
	"T_NAME_FULLY_QUALIFIED",
	"T_READONLY",
	"T_ENUM",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

// line internal/php8/php8.y:3452

// line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	53, 109,
	54, 109,
	55, 109,
	100, 109,
	101, 109,
	149, 109,
	-2, 0,
	-1, 43,
	58, 492,
	79, 492,
	142, 492,
	152, 492,
	158, 492,
	-2, 488,
	-1, 47,
	156, 498,
	-2, 507,
	-1, 83,
	79, 453,
	-2, 496,
	-1, 84,
	58, 497,
	142, 497,
	152, 497,
	158, 497,
	-2, 477,
	-1, 97,
	58, 494,
	79, 494,
	142, 494,
	152, 494,
	156, 500,
	158, 494,
	-2, 475,
	-1, 98,
	58, 495,
	79, 495,
	142, 495,
	152, 495,
	158, 495,
	-2, 476,
	-1, 102,
	79, 455,
	-2, 479,
	-1, 218,
	53, 109,
	54, 109,
	55, 109,
	100, 109,
	101, 109,
	149, 109,
	-2, 0,
	-1, 326,
	58, 492,
	79, 492,
	142, 492,
	152, 492,
	158, 492,
	-2, 375,
	-1, 329,
	156, 500,
	-2, 494,
	-1, 333,
	58, 492,
	79, 492,
	142, 492,
	152, 492,
	158, 492,
	-2, 377,
	-1, 396,
	53, 109,
	54, 109,
	55, 109,
	100, 109,
	101, 109,
	149, 109,
	-2, 0,
	-1, 450,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 399,
	-1, 451,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 400,
	-1, 452,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 401,
	-1, 453,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 402,
	-1, 454,
	140, 0,
	141, 0,
	175, 0,
	176, 0,
	-2, 403,
	-1, 455,
	140, 0,
	141, 0,
	175, 0,
	176, 0,
	-2, 404,
	-1, 456,
	140, 0,
	141, 0,
	175, 0,
	176, 0,
	-2, 405,
	-1, 457,
	140, 0,
	141, 0,
	175, 0,
	176, 0,
	-2, 406,
	-1, 458,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 407,
	-1, 465,
	157, 188,
	168, 188,
	-2, 492,
	-1, 468,
	53, 109,
	54, 109,
	55, 109,
	100, 109,
	101, 109,
	149, 109,
	-2, 0,
	-1, 510,
	157, 536,
	159, 536,
	168, 536,
	-2, 492,
	-1, 515,
	58, 493,
	79, 493,
	142, 493,
	152, 493,
	156, 499,
	158, 493,
	-2, 409,
	-1, 533,
	156, 524,
	-2, 514,
	-1, 536,
	156, 80,
	-2, 82,
	-1, 537,
	156, 81,
	-2, 83,
	-1, 563,
	155, 82,
	-2, 98,
	-1, 567,
	155, 13,
	-2, 459,
	-1, 569,
	155, 46,
	-2, 428,
	-1, 571,
	155, 73,
	-2, 454,
	-1, 572,
	155, 11,
	-2, 109,
	-1, 581,
	156, 440,
	-2, 42,
	-1, 583,
	155, 61,
	-2, 487,
	-1, 584,
	155, 62,
	-2, 483,
	-1, 585,
	155, 63,
	-2, 485,
	-1, 586,
	155, 64,
	-2, 484,
	-1, 587,
	155, 65,
	-2, 480,
	-1, 588,
	155, 66,
	-2, 481,
	-1, 589,
	155, 67,
	-2, 482,
	-1, 590,
	155, 68,
	-2, 486,
	-1, 591,
	156, 440,
	-2, 69,
	-1, 594,
	157, 245,
	-2, 109,
	-1, 596,
	53, 109,
	54, 109,
	55, 109,
	100, 109,
	101, 109,
	149, 109,
	-2, 0,
	-1, 623,
	157, 245,
	-2, 109,
	-1, 624,
	157, 245,
	-2, 109,
	-1, 634,
	53, 109,
	54, 109,
	55, 109,
	100, 109,
	101, 109,
	149, 109,
	-2, 0,
	-1, 649,
	156, 499,
	-2, 493,
	-1, 714,
	157, 215,
	-2, 492,
	-1, 724,
	157, 245,
	-2, 109,
	-1, 747,
	157, 535,
	159, 535,
	168, 535,
	-2, 492,
	-1, 765,
	157, 85,
	-2, 109,
	-1, 776,
	53, 109,
	54, 109,
	55, 109,
	100, 109,
	101, 109,
	149, 109,
	-2, 0,
	-1, 786,
	157, 216,
	-2, 492,
	-1, 789,
	53, 109,
	54, 109,
	55, 109,
	100, 109,
	101, 109,
	149, 109,
	-2, 0,
	-1, 810,
	53, 109,
	54, 109,
	55, 109,
	94, 240,
	95, 240,
	96, 240,
	100, 109,
	101, 109,
	149, 109,
	-2, 0,
	-1, 854,
	157, 215,
	-2, 492,
	-1, 856,
	157, 218,
	-2, 467,
	-1, 868,
	37, 318,
	39, 318,
	-2, 315,
	-1, 882,
	53, 109,
	54, 109,
	55, 109,
	94, 241,
	95, 241,
	96, 241,
	100, 109,
	101, 109,
	149, 109,
	-2, 0,
	-1, 915,
	53, 109,
	54, 109,
	55, 109,
	100, 109,
	101, 109,
	149, 109,
	-2, 0,
	-1, 919,
	53, 109,
	54, 109,
	55, 109,
	100, 109,
	101, 109,
	149, 109,
	-2, 0,
	-1, 953,
	31, 231,
	32, 231,
	33, 231,
	53, 109,
	54, 109,
	55, 109,
	100, 109,
	101, 109,
	149, 109,
	153, 231,
	-2, 0,
	-1, 961,
	53, 109,
	54, 109,
	55, 109,
	100, 109,
	101, 109,
	149, 109,
	-2, 0,
	-1, 990,
	79, 98,
	-2, 80,
	-1, 997,
	53, 109,
	54, 109,
	55, 109,
	100, 109,
	101, 109,
	149, 109,
	-2, 0,
	-1, 998,
	31, 230,
	32, 230,
	33, 230,
	53, 109,
	54, 109,
	55, 109,
	100, 109,
	101, 109,
	149, 109,
	153, 230,
	-2, 0,
	-1, 1003,
	53, 109,
	54, 109,
	55, 109,
	100, 109,
	101, 109,
	149, 109,
	-2, 0,
	-1, 1008,
	53, 109,
	54, 109,
	55, 109,
	100, 109,
	101, 109,
	149, 109,
	-2, 0,
	-1, 1036,
	157, 245,
	-2, 109,
	-1, 1044,
	53, 109,
	54, 109,
	55, 109,
	100, 109,
	101, 109,
	149, 109,
	-2, 0,
	-1, 1055,
	53, 109,
	54, 109,
	55, 109,
	100, 109,
	101, 109,
	149, 109,
	-2, 0,
}

const yyPrivate = 57344

const yyLast = 9418

var yyAct = [...]int{

	30, 218, 822, 687, 729, 974, 870, 127, 965, 983,
	40, 100, 971, 850, 471, 733, 975, 909, 727, 734,
	817, 826, 713, 689, 226, 226, 226, 696, 695, 240,
	779, 977, 550, 725, 731, 529, 419, 559, 464, 237,
	538, 319, 414, 97, 125, 10, 78, 317, 98, 239,
	104, 413, 321, 325, 9, 84, 334, 335, 336, 337,
	338, 392, 236, 361, 339, 340, 341, 342, 343, 344,
	345, 501, 348, 232, 235, 356, 357, 358, 359, 2,
	412, 411, 216, 8, 7, 353, 43, 225, 45, 539,
	376, 377, 221, 379, 380, 39, 370, 329, 329, 562,
	277, 410, 330, 330, 6, 287, 208, 1026, 353, 327,
	327, 205, 229, 230, 365, 698, 207, 215, 99, 1015,
	1012, 980, 117, 244, 246, 245, 268, 353, 279, 211,
	362, 745, 934, 643, 933, 268, 367, 430, 405, 352,
	326, 333, 1013, 1009, 409, 944, 942, 5, 804, 621,
	270, 267, 903, 901, 804, 1006, 1014, 1010, 281, 893,
	404, 891, 888, 837, 772, 220, 242, 243, 254, 257,
	258, 259, 260, 261, 262, 264, 266, 254, 372, 765,
	600, 683, 678, 117, 502, 619, 117, 610, 431, 911,
	910, 428, 386, 388, 398, 269, 248, 252, 251, 228,
	102, 117, 432, 396, 247, 429, 249, 253, 255, 256,
	263, 265, 250, 309, 310, 528, 253, 255, 256, 508,
	416, 278, 900, 856, 421, 422, 296, 297, 298, 299,
	300, 301, 302, 303, 304, 305, 306, 307, 308, 754,
	117, 750, 117, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 426,
	460, 462, 665, 466, 235, 403, 468, 397, 295, 959,
	363, 650, 660, 427, 418, 637, 363, 661, 331, 404,
	507, 398, 1050, 1004, 1000, 917, 483, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	279, 39, 498, 226, 500, 329, 916, 321, 399, 367,
	330, 907, 211, 400, 511, 883, 503, 327, 653, 513,
	117, 654, 863, 321, 120, 118, 119, 795, 101, 794,
	281, 101, 472, 784, 763, 369, 543, 760, 226, 758,
	522, 749, 711, 700, 686, 524, 101, 651, 465, 642,
	393, 1036, 353, 353, 506, 314, 329, 545, 924, 859,
	546, 330, 268, 787, 548, 551, 552, 748, 327, 553,
	514, 534, 384, 459, 1054, 556, 1053, 505, 560, 967,
	321, 467, 477, 353, 724, 353, 537, 101, 708, 329,
	499, 709, 353, 353, 330, 389, 605, 911, 910, 510,
	378, 327, 375, 374, 254, 257, 258, 373, 347, 564,
	316, 264, 266, 387, 624, 268, 623, 608, 606, 594,
	544, 614, 512, 240, 523, 516, 479, 592, 480, 10,
	542, 237, 526, 252, 251, 478, 541, 311, 9, 315,
	521, 273, 530, 253, 255, 256, 263, 265, 250, 313,
	272, 279, 617, 823, 532, 312, 271, 254, 224, 363,
	223, 219, 121, 1043, 268, 596, 808, 8, 7, 632,
	655, 633, 615, 685, 634, 635, 631, 604, 802, 39,
	518, 519, 613, 845, 846, 482, 252, 251, 6, 618,
	802, 612, 276, 1022, 640, 598, 253, 255, 256, 321,
	645, 845, 846, 321, 211, 599, 254, 257, 258, 1021,
	395, 518, 394, 519, 1017, 802, 999, 954, 663, 918,
	519, 518, 913, 656, 906, 904, 667, 228, 842, 117,
	838, 5, 226, 670, 809, 252, 251, 783, 782, 780,
	644, 802, 778, 775, 609, 253, 255, 256, 802, 268,
	648, 39, 684, 595, 481, 469, 425, 325, 424, 356,
	357, 359, 423, 886, 884, 835, 770, 376, 377, 362,
	379, 380, 662, 370, 867, 677, 1028, 79, 675, 968,
	962, 639, 664, 922, 682, 641, 991, 885, 864, 79,
	869, 254, 257, 258, 858, 690, 805, 228, 969, 704,
	421, 706, 757, 517, 912, 671, 672, 710, 235, 728,
	699, 666, 692, 367, 79, 627, 331, 722, 723, 669,
	252, 251, 844, 935, 690, 690, 602, 274, 213, 10,
	253, 255, 256, 418, 746, 250, 705, 213, 9, 79,
	79, 874, 875, 876, 873, 872, 871, 79, 712, 879,
	222, 116, 752, 329, 329, 372, 799, 254, 330, 330,
	213, 79, 120, 118, 119, 327, 327, 8, 7, 551,
	946, 268, 402, 369, 560, 402, 762, 372, 726, 39,
	329, 288, 289, 351, 101, 330, 331, 209, 6, 210,
	877, 1025, 327, 290, 291, 776, 465, 714, 540, 756,
	364, 759, 732, 941, 228, 564, 372, 372, 321, 629,
	769, 761, 789, 254, 764, 773, 228, 39, 796, 363,
	771, 280, 116, 747, 213, 690, 601, 806, 801, 401,
	781, 5, 120, 118, 119, 810, 811, 803, 939, 321,
	889, 785, 702, 292, 294, 293, 547, 80, 821, 329,
	797, 209, 117, 210, 330, 788, 719, 79, 473, 1023,
	228, 327, 862, 363, 214, 212, 690, 736, 737, 421,
	1024, 742, 117, 214, 233, 774, 832, 520, 321, 824,
	383, 814, 402, 117, 793, 792, 812, 860, 283, 284,
	417, 839, 786, 929, 836, 928, 214, 878, 853, 390,
	882, 847, 751, 849, 801, 843, 117, 372, 222, 116,
	372, 736, 737, 930, 881, 840, 228, 354, 355, 329,
	730, 658, 738, 657, 330, 855, 626, 894, 79, 896,
	625, 327, 217, 371, 288, 289, 908, 354, 355, 120,
	118, 119, 887, 902, 915, 890, 892, 603, 372, 385,
	919, 120, 118, 119, 923, 905, 925, 476, 475, 39,
	214, 212, 854, 474, 697, 931, 833, 736, 737, 914,
	845, 846, 39, 926, 807, 832, 470, 927, 206, 821,
	938, 275, 801, 285, 940, 1, 372, 874, 875, 876,
	873, 872, 871, 39, 936, 120, 118, 119, 282, 937,
	286, 953, 117, 943, 868, 735, 766, 520, 117, 865,
	593, 947, 866, 948, 961, 79, 952, 798, 982, 851,
	956, 349, 960, 730, 630, 979, 966, 801, 360, 972,
	992, 825, 993, 791, 721, 228, 877, 801, 848, 845,
	846, 989, 816, 997, 998, 815, 61, 996, 994, 820,
	995, 120, 118, 119, 1003, 818, 861, 738, 628, 463,
	1008, 701, 949, 1052, 372, 39, 897, 354, 355, 1007,
	707, 1018, 554, 354, 355, 932, 834, 1011, 831, 898,
	895, 978, 1020, 117, 320, 1016, 736, 737, 391, 989,
	1005, 42, 122, 730, 117, 880, 693, 694, 39, 520,
	767, 768, 39, 1033, 14, 1030, 1035, 41, 966, 372,
	1034, 973, 972, 1032, 738, 549, 371, 1042, 1037, 372,
	1044, 1040, 1039, 964, 738, 963, 18, 829, 828, 827,
	1047, 970, 1041, 558, 17, 920, 39, 690, 1045, 238,
	1046, 652, 950, 1051, 39, 368, 1055, 1048, 354, 355,
	921, 851, 117, 48, 47, 103, 738, 350, 555, 354,
	355, 49, 504, 504, 228, 83, 531, 81, 72, 346,
	120, 118, 119, 830, 318, 62, 82, 366, 60, 987,
	39, 39, 986, 985, 984, 833, 39, 800, 738, 234,
	117, 39, 738, 231, 738, 381, 244, 246, 245, 268,
	44, 790, 718, 688, 420, 406, 3, 958, 945, 899,
	0, 0, 533, 0, 0, 736, 737, 354, 355, 372,
	0, 0, 0, 270, 267, 988, 0, 39, 0, 0,
	0, 0, 0, 738, 0, 738, 0, 0, 39, 242,
	243, 254, 257, 258, 259, 260, 261, 262, 264, 266,
	1001, 0, 0, 735, 382, 354, 355, 0, 0, 244,
	246, 245, 268, 0, 0, 0, 0, 813, 269, 248,
	252, 251, 0, 988, 0, 233, 0, 247, 0, 249,
	253, 255, 256, 263, 265, 250, 270, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	118, 119, 242, 243, 254, 257, 258, 259, 260, 261,
	262, 264, 266, 268, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 777, 0,
	0, 269, 248, 252, 251, 0, 0, 0, 267, 0,
	247, 0, 249, 253, 255, 256, 263, 265, 250, 0,
	0, 0, 0, 0, 0, 254, 257, 258, 259, 260,
	261, 262, 264, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 252, 251, 0, 0, 668, 0,
	0, 504, 504, 673, 253, 255, 256, 263, 265, 250,
	0, 0, 0, 0, 0, 0, 0, 576, 577, 567,
	147, 94, 95, 563, 0, 117, 0, 0, 0, 0,
	371, 114, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 181, 182, 183, 184, 185, 173, 174,
	581, 591, 176, 177, 162, 163, 164, 570, 166, 167,
	168, 169, 170, 574, 575, 0, 193, 191, 192, 188,
	189, 0, 0, 565, 582, 187, 583, 584, 586, 585,
	587, 588, 0, 0, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 190, 590, 589, 0, 561, 578, 579,
	580, 140, 141, 142, 143, 572, 566, 148, 149, 150,
	568, 569, 571, 129, 130, 131, 132, 133, 53, 54,
	76, 63, 64, 65, 66, 67, 68, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 573, 79, 120, 118,
	119, 134, 204, 115, 73, 0, 0, 0, 0, 59,
	557, 51, 0, 0, 0, 56, 55, 57, 58, 71,
	101, 576, 577, 567, 147, 94, 95, 563, 0, 117,
	0, 0, 0, 0, 0, 114, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 181, 182, 183,
	184, 185, 173, 174, 581, 591, 176, 177, 162, 163,
	164, 570, 166, 167, 168, 169, 170, 574, 575, 0,
	193, 191, 192, 188, 189, 0, 0, 565, 582, 187,
	583, 584, 586, 585, 587, 588, 0, 0, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 190, 590, 589,
	0, 561, 578, 579, 580, 140, 141, 142, 143, 572,
	566, 148, 149, 150, 568, 569, 571, 129, 130, 131,
	132, 133, 53, 54, 76, 63, 64, 65, 66, 67,
	68, 69, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	573, 79, 120, 118, 119, 134, 204, 115, 73, 0,
	0, 0, 0, 59, 0, 51, 0, 0, 0, 56,
	55, 57, 58, 71, 101, 4, 0, 89, 90, 70,
	46, 94, 95, 37, 0, 117, 0, 29, 0, 0,
	0, 114, 28, 20, 19, 0, 21, 0, 32, 0,
	33, 0, 0, 22, 0, 0, 0, 23, 24, 36,
	38, 116, 15, 25, 35, 0, 0, 77, 13, 0,
	26, 0, 31, 87, 88, 11, 0, 0, 0, 0,
	0, 0, 0, 50, 113, 0, 112, 108, 109, 110,
	105, 106, 0, 0, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 12, 111, 107, 0, 0, 91, 92,
	93, 0, 0, 0, 0, 85, 52, 0, 0, 0,
	74, 75, 27, 0, 0, 0, 0, 0, 53, 54,
	76, 63, 64, 65, 66, 67, 68, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 86, 79, 120, 118,
	119, 0, 0, 115, 73, 16, 691, 34, 0, 59,
	0, 51, 0, 0, 0, 56, 55, 57, 58, 71,
	101, 4, 0, 89, 90, 70, 46, 94, 95, 37,
	0, 117, 0, 29, 0, 0, 0, 114, 28, 20,
	19, 0, 21, 0, 32, 0, 33, 0, 0, 22,
	0, 0, 0, 23, 24, 36, 38, 116, 15, 25,
	35, 0, 0, 77, 13, 0, 26, 0, 31, 87,
	88, 11, 0, 0, 0, 0, 0, 0, 0, 50,
	113, 0, 112, 108, 109, 110, 105, 106, 0, 0,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 12,
	111, 107, 0, 0, 91, 92, 93, 0, 0, 0,
	0, 85, 52, 0, 0, 0, 74, 75, 27, 0,
	0, 0, 0, 0, 53, 54, 76, 63, 64, 65,
	66, 67, 68, 69, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 86, 79, 120, 118, 119, 0, 0, 115,
	73, 16, 597, 34, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 101, 135, 136, 146,
	147, 0, 0, 536, 0, 117, 0, 0, 0, 0,
	0, 0, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 181, 182, 183, 184, 185, 173, 174,
	175, 202, 176, 177, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 0, 193, 191, 192, 188,
	189, 0, 0, 180, 186, 187, 194, 195, 197, 196,
	198, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 201, 200, 0, 0, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 148, 149, 150,
	178, 179, 128, 129, 130, 131, 132, 133, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 134, 204, 0, 0, 535, 4, 0, 89, 90,
	70, 46, 94, 95, 37, 0, 117, 0, 29, 0,
	101, 0, 114, 28, 20, 19, 0, 21, 0, 32,
	0, 33, 0, 0, 22, 0, 0, 0, 23, 24,
	36, 38, 116, 15, 25, 35, 0, 0, 77, 13,
	0, 26, 0, 31, 87, 88, 11, 0, 0, 0,
	0, 0, 0, 0, 50, 113, 0, 112, 108, 109,
	110, 105, 106, 0, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 12, 111, 107, 0, 0, 91,
	92, 93, 0, 0, 0, 0, 85, 52, 0, 0,
	0, 74, 75, 27, 0, 0, 0, 0, 0, 53,
	54, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 79, 120,
	118, 119, 0, 0, 115, 73, 16, 0, 34, 0,
	59, 0, 51, 0, 0, 0, 56, 55, 57, 58,
	71, 101, 408, 0, 89, 90, 70, 46, 94, 95,
	37, 0, 117, 0, 29, 0, 0, 0, 114, 28,
	20, 19, 0, 21, 0, 32, 0, 33, 0, 0,
	22, 0, 0, 0, 23, 24, 36, 38, 116, 0,
	25, 35, 0, 0, 77, 0, 0, 26, 0, 31,
	87, 88, 415, 0, 0, 0, 0, 0, 0, 0,
	50, 113, 0, 112, 108, 109, 110, 105, 106, 0,
	0, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 111, 107, 0, 0, 91, 92, 93, 0, 0,
	0, 0, 85, 52, 0, 0, 0, 74, 75, 27,
	0, 0, 0, 0, 0, 53, 54, 76, 63, 64,
	65, 66, 67, 68, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 79, 120, 118, 119, 0, 0,
	115, 73, 16, 1056, 34, 0, 59, 0, 51, 0,
	0, 0, 56, 55, 57, 58, 71, 101, 408, 0,
	89, 90, 70, 46, 94, 95, 37, 0, 117, 0,
	29, 0, 0, 0, 114, 28, 20, 19, 0, 21,
	0, 32, 0, 33, 0, 0, 22, 0, 0, 0,
	23, 24, 36, 38, 116, 0, 25, 35, 0, 0,
	77, 0, 0, 26, 0, 31, 87, 88, 415, 0,
	0, 0, 0, 0, 0, 0, 50, 113, 0, 112,
	108, 109, 110, 105, 106, 0, 0, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 111, 107, 0,
	0, 91, 92, 93, 0, 0, 0, 0, 85, 52,
	0, 0, 0, 74, 75, 27, 0, 0, 0, 0,
	0, 53, 54, 76, 63, 64, 65, 66, 67, 68,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	79, 120, 118, 119, 0, 0, 115, 73, 16, 1049,
	34, 0, 59, 0, 51, 0, 0, 0, 56, 55,
	57, 58, 71, 101, 408, 0, 89, 90, 70, 46,
	94, 95, 37, 0, 117, 0, 29, 0, 0, 0,
	114, 28, 20, 19, 0, 21, 0, 32, 0, 33,
	0, 0, 22, 0, 0, 0, 23, 24, 36, 38,
	116, 0, 25, 35, 0, 0, 77, 0, 0, 26,
	0, 31, 87, 88, 415, 0, 0, 0, 0, 0,
	0, 0, 50, 113, 0, 112, 108, 109, 110, 105,
	106, 0, 0, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 111, 107, 0, 0, 91, 92, 93,
	0, 0, 0, 0, 85, 52, 0, 0, 0, 74,
	75, 27, 0, 0, 0, 0, 0, 53, 54, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 79, 120, 118, 119,
	0, 0, 115, 73, 16, 1031, 34, 0, 59, 0,
	51, 0, 0, 0, 56, 55, 57, 58, 71, 101,
	408, 0, 89, 90, 70, 46, 94, 95, 37, 0,
	117, 0, 29, 0, 0, 0, 114, 28, 20, 19,
	0, 21, 0, 32, 0, 33, 0, 0, 22, 0,
	0, 0, 23, 24, 36, 38, 116, 0, 25, 35,
	0, 0, 77, 0, 0, 26, 0, 31, 87, 88,
	415, 0, 0, 0, 0, 0, 0, 0, 50, 113,
	0, 112, 108, 109, 110, 105, 106, 0, 0, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 111,
	107, 0, 0, 91, 92, 93, 0, 0, 0, 0,
	85, 52, 0, 0, 0, 74, 75, 27, 0, 0,
	0, 0, 0, 53, 54, 76, 63, 64, 65, 66,
	67, 68, 69, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 79, 120, 118, 119, 0, 0, 115, 73,
	16, 1029, 34, 0, 59, 0, 51, 0, 0, 0,
	56, 55, 57, 58, 71, 101, 408, 0, 89, 90,
	70, 46, 94, 95, 37, 0, 117, 0, 29, 0,
	0, 0, 114, 28, 20, 19, 0, 21, 1027, 32,
	0, 33, 0, 0, 22, 0, 0, 0, 23, 24,
	36, 38, 116, 0, 25, 35, 0, 0, 77, 0,
	0, 26, 0, 31, 87, 88, 415, 0, 0, 0,
	0, 0, 0, 0, 50, 113, 0, 112, 108, 109,
	110, 105, 106, 0, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 111, 107, 0, 0, 91,
	92, 93, 0, 0, 0, 0, 85, 52, 0, 0,
	0, 74, 75, 27, 0, 0, 0, 0, 0, 53,
	54, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 79, 120,
	118, 119, 0, 0, 115, 73, 16, 0, 34, 0,
	59, 0, 51, 0, 0, 0, 56, 55, 57, 58,
	71, 101, 408, 0, 89, 90, 70, 46, 94, 95,
	37, 0, 117, 0, 29, 0, 0, 0, 114, 28,
	20, 19, 0, 21, 0, 32, 0, 33, 0, 0,
	22, 0, 0, 0, 23, 24, 36, 38, 116, 0,
	25, 35, 0, 0, 77, 0, 0, 26, 0, 31,
	87, 88, 415, 0, 0, 0, 0, 0, 0, 0,
	50, 113, 0, 112, 108, 109, 110, 105, 106, 0,
	0, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 111, 107, 0, 0, 91, 92, 93, 0, 0,
	0, 0, 85, 52, 0, 0, 0, 74, 75, 27,
	0, 0, 0, 0, 0, 53, 54, 76, 63, 64,
	65, 66, 67, 68, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 79, 120, 118, 119, 0, 0,
	115, 73, 16, 1002, 34, 0, 59, 0, 51, 0,
	0, 0, 56, 55, 57, 58, 71, 101, 408, 0,
	89, 90, 70, 46, 94, 95, 37, 0, 117, 0,
	29, 0, 0, 0, 114, 28, 20, 19, 0, 21,
	0, 32, 0, 33, 0, 0, 22, 0, 0, 0,
	23, 24, 36, 38, 116, 0, 25, 35, 0, 0,
	77, 0, 0, 26, 0, 31, 87, 88, 415, 0,
	0, 0, 0, 0, 0, 0, 50, 113, 0, 112,
	108, 109, 110, 105, 106, 0, 0, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 111, 107, 0,
	0, 91, 92, 93, 0, 0, 0, 0, 85, 52,
	0, 0, 0, 74, 75, 27, 0, 0, 0, 0,
	0, 53, 54, 76, 63, 64, 65, 66, 67, 68,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	79, 120, 118, 119, 0, 0, 115, 73, 16, 957,
	34, 0, 59, 0, 51, 0, 0, 0, 56, 55,
	57, 58, 71, 101, 408, 0, 89, 90, 70, 46,
	94, 95, 37, 0, 117, 0, 29, 0, 0, 0,
	114, 28, 20, 19, 0, 21, 0, 32, 955, 33,
	0, 0, 22, 0, 0, 0, 23, 24, 36, 38,
	116, 0, 25, 35, 0, 0, 77, 0, 0, 26,
	0, 31, 87, 88, 415, 0, 0, 0, 0, 0,
	0, 0, 50, 113, 0, 112, 108, 109, 110, 105,
	106, 0, 0, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 111, 107, 0, 0, 91, 92, 93,
	0, 0, 0, 0, 85, 52, 0, 0, 0, 74,
	75, 27, 0, 0, 0, 0, 0, 53, 54, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 79, 120, 118, 119,
	0, 0, 115, 73, 16, 0, 34, 0, 59, 0,
	51, 0, 0, 0, 56, 55, 57, 58, 71, 101,
	408, 0, 89, 90, 70, 46, 94, 95, 37, 0,
	117, 0, 29, 0, 0, 0, 114, 28, 20, 19,
	0, 21, 0, 32, 0, 33, 857, 0, 22, 0,
	0, 0, 23, 24, 36, 38, 116, 0, 25, 35,
	0, 0, 77, 0, 0, 26, 0, 31, 87, 88,
	415, 0, 0, 0, 0, 0, 0, 0, 50, 113,
	0, 112, 108, 109, 110, 105, 106, 0, 0, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 111,
	107, 0, 0, 91, 92, 93, 0, 0, 0, 0,
	85, 52, 0, 0, 0, 74, 75, 27, 0, 0,
	0, 0, 0, 53, 54, 76, 63, 64, 65, 66,
	67, 68, 69, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 79, 120, 118, 119, 0, 0, 115, 73,
	16, 0, 34, 0, 59, 0, 51, 0, 0, 0,
	56, 55, 57, 58, 71, 101, 408, 0, 89, 90,
	70, 46, 94, 95, 37, 0, 117, 0, 29, 0,
	0, 0, 114, 28, 20, 19, 841, 21, 0, 32,
	0, 33, 0, 0, 22, 0, 0, 0, 23, 24,
	36, 38, 116, 0, 25, 35, 0, 0, 77, 0,
	0, 26, 0, 31, 87, 88, 415, 0, 0, 0,
	0, 0, 0, 0, 50, 113, 0, 112, 108, 109,
	110, 105, 106, 0, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 111, 107, 0, 0, 91,
	92, 93, 0, 0, 0, 0, 85, 52, 0, 0,
	0, 74, 75, 27, 0, 0, 0, 0, 0, 53,
	54, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 79, 120,
	118, 119, 0, 0, 115, 73, 16, 0, 34, 0,
	59, 0, 51, 0, 0, 0, 56, 55, 57, 58,
	71, 101, 408, 0, 89, 90, 70, 46, 94, 95,
	37, 0, 117, 0, 29, 0, 0, 0, 114, 28,
	20, 19, 0, 21, 0, 32, 0, 33, 0, 0,
	22, 0, 0, 0, 23, 24, 36, 38, 116, 0,
	25, 35, 0, 0, 77, 0, 0, 26, 0, 31,
	87, 88, 415, 0, 0, 0, 0, 0, 0, 0,
	50, 113, 0, 112, 108, 109, 110, 105, 106, 0,
	0, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 111, 107, 0, 0, 91, 92, 93, 0, 0,
	0, 0, 85, 52, 0, 0, 741, 74, 75, 27,
	0, 0, 0, 0, 0, 53, 54, 76, 63, 64,
	65, 66, 67, 68, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 79, 120, 118, 119, 0, 0,
	115, 73, 16, 0, 34, 0, 59, 0, 51, 0,
	0, 0, 56, 55, 57, 58, 71, 101, 408, 0,
	89, 90, 70, 46, 94, 95, 37, 0, 117, 0,
	29, 0, 0, 0, 114, 28, 20, 19, 0, 21,
	0, 32, 0, 33, 0, 0, 22, 0, 0, 0,
	23, 24, 36, 38, 116, 0, 25, 35, 0, 0,
	77, 0, 0, 26, 0, 31, 87, 88, 415, 0,
	0, 0, 0, 0, 0, 0, 50, 113, 0, 112,
	108, 109, 110, 105, 106, 0, 0, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 111, 107, 0,
	0, 91, 92, 93, 0, 0, 0, 0, 85, 52,
	0, 0, 0, 74, 75, 27, 0, 0, 0, 0,
	0, 53, 54, 76, 63, 64, 65, 66, 67, 68,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	79, 120, 118, 119, 0, 0, 115, 73, 16, 622,
	34, 0, 59, 0, 51, 0, 0, 0, 56, 55,
	57, 58, 71, 101, 408, 0, 89, 90, 70, 46,
	94, 95, 37, 0, 117, 0, 29, 0, 0, 0,
	114, 28, 20, 19, 0, 21, 0, 32, 0, 33,
	0, 0, 22, 0, 0, 0, 23, 24, 36, 38,
	116, 0, 25, 35, 0, 0, 77, 0, 0, 26,
	0, 31, 87, 88, 415, 0, 0, 0, 0, 0,
	0, 0, 50, 113, 0, 112, 108, 109, 110, 105,
	106, 0, 0, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 111, 107, 0, 0, 91, 92, 93,
	0, 0, 0, 0, 85, 52, 0, 0, 0, 74,
	75, 27, 0, 0, 0, 0, 0, 53, 54, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 79, 120, 118, 119,
	0, 0, 115, 73, 16, 407, 34, 0, 59, 0,
	51, 0, 0, 0, 56, 55, 57, 58, 71, 101,
	408, 0, 89, 90, 70, 46, 94, 95, 37, 0,
	117, 0, 29, 0, 0, 0, 114, 28, 20, 19,
	0, 21, 0, 32, 0, 33, 0, 0, 22, 0,
	0, 0, 23, 24, 36, 38, 116, 0, 25, 35,
	0, 0, 77, 0, 0, 26, 0, 31, 87, 88,
	415, 0, 0, 0, 0, 0, 0, 0, 50, 113,
	0, 112, 108, 109, 110, 105, 106, 0, 0, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 111,
	107, 0, 0, 91, 92, 93, 0, 0, 0, 0,
	85, 52, 0, 0, 0, 74, 75, 27, 0, 0,
	0, 0, 0, 53, 54, 76, 63, 64, 65, 66,
	67, 68, 69, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 79, 120, 118, 119, 0, 0, 115, 73,
	16, 0, 34, 0, 59, 0, 51, 0, 0, 0,
	56, 55, 57, 58, 71, 101, 89, 90, 70, 46,
	94, 95, 37, 0, 117, 0, 29, 0, 0, 0,
	114, 28, 20, 19, 0, 21, 0, 32, 0, 33,
	0, 0, 22, 0, 0, 0, 23, 24, 36, 222,
	116, 0, 25, 35, 0, 0, 77, 0, 0, 26,
	0, 31, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 50, 113, 0, 112, 108, 109, 110, 105,
	106, 0, 0, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 111, 107, 0, 0, 91, 92, 93,
	0, 0, 0, 0, 85, 52, 0, 0, 0, 74,
	75, 27, 0, 0, 0, 0, 0, 53, 54, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 79, 120, 118, 119,
	0, 0, 115, 73, 16, 0, 34, 852, 59, 0,
	51, 0, 0, 0, 56, 55, 57, 58, 71, 101,
	89, 90, 70, 46, 94, 95, 37, 0, 117, 0,
	29, 0, 0, 0, 114, 28, 20, 19, 0, 21,
	0, 32, 0, 33, 0, 0, 22, 0, 0, 0,
	23, 24, 36, 222, 116, 0, 25, 35, 0, 0,
	77, 0, 0, 26, 0, 31, 87, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 50, 113, 0, 112,
	108, 109, 110, 105, 106, 0, 0, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 111, 107, 0,
	0, 91, 92, 93, 0, 0, 0, 0, 85, 52,
	0, 0, 0, 74, 75, 27, 0, 0, 0, 0,
	0, 53, 54, 76, 63, 64, 65, 66, 67, 68,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	79, 120, 118, 119, 0, 0, 115, 73, 16, 0,
	34, 951, 59, 0, 51, 0, 0, 0, 56, 55,
	57, 58, 71, 101, 89, 90, 70, 46, 94, 95,
	37, 0, 117, 0, 29, 0, 0, 0, 114, 28,
	20, 19, 0, 21, 0, 32, 0, 33, 0, 0,
	22, 0, 0, 0, 23, 24, 36, 222, 116, 0,
	25, 35, 0, 0, 77, 0, 0, 26, 0, 31,
	87, 88, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 113, 0, 112, 108, 109, 110, 105, 106, 0,
	0, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 111, 107, 0, 0, 91, 92, 93, 0, 0,
	0, 0, 85, 52, 0, 0, 0, 74, 75, 27,
	0, 0, 0, 0, 0, 53, 54, 76, 63, 64,
	65, 66, 67, 68, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 79, 120, 118, 119, 0, 0,
	115, 73, 16, 0, 34, 743, 59, 0, 51, 0,
	0, 0, 56, 55, 57, 58, 71, 101, 89, 90,
	70, 46, 94, 95, 37, 0, 117, 0, 29, 0,
	0, 0, 114, 28, 20, 19, 0, 21, 0, 32,
	0, 33, 0, 0, 22, 0, 0, 0, 23, 24,
	36, 222, 116, 0, 25, 35, 0, 0, 77, 0,
	0, 26, 0, 31, 87, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 113, 0, 112, 108, 109,
	110, 105, 106, 0, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 111, 107, 0, 0, 91,
	92, 93, 0, 0, 0, 0, 85, 52, 0, 0,
	0, 74, 75, 27, 0, 0, 0, 0, 0, 53,
	54, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 79, 120,
	118, 119, 0, 0, 115, 73, 16, 0, 34, 720,
	59, 0, 51, 0, 0, 0, 56, 55, 57, 58,
	71, 101, 89, 90, 70, 46, 94, 95, 37, 0,
	117, 0, 29, 0, 0, 0, 114, 28, 20, 19,
	0, 21, 0, 32, 0, 33, 0, 0, 22, 0,
	0, 0, 23, 24, 36, 222, 116, 0, 25, 35,
	0, 0, 77, 0, 0, 26, 0, 31, 87, 88,
	0, 0, 0, 0, 0, 0, 0, 0, 50, 113,
	0, 112, 108, 109, 110, 105, 106, 0, 0, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 111,
	107, 0, 0, 91, 92, 93, 0, 0, 0, 0,
	85, 52, 0, 0, 0, 74, 75, 27, 0, 0,
	0, 0, 0, 53, 54, 76, 63, 64, 65, 66,
	67, 68, 69, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 79, 120, 118, 119, 0, 0, 115, 73,
	16, 0, 34, 703, 59, 0, 51, 0, 0, 0,
	56, 55, 57, 58, 71, 101, 89, 90, 70, 46,
	94, 95, 37, 0, 117, 0, 29, 0, 0, 0,
	114, 28, 20, 19, 0, 21, 0, 32, 0, 33,
	0, 0, 22, 0, 0, 0, 23, 24, 36, 222,
	116, 0, 25, 35, 0, 0, 77, 0, 0, 26,
	0, 31, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 50, 113, 0, 112, 108, 109, 110, 105,
	106, 0, 0, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 111, 107, 0, 0, 91, 92, 93,
	0, 0, 0, 0, 85, 52, 0, 0, 0, 74,
	75, 27, 0, 0, 0, 0, 0, 53, 54, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 79, 120, 118, 119,
	0, 0, 115, 73, 16, 0, 34, 0, 59, 0,
	51, 0, 0, 0, 56, 55, 57, 58, 71, 101,
	135, 136, 146, 147, 0, 0, 990, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 181, 182, 183, 184,
	185, 173, 174, 175, 202, 176, 177, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 0, 193,
	191, 192, 188, 189, 0, 0, 180, 186, 187, 194,
	195, 197, 196, 198, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 201, 200, 0,
	0, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	148, 149, 150, 178, 179, 128, 129, 130, 131, 132,
	133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 120, 118, 119, 134, 204, 0, 0, 0, 1019,
	135, 136, 146, 147, 0, 0, 990, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 181, 182, 183, 184,
	185, 173, 174, 175, 202, 176, 177, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 0, 193,
	191, 192, 188, 189, 0, 0, 180, 186, 187, 194,
	195, 197, 196, 198, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 201, 200, 0,
	0, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	148, 149, 150, 178, 179, 128, 129, 130, 131, 132,
	133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 120, 118, 119, 134, 204, 0, 0, 0, 981,
	135, 136, 146, 147, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 181, 182, 183, 184,
	185, 173, 174, 175, 202, 176, 177, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 0, 193,
	191, 192, 188, 189, 0, 0, 180, 186, 187, 194,
	195, 197, 196, 198, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 201, 200, 0,
	0, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	148, 149, 150, 178, 179, 128, 129, 130, 131, 132,
	133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 136, 146, 147, 0, 203,
	976, 0, 126, 0, 134, 204, 0, 0, 123, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	181, 182, 183, 184, 185, 173, 174, 175, 202, 176,
	177, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 0, 193, 191, 192, 188, 189, 0, 0,
	180, 186, 187, 194, 195, 197, 196, 198, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 201, 200, 0, 0, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 148, 149, 150, 178, 179, 128,
	129, 130, 131, 132, 133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 135, 136, 146, 147, 0,
	0, 1038, 0, 203, 0, 0, 0, 0, 134, 204,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 181, 182, 183, 184, 185, 173, 174, 175, 202,
	176, 177, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 0, 193, 191, 192, 188, 189, 0,
	0, 180, 186, 187, 194, 195, 197, 196, 198, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 201, 200, 0, 0, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 148, 149, 150, 178, 179,
	874, 875, 876, 873, 872, 871, 89, 90, 70, 0,
	94, 95, 228, 0, 117, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	116, 0, 0, 0, 203, 0, 77, 0, 0, 877,
	204, 0, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 113, 0, 112, 108, 109, 110, 105,
	106, 0, 0, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 111, 107, 0, 323, 91, 92, 93,
	0, 0, 0, 0, 85, 52, 0, 0, 0, 74,
	75, 227, 0, 0, 0, 0, 0, 53, 54, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 79, 120, 118, 119,
	0, 0, 115, 73, 0, 0, 0, 0, 59, 0,
	51, 0, 0, 322, 56, 55, 57, 58, 71, 101,
	89, 90, 70, 0, 94, 95, 228, 0, 117, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 819,
	0, 0, 0, 222, 116, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 87, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 50, 113, 0, 112,
	108, 109, 110, 105, 106, 0, 0, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 111, 107, 0,
	0, 91, 92, 93, 0, 0, 0, 0, 85, 52,
	0, 0, 0, 74, 75, 227, 0, 0, 0, 0,
	0, 53, 54, 76, 63, 64, 65, 66, 67, 68,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	79, 120, 118, 119, 0, 0, 115, 73, 0, 0,
	0, 0, 59, 0, 51, 0, 0, 0, 56, 55,
	57, 58, 71, 101, 89, 90, 70, 0, 94, 95,
	228, 0, 117, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 116, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 0,
	87, 88, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 113, 0, 112, 108, 109, 110, 105, 106, 0,
	0, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 111, 107, 0, 0, 91, 92, 93, 0, 0,
	0, 0, 85, 52, 0, 0, 0, 74, 75, 227,
	0, 0, 0, 0, 0, 53, 54, 76, 63, 64,
	65, 66, 67, 68, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 79, 120, 118, 119, 0, 0,
	115, 73, 0, 0, 0, 0, 59, 0, 51, 0,
	0, 646, 56, 55, 57, 58, 71, 101, 89, 90,
	70, 0, 94, 95, 228, 525, 117, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 116, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 0, 0, 87, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 113, 0, 112, 108, 109,
	110, 105, 106, 0, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 111, 107, 0, 0, 91,
	92, 93, 0, 0, 0, 0, 85, 52, 0, 0,
	0, 74, 75, 227, 0, 0, 0, 0, 0, 53,
	54, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 79, 120,
	118, 119, 0, 0, 115, 73, 0, 0, 0, 0,
	59, 0, 51, 0, 0, 0, 56, 55, 57, 58,
	71, 101, 89, 90, 70, 0, 94, 95, 228, 0,
	117, 0, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 116, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 0, 0, 87, 88,
	0, 0, 0, 0, 0, 0, 0, 0, 50, 113,
	0, 112, 108, 109, 110, 105, 106, 0, 0, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 111,
	107, 0, 0, 91, 92, 93, 0, 0, 0, 0,
	85, 52, 0, 0, 0, 74, 75, 227, 0, 0,
	0, 0, 0, 53, 54, 76, 63, 64, 65, 66,
	67, 68, 69, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 79, 120, 118, 119, 0, 0, 115, 73,
	0, 0, 0, 0, 59, 0, 51, 0, 0, 484,
	56, 55, 57, 58, 71, 101, 89, 90, 70, 0,
	94, 95, 228, 0, 117, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	116, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 50, 113, 0, 112, 108, 109, 110, 105,
	106, 0, 0, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 111, 107, 0, 0, 91, 92, 93,
	0, 0, 0, 0, 85, 52, 0, 0, 0, 74,
	75, 227, 0, 0, 0, 0, 0, 53, 54, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 79, 120, 118, 119,
	0, 0, 115, 73, 0, 0, 0, 461, 59, 0,
	51, 0, 0, 0, 56, 55, 57, 58, 71, 101,
	89, 90, 70, 0, 94, 95, 228, 0, 117, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 116, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 87, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 50, 113, 0, 112,
	108, 109, 110, 105, 106, 0, 0, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 111, 107, 0,
	0, 91, 92, 93, 0, 0, 0, 0, 85, 52,
	0, 0, 0, 74, 75, 227, 0, 0, 0, 0,
	0, 53, 54, 76, 63, 64, 65, 66, 67, 68,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 246, 245, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	79, 120, 118, 119, 0, 0, 115, 73, 270, 267,
	0, 0, 59, 0, 51, 0, 0, 0, 56, 55,
	57, 58, 71, 101, 242, 243, 254, 257, 258, 259,
	260, 261, 262, 264, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 755, 244, 246, 245,
	268, 0, 0, 269, 248, 252, 251, 0, 0, 0,
	0, 0, 247, 0, 249, 253, 255, 256, 263, 265,
	250, 0, 0, 0, 270, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 243, 254, 257, 258, 259, 260, 261, 262, 264,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 753, 244, 246, 245, 268, 0, 0, 269,
	248, 252, 251, 0, 0, 0, 0, 0, 247, 0,
	249, 253, 255, 256, 263, 265, 250, 0, 0, 0,
	270, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 243, 254, 257,
	258, 259, 260, 261, 262, 264, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 744, 244,
	246, 245, 268, 0, 0, 269, 248, 252, 251, 0,
	0, 0, 0, 0, 247, 0, 249, 253, 255, 256,
	263, 265, 250, 0, 0, 0, 270, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 243, 254, 257, 258, 259, 260, 261,
	262, 264, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 246, 245, 268, 0, 0, 740, 0,
	0, 269, 248, 252, 251, 0, 0, 0, 0, 0,
	247, 0, 249, 253, 255, 256, 263, 265, 250, 270,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 243, 254, 257, 258,
	259, 260, 261, 262, 264, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 246, 245, 268, 0,
	0, 739, 0, 0, 269, 248, 252, 251, 0, 0,
	0, 0, 0, 247, 0, 249, 253, 255, 256, 263,
	265, 250, 270, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 243,
	254, 257, 258, 259, 260, 261, 262, 264, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	681, 244, 246, 245, 268, 0, 0, 269, 248, 252,
	251, 0, 0, 0, 0, 0, 247, 0, 249, 253,
	255, 256, 263, 265, 250, 0, 0, 0, 270, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 243, 254, 257, 258, 259,
	260, 261, 262, 264, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 246, 245, 268, 0, 0,
	680, 0, 0, 269, 248, 252, 251, 0, 0, 0,
	0, 0, 247, 0, 249, 253, 255, 256, 263, 265,
	250, 270, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 243, 254,
	257, 258, 259, 260, 261, 262, 264, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 246, 245,
	268, 0, 0, 679, 0, 0, 269, 248, 252, 251,
	0, 0, 0, 0, 0, 247, 0, 249, 253, 255,
	256, 263, 265, 250, 270, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 243, 254, 257, 258, 259, 260, 261, 262, 264,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 246, 245, 268, 0, 0, 676, 0, 0, 269,
	248, 252, 251, 0, 0, 0, 0, 0, 247, 0,
	249, 253, 255, 256, 263, 265, 250, 270, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 243, 254, 257, 258, 259, 260,
	261, 262, 264, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 246, 245, 268, 0, 0, 674,
	0, 0, 269, 248, 252, 251, 0, 0, 0, 0,
	0, 247, 0, 249, 253, 255, 256, 263, 265, 250,
	270, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 243, 254, 257,
	258, 259, 260, 261, 262, 264, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 659, 244,
	246, 245, 268, 0, 0, 269, 248, 252, 251, 0,
	0, 0, 0, 0, 247, 0, 249, 253, 255, 256,
	263, 265, 250, 0, 0, 0, 270, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 243, 254, 257, 258, 259, 260, 261,
	262, 264, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 246, 245, 268, 0, 0, 649, 0,
	0, 269, 248, 252, 251, 0, 0, 0, 0, 0,
	247, 0, 249, 253, 255, 256, 263, 265, 250, 270,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 243, 254, 257, 258,
	259, 260, 261, 262, 264, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 638, 244, 246,
	245, 268, 620, 0, 269, 248, 252, 251, 0, 0,
	0, 0, 0, 247, 0, 249, 253, 255, 256, 263,
	265, 250, 0, 0, 0, 270, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 243, 254, 257, 258, 259, 260, 261, 262,
	264, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 246, 245, 268, 0, 0, 636, 0, 0,
	269, 248, 252, 251, 0, 0, 0, 0, 0, 247,
	0, 249, 253, 255, 256, 263, 265, 250, 270, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 243, 254, 257, 258, 259,
	260, 261, 262, 264, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 246, 245, 268, 0, 0,
	0, 0, 0, 269, 248, 252, 251, 0, 0, 0,
	0, 0, 247, 0, 249, 253, 255, 256, 263, 265,
	250, 270, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 243, 254,
	257, 258, 259, 260, 261, 262, 264, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 246, 245,
	268, 616, 0, 0, 0, 0, 269, 248, 252, 251,
	0, 0, 0, 0, 0, 247, 0, 249, 253, 255,
	256, 263, 265, 250, 270, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 243, 254, 257, 258, 259, 260, 261, 262, 264,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 246, 245, 268, 0, 0, 611, 0, 0, 269,
	248, 252, 251, 0, 0, 0, 0, 0, 247, 0,
	249, 253, 255, 256, 263, 265, 250, 270, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 243, 254, 257, 258, 259, 260,
	261, 262, 264, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 246, 245, 268, 0, 0, 607,
	0, 0, 269, 248, 252, 251, 0, 0, 0, 0,
	0, 247, 0, 249, 253, 255, 256, 263, 265, 250,
	270, 267, 0, 0, 0, 0, 0, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 243, 254, 257,
	258, 259, 260, 261, 262, 264, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 246, 245, 268,
	0, 0, 515, 0, 0, 269, 248, 252, 251, 0,
	0, 0, 0, 0, 247, 0, 249, 253, 255, 256,
	263, 265, 250, 270, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	243, 254, 257, 258, 259, 260, 261, 262, 264, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	246, 245, 268, 0, 0, 0, 0, 0, 269, 248,
	252, 251, 0, 0, 0, 0, 0, 247, 0, 249,
	253, 255, 256, 263, 265, 250, 270, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 243, 254, 257, 258, 259, 260, 261,
	262, 264, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 244, 246, 245, 268,
	0, 269, 248, 252, 251, 0, 0, 0, 0, 0,
	247, 0, 249, 253, 255, 256, 263, 265, 250, 0,
	0, 0, 0, 270, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	243, 254, 257, 258, 259, 260, 261, 262, 264, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 245, 268, 0, 0, 0, 0, 0, 269, 248,
	252, 251, 0, 0, 0, 0, 0, 247, 0, 249,
	253, 255, 256, 263, 265, 250, 270, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 243, 254, 257, 258, 259, 260, 261,
	262, 264, 266, 245, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 248, 252, 251, 0, 0, 0, 270, 267,
	247, 0, 249, 253, 255, 256, 263, 265, 250, 527,
	0, 0, 0, 0, 242, 243, 254, 257, 258, 259,
	260, 261, 262, 264, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 269, 248, 252, 251, 0, 0, 0,
	0, 0, 247, 0, 249, 253, 255, 256, 263, 265,
	250, 0, 0, 0, 0, 270, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 243, 254, 257, 258, 259, 260, 261, 262,
	264, 266, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 248, 252, 251, 0, 0, 270, 267, 0, 247,
	0, 249, 253, 255, 256, 263, 265, 250, 0, 0,
	0, 0, 242, 243, 254, 257, 258, 259, 260, 261,
	262, 264, 266, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 248, 252, 251, 0, 0, 270, 267, 0,
	247, 0, 249, 253, 255, 256, 263, 265, 250, 0,
	0, 0, 0, 242, 243, 254, 257, 258, 259, 260,
	261, 262, 264, 266, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 252, 251, 0, 0, 0, 267,
	0, 247, 0, 249, 253, 255, 256, 263, 265, 250,
	0, 0, 0, 0, 0, 243, 254, 257, 258, 259,
	260, 261, 262, 264, 266, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 252, 251, 0, 0, 0,
	267, 0, 247, 0, 249, 253, 255, 256, 263, 265,
	250, 0, 0, 0, 0, 0, 0, 254, 257, 258,
	259, 260, 261, 262, 264, 266, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 248, 252, 251, 0, 0,
	0, 267, 0, 247, 0, 249, 253, 255, 256, 263,
	265, 250, 0, 0, 0, 0, 0, 267, 254, 257,
	258, 259, 260, 261, 262, 264, 266, 0, 0, 0,
	0, 0, 0, 0, 254, 257, 258, 259, 260, 261,
	262, 264, 266, 228, 0, 117, 248, 252, 251, 0,
	0, 114, 0, 0, 0, 0, 249, 253, 255, 256,
	263, 265, 250, 252, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 255, 256, 263, 265, 250, 0,
	228, 0, 117, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 716, 113, 0, 112, 108, 109, 110,
	105, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 331, 112, 108, 109, 110, 105, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 120, 118,
	119, 0, 0, 115, 0, 0, 0, 0, 0, 328,
	0, 717, 0, 0, 715, 0, 0, 0, 0, 0,
	101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 118, 119, 0, 0,
	115, 0, 0, 0, 0, 0, 328, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 101,
}
var yyPact = [...]int{

	-1000, -1000, 2124, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 316, 5896, 724, -1000, 832, -1000, -1000, -1000, 315,
	5432, 314, 312, 7246, 7246, 7246, 171, 781, 7246, -1000,
	8561, 310, 304, 295, -1000, 485, 881, 347, 60, 694,
	744, 609, 659, 108, -1000, -1000, 291, -1000, -1000, 307,
	264, 6262, 7246, 9250, 9250, 7246, 7246, 7246, 7246, 7246,
	-1000, -1000, -1000, 7246, 7246, 7246, 7246, 7246, 7246, 7246,
	262, 7246, -1000, 1050, 7246, 7246, 7246, 7246, -1000, 597,
	-1000, -1000, 631, -1000, -1000, 527, 261, 257, 256, 7246,
	7246, 254, 7246, 7246, -1000, -1000, 1088, -1000, -1000, -1000,
	-1000, 230, 267, 267, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 249, -1000, 981, 60, -1000, -1000, -1000,
	-1000, 203, 368, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 123, 628, 656, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 121, -1000, -32, 4282, 7246,
	779, 623, 60, 7246, 7246, 418, 8628, 623, -1000, 414,
	412, 115, -1000, -1000, 37, -1000, -1000, -33, 34, -1000,
	8628, -1000, 7246, 7246, 7246, 7246, 7246, 7246, 7246, 7246,
	7246, 7246, 7246, 7246, 7246, 7246, 7246, 7246, 7246, 7246,
	7246, 7246, 7246, 7246, 7246, 7246, 7246, 7246, 189, 7082,
	7246, 9250, 7246, 832, -1000, 411, -1000, 876, -1000, -1000,
	60, -1000, 715, 863, 858, 857, 591, -1000, -1000, -1000,
	289, 5432, 282, 410, 340, 6918, 7246, 7246, 7246, 7246,
	7246, 7246, 7246, 7246, 7246, 7246, 7246, 7246, 7246, -1000,
	-1000, 7246, 7246, 7246, 174, 174, 6262, 131, 51, -1000,
	-1000, 8498, 9250, 7246, 276, -1000, -1000, -1000, 7246, -1000,
	-1000, -1000, 6262, -1000, 534, 534, 590, 534, 8435, 534,
	534, 534, 534, 534, 534, 534, -1000, 7246, 534, 462,
	750, 900, -1000, 292, 6754, 9250, 8861, 8810, 8861, 8628,
	47, -1000, 267, -1000, 1973, 267, -1000, 629, 288, 7246,
	703, -1000, 505, 7246, 7246, 7246, 8628, 8628, 7246, 8628,
	8628, 906, -1000, 992, 7246, -1000, -1000, 1313, -1000, 6262,
	770, 750, 273, 409, -1000, -1000, 1809, -1000, 628, 26,
	653, 484, 847, -1000, 832, 7246, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 272, 8372, 271, -1000, 400,
	19, 8628, 8309, -1000, -1000, -1000, -1000, 171, -1000, 804,
	7246, -1000, 7246, 8963, 9014, 8691, 8861, 8743, 9065, 9081,
	1132, 383, 44, 44, 590, 534, 590, 590, 334, 334,
	281, 281, 281, 281, 468, 468, 468, 468, 281, -1000,
	8246, 7246, 8912, 17, -1000, -1000, 8183, -8, 4116, -1000,
	270, 268, 830, 826, 473, 663, 331, -1000, 7246, -1000,
	7246, -1000, -1000, 8861, 7246, 8861, 8861, 8861, 8861, 8861,
	8861, 8861, 8861, 8861, 8861, 8861, 8861, 8861, 8120, 126,
	8054, 267, -1000, 7246, -1000, 267, 202, -37, 6262, 6590,
	-1000, 8628, 6262, 7991, 122, -1000, 200, -1000, -1000, -1000,
	-1000, 318, 823, 821, 7925, 129, 429, 7246, 597, 113,
	-1000, 267, -1000, -1000, -1000, 7246, -1000, -1000, -1000, -1000,
	171, 7246, 7246, 174, 174, 171, 7862, 267, 7799, 14,
	-1000, 8628, 7736, 7673, -1000, -1000, 7607, -1000, 13, -1000,
	8628, 7246, 328, -1000, -1000, 264, 7246, 262, 7246, 7246,
	7246, 623, 527, 261, 257, 256, 7246, 7246, 254, 7246,
	7246, 60, 249, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 60, 197, -1000, 505, -1000, 1643, -1000, -1000, 763,
	-1000, 470, 660, -1000, -1000, 8628, 196, 5268, 7246, 7246,
	7246, 246, -1000, -1000, 8628, -1000, 7246, 8912, 195, 9250,
	9213, 5104, -1000, 505, 505, 238, 632, -1000, 467, 704,
	655, 1064, 7544, 7481, 3950, 9081, 4940, -1000, -1000, -1000,
	7415, -1000, -39, 7246, -1000, 8628, 9250, 221, 194, -1000,
	-1000, -1000, 82, -1000, -1000, 799, -1000, -1000, -1000, -1000,
	-1000, 7246, -1000, 8861, -1000, -1000, -1000, 7349, -1000, 80,
	7283, -1000, -1000, -1000, -1000, 632, 460, 192, 7246, -1000,
	-1000, -1000, 190, 1477, 8628, 7246, -1000, 187, 11, -1000,
	-1000, -1000, 637, 423, -4, -1000, -1000, 637, 756, -1000,
	399, -1000, -1000, -1000, 1081, 398, 8628, -1000, 395, 394,
	8912, 393, -1000, 186, 692, 9250, 217, 6262, -1000, -1000,
	-1000, 752, 182, 180, 505, 655, 704, 513, -1000, -14,
	-1000, 454, 704, -1000, -1000, -1000, -1000, -1000, -1000, 5432,
	321, 390, -1000, -1000, -1000, 7246, 8861, -1000, 6262, -39,
	-1000, -1000, 1018, -1000, -1000, -1000, 655, 6426, -1000, -1000,
	-1000, -1000, 8628, 308, -1000, 505, 935, 422, -5, -1000,
	386, -1000, 660, -1000, 815, -1000, 3784, 384, 7246, 479,
	-1000, 917, -1000, -1000, 4612, 9213, -1000, 6262, 64, 3618,
	-1000, -1000, 452, 213, 308, 727, 175, 446, -1000, -1000,
	-1000, 552, 704, 506, 704, -1000, -14, -1000, -1000, -1000,
	4448, 8861, 168, 421, 445, 420, -6, -1000, 691, -7,
	-9, 8628, -1000, 816, -1000, -1000, 61, -1000, -1000, -1000,
	-1000, -1000, -16, 760, -17, 381, -1000, 637, -1000, -1000,
	-1000, 380, -1000, 164, -1000, 7246, 253, 461, 378, 848,
	-1000, -1000, -1000, 159, -1000, 138, -1000, 375, -1000, 704,
	441, 308, 212, 308, -1000, 716, 766, 813, 798, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -20, -1000,
	-1000, 480, 4448, -39, -1000, -1000, -1000, -1000, 6426, 7246,
	689, -1000, -1000, 7246, 654, -1000, -23, 1064, -24, 596,
	-1000, 760, -1000, 760, -1000, -1000, -1000, 4776, 35, -1000,
	-1000, -1000, -1000, -1000, 373, 3452, 4612, -1000, -1000, 3286,
	110, -1000, -1000, 438, 228, 437, 455, 804, 6030, 60,
	-49, -1000, -1000, -1000, 5746, -1000, 443, -1000, 8628, 7246,
	8628, 7246, 1064, -1000, 1064, 804, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 4448, -1000, 372, -1000, -1000, 137, 704,
	-1000, 3120, -1000, 136, -13, -1000, -1000, 804, -1000, -1000,
	-11, -1000, -50, -12, -1000, -51, -1000, -1000, 6030, 370,
	7246, -1000, 5596, -1000, 365, 349, 723, 751, 622, -1000,
	-1000, -1000, 8628, 8628, -1000, -1000, -63, 2954, 4448, -1000,
	434, -1000, -1000, 2788, -1000, -1000, 228, -1000, 2622, -1000,
	804, -1000, 7246, -1000, 6030, 7246, 205, -1000, 8628, -1000,
	-1000, -1000, -1000, 704, 6161, 6030, 7246, 319, -1000, -1000,
	-1000, -1000, -1000, 8628, -1000, 8628, 505, -14, -1000, -1000,
	6030, -1000, 8628, -1000, 2456, -1000, -1000, 135, -1000, -1000,
	308, 232, -1000, -1000, -1000, 2290, -1000,
}
var yyPgo = [...]int{

	0, 1119, 1118, 61, 7, 31, 16, 99, 11, 1117,
	35, 17, 874, 1116, 200, 144, 101, 81, 80, 51,
	82, 1115, 36, 1114, 0, 87, 3, 1113, 1112, 1111,
	38, 86, 23, 37, 1110, 1103, 73, 1099, 62, 1097,
	9, 1094, 1093, 1092, 1089, 12, 49, 1088, 1087, 50,
	1086, 114, 757, 1085, 1084, 47, 1079, 1078, 8, 1077,
	1076, 71, 55, 48, 43, 1075, 1071, 1065, 1064, 1063,
	1055, 139, 1051, 1049, 1045, 4, 1044, 117, 1043, 1041,
	1036, 1035, 1033, 1025, 1021, 1017, 1014, 28, 106, 27,
	1011, 1010, 1007, 1006, 111, 5, 115, 1002, 116, 1001,
	994, 41, 32, 990, 15, 989, 2, 988, 19, 986,
	21, 105, 89, 40, 985, 980, 973, 13, 972, 971,
	118, 46, 969, 33, 34, 968, 966, 965, 959, 956,
	20, 955, 952, 944, 943, 941, 63, 938, 88, 42,
	935, 934, 6, 22, 693, 931, 30, 928, 79, 1,
	18, 922, 919, 916, 914, 910, 908, 10, 92, 895,
	14,
}
var yyR1 = [...]int{

	0, 159, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
	6, 6, 7, 7, 10, 10, 9, 9, 8, 148,
	148, 97, 97, 97, 96, 96, 98, 98, 14, 14,
	14, 14, 136, 136, 137, 137, 138, 158, 158, 157,
	157, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 12, 12, 86, 86,
	93, 92, 92, 91, 90, 90, 94, 94, 87, 87,
	89, 89, 88, 88, 77, 77, 149, 149, 21, 21,
	21, 21, 21, 21, 21, 21, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 133,
	133, 134, 74, 74, 29, 29, 122, 122, 30, 16,
	16, 1, 1, 2, 2, 156, 156, 155, 155, 111,
	111, 17, 18, 19, 139, 141, 141, 140, 140, 123,
	123, 125, 125, 124, 124, 143, 143, 143, 143, 118,
	118, 117, 117, 28, 28, 115, 115, 115, 115, 146,
	146, 146, 11, 11, 119, 119, 85, 85, 76, 76,
	99, 99, 80, 80, 26, 26, 27, 27, 153, 153,
	135, 135, 135, 135, 32, 32, 103, 103, 103, 104,
	104, 108, 108, 108, 105, 105, 109, 109, 107, 107,
	107, 110, 110, 106, 106, 112, 112, 78, 78, 33,
	33, 33, 35, 35, 36, 37, 37, 38, 38, 150,
	150, 39, 39, 39, 39, 39, 75, 75, 114, 114,
	114, 147, 147, 40, 40, 41, 42, 42, 42, 42,
	44, 44, 43, 116, 116, 152, 152, 151, 151, 154,
	154, 142, 142, 142, 142, 142, 142, 142, 79, 79,
	45, 45, 84, 84, 95, 20, 73, 73, 46, 22,
	22, 23, 23, 48, 47, 47, 127, 128, 128, 129,
	131, 131, 132, 132, 130, 130, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 121, 121, 120, 120, 160,
	3, 3, 126, 126, 81, 82, 82, 58, 58, 59,
	59, 59, 50, 50, 49, 49, 51, 51, 51, 56,
	56, 145, 145, 145, 113, 113, 64, 64, 64, 64,
	57, 57, 57, 57, 57, 57, 57, 57, 63, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 24, 24,
	25, 25, 65, 65, 65, 65, 66, 66, 67, 67,
	67, 68, 68, 68, 68, 68, 68, 31, 31, 31,
	31, 52, 52, 52, 69, 70, 70, 70, 70, 70,
	70, 70, 60, 60, 60, 61, 61, 61, 55, 101,
	101, 54, 54, 100, 100, 100, 100, 100, 100, 100,
	144, 144, 144, 144, 71, 71, 71, 71, 71, 71,
	71, 71, 72, 72, 72, 72, 53, 53, 53, 53,
	53, 53, 53, 83, 83, 102,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 1, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 3, 4, 1, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	5, 4, 3, 4, 1, 3, 1, 1, 8, 7,
	2, 3, 1, 2, 3, 1, 3, 1, 1, 2,
	1, 3, 1, 3, 3, 1, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 1, 1, 5,
	7, 9, 5, 3, 3, 3, 3, 3, 3, 1,
	2, 6, 7, 9, 5, 1, 6, 3, 2, 0,
	2, 8, 1, 3, 0, 4, 1, 3, 1, 10,
	11, 0, 1, 0, 1, 0, 1, 1, 2, 1,
	1, 9, 6, 7, 8, 0, 2, 0, 2, 0,
	2, 0, 2, 0, 2, 1, 2, 4, 3, 1,
	4, 1, 4, 1, 4, 3, 4, 4, 5, 0,
	5, 4, 1, 1, 1, 4, 5, 6, 1, 3,
	6, 7, 3, 6, 2, 0, 1, 3, 0, 2,
	1, 1, 1, 1, 6, 8, 1, 2, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 1, 2,
	1, 0, 1, 0, 2, 2, 4, 1, 3, 1,
	2, 3, 3, 1, 1, 3, 1, 1, 3, 2,
	0, 5, 5, 10, 3, 5, 1, 3, 1, 2,
	3, 1, 2, 2, 2, 3, 3, 3, 4, 3,
	1, 1, 3, 1, 3, 1, 1, 0, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 4, 3, 1, 4, 4, 3, 1, 1, 0,
	1, 3, 1, 8, 3, 2, 2, 3, 1, 7,
	0, 2, 1, 3, 3, 4, 6, 5, 3, 4,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 5, 4, 3, 1, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 3, 2, 1, 2,
	4, 2, 2, 1, 2, 1, 2, 11, 9, 0,
	0, 1, 0, 4, 2, 3, 1, 1, 2, 2,
	4, 2, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 1, 1, 0, 1, 4, 3, 1, 3,
	1, 1, 3, 2, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 3, 1, 1, 1, 1, 1, 3,
	1, 1, 4, 4, 4, 4, 1, 1, 1, 3,
	3, 1, 4, 2, 3, 1, 4, 4, 3, 3,
	3, 3, 1, 3, 1, 1, 3, 1, 1, 0,
	1, 3, 1, 3, 1, 4, 2, 2, 6, 4,
	2, 2, 1, 2, 1, 4, 3, 3, 3, 3,
	6, 3, 1, 1, 2, 1, 5, 4, 2, 2,
	4, 2, 2, 1, 3, 1,
}
var yyChk = [...]int{

	-1000, -159, -148, -13, 2, -15, -16, -17, -18, -19,
	-139, 52, 80, 45, -86, 39, 152, -76, -80, 21,
	20, 23, 30, 34, 35, 40, 47, 99, 19, 14,
	-24, 49, 25, 27, 154, 41, 36, 10, 37, -158,
	-157, -85, -99, -31, -34, -138, 7, -68, -69, -66,
	60, 158, 93, 105, 106, 163, 162, 164, 165, 156,
	-47, -129, -53, 108, 109, 110, 111, 112, 113, 114,
	6, 166, -57, 151, 97, 98, 107, 44, -121, 144,
	-52, -59, -50, -65, -62, 92, 143, 50, 51, 4,
	5, 85, 86, 87, 8, 9, 75, -64, -63, -120,
	-8, 167, -14, -67, -49, 67, 68, 82, 64, 65,
	66, 81, 63, 61, 18, 150, 38, 12, 146, 147,
	145, 156, -97, 152, 10, -5, 146, -4, 99, 100,
	101, 102, 103, 104, 148, 4, 5, 85, 86, 87,
	88, 89, 90, 91, 92, 93, 6, 7, 94, 95,
	96, 19, 20, 21, 22, 23, 24, 25, 26, 27,
	28, 29, 41, 42, 43, 44, 45, 46, 47, 48,
	49, 50, 51, 35, 36, 37, 39, 40, 97, 98,
	60, 30, 31, 32, 33, 34, 61, 62, 56, 57,
	80, 54, 55, 53, 63, 64, 66, 65, 67, 68,
	82, 81, 38, 143, 149, -94, -12, -98, -88, 37,
	39, -96, 147, 10, 146, -77, -20, 10, -149, 156,
	-15, -158, 37, 156, 156, -25, -24, 99, 10, -25,
	-25, -35, -36, -52, -37, -121, -38, -8, -73, -46,
	-24, 154, 131, 132, 88, 90, 89, 169, 161, 171,
	177, 163, 162, 172, 133, 173, 174, 134, 135, 136,
	137, 138, 139, 175, 140, 176, 141, 116, 91, 160,
	115, 156, 156, 156, 152, 10, 155, -3, 161, -138,
	37, -120, -156, 54, 55, 149, -155, -111, 100, 101,
	94, 95, 94, 96, 95, 170, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 105,
	106, 156, 158, 152, 58, 142, 156, -55, -54, -101,
	-100, -24, 161, 84, 60, -24, -31, -62, 156, -64,
	-63, 99, 158, -31, -24, -24, -24, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -56, 156, -24, -145,
	17, -144, -71, -8, 77, 78, -24, -24, -24, -24,
	-137, -136, -49, -14, 79, -51, -48, -49, -70, 156,
	-157, -52, -158, 156, 156, 156, -24, -24, 156, -24,
	-24, 17, 76, -144, 152, -52, -112, 156, -112, 156,
	-144, 17, -3, 157, 154, 152, -148, 154, 168, -94,
	-98, 83, 29, 154, 168, 170, -21, 153, 2, -15,
	-16, -17, -18, -19, -139, 52, -24, 21, -3, -22,
	-23, -24, -24, 154, 154, 154, 154, 168, 154, 168,
	170, 154, 168, -24, -24, -24, -24, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -51,
	-24, 155, -24, -122, -30, -31, -24, -77, -149, 154,
	10, -160, -3, 53, 10, 10, 10, -111, 156, -15,
	156, 154, 155, -24, 161, -24, -24, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -25,
	-24, -61, 10, 152, -52, -61, -55, 159, 168, 59,
	-31, -24, 156, -24, -55, 157, -25, 151, -71, -71,
	17, 158, 58, 142, -24, 11, -31, 59, 168, -10,
	-112, -60, -7, -52, -6, 152, 10, -5, -113, -112,
	79, 158, 152, 58, 142, 79, -24, 53, -24, -83,
	-102, -24, -24, -24, 76, 76, -24, 157, -78, -33,
	-24, 84, -7, 10, -5, 60, 93, 6, 97, 98,
	44, 99, 92, 143, 50, 51, 4, 5, 85, 86,
	87, 37, 61, 63, 64, 66, 65, 67, 68, 82,
	81, 38, -55, 150, 156, 154, -148, 153, -88, -98,
	154, 83, 152, 10, -20, -24, 156, 157, 156, 154,
	168, 157, -36, -38, -24, -46, 155, -24, -10, 168,
	29, 157, 153, 156, 156, 10, 10, 152, -125, 56,
	-141, 155, -24, -24, -149, -24, 157, 159, 153, -112,
	-24, -112, 157, 170, -101, -24, 161, 60, -55, 157,
	159, 157, -72, 10, 13, 162, -8, 10, 10, 153,
	153, 158, 153, -24, -136, 159, -112, -24, -52, -25,
	-24, -61, -61, -52, 157, -113, 157, -10, 168, 157,
	157, 153, -10, 168, -24, 155, 157, -26, -27, -32,
	-157, 153, 152, -93, -92, -87, -89, -12, -96, -160,
	157, -119, -15, 155, -24, -22, -24, -115, 152, 155,
	-24, 157, -30, -143, -31, 161, 60, 158, -28, -15,
	155, -133, -26, -26, 156, -123, 56, -150, 152, -75,
	-14, -124, 57, -104, -108, 99, 61, 62, -14, 157,
	157, 96, -15, 155, 153, 170, -24, -31, 156, 157,
	159, 13, -24, 153, 159, 153, -123, 152, 157, -102,
	157, -33, -24, 157, -10, 168, -153, -91, -90, -89,
	153, -10, 168, -89, 29, 154, -149, 157, 154, -146,
	154, -146, 154, 154, 157, 59, -31, 156, -55, -149,
	-29, -134, 43, 42, 157, 157, -26, -124, -14, 153,
	-39, -157, 45, -150, 168, 152, -75, -15, 155, 154,
	-149, -24, -55, 159, -124, -131, -132, -130, -127, 33,
	-128, -24, -106, 155, -32, -135, -110, 104, 103, 102,
	148, -107, -108, 160, -109, 153, -10, 168, 154, -87,
	10, 22, 154, -22, 153, 32, 33, -146, 31, -146,
	-117, -15, 155, -143, -31, -55, 159, 28, 152, 156,
	-106, -126, 45, 157, 152, -152, -151, 32, -154, 48,
	-142, 104, 103, 102, 99, 100, 101, 148, -75, 153,
	-14, -150, -149, 157, 153, 152, 153, -10, 168, 59,
	-10, 168, -10, 168, -160, -103, -104, 160, -105, -1,
	161, 169, -108, 169, 154, -89, 154, 157, -24, -11,
	155, 154, 153, 154, 31, -149, 157, 157, 154, -149,
	-74, -14, 152, -106, 156, -106, -150, -110, 39, 37,
	10, -142, -114, 154, 152, 153, -150, -130, -24, 59,
	-24, 59, 169, -104, 169, -2, 84, -108, -108, -118,
	-15, 155, -11, -149, 154, 26, -117, 153, -9, 169,
	-8, -149, 152, -81, -82, -58, -8, 161, 152, 153,
	-79, -45, -8, -84, -95, -6, 10, -5, -3, -140,
	170, 153, -147, -40, -41, -42, -43, -44, -14, -6,
	10, 153, -24, -24, -104, -104, -8, -149, -149, 154,
	157, -14, 153, -149, 157, -10, 168, -8, -149, 154,
	168, -160, 170, 154, 168, 170, -6, 154, -24, 153,
	-40, 154, 154, 46, 29, 79, 170, 24, 152, 153,
	-58, 153, -45, -24, -95, -24, 156, -75, 10, -4,
	-142, -6, -24, 154, -149, -160, -160, -26, -6, 153,
	157, -106, -116, 154, 152, -149, 153,
}
var yyDef = [...]int{

	90, -2, -2, 89, 111, 112, 113, 114, 115, 116,
	117, 0, 0, 0, 124, 0, 147, 157, 158, 0,
	0, 0, 0, 490, 490, 490, 0, 454, 0, 169,
	0, 0, 0, 0, 175, 0, 0, 98, 440, 110,
	195, 238, 0, -2, 489, 107, 0, -2, 508, 0,
	0, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 411, 415, 0, 0, 0, 0, 0, 0, 0,
	459, 0, 425, 461, 0, 428, 0, 0, 433, 0,
	501, 506, 0, -2, -2, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 471, 0, -2, -2, 435,
	511, 0, -2, 0, 452, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 468, 0, 440, 88, 99, 100,
	101, 0, 0, 90, 91, 92, 93, 72, 73, 74,
	75, 76, 77, 78, 79, 2, 3, 4, 5, 6,
	7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
	17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
	27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
	37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
	47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 142, 137, 126,
	127, 96, 97, 94, 95, 0, 145, 0, -2, 0,
	0, 0, 440, 339, 0, 0, 491, 454, 98, 0,
	0, 0, 283, 284, 0, 434, 286, 287, 0, 337,
	338, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 0, 178, 439, 441, 108,
	440, 436, 0, 0, 0, 0, 196, 197, 199, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	376, 0, 490, 0, 0, 0, 529, 0, 528, 532,
	530, 534, 0, 0, 0, 360, -2, 497, 0, -2,
	495, 454, 529, -2, 395, 396, 397, 398, 0, 416,
	417, 418, 419, 420, 421, 422, 423, 490, 424, 0,
	462, 463, 542, 544, 0, 0, 427, 429, 431, 432,
	84, 104, 102, 455, 0, 464, 345, 456, 457, 0,
	0, 515, 110, 0, 0, 0, 558, 559, 0, 561,
	562, 0, 473, 0, 0, 513, 449, 0, 451, 529,
	0, 0, 0, 0, 119, 90, -2, 122, 0, 0,
	142, 0, 0, 125, 0, 0, 146, 156, 148, 149,
	150, 151, 152, 153, 154, 0, 0, 0, 439, 0,
	340, 342, 0, 163, 164, 165, 166, 0, 167, 0,
	0, 168, 0, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 394,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 408,
	0, 0, 414, 84, 186, -2, 0, 0, -2, 177,
	0, 0, 439, 0, 0, 211, 205, 198, 0, 239,
	0, 242, 147, 358, 0, 361, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 0, 0,
	0, 509, 525, 0, 527, 510, 0, 467, 529, 0,
	-2, 537, 529, 0, 0, -2, 0, 426, 543, 540,
	541, 0, 0, 0, 0, 0, 492, 0, 85, 0,
	103, 0, 478, -2, 522, 0, -2, -2, 344, 465,
	0, 490, 0, 0, 0, 0, 0, 464, 0, 84,
	563, 565, 0, 0, 472, 474, 0, 275, 84, 277,
	279, 0, 0, -2, 83, 47, 12, -2, 45, -2,
	32, -2, -2, 70, 38, 39, 2, 3, 4, 5,
	6, -2, 53, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 469, -2, 118, -2, 121, 136, 142,
	123, 0, 0, 143, 144, 439, 0, 0, 0, 339,
	0, 0, 282, 285, 288, 336, 0, 413, 0, 85,
	0, 0, 179, -2, -2, 0, 209, 290, 0, 0,
	213, 0, 0, 0, -2, 359, 0, 502, 503, 504,
	0, 505, 0, 0, 531, 533, 0, 0, 0, -2,
	467, 460, 0, 552, 553, 0, 555, 546, 547, 548,
	549, 0, 551, 430, 105, 106, 450, 0, 520, 0,
	0, 518, 519, 521, 458, 209, 0, 0, 85, 557,
	560, 512, 0, 85, 280, 0, 466, 0, 84, 246,
	248, 120, 0, 0, 84, 132, 138, 0, 140, 335,
	0, 159, 234, 147, 0, 0, 341, 162, 229, 229,
	412, 0, 187, 0, -2, 0, 0, 529, 174, 223,
	147, 184, 0, 0, -2, 213, 0, 109, 290, 212,
	296, 0, 0, 206, 259, 260, 261, 262, 263, 0,
	0, 0, 236, 147, 526, 0, 357, -2, 529, 539,
	545, 554, 0, 523, 516, 517, 213, 350, 556, 564,
	276, 278, 281, 273, 244, -2, 271, 0, 84, 135,
	0, 130, 85, 139, 0, 155, -2, 0, 339, 0,
	229, 0, 229, 171, 0, 0, -2, 529, 0, -2,
	176, 180, 0, 0, 273, 442, 0, 0, 210, 202,
	289, 317, 0, 109, 0, 290, 214, 237, 147, 243,
	-2, 356, 0, 0, 0, 0, 84, 352, 0, 84,
	84, 348, 439, 0, 247, 249, 191, 250, 251, 252,
	253, 272, 268, 0, 270, 0, 133, 85, 129, 131,
	141, 0, 160, 0, 225, 0, 0, 0, 0, 0,
	172, 221, 147, 0, -2, 0, -2, 0, 147, 0,
	0, 273, 0, 273, 290, 271, 0, 0, -2, 316,
	319, 321, 322, 323, 324, 325, 326, 327, 0, 203,
	297, 109, -2, 538, 550, 290, 349, 351, 85, 0,
	0, 85, 346, 85, 0, 274, 256, 0, 258, 193,
	192, 0, 269, 0, 128, 134, 235, 0, 0, 147,
	232, 233, 226, 227, 0, -2, 0, 217, 224, -2,
	86, 182, 147, 0, 0, 0, 109, 0, 0, 440,
	207, 320, 294, 298, 0, 204, 109, 353, 354, 0,
	347, 0, 0, 257, 0, 0, 194, 266, 267, 161,
	219, 147, 147, -2, 228, 0, 173, 185, 0, 0,
	87, -2, 147, 0, 84, 446, 447, 0, 147, 201,
	0, 329, 439, 0, 333, 0, 80, 81, 0, 0,
	0, 299, 0, 301, 0, 0, 311, 0, 0, 310,
	-2, 343, 355, 438, 264, 265, 254, -2, -2, 222,
	0, 183, 189, -2, 443, 444, 85, 448, -2, 291,
	0, 330, 0, 292, 0, 0, 0, 295, 208, 300,
	302, 303, 304, 0, 0, 0, 0, 0, 147, 437,
	445, 190, 328, 439, 332, 439, -2, 305, 306, 307,
	309, 312, 255, 220, -2, 331, 334, 0, 308, 181,
	273, 0, 293, 313, 147, -2, 314,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 164, 150, 3, 167, 174, 161, 3,
	156, 157, 172, 163, 168, 162, 177, 173, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 155, 154,
	175, 170, 176, 160, 166, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 158, 3, 159, 171, 3, 151, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 152, 169, 153, 165,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

// line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yylex.(*Parser).currentToken.Value = nil

			yylex.(*Parser).rootNode = &ast.Root{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].list),
				Stmts:    yyDollar[1].list,
				EndTkn:   yylex.(*Parser).currentToken,
			}
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:332
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:335
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:335
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:335
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:335
		{
			yyVAL.token = yyDollar[1].token
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:336
		{
			yyVAL.token = yyDollar[1].token
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:336
		{
			yyVAL.token = yyDollar[1].token
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:336
		{
			yyVAL.token = yyDollar[1].token
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:340
		{
			yyVAL.token = yyDollar[1].token
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:341
		{
			yyVAL.token = yyDollar[1].token
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:345
		{
			yyVAL.token = yyDollar[1].token
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:346
		{
			yyVAL.token = yyDollar[1].token
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:350
		{
			yyVAL.token = nil
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:351
		{
			yyVAL.token = yyDollar[1].token
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:355
		{
			yyVAL.token = nil
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:356
		{
			yyVAL.token = yyDollar[1].token
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:360
		{
			yyVAL.token = yyDollar[1].token
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:364
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:369
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:373
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:374
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:375
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:379
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:380
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:384
		{
			yyVAL.node = yyDollar[1].node
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:385
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameFullyQualified(yyDollar[1].token)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:389
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:390
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:391
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameFullyQualified(yyDollar[1].token)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:392
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameRelative(yyDollar[1].token)
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:396
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttribute(yyDollar[1].node, nil)
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:397
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttribute(yyDollar[1].node, yyDollar[2].node)
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:401
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:402
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 106:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:407
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttributeGroup(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token, yyDollar[4].token)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:411
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:412
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:416
		{
			yyVAL.list = nil
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:417
		{
			yyVAL.list = yyDollar[1].list
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:421
		{
			yyVAL.node = nil
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:422
		{
			yyVAL.node = yyDollar[1].node
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:423
		{
			yyVAL.node = yyDollar[1].node
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:424
		{
			yyVAL.node = yyDollar[1].node
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:425
		{
			yyVAL.node = yyDollar[1].node
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:426
		{
			yyVAL.node = yyDollar[1].node
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:427
		{
			yyVAL.node = yyDollar[1].node
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:429
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:439
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, yyDollar[2].node, nil, nil, nil, yyDollar[3].token)
		}
	case 120:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:441
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token, yyDollar[4].list, yyDollar[5].token, nil)
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:443
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, nil, yyDollar[2].token, yyDollar[3].list, yyDollar[4].token, nil)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:446
		{
			yyVAL.node = yylex.(*Parser).builder.NewUseList(yyDollar[1].token, nil, yyDollar[2].node, yyDollar[3].token)
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:448
		{
			yyVAL.node = yylex.(*Parser).builder.NewUseList(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token)
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:450
		{
			yyVAL.node = yyDollar[1].node
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:453
		{
			yyVAL.node = &ast.StmtConstList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ConstTkn:      yyDollar[1].token,
				Consts:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:465
		{
			yyVAL.token = yyDollar[1].token
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:466
		{
			yyVAL.token = yyDollar[1].token
		}
	case 128:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:471
		{
			yyVAL.node = yylex.(*Parser).builder.NewGroupUseList(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token, yyDollar[8].token)
		}
	case 129:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:473
		{
			yyVAL.node = yylex.(*Parser).builder.NewGroupUseList(yyDollar[1].token, nil, yyDollar[2].node, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].token, yyDollar[7].token)
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:478
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:483
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:485
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:490
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:495
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:497
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:501
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:502
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:506
		{
			yyVAL.node = yyDollar[1].node
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:507
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.Type = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
			decl.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
			yyVAL.node = yyDollar[2].node
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:516
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, nil, nil)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:517
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].token)
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:521
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, nil, nil)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:522
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].token)
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:526
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:527
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:531
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:536
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:540
		{
			yyVAL.node = nil
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:541
		{
			yyVAL.node = yyDollar[1].node
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:542
		{
			yyVAL.node = yyDollar[1].node
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:543
		{
			yyVAL.node = yyDollar[1].node
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:544
		{
			yyVAL.node = yyDollar[1].node
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:545
		{
			yyVAL.node = yyDollar[1].node
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:546
		{
			yyVAL.node = yyDollar[1].node
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:548
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:560
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:569
		{
			yyVAL.node = yyDollar[1].node
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:573
		{
			yyVAL.node = yyDollar[1].node
		}
	case 159:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:577
		{
			yyDollar[5].node.(*ast.StmtWhile).WhileTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtWhile).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtWhile).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtWhile).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtWhile).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 160:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:587
		{
			yyVAL.node = &ast.StmtDo{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				DoTkn:               yyDollar[1].token,
				Stmt:                yyDollar[2].node,
				WhileTkn:            yyDollar[3].token,
				OpenParenthesisTkn:  yyDollar[4].token,
				Cond:                yyDollar[5].node,
				CloseParenthesisTkn: yyDollar[6].token,
				SemiColonTkn:        yyDollar[7].token,
			}
		}
	case 161:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:600
		{
			yyDollar[9].node.(*ast.StmtFor).ForTkn = yyDollar[1].token
			yyDollar[9].node.(*ast.StmtFor).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[9].node.(*ast.StmtFor).Init = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).InitSeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).InitSemiColonTkn = yyDollar[4].token
			yyDollar[9].node.(*ast.StmtFor).Cond = yyDollar[5].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).CondSeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CondSemiColonTkn = yyDollar[6].token
			yyDollar[9].node.(*ast.StmtFor).Loop = yyDollar[7].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).LoopSeparatorTkns = yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CloseParenthesisTkn = yyDollar[8].token
			yyDollar[9].node.(*ast.StmtFor).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			yyVAL.node = yyDollar[9].node
		}
	case 162:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:617
		{
			yyDollar[5].node.(*ast.StmtSwitch).SwitchTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtSwitch).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtSwitch).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtSwitch).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtSwitch).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:627
		{
			yyVAL.node = &ast.StmtBreak{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				BreakTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:636
		{
			yyVAL.node = &ast.StmtContinue{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ContinueTkn:  yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:645
		{
			yyVAL.node = &ast.StmtReturn{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ReturnTkn:    yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:654
		{
			yyDollar[2].node.(*ast.StmtGlobal).GlobalTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtGlobal).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtGlobal).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:662
		{
			yyDollar[2].node.(*ast.StmtStatic).StaticTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtStatic).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtStatic).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:670
		{
			yyDollar[2].node.(*ast.StmtEcho).EchoTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtEcho).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtEcho).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:678
		{
			yyVAL.node = &ast.StmtInlineHtml{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				InlineHtmlTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:686
		{
			yyVAL.node = yylex.(*Parser).builder.NewExpressionStmt(yyDollar[1].node, yyDollar[2].token)
		}
	case 171:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:690
		{
			yyDollar[3].node.(*ast.StmtUnset).UnsetTkn = yyDollar[1].token
			yyDollar[3].node.(*ast.StmtUnset).OpenParenthesisTkn = yyDollar[2].token
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[4].token)
			}
			yyDollar[3].node.(*ast.StmtUnset).CloseParenthesisTkn = yyDollar[5].token
			yyDollar[3].node.(*ast.StmtUnset).SemiColonTkn = yyDollar[6].token
			yyDollar[3].node.(*ast.StmtUnset).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			yyVAL.node = yyDollar[3].node
		}
	case 172:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:703
		{
			foreach := yyDollar[7].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[7].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Var = yyDollar[5].node
			foreach.CloseParenthesisTkn = yyDollar[6].token

			if val, ok := yyDollar[5].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 173:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:722
		{
			foreach := yyDollar[9].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Key = yyDollar[5].node
			foreach.DoubleArrowTkn = yyDollar[6].token
			foreach.Var = yyDollar[7].node
			foreach.CloseParenthesisTkn = yyDollar[8].token

			if val, ok := yyDollar[7].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:743
		{
			yyDollar[5].node.(*ast.StmtDeclare).DeclareTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtDeclare).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtDeclare).Consts = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[5].node.(*ast.StmtDeclare).SeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[5].node.(*ast.StmtDeclare).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtDeclare).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:754
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 176:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:761
		{
			yyVAL.node = yylex.(*Parser).builder.NewTry(yyDollar[1].token, yyDollar[2].token, yyDollar[3].list, yyDollar[4].token, yyDollar[5].node, yyDollar[6].node)
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:765
		{
			yyVAL.node = &ast.StmtGoto{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				GotoTkn:  yyDollar[1].token,
				Label: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:778
		{
			yyVAL.node = &ast.StmtLabel{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				ColonTkn: yyDollar[2].token,
			}
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:791
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:792
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, nil, yyDollar[2].node)
		}
	case 181:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:797
		{
			yyVAL.node = yylex.(*Parser).builder.NewCatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:801
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:802
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:807
		{
			yyVAL.node = nil
		}
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:811
		{
			yyVAL.node = &ast.StmtFinally{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				FinallyTkn:           yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:824
		{
			yyVAL.node = &ast.StmtUnset{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:830
		{
			yyDollar[1].node.(*ast.StmtUnset).Vars = append(yyDollar[1].node.(*ast.StmtUnset).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:839
		{
			yyVAL.node = yyDollar[1].node
		}
	case 189:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:844
		{
			yyVAL.node = yylex.(*Parser).builder.NewFunction(nil, yyDollar[1].token, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].token, yyDollar[7].node, yyDollar[8].token, yyDollar[9].list, yyDollar[10].token)
		}
	case 190:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:847
		{
			yyVAL.node = yylex.(*Parser).builder.NewFunction(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token, yyDollar[8].node, yyDollar[9].token, yyDollar[10].list, yyDollar[11].token)
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:851
		{
			yyVAL.token = nil
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:852
		{
			yyVAL.token = yyDollar[1].token
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:856
		{
			yyVAL.token = nil
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:857
		{
			yyVAL.token = yyDollar[1].token
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:861
		{
			yyVAL.list = nil
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:862
		{
			yyVAL.list = yyDollar[1].list
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:866
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:867
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:871
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:872
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 201:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:878
		{
			yyVAL.node = yylex.(*Parser).builder.NewClass(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].node, yyDollar[7].token, yyDollar[8].list, yyDollar[9].token)
		}
	case 202:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:884
		{
			yyVAL.node = yylex.(*Parser).builder.NewTrait(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].list, yyDollar[6].token)
		}
	case 203:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:890
		{
			yyVAL.node = yylex.(*Parser).builder.NewInterface(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token, yyDollar[6].list, yyDollar[7].token)
		}
	case 204:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:896
		{
			yyVAL.node = yylex.(*Parser).builder.NewEnum(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].node, yyDollar[5].node, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:900
		{
			yyVAL.node = nil
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:901
		{
			yyVAL.node = yylex.(*Parser).builder.NewEnumType(yyDollar[1].token, yyDollar[2].node)
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:904
		{
			yyVAL.node = nil
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:905
		{
			yyVAL.node = yylex.(*Parser).builder.NewEnumExpr(yyDollar[1].token, yyDollar[2].node)
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:909
		{
			yyVAL.node = nil
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:913
		{
			yyVAL.node = &ast.StmtClass{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExtendsTkn: yyDollar[1].token,
				Extends:    yyDollar[2].node,
			}
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:924
		{
			yyVAL.node = nil
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:928
		{
			yyVAL.node = &ast.StmtInterface{
				Position:             yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ExtendsTkn:           yyDollar[1].token,
				Extends:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ExtendsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:940
		{
			yyVAL.node = nil
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:944
		{
			yyVAL.node = &ast.StmtClass{
				Position:                yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ImplementsTkn:           yyDollar[1].token,
				Implements:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ImplementsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:956
		{
			yyVAL.node = yyDollar[1].node
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:960
		{
			yyVAL.node = &ast.StmtForeach{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Var:          yyDollar[2].node,
			}
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:968
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ListTkn:         yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:979
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:992
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:999
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForTkn:    yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1015
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1022
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForeachTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1038
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1045
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndDeclareTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1061
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Cases:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1070
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CaseSeparatorTkn:     yyDollar[2].token,
				Cases:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1080
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn:     yyDollar[1].token,
				Cases:        yyDollar[2].list,
				EndSwitchTkn: yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1090
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				ColonTkn:         yyDollar[1].token,
				CaseSeparatorTkn: yyDollar[2].token,
				Cases:            yyDollar[3].list,
				EndSwitchTkn:     yyDollar[4].token,
				SemiColonTkn:     yyDollar[5].token,
			}
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1104
		{
			yyVAL.list = nil
		}
	case 230:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1108
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtCase{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list),
				CaseTkn:          yyDollar[2].token,
				Cond:             yyDollar[3].node,
				CaseSeparatorTkn: yyDollar[4].token,
				Stmts:            yyDollar[5].list,
			})
		}
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1118
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtDefault{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				DefaultTkn:       yyDollar[2].token,
				CaseSeparatorTkn: yyDollar[3].token,
				Stmts:            yyDollar[4].list,
			})
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1129
		{
			yyVAL.token = yyDollar[1].token
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1130
		{
			yyVAL.token = yyDollar[1].token
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1135
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1142
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndWhileTkn:  yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 236:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1158
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				Stmt:                yyDollar[5].node,
			}
		}
	case 237:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1169
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				Stmt:                yyDollar[6].node,
			})

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)

			yyVAL.node = yyDollar[1].node
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1187
		{
			yyVAL.node = yyDollar[1].node
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1191
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[3].node),
				ElseTkn:  yyDollar[2].token,
				Stmt:     yyDollar[3].node,
			}

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 240:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1206
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[6].list),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				ColonTkn:            yyDollar[5].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[6].list),
					Stmts:    yyDollar[6].list,
				},
			}
		}
	case 241:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1221
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[7].list),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[7].list),
					Stmts:    yyDollar[7].list,
				},
			})

			yyVAL.node = yyDollar[1].node
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1241
		{
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[2].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[3].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			yyVAL.node = yyDollar[1].node
		}
	case 243:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1249
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				ElseTkn:  yyDollar[2].token,
				ColonTkn: yyDollar[3].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[4].list),
					Stmts:    yyDollar[4].list,
				},
			}
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[5].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[6].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token)

			yyVAL.node = yyDollar[1].node
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1268
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1269
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1273
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1274
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 248:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1278
		{
			yyVAL.list = nil
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1279
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1283
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1284
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1285
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1286
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 254:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1292
		{
			yyVAL.node = yylex.(*Parser).builder.NewParameter(yyDollar[1].list, yyDollar[2].list, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, nil, nil, false)
		}
	case 255:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1295
		{
			yyVAL.node = yylex.(*Parser).builder.NewParameter(yyDollar[1].list, yyDollar[2].list, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].token, yyDollar[8].node, true)
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1299
		{
			yyVAL.node = yyDollar[1].node
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1300
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1301
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1305
		{
			yyVAL.node = yyDollar[1].node
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1306
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1310
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1311
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1312
		{
			yyVAL.node = yyDollar[1].node
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1316
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1317
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1322
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1324
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1328
		{
			yyVAL.node = yyDollar[1].node
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1329
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1330
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 271:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1334
		{
			yyVAL.node = nil
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1335
		{
			yyVAL.node = yyDollar[1].node
		}
	case 273:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1339
		{
			yyVAL.node = &ReturnType{}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1340
		{
			yyVAL.node = yylex.(*Parser).builder.NewReturnType(yyDollar[1].token, yyDollar[2].node)
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1345
		{
			yyVAL.node = &ArgumentList{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				CloseParenthesisTkn: yyDollar[2].token,
			}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1353
		{
			argumentList := yyDollar[2].node.(*ArgumentList)
			argumentList.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			argumentList.OpenParenthesisTkn = yyDollar[1].token
			if yyDollar[3].token != nil {
				argumentList.SeparatorTkns = append(argumentList.SeparatorTkns, yyDollar[3].token)
			}
			argumentList.CloseParenthesisTkn = yyDollar[4].token

			yyVAL.node = argumentList
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1368
		{
			yyVAL.node = &ArgumentList{
				Arguments: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1374
		{
			yyDollar[1].node.(*ArgumentList).SeparatorTkns = append(yyDollar[1].node.(*ArgumentList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ArgumentList).Arguments = append(yyDollar[1].node.(*ArgumentList).Arguments, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1383
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgument(yyDollar[1].node)
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1384
		{
			yyVAL.node = yylex.(*Parser).builder.NewVariadicArgument(yyDollar[1].token, yyDollar[2].node)
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1385
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamedArgument(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node)
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1390
		{
			yyDollar[1].node.(*ast.StmtGlobal).Vars = append(yyDollar[1].node.(*ast.StmtGlobal).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1397
		{
			yyVAL.node = &ast.StmtGlobal{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1405
		{
			yyVAL.node = yyDollar[1].node
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1410
		{
			yyDollar[1].node.(*ast.StmtStatic).Vars = append(yyDollar[1].node.(*ast.StmtStatic).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1417
		{
			yyVAL.node = &ast.StmtStatic{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1426
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1440
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1458
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1459
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1464
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyList(yyDollar[1].list, yyDollar[2].list, yyDollar[3].node, yyDollar[4].node, yyDollar[5].token)
		}
	case 292:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1466
		{
			yyVAL.node = yylex.(*Parser).builder.NewClassConstList(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token)
		}
	case 293:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:1468
		{
			yyVAL.node = yylex.(*Parser).builder.NewClassMethod(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].node, yyDollar[8].token, yyDollar[9].node, yyDollar[10].node)
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1470
		{
			traitUse := &ast.StmtTraitUse{
				Position:      yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				UseTkn:        yyDollar[1].token,
				Traits:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}

			switch n := yyDollar[3].node.(type) {
			case *TraitAdaptationList:
				traitUse.OpenCurlyBracketTkn = n.OpenCurlyBracketTkn
				traitUse.Adaptations = n.Adaptations
				traitUse.CloseCurlyBracketTkn = n.CloseCurlyBracketTkn
			case *ast.StmtNop:
				traitUse.SemiColonTkn = n.SemiColonTkn
			}

			yyVAL.node = traitUse
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1490
		{
			yyVAL.node = yylex.(*Parser).builder.NewEnumCase(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token)
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1494
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1495
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1500
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1507
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CloseCurlyBracketTkn: yyDollar[2].token,
			}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1515
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Adaptations:          yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1526
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1527
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1532
		{
			yyDollar[1].node.(*ast.StmtTraitUsePrecedence).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1538
		{
			yyDollar[1].node.(*ast.StmtTraitUseAlias).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1547
		{
			yyVAL.node = &ast.StmtTraitUsePrecedence{
				Position:       yylex.(*Parser).builder.Pos.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].node.(*ParserSeparatedList).Items),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				InsteadofTkn:   yyDollar[2].token,
				Insteadof:      yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1562
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1577
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1592
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1608
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
			}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1622
		{
			yyVAL.node = &TraitMethodRef{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1633
		{
			yyVAL.node = yyDollar[1].node
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1640
		{
			yyVAL.node = &TraitMethodRef{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1656
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1663
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1674
		{
			yyVAL.list = yyDollar[1].list
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1675
		{
			yyVAL.list = []ast.Vertex{yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1679
		{
			yyVAL.list = nil
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1680
		{
			yyVAL.list = yyDollar[1].list
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1684
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1685
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1689
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1690
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1691
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1692
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1693
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1694
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1695
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1699
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1700
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1705
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				Expr: nil,
			}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1720
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1738
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1739
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1744
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1760
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1776
		{
			yyDollar[1].node.(*ast.StmtEcho).Exprs = append(yyDollar[1].node.(*ast.StmtEcho).Exprs, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1783
		{
			yyVAL.node = &ast.StmtEcho{
				Exprs: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1791
		{
			yyVAL.node = yyDollar[1].node
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1795
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1796
		{
			yyVAL.node = yyDollar[1].node
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1800
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1801
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 343:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1807
		{
			yyVAL.node = yylex.(*Parser).builder.NewAnonClass(yyDollar[1].list, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node, yyDollar[5].node, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1812
		{
			if yyDollar[3].node != nil {
				yyVAL.node = &ast.ExprNew{
					Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
					NewTkn:              yyDollar[1].token,
					Class:               yyDollar[2].node,
					OpenParenthesisTkn:  yyDollar[3].node.(*ArgumentList).OpenParenthesisTkn,
					Args:                yyDollar[3].node.(*ArgumentList).Arguments,
					SeparatorTkns:       yyDollar[3].node.(*ArgumentList).SeparatorTkns,
					CloseParenthesisTkn: yyDollar[3].node.(*ArgumentList).CloseParenthesisTkn,
				}
			} else {
				yyVAL.node = &ast.ExprNew{
					Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
					NewTkn:   yyDollar[1].token,
					Class:    yyDollar[2].node,
				}
			}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1832
		{
			yyVAL.node = &ast.ExprNew{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				NewTkn:   yyDollar[1].token,
				Class:    yyDollar[2].node,
			}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1843
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1847
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1848
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 349:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1853
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token)
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1858
		{
			yyVAL.node = nil
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1860
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1865
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1867
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1872
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(nil, nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1874
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(yyDollar[1].token, yyDollar[2].token, nil, yyDollar[3].token, yyDollar[4].node)
		}
	case 356:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1879
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
				EqualTkn: yyDollar[5].token,
				Expr:     yyDollar[6].node,
			}
		}
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1895
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
					OpenBracketTkn:  yyDollar[1].token,
					Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[3].token,
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1910
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1919
		{
			yyVAL.node = &ast.ExprAssignReference{
				Position:     yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Var:          yyDollar[1].node,
				EqualTkn:     yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Expr:         yyDollar[4].node,
			}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1929
		{
			yyVAL.node = &ast.ExprClone{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CloneTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1937
		{
			yyVAL.node = &ast.ExprAssignPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1946
		{
			yyVAL.node = &ast.ExprAssignMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1955
		{
			yyVAL.node = &ast.ExprAssignMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1964
		{
			yyVAL.node = &ast.ExprAssignPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1973
		{
			yyVAL.node = &ast.ExprAssignDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1982
		{
			yyVAL.node = &ast.ExprAssignConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1991
		{
			yyVAL.node = &ast.ExprAssignMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2000
		{
			yyVAL.node = &ast.ExprAssignBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2009
		{
			yyVAL.node = &ast.ExprAssignBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2018
		{
			yyVAL.node = &ast.ExprAssignBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2027
		{
			yyVAL.node = &ast.ExprAssignShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2036
		{
			yyVAL.node = &ast.ExprAssignShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2045
		{
			yyVAL.node = &ast.ExprAssignCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2054
		{
			yyVAL.node = &ast.ExprPostInc{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				IncTkn:   yyDollar[2].token,
			}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2062
		{
			yyVAL.node = &ast.ExprPreInc{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2070
		{
			yyVAL.node = &ast.ExprPostDec{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				DecTkn:   yyDollar[2].token,
			}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2078
		{
			yyVAL.node = &ast.ExprPreDec{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DecTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2086
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2095
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2104
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2113
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2122
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2131
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2140
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2149
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2158
		{
			yyVAL.node = &ast.ExprBinaryConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2167
		{
			yyVAL.node = &ast.ExprBinaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2176
		{
			yyVAL.node = &ast.ExprBinaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2185
		{
			yyVAL.node = &ast.ExprBinaryMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2194
		{
			yyVAL.node = &ast.ExprBinaryPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2203
		{
			yyVAL.node = &ast.ExprBinaryDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2212
		{
			yyVAL.node = &ast.ExprBinaryMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2221
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2230
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2239
		{
			yyVAL.node = &ast.ExprUnaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PlusTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2247
		{
			yyVAL.node = &ast.ExprUnaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				MinusTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2255
		{
			yyVAL.node = &ast.ExprBooleanNot{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExclamationTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2263
		{
			yyVAL.node = &ast.ExprBitwiseNot{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				TildaTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2271
		{
			yyVAL.node = &ast.ExprBinaryIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2280
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2289
		{
			yyVAL.node = &ast.ExprBinaryEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2298
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2307
		{
			yyVAL.node = &ast.ExprBinarySmaller{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2316
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2325
		{
			yyVAL.node = &ast.ExprBinaryGreater{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2334
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2343
		{
			yyVAL.node = &ast.ExprBinarySpaceship{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2352
		{
			yyVAL.node = &ast.ExprInstanceOf{
				Position:      yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Expr:          yyDollar[1].node,
				InstanceOfTkn: yyDollar[2].token,
				Class:         yyDollar[3].node,
			}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2361
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2370
		{
			yyVAL.node = yyDollar[1].node
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2374
		{
			yyVAL.node = yyDollar[1].node
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:2378
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[5].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				IfTrue:      yyDollar[3].node,
				ColonTkn:    yyDollar[4].token,
				IfFalse:     yyDollar[5].node,
			}
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2389
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				ColonTkn:    yyDollar[3].token,
				IfFalse:     yyDollar[4].node,
			}
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2399
		{
			yyVAL.node = &ast.ExprBinaryCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2408
		{
			yyVAL.node = yyDollar[1].node
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2412
		{
			yyVAL.node = &ast.ExprCastInt{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2420
		{
			yyVAL.node = &ast.ExprCastDouble{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2428
		{
			yyVAL.node = &ast.ExprCastString{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2436
		{
			yyVAL.node = &ast.ExprCastArray{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2444
		{
			yyVAL.node = &ast.ExprCastObject{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2452
		{
			yyVAL.node = &ast.ExprCastBool{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2460
		{
			yyVAL.node = &ast.ExprCastUnset{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2468
		{
			exit := &ast.ExprExit{
				ExitTkn: yyDollar[1].token,
			}

			if yyDollar[2].node == nil {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token)
			} else {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				exit.OpenParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).OpenParenthesisTkn
				exit.Expr = yyDollar[2].node.(*ast.ExprBrackets).Expr
				exit.CloseParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).CloseParenthesisTkn
			}

			yyVAL.node = exit
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2485
		{
			yyVAL.node = &ast.ExprErrorSuppress{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AtTkn:    yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2493
		{
			yyVAL.node = yyDollar[1].node
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2497
		{
			yyVAL.node = &ast.ExprShellExec{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBacktickTkn:  yyDollar[1].token,
				Parts:            yyDollar[2].list,
				CloseBacktickTkn: yyDollar[3].token,
			}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2506
		{
			yyVAL.node = &ast.ExprPrint{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PrintTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2514
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				YieldTkn: yyDollar[1].token,
			}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2521
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldTkn: yyDollar[1].token,
				Val:      yyDollar[2].node,
			}
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2529
		{
			yyVAL.node = &ast.ExprYield{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				YieldTkn:       yyDollar[1].token,
				Key:            yyDollar[2].node,
				DoubleArrowTkn: yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2539
		{
			yyVAL.node = &ast.ExprYieldFrom{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldFromTkn: yyDollar[1].token,
				Expr:         yyDollar[2].node,
			}
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2547
		{
			yyVAL.node = yylex.(*Parser).builder.NewThrowExpr(yyDollar[1].token, yyDollar[2].node)
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2551
		{
			yyVAL.node = yyDollar[1].node
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2555
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			}

			yyVAL.node = yyDollar[2].node
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2570
		{
			yyVAL.node = yyDollar[1].node
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2572
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[2].node)
				n.AttrGroups = yyDollar[1].list
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[2].node)
				n.AttrGroups = yyDollar[1].list
			}

			yyVAL.node = yyDollar[2].node
		}
	case 437:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:2588
		{
			closure := yyDollar[7].node.(*ast.ExprClosure)

			closure.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token)
			closure.FunctionTkn = yyDollar[1].token
			closure.AmpersandTkn = yyDollar[2].token
			closure.OpenParenthesisTkn = yyDollar[4].token
			closure.Params = yyDollar[5].node.(*ParserSeparatedList).Items
			closure.SeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			closure.CloseParenthesisTkn = yyDollar[6].token
			closure.ColonTkn = yyDollar[8].node.(*ReturnType).ColonTkn
			closure.ReturnType = yyDollar[8].node.(*ReturnType).Type
			closure.OpenCurlyBracketTkn = yyDollar[9].token
			closure.Stmts = yyDollar[10].list
			closure.CloseCurlyBracketTkn = yyDollar[11].token

			yyVAL.node = closure
		}
	case 438:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:2607
		{
			yyVAL.node = &ast.ExprArrowFunction{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node),
				FnTkn:               yyDollar[1].token,
				AmpersandTkn:        yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Params:              yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[6].node.(*ReturnType).Type,
				DoubleArrowTkn:      yyDollar[8].token,
				Expr:                yyDollar[9].node,
			}
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2629
		{
			yyVAL.token = nil
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2630
		{
			yyVAL.token = yyDollar[1].token
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2635
		{
			yyVAL.node = &ast.ExprClosure{}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2637
		{
			yyVAL.node = &ast.ExprClosure{
				UseTkn:                 yyDollar[1].token,
				UseOpenParenthesisTkn:  yyDollar[2].token,
				Uses:                   yyDollar[3].node.(*ParserSeparatedList).Items,
				UseSeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				UseCloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2649
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2653
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2654
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2659
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2673
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				AmpersandTkn: yyDollar[1].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						IdentifierTkn: yyDollar[2].token,
						Value:         yyDollar[2].token.Value,
					},
				},
			}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2691
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2702
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2723
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2736
		{
			yyVAL.node = yyDollar[1].node
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2737
		{
			yyVAL.node = yyDollar[1].node
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2741
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2742
		{
			yyVAL.node = yyDollar[1].node
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2746
		{
			yyVAL.node = yyDollar[1].node
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2747
		{
			yyVAL.node = yyDollar[1].node
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2748
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2752
		{
			yyVAL.node = nil
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2753
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2758
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2762
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
			}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2772
		{
			yyVAL.list = yyDollar[1].list
		}
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2778
		{
			yyVAL.node = nil
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2779
		{
			yyVAL.node = yyDollar[1].node
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2784
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ArrayTkn:        yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2795
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2805
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2813
		{
			yyVAL.node = &ast.ScalarEncapsed{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenQuoteTkn:  yyDollar[1].token,
				Parts:         yyDollar[2].list,
				CloseQuoteTkn: yyDollar[3].token,
			}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2825
		{
			yyVAL.node = &ast.ScalarLnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2833
		{
			yyVAL.node = &ast.ScalarDnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2841
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:       yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn: yyDollar[1].token,
				Parts: []ast.Vertex{
					&ast.ScalarEncapsedStringPart{
						Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						EncapsedStrTkn: yyDollar[2].token,
						Value:          yyDollar[2].token.Value,
					},
				},
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2856
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenHeredocTkn:  yyDollar[1].token,
				CloseHeredocTkn: yyDollar[2].token,
			}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2864
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn:  yyDollar[1].token,
				Parts:           yyDollar[2].list,
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2872
		{
			yyVAL.node = yyDollar[1].node
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2873
		{
			yyVAL.node = yyDollar[1].node
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2874
		{
			yyVAL.node = yyDollar[1].node
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2879
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2894
		{
			yyVAL.node = yylex.(*Parser).builder.NewConstFetch(yyDollar[1].node)
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2895
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2896
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2897
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2898
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2899
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2900
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2901
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2902
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2906
		{
			yyVAL.node = yyDollar[1].node
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2907
		{
			yyVAL.node = yyDollar[1].node
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2911
		{
			yyVAL.node = nil
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2912
		{
			yyVAL.node = yyDollar[1].node
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2916
		{
			yyVAL.node = yyDollar[1].node
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2917
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2918
		{
			yyVAL.node = yyDollar[1].node
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2919
		{
			yyVAL.node = yyDollar[1].node
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2923
		{
			yyVAL.node = yyDollar[1].node
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2924
		{
			yyVAL.node = yyDollar[1].node
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2928
		{
			yyVAL.node = yyDollar[1].node
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2929
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2930
		{
			yyVAL.node = yyDollar[1].node
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2935
		{
			yyVAL.node = yyDollar[1].node
		}
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2937
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2947
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2959
		{
			yyVAL.node = yylex.(*Parser).builder.NewMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2961
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafeMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2963
		{
			yyVAL.node = yyDollar[1].node
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2968
		{
			yyVAL.node = yyDollar[1].node
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2970
		{
			yyVAL.node = yyDollar[1].node
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2972
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2974
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2979
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2990
		{
			yyVAL.node = &ast.ExprVariable{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				DollarTkn:            yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Name:                 yyDollar[3].node,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3000
		{
			yyVAL.node = &ast.ExprVariable{
				Position:  yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DollarTkn: yyDollar[1].token,
				Name:      yyDollar[2].node,
			}
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3011
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3023
		{
			yyVAL.node = yyDollar[1].node
		}
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3027
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3037
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3049
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3053
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3057
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3066
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3077
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3078
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3079
		{
			yyVAL.node = yyDollar[1].node
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3083
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3084
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3085
		{
			yyVAL.node = yyDollar[1].node
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3090
		{
			pairList := yyDollar[1].node.(*ParserSeparatedList)
			fistPair := pairList.Items[0].(*ast.ExprArrayItem)

			if fistPair.Key == nil && fistPair.Val == nil && len(pairList.Items) == 1 {
				pairList.Items = nil
			}

			yyVAL.node = yyDollar[1].node
		}
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3103
		{
			yyVAL.node = &ast.ExprArrayItem{}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3104
		{
			yyVAL.node = yyDollar[1].node
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3109
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3111
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3116
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val:            yyDollar[3].node,
			}
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3125
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Val:      yyDollar[1].node,
			}
		}
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3132
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				AmpersandTkn:   yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3142
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Val:          yyDollar[2].node,
			}
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3150
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:    yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				EllipsisTkn: yyDollar[1].token,
				Val:         yyDollar[2].node,
			}
		}
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:3158
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[3].token, yyDollar[6].token),
					ListTkn:         yyDollar[3].token,
					OpenBracketTkn:  yyDollar[4].token,
					Items:           yyDollar[5].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[6].token,
				},
			}
		}
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3174
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
			}
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3191
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3195
		{
			yyVAL.list = append(
				yyDollar[1].list,
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					EncapsedStrTkn: yyDollar[2].token,
					Value:          yyDollar[2].token.Value,
				},
			)
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3206
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3210
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
				yyDollar[2].node,
			}
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3224
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3235
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3252
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3256
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3260
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name:                      yyDollar[2].node,
				CloseCurlyBracketTkn:      yyDollar[3].token,
			}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3269
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 550:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:3282
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenSquareBracketTkn:  yyDollar[3].token,
				Dim:                   yyDollar[4].node,
				CloseSquareBracketTkn: yyDollar[5].token,
				CloseCurlyBracketTkn:  yyDollar[6].token,
			}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3298
		{
			yyVAL.node = &ast.ScalarEncapsedStringBrackets{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Var:                  yyDollar[2].node,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3310
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3318
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(string(yyDollar[1].token.Value)); err == nil {
				yyVAL.node = &ast.ScalarLnumber{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					NumberTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					StringTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3335
		{
			_, err := strconv.Atoi(string(yyDollar[2].token.Value))
			isInt := err == nil

			if isInt {
				yyVAL.node = &ast.ExprUnaryMinus{
					Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn: yyDollar[1].token,
					Expr: &ast.ScalarLnumber{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						NumberTkn: yyDollar[2].token,
						Value:     yyDollar[2].token.Value,
					},
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn:  yyDollar[1].token,
					StringTkn: yyDollar[2].token,
					Value:     append([]byte("-"), yyDollar[2].token.Value...),
				}
			}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3359
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:3373
		{
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[4].token)
			}

			yyVAL.node = &ast.ExprIsset{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				IssetTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Vars:                yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
			}
		}
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3388
		{
			yyVAL.node = &ast.ExprEmpty{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EmptyTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3398
		{
			yyVAL.node = &ast.ExprInclude{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3406
		{
			yyVAL.node = &ast.ExprIncludeOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3414
		{
			yyVAL.node = &ast.ExprEval{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EvalTkn:             yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3424
		{
			yyVAL.node = &ast.ExprRequire{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3432
		{
			yyVAL.node = &ast.ExprRequireOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3442
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3443
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3447
		{
			yyVAL.node = yyDollar[1].node
		}
	}
	goto yystack /* stack new state and value */
}
