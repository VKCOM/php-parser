// Code generated by goyacc -o internal/php8/php8.go internal/php8/php8.y. DO NOT EDIT.

// line internal/php8/php8.y:1

package php8

import __yyfmt__ "fmt"

// line internal/php8/php8.y:3

import (
	"strconv"

	"github.com/z7zmey/php-parser/pkg/ast"
	"github.com/z7zmey/php-parser/pkg/token"
)

// line internal/php8/php8.y:13
type yySymType struct {
	yys   int
	node  ast.Vertex
	token *token.Token
	list  []ast.Vertex
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_FN = 57380
const T_CONST = 57381
const T_RETURN = 57382
const T_TRY = 57383
const T_CATCH = 57384
const T_FINALLY = 57385
const T_THROW = 57386
const T_USE = 57387
const T_INSTEADOF = 57388
const T_GLOBAL = 57389
const T_VAR = 57390
const T_UNSET = 57391
const T_ISSET = 57392
const T_EMPTY = 57393
const T_HALT_COMPILER = 57394
const T_CLASS = 57395
const T_TRAIT = 57396
const T_INTERFACE = 57397
const T_EXTENDS = 57398
const T_IMPLEMENTS = 57399
const T_OBJECT_OPERATOR = 57400
const T_DOUBLE_ARROW = 57401
const T_LIST = 57402
const T_ARRAY = 57403
const T_CALLABLE = 57404
const T_CLASS_C = 57405
const T_TRAIT_C = 57406
const T_METHOD_C = 57407
const T_FUNC_C = 57408
const T_LINE = 57409
const T_FILE = 57410
const T_COMMENT = 57411
const T_DOC_COMMENT = 57412
const T_OPEN_TAG = 57413
const T_OPEN_TAG_WITH_ECHO = 57414
const T_CLOSE_TAG = 57415
const T_WHITESPACE = 57416
const T_START_HEREDOC = 57417
const T_END_HEREDOC = 57418
const T_DOLLAR_OPEN_CURLY_BRACES = 57419
const T_CURLY_OPEN = 57420
const T_PAAMAYIM_NEKUDOTAYIM = 57421
const T_NAMESPACE = 57422
const T_NS_C = 57423
const T_DIR = 57424
const T_NS_SEPARATOR = 57425
const T_ELLIPSIS = 57426
const T_EVAL = 57427
const T_REQUIRE = 57428
const T_REQUIRE_ONCE = 57429
const T_LOGICAL_OR = 57430
const T_LOGICAL_XOR = 57431
const T_LOGICAL_AND = 57432
const T_INSTANCEOF = 57433
const T_NEW = 57434
const T_CLONE = 57435
const T_ELSEIF = 57436
const T_ELSE = 57437
const T_ENDIF = 57438
const T_PRINT = 57439
const T_YIELD = 57440
const T_STATIC = 57441
const T_ABSTRACT = 57442
const T_FINAL = 57443
const T_PRIVATE = 57444
const T_PROTECTED = 57445
const T_PUBLIC = 57446
const T_INC = 57447
const T_DEC = 57448
const T_YIELD_FROM = 57449
const T_INT_CAST = 57450
const T_DOUBLE_CAST = 57451
const T_STRING_CAST = 57452
const T_ARRAY_CAST = 57453
const T_OBJECT_CAST = 57454
const T_BOOL_CAST = 57455
const T_UNSET_CAST = 57456
const T_COALESCE = 57457
const T_SPACESHIP = 57458
const T_NOELSE = 57459
const T_PLUS_EQUAL = 57460
const T_MINUS_EQUAL = 57461
const T_MUL_EQUAL = 57462
const T_POW_EQUAL = 57463
const T_DIV_EQUAL = 57464
const T_CONCAT_EQUAL = 57465
const T_MOD_EQUAL = 57466
const T_AND_EQUAL = 57467
const T_OR_EQUAL = 57468
const T_XOR_EQUAL = 57469
const T_SL_EQUAL = 57470
const T_SR_EQUAL = 57471
const T_COALESCE_EQUAL = 57472
const T_BOOLEAN_OR = 57473
const T_BOOLEAN_AND = 57474
const T_POW = 57475
const T_SL = 57476
const T_SR = 57477
const T_IS_IDENTICAL = 57478
const T_IS_NOT_IDENTICAL = 57479
const T_IS_EQUAL = 57480
const T_IS_NOT_EQUAL = 57481
const T_IS_SMALLER_OR_EQUAL = 57482
const T_IS_GREATER_OR_EQUAL = 57483
const T_NULLSAFE_OBJECT_OPERATOR = 57484

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_FN",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_COALESCE_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"T_NULLSAFE_OBJECT_OPERATOR",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

// line internal/php8/php8.y:4390

// line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	-2, 0,
	-1, 44,
	58, 426,
	79, 426,
	142, 426,
	145, 426,
	151, 426,
	-2, 421,
	-1, 48,
	149, 429,
	-2, 439,
	-1, 85,
	58, 428,
	79, 428,
	142, 428,
	145, 428,
	149, 431,
	151, 428,
	-2, 416,
	-1, 109,
	79, 389,
	-2, 418,
	-1, 234,
	58, 426,
	79, 426,
	142, 426,
	145, 426,
	151, 426,
	-2, 315,
	-1, 237,
	149, 431,
	-2, 428,
	-1, 240,
	58, 426,
	79, 426,
	142, 426,
	145, 426,
	151, 426,
	-2, 317,
	-1, 359,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 339,
	-1, 360,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 340,
	-1, 361,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 341,
	-1, 362,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 342,
	-1, 363,
	140, 0,
	141, 0,
	168, 0,
	169, 0,
	-2, 343,
	-1, 364,
	140, 0,
	141, 0,
	168, 0,
	169, 0,
	-2, 344,
	-1, 365,
	140, 0,
	141, 0,
	168, 0,
	169, 0,
	-2, 345,
	-1, 366,
	140, 0,
	141, 0,
	168, 0,
	169, 0,
	-2, 346,
	-1, 367,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 347,
	-1, 374,
	150, 164,
	161, 164,
	-2, 426,
	-1, 420,
	150, 469,
	152, 469,
	161, 469,
	-2, 426,
	-1, 425,
	58, 427,
	79, 427,
	142, 427,
	145, 427,
	149, 430,
	151, 427,
	-2, 349,
	-1, 440,
	149, 455,
	-2, 419,
	-1, 441,
	149, 457,
	-2, 446,
	-1, 521,
	149, 455,
	-2, 420,
	-1, 522,
	149, 457,
	-2, 447,
	-1, 540,
	150, 214,
	-2, 219,
	-1, 582,
	150, 214,
	-2, 219,
	-1, 608,
	149, 430,
	-2, 427,
	-1, 676,
	150, 184,
	-2, 426,
	-1, 684,
	150, 214,
	-2, 219,
	-1, 700,
	150, 468,
	152, 468,
	161, 468,
	-2, 426,
	-1, 737,
	150, 185,
	-2, 426,
	-1, 753,
	37, 269,
	39, 269,
	-2, 266,
	-1, 767,
	94, 209,
	95, 209,
	96, 209,
	-2, 0,
	-1, 796,
	150, 184,
	-2, 426,
	-1, 798,
	150, 187,
	-2, 400,
	-1, 813,
	94, 210,
	95, 210,
	96, 210,
	-2, 0,
	-1, 863,
	31, 200,
	32, 200,
	33, 200,
	146, 200,
	-2, 0,
	-1, 895,
	29, 77,
	-2, 81,
	-1, 900,
	31, 199,
	32, 199,
	33, 199,
	146, 199,
	-2, 0,
	-1, 928,
	150, 214,
	-2, 219,
}

const yyPrivate = 57344

const yyLast = 7791

var yyAct = [...]int{

	28, 132, 772, 638, 850, 873, 755, 445, 887, 849,
	589, 109, 792, 827, 846, 191, 642, 689, 113, 641,
	675, 128, 140, 140, 140, 328, 657, 153, 576, 225,
	117, 123, 640, 656, 719, 188, 319, 381, 544, 5,
	584, 643, 373, 227, 730, 383, 152, 533, 323, 322,
	145, 9, 8, 229, 233, 134, 81, 241, 242, 243,
	244, 245, 411, 139, 246, 247, 248, 249, 250, 251,
	252, 149, 255, 2, 127, 263, 264, 265, 130, 523,
	321, 85, 320, 7, 524, 6, 142, 143, 439, 259,
	278, 279, 129, 281, 282, 883, 880, 867, 274, 857,
	698, 602, 854, 83, 853, 339, 269, 315, 906, 881,
	877, 235, 235, 412, 579, 107, 553, 340, 691, 907,
	107, 691, 288, 882, 878, 314, 778, 337, 335, 723,
	308, 341, 713, 296, 325, 298, 237, 237, 330, 331,
	305, 338, 336, 311, 650, 635, 312, 577, 107, 568,
	418, 327, 612, 192, 615, 613, 342, 343, 344, 345,
	346, 347, 348, 349, 350, 351, 352, 353, 354, 355,
	356, 357, 358, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 715, 369, 371, 181, 375, 313, 307, 377,
	271, 798, 301, 274, 291, 293, 44, 874, 707, 703,
	181, 314, 308, 623, 393, 395, 396, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 619, 119,
	408, 140, 410, 620, 266, 229, 609, 167, 170, 171,
	596, 417, 421, 432, 385, 928, 389, 423, 939, 902,
	229, 235, 167, 835, 934, 834, 825, 868, 413, 165,
	164, 234, 240, 289, 416, 140, 814, 802, 181, 166,
	168, 169, 434, 108, 163, 222, 237, 140, 108, 424,
	645, 646, 440, 521, 166, 168, 169, 534, 535, 376,
	745, 536, 183, 180, 409, 271, 415, 235, 368, 136,
	541, 735, 114, 545, 717, 229, 108, 614, 155, 156,
	167, 170, 171, 172, 173, 174, 175, 177, 179, 712,
	710, 702, 237, 673, 662, 652, 563, 433, 426, 235,
	80, 161, 165, 164, 547, 555, 431, 558, 312, 160,
	438, 162, 166, 168, 169, 176, 178, 163, 5, 875,
	572, 610, 153, 601, 237, 146, 297, 428, 429, 223,
	9, 8, 221, 531, 842, 829, 828, 520, 220, 800,
	738, 701, 644, 684, 528, 670, 292, 582, 671, 773,
	181, 575, 566, 428, 550, 429, 429, 428, 564, 540,
	422, 374, 7, 556, 6, 530, 390, 570, 573, 591,
	119, 592, 107, 562, 593, 594, 586, 388, 294, 590,
	280, 277, 276, 254, 119, 224, 107, 275, 295, 219,
	571, 186, 167, 185, 599, 184, 138, 137, 581, 229,
	604, 133, 115, 229, 588, 787, 788, 420, 583, 290,
	943, 765, 942, 273, 165, 164, 787, 788, 622, 157,
	159, 158, 181, 625, 166, 168, 169, 392, 529, 163,
	190, 527, 607, 167, 917, 916, 901, 526, 864, 436,
	136, 836, 603, 114, 831, 824, 183, 180, 784, 766,
	300, 734, 299, 733, 136, 731, 729, 114, 726, 238,
	567, 552, 155, 156, 167, 170, 171, 172, 173, 174,
	175, 177, 179, 238, 549, 391, 598, 379, 829, 828,
	600, 334, 275, 333, 182, 161, 165, 164, 332, 302,
	119, 858, 823, 160, 820, 162, 166, 168, 169, 176,
	178, 163, 815, 780, 624, 621, 548, 140, 629, 548,
	548, 548, 922, 871, 870, 816, 805, 801, 181, 830,
	108, 747, 690, 414, 414, 587, 260, 651, 187, 427,
	786, 430, 647, 122, 108, 200, 202, 201, 77, 198,
	199, 634, 193, 258, 181, 776, 116, 666, 330, 668,
	295, 920, 649, 310, 119, 672, 558, 633, 558, 312,
	167, 658, 119, 116, 148, 525, 685, 5, 441, 522,
	628, 630, 631, 667, 647, 310, 688, 590, 119, 9,
	8, 661, 664, 699, 310, 626, 167, 170, 171, 78,
	79, 261, 262, 177, 179, 268, 681, 119, 310, 119,
	674, 705, 687, 384, 686, 645, 646, 295, 165, 164,
	267, 7, 695, 6, 235, 235, 534, 310, 166, 168,
	169, 176, 178, 163, 136, 118, 125, 114, 126, 655,
	856, 545, 136, 736, 260, 114, 647, 146, 561, 237,
	237, 721, 235, 585, 660, 654, 559, 727, 285, 286,
	260, 557, 554, 558, 709, 304, 720, 539, 558, 558,
	229, 724, 658, 711, 740, 722, 716, 237, 744, 718,
	306, 309, 124, 387, 725, 918, 647, 804, 767, 768,
	148, 919, 229, 763, 742, 743, 135, 106, 762, 739,
	759, 760, 761, 758, 757, 756, 732, 260, 537, 261,
	262, 260, 430, 326, 746, 647, 430, 150, 659, 764,
	330, 769, 704, 260, 235, 261, 262, 847, 287, 229,
	558, 121, 558, 720, 908, 658, 774, 771, 777, 809,
	781, 808, 135, 106, 782, 785, 779, 795, 819, 237,
	811, 150, 647, 810, 590, 806, 260, 813, 797, 119,
	807, 283, 793, 617, 374, 676, 789, 46, 791, 260,
	119, 538, 261, 262, 257, 647, 261, 262, 826, 616,
	818, 1, 38, 235, 131, 560, 833, 558, 261, 262,
	821, 548, 700, 839, 382, 840, 841, 125, 822, 126,
	817, 380, 838, 832, 787, 788, 194, 197, 237, 790,
	787, 788, 196, 843, 195, 851, 189, 753, 750, 863,
	284, 261, 262, 751, 855, 886, 683, 256, 803, 386,
	862, 372, 663, 859, 261, 262, 627, 866, 941, 414,
	414, 632, 669, 852, 228, 43, 884, 897, 898, 893,
	42, 848, 860, 899, 900, 532, 892, 872, 16, 845,
	543, 793, 904, 905, 737, 15, 837, 151, 611, 272,
	903, 910, 49, 48, 912, 879, 217, 218, 110, 50,
	84, 893, 911, 909, 82, 915, 72, 253, 892, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 226, 925, 62, 270, 61, 891, 890, 889,
	888, 749, 913, 147, 935, 933, 932, 931, 144, 929,
	590, 45, 936, 796, 741, 680, 639, 937, 329, 316,
	647, 120, 940, 303, 203, 944, 3, 444, 926, 4,
	927, 89, 90, 70, 47, 94, 95, 36, 775, 107,
	714, 27, 0, 0, 0, 112, 26, 18, 17, 0,
	19, 0, 30, 0, 31, 0, 0, 20, 0, 0,
	0, 21, 22, 35, 37, 106, 13, 23, 33, 0,
	0, 34, 12, 0, 24, 0, 29, 87, 88, 10,
	39, 40, 41, 0, 0, 0, 0, 51, 111, 0,
	103, 99, 100, 101, 96, 97, 752, 0, 0, 754,
	0, 0, 104, 0, 0, 0, 0, 11, 102, 98,
	114, 0, 91, 92, 93, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 74, 75, 25, 78, 79, 0,
	0, 0, 54, 55, 76, 63, 64, 65, 66, 67,
	68, 69, 0, 0, 0, 0, 0, 0, 0, 0,
	759, 760, 761, 758, 757, 756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 73, 14, 653, 32, 0, 60, 0, 52, 0,
	0, 0, 57, 56, 58, 59, 71, 108, 4, 0,
	89, 90, 70, 47, 94, 95, 36, 896, 107, 0,
	27, 0, 0, 0, 112, 26, 18, 17, 0, 19,
	0, 30, 0, 31, 0, 0, 20, 0, 0, 0,
	21, 22, 35, 37, 106, 13, 23, 33, 0, 0,
	34, 12, 0, 24, 0, 29, 87, 88, 10, 39,
	40, 41, 0, 0, 0, 0, 51, 111, 0, 103,
	99, 100, 101, 96, 97, 752, 0, 0, 754, 0,
	0, 104, 0, 0, 0, 0, 11, 102, 98, 114,
	0, 91, 92, 93, 0, 0, 0, 0, 86, 53,
	0, 0, 0, 74, 75, 25, 78, 79, 0, 0,
	0, 54, 55, 76, 63, 64, 65, 66, 67, 68,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 759,
	760, 761, 758, 757, 756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 105,
	73, 14, 551, 32, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 71, 108, 4, 0, 89,
	90, 70, 47, 94, 95, 36, 876, 107, 0, 27,
	0, 0, 0, 112, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 35, 37, 106, 13, 23, 33, 0, 0, 34,
	12, 0, 24, 0, 29, 87, 88, 10, 39, 40,
	41, 0, 0, 0, 0, 51, 111, 0, 103, 99,
	100, 101, 96, 97, 752, 0, 0, 754, 0, 0,
	104, 0, 0, 0, 0, 11, 102, 98, 114, 0,
	91, 92, 93, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 74, 75, 25, 78, 79, 0, 0, 0,
	54, 55, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 759, 760,
	761, 758, 757, 756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 73,
	14, 0, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 71, 108, 318, 0, 89, 90,
	70, 47, 94, 95, 36, 844, 107, 0, 27, 0,
	0, 0, 112, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 106, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 87, 88, 324, 39, 40, 41,
	0, 0, 0, 0, 51, 111, 0, 103, 99, 100,
	101, 96, 97, 752, 0, 0, 754, 0, 0, 104,
	0, 0, 0, 0, 136, 102, 98, 114, 0, 91,
	92, 93, 0, 0, 0, 0, 86, 53, 0, 0,
	0, 74, 75, 25, 78, 79, 0, 0, 0, 54,
	55, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 759, 760, 761,
	758, 757, 756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 73, 14,
	945, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 71, 108, 318, 0, 89, 90, 70,
	47, 94, 95, 36, 812, 107, 0, 27, 0, 0,
	0, 112, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 106, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 87, 88, 324, 39, 40, 41, 0,
	0, 0, 0, 51, 111, 0, 103, 99, 100, 101,
	96, 97, 752, 0, 0, 754, 0, 0, 104, 0,
	0, 0, 0, 136, 102, 98, 114, 0, 91, 92,
	93, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	74, 75, 25, 78, 79, 0, 0, 0, 54, 55,
	76, 63, 64, 65, 66, 67, 68, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 760, 761, 758,
	757, 756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 73, 14, 938,
	32, 0, 60, 0, 52, 0, 0, 0, 57, 56,
	58, 59, 71, 108, 318, 0, 89, 90, 70, 47,
	94, 95, 36, 748, 107, 0, 27, 0, 0, 0,
	112, 26, 18, 17, 0, 19, 0, 30, 0, 31,
	0, 0, 20, 0, 0, 0, 21, 22, 35, 37,
	106, 0, 23, 33, 0, 0, 34, 0, 0, 24,
	0, 29, 87, 88, 324, 39, 40, 41, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 136, 102, 98, 114, 0, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 25, 78, 79, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 73, 14, 924, 32,
	0, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 71, 108, 318, 0, 89, 90, 70, 47, 94,
	95, 36, 0, 107, 0, 27, 0, 0, 0, 112,
	26, 18, 17, 0, 19, 0, 30, 0, 31, 0,
	0, 20, 0, 0, 0, 21, 22, 35, 37, 106,
	0, 23, 33, 0, 0, 34, 0, 0, 24, 0,
	29, 87, 88, 324, 39, 40, 41, 0, 0, 0,
	0, 51, 111, 0, 103, 99, 100, 101, 96, 97,
	0, 0, 0, 0, 0, 0, 104, 0, 0, 0,
	0, 136, 102, 98, 114, 0, 91, 92, 93, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 74, 75,
	25, 78, 79, 0, 0, 0, 54, 55, 76, 63,
	64, 65, 66, 67, 68, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 73, 14, 923, 32, 0,
	60, 0, 52, 0, 0, 0, 57, 56, 58, 59,
	71, 108, 318, 0, 89, 90, 70, 47, 94, 95,
	36, 0, 107, 0, 27, 0, 0, 0, 112, 26,
	18, 17, 0, 19, 921, 30, 0, 31, 0, 0,
	20, 0, 0, 0, 21, 22, 35, 37, 106, 0,
	23, 33, 0, 0, 34, 0, 0, 24, 0, 29,
	87, 88, 324, 39, 40, 41, 0, 0, 0, 0,
	51, 111, 0, 103, 99, 100, 101, 96, 97, 0,
	0, 0, 0, 0, 0, 104, 0, 0, 0, 0,
	136, 102, 98, 114, 0, 91, 92, 93, 0, 0,
	0, 0, 86, 53, 0, 0, 0, 74, 75, 25,
	78, 79, 0, 0, 0, 54, 55, 76, 63, 64,
	65, 66, 67, 68, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 73, 14, 0, 32, 0, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 71,
	108, 318, 0, 89, 90, 70, 47, 94, 95, 36,
	0, 107, 0, 27, 0, 0, 0, 112, 26, 18,
	17, 0, 19, 0, 30, 0, 31, 0, 0, 20,
	0, 0, 0, 21, 22, 35, 37, 106, 0, 23,
	33, 0, 0, 34, 0, 0, 24, 0, 29, 87,
	88, 324, 39, 40, 41, 0, 0, 0, 0, 51,
	111, 0, 103, 99, 100, 101, 96, 97, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 0, 0, 136,
	102, 98, 114, 0, 91, 92, 93, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 74, 75, 25, 78,
	79, 0, 0, 0, 54, 55, 76, 63, 64, 65,
	66, 67, 68, 69, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 73, 14, 869, 32, 0, 60, 0,
	52, 0, 0, 0, 57, 56, 58, 59, 71, 108,
	318, 0, 89, 90, 70, 47, 94, 95, 36, 0,
	107, 0, 27, 0, 0, 0, 112, 26, 18, 17,
	0, 19, 0, 30, 865, 31, 0, 0, 20, 0,
	0, 0, 21, 22, 35, 37, 106, 0, 23, 33,
	0, 0, 34, 0, 0, 24, 0, 29, 87, 88,
	324, 39, 40, 41, 0, 0, 0, 0, 51, 111,
	0, 103, 99, 100, 101, 96, 97, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 136, 102,
	98, 114, 0, 91, 92, 93, 0, 0, 0, 0,
	86, 53, 0, 0, 0, 74, 75, 25, 78, 79,
	0, 0, 0, 54, 55, 76, 63, 64, 65, 66,
	67, 68, 69, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 73, 14, 0, 32, 0, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 71, 108, 318,
	0, 89, 90, 70, 47, 94, 95, 36, 0, 107,
	0, 27, 0, 0, 0, 112, 26, 18, 17, 0,
	19, 0, 30, 0, 31, 799, 0, 20, 0, 0,
	0, 21, 22, 35, 37, 106, 0, 23, 33, 0,
	0, 34, 0, 0, 24, 0, 29, 87, 88, 324,
	39, 40, 41, 0, 0, 0, 0, 51, 111, 0,
	103, 99, 100, 101, 96, 97, 0, 0, 0, 0,
	0, 0, 104, 0, 0, 0, 0, 136, 102, 98,
	114, 0, 91, 92, 93, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 74, 75, 25, 78, 79, 0,
	0, 0, 54, 55, 76, 63, 64, 65, 66, 67,
	68, 69, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 73, 14, 0, 32, 0, 60, 0, 52, 0,
	0, 0, 57, 56, 58, 59, 71, 108, 318, 0,
	89, 90, 70, 47, 94, 95, 36, 0, 107, 0,
	27, 0, 0, 0, 112, 26, 18, 17, 783, 19,
	0, 30, 0, 31, 0, 0, 20, 0, 0, 0,
	21, 22, 35, 37, 106, 0, 23, 33, 0, 0,
	34, 0, 0, 24, 0, 29, 87, 88, 324, 39,
	40, 41, 0, 0, 0, 0, 51, 111, 0, 103,
	99, 100, 101, 96, 97, 0, 0, 0, 0, 0,
	0, 104, 0, 0, 0, 0, 136, 102, 98, 114,
	0, 91, 92, 93, 0, 0, 0, 0, 86, 53,
	0, 0, 0, 74, 75, 25, 78, 79, 0, 0,
	0, 54, 55, 76, 63, 64, 65, 66, 67, 68,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 105,
	73, 14, 0, 32, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 71, 108, 318, 0, 89,
	90, 70, 47, 94, 95, 36, 0, 107, 0, 27,
	0, 0, 0, 112, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 35, 37, 106, 0, 23, 33, 0, 0, 34,
	0, 0, 24, 0, 29, 87, 88, 324, 39, 40,
	41, 0, 0, 0, 0, 51, 111, 0, 103, 99,
	100, 101, 96, 97, 0, 0, 0, 0, 0, 0,
	104, 0, 0, 0, 0, 136, 102, 98, 114, 0,
	91, 92, 93, 0, 0, 0, 0, 86, 53, 0,
	0, 694, 74, 75, 25, 78, 79, 0, 0, 0,
	54, 55, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 73,
	14, 0, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 71, 108, 318, 0, 89, 90,
	70, 47, 94, 95, 36, 0, 107, 0, 27, 0,
	0, 0, 112, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 106, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 87, 88, 324, 39, 40, 41,
	0, 0, 0, 0, 51, 111, 0, 103, 99, 100,
	101, 96, 97, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 0, 136, 102, 98, 114, 0, 91,
	92, 93, 0, 0, 0, 0, 86, 53, 0, 0,
	0, 74, 75, 25, 78, 79, 0, 0, 0, 54,
	55, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 73, 14,
	580, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 71, 108, 318, 0, 89, 90, 70,
	47, 94, 95, 36, 0, 107, 0, 27, 0, 0,
	0, 112, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 106, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 87, 88, 324, 39, 40, 41, 0,
	0, 0, 0, 51, 111, 0, 103, 99, 100, 101,
	96, 97, 0, 0, 0, 0, 0, 0, 104, 0,
	0, 0, 0, 136, 102, 98, 114, 0, 91, 92,
	93, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	74, 75, 25, 78, 79, 0, 0, 0, 54, 55,
	76, 63, 64, 65, 66, 67, 68, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 73, 14, 317,
	32, 0, 60, 0, 52, 0, 0, 0, 57, 56,
	58, 59, 71, 108, 318, 0, 89, 90, 70, 47,
	94, 95, 36, 0, 107, 0, 27, 0, 0, 0,
	112, 26, 18, 17, 0, 19, 0, 30, 0, 31,
	0, 0, 20, 0, 0, 0, 21, 22, 35, 37,
	106, 0, 23, 33, 0, 0, 34, 0, 0, 24,
	0, 29, 87, 88, 324, 39, 40, 41, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 136, 102, 98, 114, 0, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 25, 78, 79, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 73, 14, 0, 32,
	0, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 71, 108, 452, 453, 463, 464, 0, 0, 443,
	0, 107, 0, 0, 0, 0, 0, 0, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 498,
	499, 500, 501, 502, 490, 491, 492, 519, 493, 494,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 510, 508, 509, 505, 506, 0, 0, 497,
	503, 504, 511, 512, 514, 513, 515, 516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	518, 517, 0, 0, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 465, 466, 467, 495, 496, 446, 447,
	448, 449, 450, 451, 0, 89, 90, 70, 47, 94,
	95, 36, 0, 107, 0, 27, 0, 0, 0, 112,
	26, 18, 17, 0, 19, 0, 30, 0, 31, 0,
	0, 20, 0, 0, 0, 21, 22, 35, 135, 106,
	0, 23, 33, 0, 442, 34, 0, 0, 24, 0,
	29, 87, 88, 0, 0, 0, 0, 0, 0, 108,
	0, 51, 111, 0, 103, 99, 100, 101, 96, 97,
	0, 0, 0, 0, 0, 0, 104, 0, 0, 0,
	0, 136, 102, 98, 114, 0, 91, 92, 93, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 74, 75,
	25, 0, 0, 0, 0, 0, 54, 55, 76, 63,
	64, 65, 66, 67, 68, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 73, 14, 0, 32, 794,
	60, 0, 52, 0, 0, 0, 57, 56, 58, 59,
	71, 108, 89, 90, 70, 47, 94, 95, 36, 0,
	107, 0, 27, 0, 0, 0, 112, 26, 18, 17,
	0, 19, 0, 30, 0, 31, 0, 0, 20, 0,
	0, 0, 21, 22, 35, 135, 106, 0, 23, 33,
	0, 0, 34, 0, 0, 24, 0, 29, 87, 88,
	0, 0, 0, 0, 0, 0, 0, 0, 51, 111,
	0, 103, 99, 100, 101, 96, 97, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 136, 102,
	98, 114, 0, 91, 92, 93, 0, 0, 0, 0,
	86, 53, 0, 0, 0, 74, 75, 25, 0, 0,
	0, 0, 0, 54, 55, 76, 63, 64, 65, 66,
	67, 68, 69, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 73, 14, 0, 32, 861, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 71, 108, 89,
	90, 70, 47, 94, 95, 36, 0, 107, 0, 27,
	0, 0, 0, 112, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 35, 135, 106, 0, 23, 33, 0, 0, 34,
	0, 0, 24, 0, 29, 87, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 111, 0, 103, 99,
	100, 101, 96, 97, 0, 0, 0, 0, 0, 0,
	104, 0, 0, 0, 0, 136, 102, 98, 114, 0,
	91, 92, 93, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 74, 75, 25, 0, 0, 0, 0, 0,
	54, 55, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 73,
	14, 0, 32, 696, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 71, 108, 89, 90, 70, 47,
	94, 95, 36, 0, 107, 0, 27, 0, 0, 0,
	112, 26, 18, 17, 0, 19, 0, 30, 0, 31,
	0, 0, 20, 0, 0, 0, 21, 22, 35, 135,
	106, 0, 23, 33, 0, 0, 34, 0, 0, 24,
	0, 29, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 136, 102, 98, 114, 0, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 25, 0, 0, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 73, 14, 0, 32,
	682, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 71, 108, 89, 90, 70, 47, 94, 95, 36,
	0, 107, 0, 27, 0, 0, 0, 112, 26, 18,
	17, 0, 19, 0, 30, 0, 31, 0, 0, 20,
	0, 0, 0, 21, 22, 35, 135, 106, 0, 23,
	33, 0, 0, 34, 0, 0, 24, 0, 29, 87,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	111, 0, 103, 99, 100, 101, 96, 97, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 0, 0, 136,
	102, 98, 114, 0, 91, 92, 93, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 74, 75, 25, 0,
	0, 0, 0, 0, 54, 55, 76, 63, 64, 65,
	66, 67, 68, 69, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 73, 14, 0, 32, 665, 60, 0,
	52, 0, 0, 0, 57, 56, 58, 59, 71, 108,
	89, 90, 70, 47, 94, 95, 36, 0, 107, 0,
	27, 0, 0, 0, 112, 26, 18, 17, 0, 19,
	0, 30, 0, 31, 0, 0, 20, 0, 0, 0,
	21, 22, 35, 135, 106, 0, 23, 33, 0, 0,
	34, 0, 0, 24, 0, 29, 87, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 111, 0, 103,
	99, 100, 101, 96, 97, 0, 0, 0, 0, 0,
	0, 104, 0, 0, 0, 0, 136, 102, 98, 114,
	0, 91, 92, 93, 0, 0, 0, 0, 86, 53,
	0, 0, 0, 74, 75, 25, 0, 0, 0, 0,
	0, 54, 55, 76, 63, 64, 65, 66, 67, 68,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 105,
	73, 14, 0, 32, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 71, 108, 452, 453, 463,
	464, 0, 0, 895, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 498, 499, 500, 501, 502, 490, 491,
	492, 519, 493, 494, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 510, 508, 509, 505,
	506, 0, 0, 497, 503, 504, 511, 512, 514, 513,
	515, 516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 894, 518, 517, 114, 0, 454, 455,
	456, 457, 458, 459, 460, 461, 462, 465, 466, 467,
	495, 496, 446, 447, 448, 449, 450, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 452, 453, 463, 464, 0,
	0, 895, 0, 0, 0, 0, 0, 0, 0, 914,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 498, 499, 500, 501, 502, 490, 491, 492, 519,
	493, 494, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 510, 508, 509, 505, 506, 0,
	0, 497, 503, 504, 511, 512, 514, 513, 515, 516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 894, 518, 517, 114, 0, 454, 455, 456, 457,
	458, 459, 460, 461, 462, 465, 466, 467, 495, 496,
	446, 447, 448, 449, 450, 451, 89, 90, 70, 0,
	94, 95, 119, 0, 107, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	106, 0, 0, 0, 0, 0, 0, 885, 0, 0,
	0, 0, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 136, 102, 98, 114, 231, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 141, 0, 0, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 89, 90, 70, 0, 94, 95, 119, 0, 107,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 73, 0, 0, 0,
	0, 60, 0, 52, 135, 106, 230, 57, 56, 58,
	59, 71, 108, 0, 0, 0, 0, 87, 88, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 111, 0,
	103, 99, 100, 101, 96, 97, 0, 0, 0, 0,
	0, 0, 104, 0, 0, 0, 0, 136, 102, 98,
	114, 546, 91, 92, 93, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 74, 75, 141, 0, 0, 0,
	0, 0, 54, 55, 76, 63, 64, 65, 66, 67,
	68, 69, 0, 0, 0, 0, 89, 90, 70, 0,
	94, 95, 119, 0, 107, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 73, 0, 0, 0, 0, 60, 542, 52, 135,
	106, 0, 57, 56, 58, 59, 71, 108, 0, 0,
	0, 0, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 136, 102, 98, 114, 546, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 141, 0, 0, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 89, 90, 70, 0, 94, 95, 119, 0, 107,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 73, 0, 0, 0,
	0, 60, 0, 52, 135, 106, 0, 57, 56, 58,
	59, 71, 108, 0, 0, 0, 0, 87, 88, 0,
	0, 0, 0, 0, 0, 0, 0, 606, 111, 0,
	103, 99, 100, 101, 96, 97, 0, 0, 0, 0,
	0, 0, 104, 0, 0, 0, 0, 136, 102, 98,
	114, 0, 91, 92, 93, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 74, 75, 141, 0, 0, 0,
	0, 0, 54, 55, 76, 63, 64, 65, 66, 67,
	68, 69, 0, 0, 0, 0, 89, 90, 70, 0,
	94, 95, 119, 435, 107, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 73, 0, 0, 0, 0, 60, 0, 52, 135,
	106, 605, 57, 56, 58, 59, 71, 108, 0, 0,
	0, 0, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 136, 102, 98, 114, 0, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 141, 0, 0, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 89, 90, 70, 0, 94, 95, 119, 0, 107,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 73, 0, 0, 0,
	0, 60, 0, 52, 135, 106, 0, 57, 56, 58,
	59, 71, 108, 0, 0, 0, 0, 87, 88, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 111, 0,
	103, 99, 100, 101, 96, 97, 0, 0, 0, 0,
	0, 0, 104, 0, 0, 0, 0, 136, 102, 98,
	114, 0, 91, 92, 93, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 74, 75, 141, 0, 0, 0,
	0, 0, 54, 55, 76, 63, 64, 65, 66, 67,
	68, 69, 0, 0, 0, 0, 89, 90, 70, 0,
	94, 95, 119, 0, 107, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 73, 0, 0, 0, 0, 60, 0, 52, 135,
	106, 394, 57, 56, 58, 59, 71, 108, 0, 0,
	0, 0, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 136, 102, 98, 114, 0, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 141, 0, 0, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 89, 90, 70, 0, 94, 95, 119, 0, 107,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 73, 0, 0, 0,
	370, 60, 0, 52, 135, 106, 0, 57, 56, 58,
	59, 71, 108, 0, 0, 0, 0, 87, 88, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 111, 0,
	103, 99, 100, 101, 96, 97, 0, 0, 0, 0,
	0, 0, 104, 0, 0, 0, 0, 136, 102, 98,
	114, 0, 91, 92, 93, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 74, 75, 141, 0, 0, 0,
	0, 0, 54, 55, 76, 63, 64, 65, 66, 67,
	68, 69, 0, 0, 0, 157, 159, 158, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 73, 183, 180, 0, 0, 60, 0, 52, 0,
	0, 0, 57, 56, 58, 59, 71, 108, 155, 156,
	167, 170, 171, 172, 173, 174, 175, 177, 179, 0,
	0, 157, 159, 158, 181, 0, 0, 0, 0, 770,
	182, 161, 165, 164, 0, 0, 0, 0, 0, 160,
	0, 162, 166, 168, 169, 176, 178, 163, 183, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 156, 167, 170, 171, 172,
	173, 174, 175, 177, 179, 0, 0, 157, 159, 158,
	181, 0, 0, 728, 0, 0, 182, 161, 165, 164,
	0, 0, 0, 0, 0, 160, 0, 162, 166, 168,
	169, 176, 178, 163, 183, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 156, 167, 170, 171, 172, 173, 174, 175, 177,
	179, 0, 0, 0, 0, 708, 157, 159, 158, 181,
	0, 0, 182, 161, 165, 164, 0, 0, 0, 0,
	0, 160, 0, 162, 166, 168, 169, 176, 178, 163,
	0, 0, 0, 183, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	156, 167, 170, 171, 172, 173, 174, 175, 177, 179,
	0, 0, 0, 0, 706, 157, 159, 158, 181, 0,
	0, 182, 161, 165, 164, 0, 0, 0, 0, 0,
	160, 0, 162, 166, 168, 169, 176, 178, 163, 0,
	0, 0, 183, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 156,
	167, 170, 171, 172, 173, 174, 175, 177, 179, 0,
	0, 0, 0, 697, 157, 159, 158, 181, 0, 0,
	182, 161, 165, 164, 0, 0, 0, 0, 0, 160,
	0, 162, 166, 168, 169, 176, 178, 163, 0, 0,
	0, 183, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 156, 167,
	170, 171, 172, 173, 174, 175, 177, 179, 0, 0,
	157, 159, 158, 181, 0, 0, 693, 0, 0, 182,
	161, 165, 164, 0, 0, 0, 0, 0, 160, 0,
	162, 166, 168, 169, 176, 178, 163, 183, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 156, 167, 170, 171, 172, 173,
	174, 175, 177, 179, 0, 0, 157, 159, 158, 181,
	0, 0, 692, 0, 0, 182, 161, 165, 164, 0,
	0, 0, 0, 0, 160, 0, 162, 166, 168, 169,
	176, 178, 163, 183, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	156, 167, 170, 171, 172, 173, 174, 175, 177, 179,
	0, 0, 0, 0, 648, 157, 159, 158, 181, 0,
	0, 182, 161, 165, 164, 0, 0, 0, 0, 0,
	160, 0, 162, 166, 168, 169, 176, 178, 163, 0,
	0, 0, 183, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 156,
	167, 170, 171, 172, 173, 174, 175, 177, 179, 0,
	0, 157, 159, 158, 181, 0, 0, 637, 0, 0,
	182, 161, 165, 164, 0, 0, 0, 0, 0, 160,
	0, 162, 166, 168, 169, 176, 178, 163, 183, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 156, 167, 170, 171, 172,
	173, 174, 175, 177, 179, 0, 0, 157, 159, 158,
	181, 0, 0, 636, 0, 0, 182, 161, 165, 164,
	0, 0, 0, 0, 0, 160, 0, 162, 166, 168,
	169, 176, 178, 163, 183, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 156, 167, 170, 171, 172, 173, 174, 175, 177,
	179, 0, 0, 0, 0, 618, 157, 159, 158, 181,
	0, 0, 182, 161, 165, 164, 0, 0, 0, 0,
	0, 160, 0, 162, 166, 168, 169, 176, 178, 163,
	0, 0, 0, 183, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	156, 167, 170, 171, 172, 173, 174, 175, 177, 179,
	0, 0, 157, 159, 158, 181, 0, 0, 608, 0,
	0, 182, 161, 165, 164, 0, 0, 0, 0, 0,
	160, 0, 162, 166, 168, 169, 176, 178, 163, 183,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 156, 167, 170, 171,
	172, 173, 174, 175, 177, 179, 0, 0, 578, 0,
	597, 157, 159, 158, 181, 0, 0, 182, 161, 165,
	164, 0, 0, 0, 0, 0, 160, 0, 162, 166,
	168, 169, 176, 178, 163, 0, 0, 0, 183, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 156, 167, 170, 171, 172,
	173, 174, 175, 177, 179, 0, 0, 157, 159, 158,
	181, 0, 0, 595, 0, 0, 182, 161, 165, 164,
	0, 0, 0, 0, 0, 160, 0, 162, 166, 168,
	169, 176, 178, 163, 183, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 156, 167, 170, 171, 172, 173, 174, 175, 177,
	179, 0, 0, 157, 159, 158, 181, 0, 0, 0,
	0, 0, 182, 161, 165, 164, 0, 0, 0, 0,
	0, 160, 0, 162, 166, 168, 169, 176, 178, 163,
	183, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 156, 167, 170,
	171, 172, 173, 174, 175, 177, 179, 0, 0, 157,
	159, 158, 181, 574, 0, 0, 0, 0, 182, 161,
	165, 164, 0, 0, 0, 0, 0, 160, 0, 162,
	166, 168, 169, 176, 178, 163, 183, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 156, 167, 170, 171, 172, 173, 174,
	175, 177, 179, 0, 0, 157, 159, 158, 181, 0,
	0, 569, 0, 0, 182, 161, 165, 164, 0, 0,
	0, 0, 0, 160, 0, 162, 166, 168, 169, 176,
	178, 163, 183, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 156,
	167, 170, 171, 172, 173, 174, 175, 177, 179, 0,
	0, 157, 159, 158, 181, 0, 0, 565, 0, 0,
	182, 161, 165, 164, 0, 0, 0, 0, 0, 160,
	0, 162, 166, 168, 169, 176, 178, 163, 183, 180,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 156, 167, 170, 171, 172,
	173, 174, 175, 177, 179, 0, 0, 0, 0, 157,
	159, 158, 181, 425, 0, 0, 182, 161, 165, 164,
	0, 0, 0, 0, 0, 160, 0, 162, 166, 168,
	169, 176, 178, 163, 0, 0, 183, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 156, 167, 170, 171, 172, 173, 174,
	175, 177, 179, 0, 0, 157, 159, 158, 181, 0,
	0, 0, 0, 0, 182, 161, 165, 164, 0, 0,
	0, 0, 0, 160, 0, 162, 166, 168, 169, 176,
	178, 163, 183, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 156,
	167, 170, 171, 172, 173, 174, 175, 177, 179, 0,
	0, 0, 0, 0, 378, 157, 159, 158, 181, 0,
	182, 161, 165, 164, 0, 0, 0, 0, 0, 160,
	0, 162, 166, 168, 169, 176, 178, 163, 0, 0,
	0, 0, 183, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 156,
	167, 170, 171, 172, 173, 174, 175, 177, 179, 0,
	0, 0, 0, 0, 154, 157, 159, 158, 181, 0,
	182, 161, 165, 164, 0, 0, 0, 0, 0, 160,
	0, 162, 166, 168, 169, 176, 178, 163, 0, 0,
	0, 0, 183, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 156,
	167, 170, 171, 172, 173, 174, 175, 177, 179, 0,
	0, 0, 159, 158, 181, 0, 0, 0, 0, 0,
	182, 161, 165, 164, 0, 0, 0, 0, 0, 160,
	0, 162, 166, 168, 169, 176, 178, 163, 183, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 156, 167, 170, 171, 172,
	173, 174, 175, 177, 179, 0, 0, 0, 0, 158,
	181, 0, 0, 0, 0, 0, 182, 161, 165, 164,
	0, 0, 0, 0, 0, 160, 0, 162, 166, 168,
	169, 176, 178, 163, 183, 180, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 156, 167, 170, 171, 172, 173, 174, 175, 177,
	179, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 182, 161, 165, 164, 0, 0, 0, 0,
	0, 160, 0, 162, 166, 168, 169, 176, 178, 163,
	0, 0, 183, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 156,
	167, 170, 171, 172, 173, 174, 175, 177, 179, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 0,
	182, 161, 165, 164, 0, 0, 0, 0, 0, 160,
	0, 162, 166, 168, 169, 176, 178, 163, 183, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 156, 167, 170, 171, 172,
	173, 174, 175, 177, 179, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 182, 161, 165, 164,
	0, 0, 0, 0, 0, 160, 0, 162, 166, 168,
	169, 176, 178, 163, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 167, 170, 171, 172, 173, 174, 175, 177, 179,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 0,
	0, 0, 161, 165, 164, 0, 0, 0, 0, 0,
	160, 0, 162, 166, 168, 169, 176, 178, 163, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 167, 170, 171, 172,
	173, 174, 175, 177, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 165, 164,
	180, 0, 0, 0, 0, 160, 0, 162, 166, 168,
	169, 176, 178, 163, 0, 0, 181, 167, 170, 171,
	172, 173, 174, 175, 177, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 165,
	164, 180, 0, 0, 0, 0, 0, 0, 162, 166,
	168, 169, 176, 178, 163, 0, 0, 181, 167, 170,
	171, 172, 173, 174, 175, 177, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	165, 164, 180, 0, 0, 0, 0, 0, 0, 0,
	166, 168, 169, 176, 178, 163, 0, 0, 0, 167,
	170, 171, 172, 173, 174, 175, 177, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 164, 452, 453, 463, 464, 0, 0, 443,
	0, 166, 168, 169, 176, 178, 163, 0, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 498,
	499, 500, 501, 502, 490, 491, 492, 519, 493, 494,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 510, 508, 509, 505, 506, 0, 0, 497,
	503, 504, 511, 512, 514, 513, 515, 516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	518, 517, 0, 0, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 465, 466, 467, 495, 496, 446, 447,
	448, 449, 450, 451, 452, 453, 463, 464, 0, 0,
	930, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	498, 499, 500, 501, 502, 490, 491, 492, 519, 493,
	494, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 510, 508, 509, 505, 506, 0, 0,
	497, 503, 504, 511, 512, 514, 513, 515, 516, 119,
	119, 107, 107, 0, 0, 0, 0, 112, 112, 0,
	507, 518, 517, 0, 0, 454, 455, 456, 457, 458,
	459, 460, 461, 462, 465, 466, 467, 495, 496, 759,
	760, 761, 758, 757, 756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 678,
	111, 111, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	136, 0, 114, 114, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 236,
	679, 239, 0, 677, 0, 0, 0, 0, 0, 108,
	108,
}
var yyPact = [...]int{

	-1000, -1000, 1265, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	273, 500, 609, 784, -1000, -1000, -1000, 272, 4376, 268,
	267, 5567, 5567, 5567, 136, 715, 5567, -1000, 6797, 266,
	264, 262, -1000, 403, 5567, 816, 302, -1, 509, 814,
	812, 807, 465, 461, 781, -1000, -1000, 260, -1000, -1000,
	207, 256, 4762, 5567, 7630, 7630, 5567, 5567, 5567, 5567,
	5567, -1000, -1000, 5567, 5567, 5567, 5567, 5567, 5567, 5567,
	254, 5567, -1000, 767, 5567, 5567, 5567, -1000, -1000, -1000,
	-1000, 73, -1000, 551, 536, -1000, 380, 253, 252, 5567,
	5567, 251, 5567, 5567, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 754, 721, -1, -1000, 108, 217,
	217, 249, -1000, 487, 759, 196, 759, 325, -1000, -1000,
	362, 607, 41, 608, 759, -1000, -1000, -1000, -1000, 40,
	-1000, -56, 3173, 5567, 702, -1, 483, 5567, 5567, 361,
	6857, 669, 356, 354, -19, -1000, -1000, -20, -1000, -1000,
	-58, -30, -1000, 6857, -1000, 5567, 5567, 5567, 5567, 5567,
	5567, 5567, 5567, 5567, 5567, 5567, 5567, 5567, 5567, 5567,
	5567, 5567, 5567, 5567, 5567, 5567, 5567, 5567, 5567, 5567,
	5567, 394, 5452, 5567, 7630, 5567, 784, -1000, 6737, 350,
	-1000, 801, -1000, 794, -1000, 567, -1000, 637, 248, 4376,
	237, 348, 299, 5337, 5567, 5567, 5567, 5567, 5567, 5567,
	5567, 5567, 5567, 5567, 5567, 5567, 5567, -1000, -1000, 5567,
	5567, 5567, 103, 103, 4762, 79, -11, -1000, -1000, 6681,
	7630, 5567, 231, -1000, -1000, 73, 5567, -1000, -1000, 4762,
	-1000, 320, 320, 447, 320, 6623, 320, 320, 320, 320,
	320, 320, 320, -1000, 5567, 320, 405, 658, 709, -1000,
	175, 5222, 7630, 7083, 7027, 7083, 5567, 3489, 3489, 217,
	-1000, 506, 306, 217, -1000, -1000, 5567, 5567, 6857, 6857,
	5567, 6857, 6857, 642, -1000, 705, 534, 658, 230, 5567,
	-1000, -1000, 4877, -1000, 4762, 791, 487, 347, 487, -1000,
	-1000, 1106, -1000, 334, -31, 589, 759, -1000, 588, 521,
	785, 575, -1000, -1000, 784, 5567, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 229, 6567, 223, -1000, 333, -12,
	6857, 6511, -1000, -1000, -1000, -1000, 136, -1000, 749, 5567,
	-1000, 5567, 7138, 7193, 6913, 7083, 6969, 7234, 7316, 7275,
	109, 109, 109, 447, 320, 447, 447, 279, 279, 473,
	473, 473, 473, 94, 94, 94, 94, 473, -1000, 6455,
	5567, 167, -14, -1000, -1000, 6399, -36, 3014, -1000, -1000,
	-1000, 218, 567, 606, 572, 400, -1000, 572, 5567, -1000,
	5567, -1000, -1000, 7083, 5567, 7083, 7083, 7083, 7083, 7083,
	7083, 7083, 7083, 7083, 7083, 7083, 7083, 7083, 6343, 78,
	6284, 217, -1000, 5567, -1000, 217, 193, -62, 4762, 5107,
	-1000, 6857, 4762, 6228, 74, -1000, 191, -1000, -1000, -1000,
	-1000, 142, 779, 763, 6169, 72, 379, 5567, 51, 217,
	-1000, -1000, 5567, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	217, -1000, -1000, -1000, -1000, 136, 5567, 5567, 103, 103,
	136, 567, -16, -1000, 6857, 6113, 6057, -1000, -1000, -1000,
	209, 5998, -1000, -17, -1000, 6857, 5567, 165, -1000, -1000,
	947, -1000, -1000, -1000, 520, 566, -1000, 759, 544, 770,
	-1000, 519, -1000, 6857, 164, 4219, 5567, 5567, 5567, 220,
	-1000, -1000, 6857, -1000, 5567, 167, 163, 7630, 7629, 4062,
	-1000, 214, 209, 606, -1000, 572, -1000, -1000, 397, -40,
	-1000, 5942, 5886, 2855, 7316, 3905, -1000, -1000, -1000, 5827,
	-1000, -63, 5567, -1000, 6857, 7630, 212, 161, -1000, -1000,
	-1000, 47, -1000, -1000, 719, -1000, -1000, -1000, -1000, -1000,
	5567, -1000, 7083, -1000, -1000, 5768, -1000, -1000, 46, 5709,
	-1000, -1000, -1000, 606, 160, 5567, -1000, -1000, 159, -29,
	-1000, 28, -1000, -1000, 564, -1000, -1000, -1000, -1000, 144,
	4992, 6857, -1000, -1000, 759, 516, -32, -1000, -1000, 759,
	770, -1000, 331, -1000, -1000, -1000, 5653, 329, 6857, -1000,
	328, 326, 167, 324, -1000, 141, 594, 7630, 211, 4762,
	-1000, -1000, -1000, 662, 209, 130, -1000, 396, -40, 1607,
	-1000, 572, 4376, 283, 322, -1000, -1000, -1000, 5567, 7083,
	-1000, 4762, -63, -1000, -1000, 5597, -1000, -1000, -1000, -1000,
	-1000, -1000, 221, 209, 481, -1000, -1000, -1000, -1000, -35,
	-1000, 759, 377, 770, -1000, -32, -1000, 2696, 321, 5567,
	404, -1000, 788, -1000, -1000, 3591, 7629, -1000, 4762, 39,
	2537, -1000, 210, 392, 107, 652, 391, -1000, -1000, -1000,
	209, 712, 572, 611, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1448, -1000, -1000, -1000, -1000, 3332, 7083, 106,
	376, 390, -1000, 209, -1000, 746, -1000, 368, 759, -35,
	-1000, -1000, 366, 318, -1000, 96, -1000, 5567, 208, 393,
	317, 782, -1000, -1000, -1000, 95, -1000, 93, -1000, 314,
	572, -1000, 221, 221, 205, -1000, 1289, 725, 7469, -1,
	-43, -1000, -1000, 3332, -63, -1000, -1000, 591, -1000, -64,
	-1000, -1000, 365, -1000, -1000, 3748, 351, -1000, -1000, -1000,
	-1000, -1000, 311, 2378, 3591, -1000, -1000, 85, -1000, 2219,
	389, 388, 185, 1130, -1000, -37, -1000, -67, -38, -1000,
	-68, 7469, -1000, -1000, 4661, 971, 5567, 5567, -1000, -1000,
	-1000, -1000, -1000, 3332, -1000, 309, -1000, 89, 572, -1000,
	-1000, -1000, -42, -1000, -1000, 732, -1000, -1000, 725, -1000,
	5567, -1000, 7469, 5567, -1000, -1000, 4533, -1000, 308, 307,
	649, 672, 492, -1000, 483, -1000, -1000, 7083, 6857, 2060,
	3332, -1000, 387, -1000, 1901, 1742, -1000, 185, -1000, -1000,
	6857, -1000, 6857, 86, -1000, -1000, -1000, -1000, 572, 7570,
	7469, 97, -1000, -1000, -1000, -1000, -1000, -1000, 209, -40,
	-1000, -1000, 7469, -1000, -1000, 1583, 88, -1000, -1000, 221,
	285, -1000, -1000, -1000, 1424, -1000,
}
var yyPgo = [...]int{

	0, 960, 958, 15, 7, 947, 4, 28, 13, 946,
	11, 36, 82, 80, 49, 48, 943, 26, 941, 74,
	21, 78, 939, 25, 938, 0, 63, 3, 936, 935,
	934, 42, 196, 32, 19, 38, 931, 928, 50, 923,
	71, 921, 8, 920, 919, 918, 917, 14, 46, 916,
	915, 103, 106, 320, 914, 912, 29, 897, 896, 5,
	894, 88, 62, 890, 81, 56, 889, 888, 883, 882,
	879, 89, 878, 877, 876, 10, 875, 92, 870, 869,
	868, 867, 865, 861, 860, 34, 33, 553, 9, 18,
	855, 854, 43, 47, 41, 2, 16, 777, 84, 79,
	853, 852, 848, 12, 843, 842, 558, 841, 45, 40,
	839, 838, 6, 728, 20, 563, 837, 836, 44, 835,
	73, 1, 17, 833, 828, 827, 792, 791, 37,
}
var yyR1 = [...]int{

	0, 127, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 6, 6, 120,
	120, 89, 89, 10, 10, 10, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
	9, 113, 113, 16, 16, 18, 18, 7, 7, 86,
	86, 85, 85, 87, 87, 17, 17, 20, 20, 19,
	19, 77, 77, 121, 121, 22, 22, 22, 22, 22,
	22, 22, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 117, 117, 74, 74,
	30, 30, 107, 107, 31, 12, 1, 1, 2, 2,
	13, 13, 126, 126, 97, 97, 14, 15, 108, 108,
	110, 110, 109, 109, 114, 114, 114, 114, 104, 104,
	103, 103, 29, 29, 101, 101, 101, 101, 118, 118,
	118, 8, 8, 105, 105, 84, 84, 76, 76, 90,
	90, 80, 80, 27, 27, 28, 28, 33, 33, 34,
	34, 96, 96, 94, 94, 94, 95, 95, 98, 98,
	78, 78, 35, 35, 37, 37, 38, 39, 39, 40,
	40, 122, 122, 41, 41, 41, 41, 75, 75, 100,
	100, 100, 119, 119, 42, 42, 43, 44, 44, 44,
	44, 46, 46, 45, 102, 102, 124, 124, 123, 123,
	125, 125, 112, 112, 112, 112, 112, 112, 79, 79,
	47, 47, 83, 83, 88, 21, 73, 73, 48, 23,
	23, 24, 24, 50, 49, 49, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 106, 106, 128, 3, 3, 111, 111,
	81, 81, 59, 59, 60, 60, 60, 60, 51, 51,
	52, 52, 57, 57, 116, 116, 116, 99, 99, 64,
	64, 64, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 65, 65,
	65, 25, 25, 26, 26, 63, 66, 66, 66, 67,
	67, 67, 68, 68, 68, 68, 68, 68, 68, 32,
	32, 32, 32, 53, 53, 53, 69, 69, 70, 70,
	70, 70, 70, 70, 70, 61, 61, 61, 62, 62,
	62, 56, 92, 92, 55, 55, 91, 91, 91, 91,
	91, 91, 91, 115, 115, 115, 115, 71, 71, 71,
	71, 71, 71, 71, 71, 72, 72, 72, 72, 54,
	54, 54, 54, 54, 54, 54, 82, 82, 93,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	0, 1, 3, 1, 3, 2, 1, 1, 1, 1,
	1, 1, 4, 3, 5, 4, 3, 4, 3, 4,
	3, 1, 1, 6, 7, 6, 7, 0, 1, 3,
	1, 3, 1, 3, 1, 1, 2, 1, 3, 1,
	2, 3, 1, 2, 0, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 1, 5, 7, 9, 5, 3,
	3, 3, 3, 3, 3, 1, 2, 6, 7, 9,
	5, 1, 6, 3, 3, 2, 0, 9, 1, 3,
	0, 4, 1, 3, 1, 11, 0, 1, 0, 1,
	9, 8, 1, 2, 1, 1, 6, 7, 0, 2,
	0, 2, 0, 2, 1, 2, 4, 3, 1, 4,
	1, 4, 1, 4, 3, 4, 4, 5, 0, 5,
	4, 1, 1, 1, 4, 5, 6, 1, 3, 6,
	7, 3, 6, 1, 0, 1, 3, 4, 6, 0,
	1, 1, 2, 1, 1, 1, 0, 2, 2, 4,
	1, 3, 1, 2, 3, 1, 1, 3, 1, 1,
	3, 2, 0, 4, 4, 3, 10, 1, 3, 1,
	2, 3, 1, 2, 2, 2, 3, 3, 3, 4,
	3, 1, 1, 3, 1, 3, 1, 1, 0, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 4, 3, 1, 4, 4, 3, 1, 1, 0,
	1, 3, 1, 8, 3, 2, 6, 5, 3, 4,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 5, 4, 3, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 3, 2, 1, 2, 4,
	2, 1, 2, 11, 9, 0, 0, 1, 0, 4,
	3, 1, 1, 2, 2, 4, 4, 2, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 0, 1, 4,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 2, 3, 3, 1, 1, 1, 3,
	3, 1, 1, 0, 1, 1, 1, 3, 1, 1,
	3, 1, 1, 4, 4, 4, 4, 4, 1, 1,
	1, 3, 3, 1, 4, 2, 3, 3, 1, 4,
	4, 3, 3, 3, 3, 1, 3, 1, 1, 3,
	1, 1, 0, 1, 3, 1, 3, 1, 4, 2,
	2, 6, 4, 2, 2, 1, 2, 1, 4, 3,
	3, 3, 3, 6, 3, 1, 1, 2, 1, 5,
	4, 2, 2, 4, 2, 2, 1, 3, 1,
}
var yyChk = [...]int{

	-1000, -127, -120, -9, 2, -11, -12, -13, -14, -15,
	52, 80, 45, 39, 145, -76, -80, 21, 20, 23,
	30, 34, 35, 40, 47, 99, 19, 14, -25, 49,
	25, 27, 147, 41, 44, 36, 10, 37, -126, 53,
	54, 55, -84, -90, -32, -36, -97, 7, -68, -69,
	-66, 60, 151, 93, 105, 106, 156, 155, 157, 158,
	149, -49, -54, 108, 109, 110, 111, 112, 113, 114,
	6, 159, -58, 144, 97, 98, 107, -106, 100, 101,
	-53, -65, -60, -51, -63, -64, 92, 50, 51, 4,
	5, 85, 86, 87, 8, 9, 67, 68, 82, 64,
	65, 66, 81, 63, 75, 143, 38, 12, 160, -10,
	-67, 61, 18, -89, 83, 149, 83, -89, 145, 10,
	-18, -113, -87, -89, 83, 37, 39, -19, -20, -77,
	-21, 10, -121, 149, -11, 37, 80, 149, 149, -26,
	-25, 99, -26, -26, -37, -38, -53, -39, -106, -40,
	12, -73, -48, -25, 147, 131, 132, 88, 90, 89,
	162, 154, 164, 170, 156, 155, 165, 133, 166, 167,
	134, 135, 136, 137, 138, 139, 168, 140, 169, 141,
	116, 91, 153, 115, 149, 149, 149, 145, -25, 10,
	148, -3, 154, 53, -97, 10, 10, 10, 94, 95,
	94, 96, 95, 163, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 105, 106, 149,
	151, 145, 58, 142, 149, -56, -55, -92, -91, -25,
	154, 84, 60, -25, -32, -65, 149, -64, 99, 151,
	-32, -25, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -57, 149, -25, -116, 17, -115, -71,
	12, 77, 78, -25, -25, -25, 151, 79, 79, -52,
	-50, -51, -70, 53, -10, -53, 149, 149, -25, -25,
	149, -25, -25, 17, 76, -115, -115, 17, -3, 145,
	-53, -98, 149, -98, 149, 83, -89, 150, -89, 147,
	145, -120, 147, -16, -87, -89, 83, 147, 161, 83,
	29, -89, -20, 147, 161, 163, -22, 146, 2, -11,
	-12, -13, -14, -15, 52, -25, 21, -3, -23, -24,
	-25, -25, 147, 147, 147, 147, 161, 147, 161, 163,
	147, 161, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -25, -25, -25, -52, -25,
	148, -25, -107, -31, -32, -25, -77, -121, 147, 147,
	10, -128, 10, -108, 56, -128, -110, 56, 149, -11,
	149, 147, 148, -25, 154, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -25, -25, -25, -25, -26,
	-25, -62, 10, 145, -53, -62, -56, 152, 161, 59,
	-32, -25, 149, -25, -56, 150, -26, 144, -71, -71,
	17, 151, 58, 142, -25, 11, -32, 59, -26, -61,
	-6, -53, 145, 10, -5, -4, 99, 100, 101, 102,
	103, 104, 4, 5, 85, 86, 87, 88, 89, 90,
	91, 92, 93, 6, 7, 94, 95, 96, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	35, 36, 37, 39, 40, 97, 98, 60, 30, 31,
	32, 33, 34, 61, 62, 56, 57, 80, 54, 55,
	53, 63, 64, 66, 65, 67, 68, 82, 81, 38,
	-61, -6, -53, -99, -98, 79, 151, 145, 58, 142,
	79, -99, -82, -93, -25, -25, -25, 76, 76, 143,
	149, -25, 150, -78, -35, -25, 84, -56, 10, 147,
	-120, 146, 147, 147, 83, -89, -19, 83, -89, 145,
	10, 83, -21, -25, 149, 150, 149, 147, 161, 150,
	-38, -40, -25, -48, 148, -25, -7, 161, 29, 150,
	146, -128, 149, -108, -109, 57, -10, 145, -128, -75,
	-10, -25, -25, -121, -25, 150, 152, 146, -98, -25,
	-98, 150, 163, -92, -25, 154, 60, -56, 150, 152,
	150, -72, 10, 13, 155, 12, 10, 10, 146, 146,
	151, 146, -25, 152, -98, -25, -98, -53, -26, -25,
	-62, -62, -53, -108, -7, 161, 150, 150, -27, -28,
	-33, -34, -96, -94, 153, 61, 62, -10, 146, -7,
	161, -25, 150, 146, 145, 83, -86, -17, -20, -113,
	145, -128, 150, -105, -11, 148, -25, -23, -25, -101,
	145, 148, -25, 150, -31, -114, -32, 154, 60, 151,
	-29, -11, 148, -117, 149, -27, -109, -128, -75, -122,
	145, 161, 150, 150, 96, -11, 148, 146, 163, -25,
	-32, 149, 150, 152, 13, -25, 146, 152, 146, -109,
	150, -93, 150, 161, -1, 154, -94, 150, -35, -85,
	-20, 145, -7, 161, -20, -86, 147, -121, 150, 147,
	-118, 147, -118, 147, 147, 150, 59, -32, 149, -56,
	-121, -30, 42, 43, -27, 150, -128, 145, 146, -41,
	-124, -123, 45, -125, 48, -112, 104, 103, 102, 99,
	100, 101, -122, -10, -11, 148, 147, -121, -25, -56,
	152, -128, -95, 148, -33, -2, 84, -7, 161, -85,
	146, -17, -7, 22, 147, -23, 146, 32, 33, -118,
	31, -118, -103, -11, 148, -114, -32, -56, 152, 28,
	149, 145, 150, -111, 45, 145, -122, -34, 39, 37,
	-75, -112, 146, -121, 150, 146, 145, -128, -96, 12,
	146, -20, -7, 146, 147, 150, -25, -8, 148, 147,
	146, 147, 31, -121, 150, 150, 147, -74, -10, -121,
	-95, -95, 149, -122, 146, -79, -47, 12, -83, -88,
	-6, -3, -100, 147, 145, -122, 59, 163, 146, -104,
	-11, 148, -8, -121, 147, 26, -103, 12, 162, 146,
	145, 145, -81, -59, 12, 154, 146, 147, 161, -128,
	163, 147, 161, 163, -6, 146, -119, -42, -43, -44,
	-45, -46, -10, -6, 80, 10, 146, -25, -25, -121,
	-121, 147, 150, -10, -121, -121, 150, 161, 12, -47,
	-25, -88, -25, -128, 146, -42, 147, 147, 46, 29,
	79, 24, 145, 146, 146, -59, -128, -128, 149, -75,
	10, -4, -112, -6, 147, -121, -27, -6, 146, 150,
	-95, -102, 147, 145, -121, 146,
}
var yyDef = [...]int{

	80, -2, -2, 79, 86, 87, 88, 89, 90, 91,
	0, 0, 0, 0, 124, 133, 134, 0, 0, 0,
	0, 423, 423, 423, 0, 388, 0, 145, 0, 0,
	0, 0, 151, 0, 0, 0, 81, 376, 0, 0,
	0, 0, 207, 0, -2, 422, 172, 0, -2, 440,
	425, 0, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 354, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 364, 394, 0, 367, 0, 371, 174, 175,
	432, 417, 438, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 0, 376, 443, 0, -2,
	0, 0, 401, 83, 0, 0, 0, 0, 80, 81,
	0, 0, 0, 117, 0, 101, 102, 114, 119, 0,
	122, 0, 0, 0, 0, 376, 0, 289, 0, 0,
	424, 388, 0, 0, 0, 235, 236, 0, 372, 238,
	239, 0, 287, 288, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	155, 375, 377, 0, 173, 178, 375, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 316, 0,
	423, 0, 0, 0, 462, 0, 461, 465, 463, 467,
	0, 0, 0, 300, -2, 0, 0, -2, 388, 462,
	-2, 335, 336, 337, 338, 0, 355, 356, 357, 358,
	359, 360, 361, 362, 423, 363, 0, 395, 396, 475,
	477, 0, 0, 366, 368, 370, 423, 0, 0, 397,
	295, 390, 391, 397, 389, 448, 0, 0, 491, 492,
	0, 494, 495, 0, 413, 0, 0, 0, 0, 0,
	445, 384, 0, 387, 462, 0, 85, 0, 84, 93,
	80, 0, 96, 0, 0, 117, 0, 98, 0, 0,
	0, 117, 120, 100, 0, 0, 123, 132, 125, 126,
	127, 128, 129, 130, 0, 0, 0, 375, 0, 290,
	292, 0, 139, 140, 141, 142, 0, 143, 0, 0,
	144, 0, 318, 319, 320, 321, 322, 323, 324, 325,
	326, 327, 328, 329, 330, 331, 332, 333, 334, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 348, 0,
	0, 353, 107, 162, -2, 0, 0, 0, 153, 154,
	375, 0, 178, 182, 0, 0, 375, 0, 0, 208,
	0, 211, 124, 298, 0, 301, 302, 303, 304, 305,
	306, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	0, 441, 458, 0, 460, 442, 0, 400, 462, 0,
	-2, 470, 462, 0, 0, -2, 0, 365, 476, 473,
	474, 0, 0, 0, 0, 0, 426, 0, 0, 0,
	-2, -2, 0, 77, 78, 70, 71, 72, 73, 74,
	75, 76, 2, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
	50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
	60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	0, -2, -2, 294, 398, 0, 423, 0, 0, 0,
	0, 178, 107, 496, 498, 0, 0, 412, 415, 414,
	-2, 0, 228, 107, 230, 232, 0, 0, 82, 92,
	0, 95, 97, 99, 0, 117, 113, 0, 117, 0,
	118, 0, 121, 375, 0, 0, 0, 289, 0, 0,
	234, 237, 240, 286, 0, 352, 0, 108, 0, 0,
	156, 0, -2, 182, 375, 0, 179, 242, 0, 181,
	247, 0, 0, 0, 299, 0, 433, 435, 436, 0,
	437, 0, 0, 464, 466, 0, 0, 0, -2, 400,
	393, 0, 485, 486, 0, 488, 479, 480, 481, 482,
	0, 484, 369, 434, 385, 0, 386, 453, 0, 0,
	451, 452, 454, 182, 0, 108, 490, 493, 0, 213,
	215, 166, 220, 221, 0, 223, 224, 225, 444, 0,
	108, 233, 399, 94, 0, 0, 107, 110, 115, 0,
	0, 285, 0, 135, 203, 124, 0, 0, 291, 138,
	198, 198, 351, 0, 163, 0, -2, 0, 0, 462,
	150, 192, 124, 160, -2, 0, 375, 0, 183, 268,
	242, 0, 0, 0, 0, 205, 124, 459, 0, 297,
	-2, 462, 472, 478, 487, 0, 456, 449, 450, 375,
	489, 497, 226, 219, 168, 167, 222, 229, 231, 107,
	112, 0, 0, 108, 116, 107, 131, 0, 0, 289,
	0, 198, 0, 198, 147, 0, 0, -2, 462, 0,
	0, 152, 0, 0, 0, 378, 0, 242, 176, 241,
	219, 0, 0, -2, 267, 270, 272, 273, 274, 275,
	276, 277, 268, 248, 206, 124, 212, -2, 296, 0,
	0, 0, 375, 0, 216, 0, 169, 0, 108, 107,
	105, 109, 0, 0, 136, 0, 194, 0, 0, 0,
	0, 0, 148, 190, 124, 0, -2, 0, -2, 0,
	0, 124, 226, 226, 0, 242, 268, 0, 0, 376,
	0, 271, 177, -2, 471, 483, 242, 0, 227, 217,
	103, 111, 0, 106, 204, 0, 0, 124, 201, 202,
	195, 196, 0, 0, 0, 186, 193, 0, 158, 0,
	0, 0, 0, 268, 171, 0, 279, 375, 0, 283,
	0, 0, 245, 249, 0, 268, 0, 0, 104, 137,
	188, 124, 124, -2, 197, 0, 149, 0, 0, 161,
	124, 124, 0, 381, 382, 0, 170, 243, 0, 280,
	0, 244, 0, 0, 375, 250, 0, 252, 0, 0,
	262, 0, 0, 261, 57, -2, 293, 374, 218, 0,
	-2, 191, 0, 159, 0, 0, 379, 0, 383, 278,
	375, 282, 375, 0, 251, 253, 254, 255, 0, 0,
	0, 0, 124, 165, 373, 380, 281, 284, -2, 256,
	257, 258, 260, 263, 189, 0, 0, 259, 157, 226,
	0, 246, 264, 124, 0, 265,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 157, 143, 3, 160, 167, 154, 3,
	149, 150, 165, 156, 161, 155, 170, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 148, 147,
	168, 163, 169, 153, 159, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 151, 3, 152, 164, 3, 144, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 145, 162, 146, 158,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

// line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:284
		{
			yylex.(*Parser).currentToken.Value = nil

			yylex.(*Parser).rootNode = &ast.Root{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].list),
				Stmts:    yyDollar[1].list,
				EndTkn:   yylex.(*Parser).currentToken,
			}
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:296
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:296
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:296
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:296
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:296
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:296
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:296
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:296
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:315
		{
			yyVAL.token = yyDollar[1].token
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:326
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:332
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:339
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.NamePart{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						StringTkn: yyDollar[1].token,
						Value:     yyDollar[1].token.Value,
					},
				},
			}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:351
		{
			part := &ast.NamePart{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
				StringTkn: yyDollar[3].token,
				Value:     yyDollar[3].token.Value,
			}

			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, part)

			yyVAL.node = yyDollar[1].node
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:367
		{
			yyVAL.node = &ast.Name{
				Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
				Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:375
		{
			yyVAL.node = &ast.NameRelative{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].node.(*ParserSeparatedList).Items),
				NsTkn:          yyDollar[1].token,
				NsSeparatorTkn: yyDollar[2].token,
				Parts:          yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:385
		{
			yyVAL.node = &ast.NameFullyQualified{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				NsSeparatorTkn: yyDollar[1].token,
				Parts:          yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:397
		{
			// error
			yyVAL.node = nil
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:402
		{
			yyVAL.node = yyDollar[1].node
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:406
		{
			yyVAL.node = yyDollar[1].node
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:410
		{
			yyVAL.node = yyDollar[1].node
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:414
		{
			yyVAL.node = yyDollar[1].node
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:418
		{
			yyVAL.node = yyDollar[1].node
		}
	case 92:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:422
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:432
		{
			yyVAL.node = &ast.StmtNamespace{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				NsTkn:    yyDollar[1].token,
				Name: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:445
		{
			yyVAL.node = &ast.StmtNamespace{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				NsTkn:    yyDollar[1].token,
				Name: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Stmts:                yyDollar[4].list,
				CloseCurlyBracketTkn: yyDollar[5].token,
			}
		}
	case 95:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:460
		{
			yyVAL.node = &ast.StmtNamespace{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				NsTkn:                yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:470
		{
			use := yyDollar[2].node.(*ast.StmtGroupUseList)

			use.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)
			use.UseTkn = yyDollar[1].token
			use.SemiColonTkn = yyDollar[3].token

			yyVAL.node = yyDollar[2].node
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:480
		{
			use := yyDollar[3].node.(*ast.StmtGroupUseList)

			use.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			use.UseTkn = yyDollar[1].token
			use.Type = yyDollar[2].node
			use.SemiColonTkn = yyDollar[4].token

			yyVAL.node = yyDollar[3].node
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:491
		{
			yyVAL.node = &ast.StmtUseList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				UseTkn:        yyDollar[1].token,
				Uses:          yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:501
		{
			yyVAL.node = &ast.StmtUseList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				UseTkn:        yyDollar[1].token,
				Type:          yyDollar[2].node,
				Uses:          yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:512
		{
			yyVAL.node = &ast.StmtConstList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ConstTkn:      yyDollar[1].token,
				Consts:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:525
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:533
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 103:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:544
		{
			if yyDollar[5].token != nil {
				yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[5].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[6].token),
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[2].token,
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Uses:                 yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:564
		{
			if yyDollar[6].token != nil {
				yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[6].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position:              yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				LeadingNsSeparatorTkn: yyDollar[1].token,
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[3].token,
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Uses:                 yyDollar[5].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}
		}
	case 105:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:588
		{
			if yyDollar[5].token != nil {
				yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[5].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[6].token),
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[2].token,
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Uses:                 yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 106:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:608
		{
			if yyDollar[6].token != nil {
				yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[6].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position:              yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				LeadingNsSeparatorTkn: yyDollar[1].token,
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[3].token,
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Uses:                 yyDollar[5].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}
		}
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:632
		{
			yyVAL.token = nil
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:636
		{
			yyVAL.token = yyDollar[1].token
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:643
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:650
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:659
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:666
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:675
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:682
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:691
		{
			yyVAL.node = yyDollar[1].node
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:695
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.Type = yyDollar[1].node
			decl.Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node)

			yyVAL.node = yyDollar[2].node
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:706
		{
			yyVAL.node = &ast.StmtUse{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
				Use: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
			}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:717
		{
			yyVAL.node = &ast.StmtUse{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].token),
				Use: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				AsTkn: yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:737
		{
			yyVAL.node = yyDollar[1].node
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:741
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.NsSeparatorTkn = yyDollar[1].token
			decl.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			yyVAL.node = yyDollar[2].node
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:752
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:759
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:768
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:774
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:781
		{
			// error
			yyVAL.node = nil
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:786
		{
			yyVAL.node = yyDollar[1].node
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:790
		{
			yyVAL.node = yyDollar[1].node
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:794
		{
			yyVAL.node = yyDollar[1].node
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:798
		{
			yyVAL.node = yyDollar[1].node
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:802
		{
			yyVAL.node = yyDollar[1].node
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:806
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:818
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:827
		{
			yyVAL.node = yyDollar[1].node
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:831
		{
			yyVAL.node = yyDollar[1].node
		}
	case 135:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:835
		{
			yyDollar[5].node.(*ast.StmtWhile).WhileTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtWhile).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtWhile).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtWhile).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtWhile).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:845
		{
			yyVAL.node = &ast.StmtDo{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				DoTkn:               yyDollar[1].token,
				Stmt:                yyDollar[2].node,
				WhileTkn:            yyDollar[3].token,
				OpenParenthesisTkn:  yyDollar[4].token,
				Cond:                yyDollar[5].node,
				CloseParenthesisTkn: yyDollar[6].token,
				SemiColonTkn:        yyDollar[7].token,
			}
		}
	case 137:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:858
		{
			yyDollar[9].node.(*ast.StmtFor).ForTkn = yyDollar[1].token
			yyDollar[9].node.(*ast.StmtFor).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[9].node.(*ast.StmtFor).Init = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).InitSeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).InitSemiColonTkn = yyDollar[4].token
			yyDollar[9].node.(*ast.StmtFor).Cond = yyDollar[5].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).CondSeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CondSemiColonTkn = yyDollar[6].token
			yyDollar[9].node.(*ast.StmtFor).Loop = yyDollar[7].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).LoopSeparatorTkns = yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CloseParenthesisTkn = yyDollar[8].token
			yyDollar[9].node.(*ast.StmtFor).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			yyVAL.node = yyDollar[9].node
		}
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:875
		{
			yyDollar[5].node.(*ast.StmtSwitch).SwitchTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtSwitch).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtSwitch).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtSwitch).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtSwitch).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:885
		{
			yyVAL.node = &ast.StmtBreak{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				BreakTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:894
		{
			yyVAL.node = &ast.StmtContinue{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ContinueTkn:  yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:903
		{
			yyVAL.node = &ast.StmtReturn{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ReturnTkn:    yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:912
		{
			yyDollar[2].node.(*ast.StmtGlobal).GlobalTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtGlobal).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtGlobal).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:920
		{
			yyDollar[2].node.(*ast.StmtStatic).StaticTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtStatic).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtStatic).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:928
		{
			yyDollar[2].node.(*ast.StmtEcho).EchoTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtEcho).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtEcho).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:936
		{
			yyVAL.node = &ast.StmtInlineHtml{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				InlineHtmlTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:944
		{
			yyVAL.node = &ast.StmtExpression{
				Position:     yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Expr:         yyDollar[1].node,
				SemiColonTkn: yyDollar[2].token,
			}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:952
		{
			yyDollar[3].node.(*ast.StmtUnset).UnsetTkn = yyDollar[1].token
			yyDollar[3].node.(*ast.StmtUnset).OpenParenthesisTkn = yyDollar[2].token
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[4].token)
			}
			yyDollar[3].node.(*ast.StmtUnset).CloseParenthesisTkn = yyDollar[5].token
			yyDollar[3].node.(*ast.StmtUnset).SemiColonTkn = yyDollar[6].token
			yyDollar[3].node.(*ast.StmtUnset).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			yyVAL.node = yyDollar[3].node
		}
	case 148:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:965
		{
			foreach := yyDollar[7].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[7].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Var = yyDollar[5].node
			foreach.CloseParenthesisTkn = yyDollar[6].token

			if val, ok := yyDollar[5].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 149:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:984
		{
			foreach := yyDollar[9].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Key = yyDollar[5].node
			foreach.DoubleArrowTkn = yyDollar[6].token
			foreach.Var = yyDollar[7].node
			foreach.CloseParenthesisTkn = yyDollar[8].token

			if val, ok := yyDollar[7].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1005
		{
			yyDollar[5].node.(*ast.StmtDeclare).DeclareTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtDeclare).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtDeclare).Consts = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[5].node.(*ast.StmtDeclare).SeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[5].node.(*ast.StmtDeclare).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtDeclare).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1016
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1023
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[5].list)
			if yyDollar[6].node != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node)
			}

			yyVAL.node = &ast.StmtTry{
				Position:             pos,
				TryTkn:               yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
				Catches:              yyDollar[5].list,
				Finally:              yyDollar[6].node,
			}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1040
		{
			yyVAL.node = &ast.StmtThrow{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ThrowTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1049
		{
			yyVAL.node = &ast.StmtGoto{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				GotoTkn:  yyDollar[1].token,
				Label: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1062
		{
			yyVAL.node = &ast.StmtLabel{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				ColonTkn: yyDollar[2].token,
			}
		}
	case 156:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1076
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 157:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:1080
		{
			catch := yyDollar[4].node.(*ast.StmtCatch)
			catch.CatchTkn = yyDollar[2].token
			catch.OpenParenthesisTkn = yyDollar[3].token
			catch.Var = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[5].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[5].token),
					IdentifierTkn: yyDollar[5].token,
					Value:         yyDollar[5].token.Value,
				},
			}
			catch.CloseParenthesisTkn = yyDollar[6].token
			catch.OpenCurlyBracketTkn = yyDollar[7].token
			catch.Stmts = yyDollar[8].list
			catch.CloseCurlyBracketTkn = yyDollar[9].token
			catch.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[2].token, yyDollar[9].token)

			yyVAL.list = append(yyDollar[1].list, catch)
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1103
		{
			yyVAL.node = &ast.StmtCatch{
				Types: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1109
		{
			yyDollar[1].node.(*ast.StmtCatch).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtCatch).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.StmtCatch).Types = append(yyDollar[1].node.(*ast.StmtCatch).Types, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1119
		{
			yyVAL.node = nil
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1123
		{
			yyVAL.node = &ast.StmtFinally{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				FinallyTkn:           yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1136
		{
			yyVAL.node = &ast.StmtUnset{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1142
		{
			yyDollar[1].node.(*ast.StmtUnset).Vars = append(yyDollar[1].node.(*ast.StmtUnset).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1152
		{
			yyVAL.node = yyDollar[1].node
		}
	case 165:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:1159
		{
			yyVAL.node = &ast.StmtFunction{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token),
				FunctionTkn:  yyDollar[1].token,
				AmpersandTkn: yyDollar[2].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
				OpenParenthesisTkn:   yyDollar[5].token,
				Params:               yyDollar[6].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[6].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn:  yyDollar[7].token,
				ColonTkn:             yyDollar[8].node.(*ReturnType).ColonTkn,
				ReturnType:           yyDollar[8].node.(*ReturnType).Type,
				OpenCurlyBracketTkn:  yyDollar[9].token,
				Stmts:                yyDollar[10].list,
				CloseCurlyBracketTkn: yyDollar[11].token,
			}
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1184
		{
			yyVAL.token = nil
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1188
		{
			yyVAL.token = yyDollar[1].token
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1195
		{
			yyVAL.token = nil
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1199
		{
			yyVAL.token = yyDollar[1].token
		}
	case 170:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:1206
		{
			class := &ast.StmtClass{
				Position:  yylex.(*Parser).builder.Pos.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[9].token),
				Modifiers: yyDollar[1].list,
				ClassTkn:  yyDollar[2].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[7].token,
				Stmts:                yyDollar[8].list,
				CloseCurlyBracketTkn: yyDollar[9].token,
			}

			if yyDollar[4].node != nil {
				class.ExtendsTkn = yyDollar[4].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[4].node.(*ast.StmtClass).Extends
			}

			if yyDollar[5].node != nil {
				class.ImplementsTkn = yyDollar[5].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[5].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[5].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 171:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1235
		{
			class := &ast.StmtClass{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[8].token),
				ClassTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[6].token,
				Stmts:                yyDollar[7].list,
				CloseCurlyBracketTkn: yyDollar[8].token,
			}

			if yyDollar[3].node != nil {
				class.ExtendsTkn = yyDollar[3].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[3].node.(*ast.StmtClass).Extends
			}

			if yyDollar[4].node != nil {
				class.ImplementsTkn = yyDollar[4].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[4].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[4].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1266
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1270
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1277
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1285
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 176:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1296
		{
			yyVAL.node = &ast.StmtTrait{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token),
				TraitTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Stmts:                yyDollar[5].list,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 177:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1314
		{
			iface := &ast.StmtInterface{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				InterfaceTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[5].token,
				Stmts:                yyDollar[6].list,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}

			if yyDollar[3].node != nil {
				iface.ExtendsTkn = yyDollar[3].node.(*ast.StmtInterface).ExtendsTkn
				iface.Extends = yyDollar[3].node.(*ast.StmtInterface).Extends
				iface.ExtendsSeparatorTkns = yyDollar[3].node.(*ast.StmtInterface).ExtendsSeparatorTkns
			}

			yyVAL.node = iface
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1340
		{
			yyVAL.node = nil
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1344
		{
			yyVAL.node = &ast.StmtClass{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExtendsTkn: yyDollar[1].token,
				Extends:    yyDollar[2].node,
			}
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1355
		{
			yyVAL.node = nil
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1359
		{
			yyVAL.node = &ast.StmtInterface{
				Position:             yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ExtendsTkn:           yyDollar[1].token,
				Extends:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ExtendsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1371
		{
			yyVAL.node = nil
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1375
		{
			yyVAL.node = &ast.StmtClass{
				Position:                yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ImplementsTkn:           yyDollar[1].token,
				Implements:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ImplementsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1387
		{
			yyVAL.node = yyDollar[1].node
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1391
		{
			yyVAL.node = &ast.StmtForeach{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Var:          yyDollar[2].node,
			}
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1399
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ListTkn:         yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1410
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1423
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1430
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForTkn:    yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1446
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1453
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForeachTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1469
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1476
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndDeclareTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1492
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Cases:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1501
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CaseSeparatorTkn:     yyDollar[2].token,
				Cases:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1511
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn:     yyDollar[1].token,
				Cases:        yyDollar[2].list,
				EndSwitchTkn: yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 197:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1521
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				ColonTkn:         yyDollar[1].token,
				CaseSeparatorTkn: yyDollar[2].token,
				Cases:            yyDollar[3].list,
				EndSwitchTkn:     yyDollar[4].token,
				SemiColonTkn:     yyDollar[5].token,
			}
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1535
		{
			yyVAL.list = nil
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1539
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtCase{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list),
				CaseTkn:          yyDollar[2].token,
				Cond:             yyDollar[3].node,
				CaseSeparatorTkn: yyDollar[4].token,
				Stmts:            yyDollar[5].list,
			})
		}
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1549
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtDefault{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				DefaultTkn:       yyDollar[2].token,
				CaseSeparatorTkn: yyDollar[3].token,
				Stmts:            yyDollar[4].list,
			})
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1561
		{
			yyVAL.token = yyDollar[1].token
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1565
		{
			yyVAL.token = yyDollar[1].token
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1572
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1579
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndWhileTkn:  yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 205:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1595
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				Stmt:                yyDollar[5].node,
			}
		}
	case 206:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1606
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				Stmt:                yyDollar[6].node,
			})

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)

			yyVAL.node = yyDollar[1].node
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1624
		{
			yyVAL.node = yyDollar[1].node
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1628
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[3].node),
				ElseTkn:  yyDollar[2].token,
				Stmt:     yyDollar[3].node,
			}

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 209:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1643
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[6].list),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				ColonTkn:            yyDollar[5].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[6].list),
					Stmts:    yyDollar[6].list,
				},
			}
		}
	case 210:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1658
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[7].list),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[7].list),
					Stmts:    yyDollar[7].list,
				},
			})

			yyVAL.node = yyDollar[1].node
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1678
		{
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[2].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[3].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			yyVAL.node = yyDollar[1].node
		}
	case 212:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1686
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				ElseTkn:  yyDollar[2].token,
				ColonTkn: yyDollar[3].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[4].list),
					Stmts:    yyDollar[4].list,
				},
			}
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[5].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[6].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token)

			yyVAL.node = yyDollar[1].node
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1706
		{
			yyVAL.node = yyDollar[1].node
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1710
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1717
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1723
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1733
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token)
			if yyDollar[1].node != nil {
				pos = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)
			} else if yyDollar[2].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[2].token, yyDollar[4].token)
			} else if yyDollar[3].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[3].token, yyDollar[4].token)
			}

			yyVAL.node = &ast.Parameter{
				Position:     pos,
				Type:         yyDollar[1].node,
				AmpersandTkn: yyDollar[2].token,
				VariadicTkn:  yyDollar[3].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
						IdentifierTkn: yyDollar[4].token,
						Value:         yyDollar[4].token.Value,
					},
				},
			}
		}
	case 218:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1759
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node)
			if yyDollar[1].node != nil {
				pos = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)
			} else if yyDollar[2].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node)
			} else if yyDollar[3].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[3].token, yyDollar[6].node)
			}

			yyVAL.node = &ast.Parameter{
				Position:     pos,
				Type:         yyDollar[1].node,
				AmpersandTkn: yyDollar[2].token,
				VariadicTkn:  yyDollar[3].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
						IdentifierTkn: yyDollar[4].token,
						Value:         yyDollar[4].token.Value,
					},
				},
				EqualTkn:     yyDollar[5].token,
				DefaultValue: yyDollar[6].node,
			}
		}
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1790
		{
			yyVAL.node = nil
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1794
		{
			yyVAL.node = yyDollar[1].node
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1801
		{
			yyVAL.node = yyDollar[1].node
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1805
		{
			yyVAL.node = &ast.Nullable{
				Position:    yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				QuestionTkn: yyDollar[1].token,
				Expr:        yyDollar[2].node,
			}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1816
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1824
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1832
		{
			yyVAL.node = yyDollar[1].node
		}
	case 226:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1839
		{
			yyVAL.node = &ReturnType{}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1843
		{
			yyVAL.node = &ReturnType{
				ColonTkn: yyDollar[1].token,
				Type:     yyDollar[2].node,
			}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1853
		{
			yyVAL.node = &ArgumentList{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				CloseParenthesisTkn: yyDollar[2].token,
			}
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1861
		{
			argumentList := yyDollar[2].node.(*ArgumentList)
			argumentList.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			argumentList.OpenParenthesisTkn = yyDollar[1].token
			if yyDollar[3].token != nil {
				argumentList.SeparatorTkns = append(argumentList.SeparatorTkns, yyDollar[3].token)
			}
			argumentList.CloseParenthesisTkn = yyDollar[4].token

			yyVAL.node = argumentList
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1876
		{
			yyVAL.node = &ArgumentList{
				Arguments: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1882
		{
			yyDollar[1].node.(*ArgumentList).SeparatorTkns = append(yyDollar[1].node.(*ArgumentList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ArgumentList).Arguments = append(yyDollar[1].node.(*ArgumentList).Arguments, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1892
		{
			yyVAL.node = &ast.Argument{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Expr:     yyDollar[1].node,
			}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1899
		{
			yyVAL.node = &ast.Argument{
				Position:    yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				VariadicTkn: yyDollar[1].token,
				Expr:        yyDollar[2].node,
			}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1910
		{
			yyDollar[1].node.(*ast.StmtGlobal).Vars = append(yyDollar[1].node.(*ast.StmtGlobal).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1917
		{
			yyVAL.node = &ast.StmtGlobal{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1926
		{
			yyVAL.node = yyDollar[1].node
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1933
		{
			yyDollar[1].node.(*ast.StmtStatic).Vars = append(yyDollar[1].node.(*ast.StmtStatic).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1940
		{
			yyVAL.node = &ast.StmtStatic{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1949
		{

			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1964
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1983
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1987
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1994
		{
			yyVAL.node = &ast.StmtPropertyList{
				Position:      yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[4].token),
				Modifiers:     yyDollar[1].list,
				Type:          yyDollar[2].node,
				Props:         yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2005
		{
			yyVAL.node = &ast.StmtClassConstList{
				Position:      yylex.(*Parser).builder.Pos.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[4].token),
				Modifiers:     yyDollar[1].list,
				ConstTkn:      yyDollar[2].token,
				Consts:        yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2016
		{
			traitUse := &ast.StmtTraitUse{
				Position:      yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				UseTkn:        yyDollar[1].token,
				Traits:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}

			switch n := yyDollar[3].node.(type) {
			case *TraitAdaptationList:
				traitUse.OpenCurlyBracketTkn = n.OpenCurlyBracketTkn
				traitUse.Adaptations = n.Adaptations
				traitUse.CloseCurlyBracketTkn = n.CloseCurlyBracketTkn
			case *ast.StmtNop:
				traitUse.SemiColonTkn = n.SemiColonTkn
			}

			yyVAL.node = traitUse
		}
	case 246:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:2036
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[10].node)
			if yyDollar[1].list != nil {
				pos = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[10].node)
			}

			yyVAL.node = &ast.StmtClassMethod{
				Position:     pos,
				Modifiers:    yyDollar[1].list,
				FunctionTkn:  yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
				OpenParenthesisTkn:  yyDollar[6].token,
				Params:              yyDollar[7].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[8].token,
				ColonTkn:            yyDollar[9].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[9].node.(*ReturnType).Type,
				Stmt:                yyDollar[10].node,
			}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2065
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2071
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2081
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2088
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CloseCurlyBracketTkn: yyDollar[2].token,
			}
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2096
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Adaptations:          yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2108
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2112
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2119
		{
			yyDollar[1].node.(*ast.StmtTraitUsePrecedence).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2125
		{
			yyDollar[1].node.(*ast.StmtTraitUseAlias).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2134
		{
			yyVAL.node = &ast.StmtTraitUsePrecedence{
				Position:       yylex.(*Parser).builder.Pos.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].node.(*ParserSeparatedList).Items),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				InsteadofTkn:   yyDollar[2].token,
				Insteadof:      yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2149
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2164
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2179
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2195
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
			}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2209
		{
			yyVAL.node = &TraitMethodRef{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2220
		{
			yyVAL.node = yyDollar[1].node
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2227
		{
			yyVAL.node = &TraitMethodRef{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2243
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2250
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2262
		{
			yyVAL.list = yyDollar[1].list
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2266
		{
			yyVAL.list = []ast.Vertex{
				&ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2279
		{
			yyVAL.list = nil
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2283
		{
			yyVAL.list = yyDollar[1].list
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2290
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2294
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2301
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2309
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2317
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2325
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2333
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2341
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2352
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2359
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2368
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				Expr: nil,
			}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2383
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2402
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2409
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2418
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2434
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2450
		{
			yyDollar[1].node.(*ast.StmtEcho).Exprs = append(yyDollar[1].node.(*ast.StmtEcho).Exprs, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2457
		{
			yyVAL.node = &ast.StmtEcho{
				Exprs: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2466
		{
			yyVAL.node = yyDollar[1].node
		}
	case 289:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2473
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2477
		{
			yyVAL.node = yyDollar[1].node
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2484
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2491
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 293:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:2500
		{
			if yyDollar[2].node == nil {
				yyDollar[2].node = &ArgumentList{}
			}

			class := &ast.StmtClass{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[8].token),
				ClassTkn:             yyDollar[1].token,
				OpenParenthesisTkn:   yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                 yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:        yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn:  yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
				OpenCurlyBracketTkn:  yyDollar[6].token,
				Stmts:                yyDollar[7].list,
				CloseCurlyBracketTkn: yyDollar[8].token,
			}

			if yyDollar[3].node != nil {
				class.ExtendsTkn = yyDollar[3].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[3].node.(*ast.StmtClass).Extends
			}

			if yyDollar[4].node != nil {
				class.ImplementsTkn = yyDollar[4].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[4].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[4].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2534
		{
			if yyDollar[3].node != nil {
				yyVAL.node = &ast.ExprNew{
					Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
					NewTkn:              yyDollar[1].token,
					Class:               yyDollar[2].node,
					OpenParenthesisTkn:  yyDollar[3].node.(*ArgumentList).OpenParenthesisTkn,
					Args:                yyDollar[3].node.(*ArgumentList).Arguments,
					SeparatorTkns:       yyDollar[3].node.(*ArgumentList).SeparatorTkns,
					CloseParenthesisTkn: yyDollar[3].node.(*ArgumentList).CloseParenthesisTkn,
				}
			} else {
				yyVAL.node = &ast.ExprNew{
					Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
					NewTkn:   yyDollar[1].token,
					Class:    yyDollar[2].node,
				}
			}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2554
		{
			yyVAL.node = &ast.ExprNew{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				NewTkn:   yyDollar[1].token,
				Class:    yyDollar[2].node,
			}
		}
	case 296:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:2565
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
				EqualTkn: yyDollar[5].token,
				Expr:     yyDollar[6].node,
			}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:2581
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
					OpenBracketTkn:  yyDollar[1].token,
					Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[3].token,
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2596
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2605
		{
			yyVAL.node = &ast.ExprAssignReference{
				Position:     yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Var:          yyDollar[1].node,
				EqualTkn:     yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Expr:         yyDollar[4].node,
			}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2615
		{
			yyVAL.node = &ast.ExprClone{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CloneTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2623
		{
			yyVAL.node = &ast.ExprAssignPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2632
		{
			yyVAL.node = &ast.ExprAssignMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2641
		{
			yyVAL.node = &ast.ExprAssignMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2650
		{
			yyVAL.node = &ast.ExprAssignPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2659
		{
			yyVAL.node = &ast.ExprAssignDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2668
		{
			yyVAL.node = &ast.ExprAssignConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2677
		{
			yyVAL.node = &ast.ExprAssignMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2686
		{
			yyVAL.node = &ast.ExprAssignBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2695
		{
			yyVAL.node = &ast.ExprAssignBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2704
		{
			yyVAL.node = &ast.ExprAssignBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2713
		{
			yyVAL.node = &ast.ExprAssignShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2722
		{
			yyVAL.node = &ast.ExprAssignShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2731
		{
			yyVAL.node = &ast.ExprAssignCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2740
		{
			yyVAL.node = &ast.ExprPostInc{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				IncTkn:   yyDollar[2].token,
			}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2748
		{
			yyVAL.node = &ast.ExprPreInc{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2756
		{
			yyVAL.node = &ast.ExprPostDec{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				DecTkn:   yyDollar[2].token,
			}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2764
		{
			yyVAL.node = &ast.ExprPreDec{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DecTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2772
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2781
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2790
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2799
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2808
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2817
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2826
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2835
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2844
		{
			yyVAL.node = &ast.ExprBinaryConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2853
		{
			yyVAL.node = &ast.ExprBinaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2862
		{
			yyVAL.node = &ast.ExprBinaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2871
		{
			yyVAL.node = &ast.ExprBinaryMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2880
		{
			yyVAL.node = &ast.ExprBinaryPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2889
		{
			yyVAL.node = &ast.ExprBinaryDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2898
		{
			yyVAL.node = &ast.ExprBinaryMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2907
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2916
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2925
		{
			yyVAL.node = &ast.ExprUnaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PlusTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2933
		{
			yyVAL.node = &ast.ExprUnaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				MinusTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2941
		{
			yyVAL.node = &ast.ExprBooleanNot{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExclamationTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2949
		{
			yyVAL.node = &ast.ExprBitwiseNot{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				TildaTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2957
		{
			yyVAL.node = &ast.ExprBinaryIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2966
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2975
		{
			yyVAL.node = &ast.ExprBinaryEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2984
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2993
		{
			yyVAL.node = &ast.ExprBinarySmaller{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3002
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3011
		{
			yyVAL.node = &ast.ExprBinaryGreater{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3020
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3029
		{
			yyVAL.node = &ast.ExprBinarySpaceship{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3038
		{
			yyVAL.node = &ast.ExprInstanceOf{
				Position:      yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Expr:          yyDollar[1].node,
				InstanceOfTkn: yyDollar[2].token,
				Class:         yyDollar[3].node,
			}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3047
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3056
		{
			yyVAL.node = yyDollar[1].node
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:3060
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[5].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				IfTrue:      yyDollar[3].node,
				ColonTkn:    yyDollar[4].token,
				IfFalse:     yyDollar[5].node,
			}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3071
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				ColonTkn:    yyDollar[3].token,
				IfFalse:     yyDollar[4].node,
			}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3081
		{
			yyVAL.node = &ast.ExprBinaryCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3090
		{
			yyVAL.node = yyDollar[1].node
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3094
		{
			yyVAL.node = &ast.ExprCastInt{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3102
		{
			yyVAL.node = &ast.ExprCastDouble{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3110
		{
			yyVAL.node = &ast.ExprCastString{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3118
		{
			yyVAL.node = &ast.ExprCastArray{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3126
		{
			yyVAL.node = &ast.ExprCastObject{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3134
		{
			yyVAL.node = &ast.ExprCastBool{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3142
		{
			yyVAL.node = &ast.ExprCastUnset{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3150
		{
			exit := &ast.ExprExit{
				ExitTkn: yyDollar[1].token,
			}

			if yyDollar[2].node == nil {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token)
			} else {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				exit.OpenParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).OpenParenthesisTkn
				exit.Expr = yyDollar[2].node.(*ast.ExprBrackets).Expr
				exit.CloseParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).CloseParenthesisTkn
			}

			yyVAL.node = exit
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3167
		{
			yyVAL.node = &ast.ExprErrorSuppress{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AtTkn:    yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3175
		{
			yyVAL.node = yyDollar[1].node
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3179
		{
			yyVAL.node = &ast.ExprShellExec{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBacktickTkn:  yyDollar[1].token,
				Parts:            yyDollar[2].list,
				CloseBacktickTkn: yyDollar[3].token,
			}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3188
		{
			yyVAL.node = &ast.ExprPrint{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PrintTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3196
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				YieldTkn: yyDollar[1].token,
			}
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3203
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldTkn: yyDollar[1].token,
				Val:      yyDollar[2].node,
			}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3211
		{
			yyVAL.node = &ast.ExprYield{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				YieldTkn:       yyDollar[1].token,
				Key:            yyDollar[2].node,
				DoubleArrowTkn: yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3221
		{
			yyVAL.node = &ast.ExprYieldFrom{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldFromTkn: yyDollar[1].token,
				Expr:         yyDollar[2].node,
			}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3229
		{
			yyVAL.node = yyDollar[1].node
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3233
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			}

			yyVAL.node = yyDollar[2].node
		}
	case 373:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:3249
		{
			closure := yyDollar[7].node.(*ast.ExprClosure)

			closure.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token)
			closure.FunctionTkn = yyDollar[1].token
			closure.AmpersandTkn = yyDollar[2].token
			closure.OpenParenthesisTkn = yyDollar[4].token
			closure.Params = yyDollar[5].node.(*ParserSeparatedList).Items
			closure.SeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			closure.CloseParenthesisTkn = yyDollar[6].token
			closure.ColonTkn = yyDollar[8].node.(*ReturnType).ColonTkn
			closure.ReturnType = yyDollar[8].node.(*ReturnType).Type
			closure.OpenCurlyBracketTkn = yyDollar[9].token
			closure.Stmts = yyDollar[10].list
			closure.CloseCurlyBracketTkn = yyDollar[11].token

			yyVAL.node = closure
		}
	case 374:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:3268
		{
			yyVAL.node = &ast.ExprArrowFunction{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node),
				FnTkn:               yyDollar[1].token,
				AmpersandTkn:        yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Params:              yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[6].node.(*ReturnType).Type,
				DoubleArrowTkn:      yyDollar[8].token,
				Expr:                yyDollar[9].node,
			}
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3291
		{
			yyVAL.token = nil
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3295
		{
			yyVAL.token = yyDollar[1].token
		}
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3302
		{
			yyVAL.node = &ast.ExprClosure{}
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3306
		{
			yyVAL.node = &ast.ExprClosure{
				UseTkn:                 yyDollar[1].token,
				UseOpenParenthesisTkn:  yyDollar[2].token,
				Uses:                   yyDollar[3].node.(*ParserSeparatedList).Items,
				UseSeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				UseCloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3319
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3326
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3335
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3349
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				AmpersandTkn: yyDollar[1].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						IdentifierTkn: yyDollar[2].token,
						Value:         yyDollar[2].token.Value,
					},
				},
			}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3367
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3378
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3399
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3420
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3434
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3442
		{
			yyVAL.node = yyDollar[1].node
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3449
		{
			yyVAL.node = yyDollar[1].node
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3453
		{
			yyVAL.node = yyDollar[1].node
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3460
		{
			yyVAL.node = nil
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3464
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3476
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3480
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
			}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3490
		{
			yyVAL.list = yyDollar[1].list
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3497
		{
			yyVAL.node = nil
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3501
		{
			yyVAL.node = yyDollar[1].node
		}
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3508
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ArrayTkn:        yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3519
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3529
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3540
		{
			yyVAL.node = &ast.ScalarLnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3548
		{
			yyVAL.node = &ast.ScalarDnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3556
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3564
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3572
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3580
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3588
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3596
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3604
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3612
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3620
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:       yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn: yyDollar[1].token,
				Parts: []ast.Vertex{
					&ast.ScalarEncapsedStringPart{
						Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						EncapsedStrTkn: yyDollar[2].token,
						Value:          yyDollar[2].token.Value,
					},
				},
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3635
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenHeredocTkn:  yyDollar[1].token,
				CloseHeredocTkn: yyDollar[2].token,
			}
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3643
		{
			yyVAL.node = &ast.ScalarEncapsed{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenQuoteTkn:  yyDollar[1].token,
				Parts:         yyDollar[2].list,
				CloseQuoteTkn: yyDollar[3].token,
			}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3652
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn:  yyDollar[1].token,
				Parts:           yyDollar[2].list,
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3661
		{
			yyVAL.node = yyDollar[1].node
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3665
		{
			yyVAL.node = yyDollar[1].node
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3672
		{
			yyVAL.node = &ast.ExprConstFetch{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Const:    yyDollar[1].node,
			}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3679
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3692
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3708
		{
			yyVAL.node = yyDollar[1].node
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3712
		{
			yyVAL.node = yyDollar[1].node
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3719
		{
			yyVAL.node = nil
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3723
		{
			yyVAL.node = yyDollar[1].node
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3730
		{
			yyVAL.node = yyDollar[1].node
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3737
		{
			yyVAL.node = yyDollar[1].node
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3741
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3750
		{
			yyVAL.node = yyDollar[1].node
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3757
		{
			yyVAL.node = yyDollar[1].node
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3761
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3770
		{
			yyVAL.node = yyDollar[1].node
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3777
		{
			yyVAL.node = yyDollar[1].node
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3781
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3791
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3801
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3811
		{
			yyVAL.node = yylex.(*Parser).builder.NewMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3815
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafeMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3819
		{
			yyVAL.node = yyDollar[1].node
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3826
		{
			yyVAL.node = yyDollar[1].node
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3830
		{
			yyVAL.node = yyDollar[1].node
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3834
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3838
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3845
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3856
		{
			yyVAL.node = &ast.ExprVariable{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				DollarTkn:            yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Name:                 yyDollar[3].node,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3866
		{
			yyVAL.node = &ast.ExprVariable{
				Position:  yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DollarTkn: yyDollar[1].token,
				Name:      yyDollar[2].node,
			}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3877
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3886
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3898
		{
			yyVAL.node = yyDollar[1].node
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3902
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3912
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3922
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3926
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3930
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3939
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3951
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3959
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3968
		{
			yyVAL.node = yyDollar[1].node
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3975
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3983
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3992
		{
			yyVAL.node = yyDollar[1].node
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3999
		{
			pairList := yyDollar[1].node.(*ParserSeparatedList)
			fistPair := pairList.Items[0].(*ast.ExprArrayItem)

			if fistPair.Key == nil && fistPair.Val == nil && len(pairList.Items) == 1 {
				pairList.Items = nil
			}

			yyVAL.node = yyDollar[1].node
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:4013
		{
			yyVAL.node = &ast.ExprArrayItem{}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4017
		{
			yyVAL.node = yyDollar[1].node
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4024
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4031
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4040
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val:            yyDollar[3].node,
			}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4049
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Val:      yyDollar[1].node,
			}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4056
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				AmpersandTkn:   yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4066
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Val:          yyDollar[2].node,
			}
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4074
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:    yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				EllipsisTkn: yyDollar[1].token,
				Val:         yyDollar[2].node,
			}
		}
	case 471:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:4082
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[3].token, yyDollar[6].token),
					ListTkn:         yyDollar[3].token,
					OpenBracketTkn:  yyDollar[4].token,
					Items:           yyDollar[5].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[6].token,
				},
			}
		}
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4098
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
			}
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4115
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4119
		{
			yyVAL.list = append(
				yyDollar[1].list,
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					EncapsedStrTkn: yyDollar[2].token,
					Value:          yyDollar[2].token.Value,
				},
			)
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4130
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4134
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
				yyDollar[2].node,
			}
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4148
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4159
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4176
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4180
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4184
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name:                      yyDollar[2].node,
				CloseCurlyBracketTkn:      yyDollar[3].token,
			}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4193
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 483:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:4206
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenSquareBracketTkn:  yyDollar[3].token,
				Dim:                   yyDollar[4].node,
				CloseSquareBracketTkn: yyDollar[5].token,
				CloseCurlyBracketTkn:  yyDollar[6].token,
			}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4222
		{
			yyVAL.node = &ast.ScalarEncapsedStringBrackets{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Var:                  yyDollar[2].node,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4234
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4242
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(string(yyDollar[1].token.Value)); err == nil {
				yyVAL.node = &ast.ScalarLnumber{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					NumberTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					StringTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			}
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4259
		{
			_, err := strconv.Atoi(string(yyDollar[2].token.Value))
			isInt := err == nil

			if isInt {
				yyVAL.node = &ast.ExprUnaryMinus{
					Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn: yyDollar[1].token,
					Expr: &ast.ScalarLnumber{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						NumberTkn: yyDollar[2].token,
						Value:     yyDollar[2].token.Value,
					},
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn:  yyDollar[1].token,
					StringTkn: yyDollar[2].token,
					Value:     append([]byte("-"), yyDollar[2].token.Value...),
				}
			}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4283
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:4297
		{
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[4].token)
			}

			yyVAL.node = &ast.ExprIsset{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				IssetTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Vars:                yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
			}
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4312
		{
			yyVAL.node = &ast.ExprEmpty{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EmptyTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4322
		{
			yyVAL.node = &ast.ExprInclude{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4330
		{
			yyVAL.node = &ast.ExprIncludeOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4338
		{
			yyVAL.node = &ast.ExprEval{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EvalTkn:             yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4348
		{
			yyVAL.node = &ast.ExprRequire{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4356
		{
			yyVAL.node = &ast.ExprRequireOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4367
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4373
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4383
		{
			yyVAL.node = yyDollar[1].node
		}
	}
	goto yystack /* stack new state and value */
}
