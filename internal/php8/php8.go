// Code generated by goyacc -o internal/php8/php8.go internal/php8/php8.y. DO NOT EDIT.

// line internal/php8/php8.y:1

package php8

import __yyfmt__ "fmt"

// line internal/php8/php8.y:3

import (
	"strconv"

	"github.com/z7zmey/php-parser/pkg/ast"
	"github.com/z7zmey/php-parser/pkg/token"
)

// line internal/php8/php8.y:13
type yySymType struct {
	yys   int
	node  ast.Vertex
	token *token.Token
	list  []ast.Vertex
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_FN = 57380
const T_CONST = 57381
const T_RETURN = 57382
const T_TRY = 57383
const T_CATCH = 57384
const T_FINALLY = 57385
const T_THROW = 57386
const T_USE = 57387
const T_INSTEADOF = 57388
const T_GLOBAL = 57389
const T_VAR = 57390
const T_UNSET = 57391
const T_ISSET = 57392
const T_EMPTY = 57393
const T_HALT_COMPILER = 57394
const T_CLASS = 57395
const T_TRAIT = 57396
const T_INTERFACE = 57397
const T_EXTENDS = 57398
const T_IMPLEMENTS = 57399
const T_OBJECT_OPERATOR = 57400
const T_DOUBLE_ARROW = 57401
const T_LIST = 57402
const T_ARRAY = 57403
const T_CALLABLE = 57404
const T_CLASS_C = 57405
const T_TRAIT_C = 57406
const T_METHOD_C = 57407
const T_FUNC_C = 57408
const T_LINE = 57409
const T_FILE = 57410
const T_COMMENT = 57411
const T_DOC_COMMENT = 57412
const T_OPEN_TAG = 57413
const T_OPEN_TAG_WITH_ECHO = 57414
const T_CLOSE_TAG = 57415
const T_WHITESPACE = 57416
const T_START_HEREDOC = 57417
const T_END_HEREDOC = 57418
const T_DOLLAR_OPEN_CURLY_BRACES = 57419
const T_CURLY_OPEN = 57420
const T_PAAMAYIM_NEKUDOTAYIM = 57421
const T_NAMESPACE = 57422
const T_NS_C = 57423
const T_DIR = 57424
const T_NS_SEPARATOR = 57425
const T_ELLIPSIS = 57426
const T_EVAL = 57427
const T_REQUIRE = 57428
const T_REQUIRE_ONCE = 57429
const T_LOGICAL_OR = 57430
const T_LOGICAL_XOR = 57431
const T_LOGICAL_AND = 57432
const T_INSTANCEOF = 57433
const T_NEW = 57434
const T_CLONE = 57435
const T_ELSEIF = 57436
const T_ELSE = 57437
const T_ENDIF = 57438
const T_PRINT = 57439
const T_YIELD = 57440
const T_STATIC = 57441
const T_ABSTRACT = 57442
const T_FINAL = 57443
const T_PRIVATE = 57444
const T_PROTECTED = 57445
const T_PUBLIC = 57446
const T_INC = 57447
const T_DEC = 57448
const T_YIELD_FROM = 57449
const T_INT_CAST = 57450
const T_DOUBLE_CAST = 57451
const T_STRING_CAST = 57452
const T_ARRAY_CAST = 57453
const T_OBJECT_CAST = 57454
const T_BOOL_CAST = 57455
const T_UNSET_CAST = 57456
const T_COALESCE = 57457
const T_SPACESHIP = 57458
const T_NOELSE = 57459
const T_PLUS_EQUAL = 57460
const T_MINUS_EQUAL = 57461
const T_MUL_EQUAL = 57462
const T_POW_EQUAL = 57463
const T_DIV_EQUAL = 57464
const T_CONCAT_EQUAL = 57465
const T_MOD_EQUAL = 57466
const T_AND_EQUAL = 57467
const T_OR_EQUAL = 57468
const T_XOR_EQUAL = 57469
const T_SL_EQUAL = 57470
const T_SR_EQUAL = 57471
const T_COALESCE_EQUAL = 57472
const T_BOOLEAN_OR = 57473
const T_BOOLEAN_AND = 57474
const T_POW = 57475
const T_SL = 57476
const T_SR = 57477
const T_IS_IDENTICAL = 57478
const T_IS_NOT_IDENTICAL = 57479
const T_IS_EQUAL = 57480
const T_IS_NOT_EQUAL = 57481
const T_IS_SMALLER_OR_EQUAL = 57482
const T_IS_GREATER_OR_EQUAL = 57483
const T_NULLSAFE_OBJECT_OPERATOR = 57484
const T_MATCH = 57485
const T_ATTRIBUTE = 57486
const T_NAME_RELATIVE = 57487
const T_NAME_QUALIFIED = 57488
const T_NAME_FULLY_QUALIFIED = 57489

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_FN",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_COALESCE_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"T_NULLSAFE_OBJECT_OPERATOR",
	"T_MATCH",
	"T_ATTRIBUTE",
	"T_NAME_RELATIVE",
	"T_NAME_QUALIFIED",
	"T_NAME_FULLY_QUALIFIED",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

// line internal/php8/php8.y:3793

// line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 42,
	58, 477,
	79, 477,
	142, 477,
	150, 477,
	156, 477,
	-2, 472,
	-1, 46,
	154, 480,
	-2, 490,
	-1, 84,
	58, 479,
	79, 479,
	142, 479,
	150, 479,
	154, 482,
	156, 479,
	-2, 467,
	-1, 109,
	79, 440,
	-2, 469,
	-1, 213,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 320,
	58, 477,
	79, 477,
	142, 477,
	150, 477,
	156, 477,
	-2, 362,
	-1, 323,
	154, 482,
	-2, 479,
	-1, 326,
	58, 477,
	79, 477,
	142, 477,
	150, 477,
	156, 477,
	-2, 364,
	-1, 390,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 443,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 386,
	-1, 444,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 387,
	-1, 445,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 388,
	-1, 446,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 389,
	-1, 447,
	140, 0,
	141, 0,
	173, 0,
	174, 0,
	-2, 390,
	-1, 448,
	140, 0,
	141, 0,
	173, 0,
	174, 0,
	-2, 391,
	-1, 449,
	140, 0,
	141, 0,
	173, 0,
	174, 0,
	-2, 392,
	-1, 450,
	140, 0,
	141, 0,
	173, 0,
	174, 0,
	-2, 393,
	-1, 451,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 394,
	-1, 458,
	155, 184,
	166, 184,
	-2, 477,
	-1, 461,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 502,
	155, 520,
	157, 520,
	166, 520,
	-2, 477,
	-1, 507,
	58, 478,
	79, 478,
	142, 478,
	150, 478,
	154, 481,
	156, 478,
	-2, 396,
	-1, 525,
	154, 506,
	-2, 470,
	-1, 526,
	154, 508,
	-2, 497,
	-1, 531,
	154, 506,
	-2, 471,
	-1, 532,
	154, 508,
	-2, 498,
	-1, 558,
	153, 80,
	-2, 96,
	-1, 562,
	153, 13,
	-2, 443,
	-1, 564,
	153, 46,
	-2, 415,
	-1, 566,
	153, 72,
	-2, 439,
	-1, 567,
	153, 11,
	-2, 107,
	-1, 576,
	153, 65,
	-2, 455,
	-1, 577,
	153, 66,
	-2, 456,
	-1, 578,
	153, 67,
	-2, 457,
	-1, 579,
	153, 62,
	-2, 458,
	-1, 580,
	153, 64,
	-2, 459,
	-1, 581,
	153, 63,
	-2, 460,
	-1, 582,
	153, 68,
	-2, 461,
	-1, 583,
	153, 61,
	-2, 462,
	-1, 584,
	154, 427,
	-2, 42,
	-1, 586,
	154, 427,
	-2, 69,
	-1, 588,
	155, 236,
	-2, 107,
	-1, 590,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 617,
	155, 236,
	-2, 107,
	-1, 618,
	155, 236,
	-2, 107,
	-1, 626,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 641,
	154, 481,
	-2, 478,
	-1, 707,
	155, 206,
	-2, 477,
	-1, 717,
	155, 236,
	-2, 107,
	-1, 732,
	155, 519,
	157, 519,
	166, 519,
	-2, 477,
	-1, 750,
	155, 83,
	-2, 107,
	-1, 764,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 774,
	155, 207,
	-2, 477,
	-1, 777,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 797,
	53, 107,
	54, 107,
	55, 107,
	94, 231,
	95, 231,
	96, 231,
	100, 107,
	101, 107,
	-2, 0,
	-1, 839,
	155, 206,
	-2, 477,
	-1, 841,
	155, 209,
	-2, 451,
	-1, 853,
	37, 306,
	39, 306,
	-2, 303,
	-1, 865,
	53, 107,
	54, 107,
	55, 107,
	94, 232,
	95, 232,
	96, 232,
	100, 107,
	101, 107,
	-2, 0,
	-1, 900,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 904,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 936,
	31, 222,
	32, 222,
	33, 222,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	151, 222,
	-2, 0,
	-1, 944,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 968,
	79, 96,
	-2, 78,
	-1, 975,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 976,
	31, 221,
	32, 221,
	33, 221,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	151, 221,
	-2, 0,
	-1, 981,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 985,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 1011,
	155, 236,
	-2, 107,
	-1, 1019,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 1030,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
}

const yyPrivate = 57344

const yyLast = 8960

var yyAct = [...]int{

	29, 39, 956, 809, 722, 835, 464, 213, 680, 855,
	124, 953, 961, 947, 894, 804, 107, 957, 879, 216,
	720, 689, 38, 221, 221, 221, 812, 882, 235, 688,
	706, 682, 785, 529, 544, 457, 767, 554, 533, 718,
	354, 412, 493, 232, 313, 122, 109, 231, 80, 82,
	84, 315, 319, 534, 386, 327, 328, 329, 330, 331,
	211, 234, 227, 332, 333, 334, 335, 336, 337, 338,
	407, 341, 311, 9, 349, 350, 351, 352, 406, 202,
	524, 8, 203, 281, 220, 405, 42, 364, 7, 346,
	370, 371, 272, 373, 374, 404, 1001, 210, 6, 77,
	2, 321, 321, 323, 323, 366, 992, 691, 224, 225,
	360, 44, 106, 989, 200, 263, 730, 635, 114, 345,
	206, 346, 346, 263, 423, 356, 230, 399, 355, 240,
	263, 990, 356, 403, 927, 362, 5, 925, 986, 320,
	326, 888, 886, 793, 521, 991, 918, 263, 917, 982,
	274, 276, 987, 215, 265, 262, 876, 249, 252, 253,
	983, 874, 793, 382, 384, 249, 252, 253, 594, 871,
	237, 238, 249, 252, 253, 254, 255, 256, 257, 259,
	261, 494, 392, 114, 247, 246, 114, 424, 822, 249,
	263, 760, 247, 246, 248, 250, 251, 264, 243, 247,
	246, 425, 248, 250, 251, 273, 242, 245, 244, 248,
	250, 251, 258, 260, 245, 409, 247, 246, 615, 414,
	415, 390, 421, 419, 750, 676, 248, 250, 251, 398,
	671, 613, 249, 38, 114, 604, 422, 420, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 397, 453, 455, 520, 459, 248,
	250, 251, 411, 942, 500, 391, 885, 461, 398, 841,
	645, 394, 114, 646, 114, 739, 223, 308, 114, 392,
	475, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 514, 735, 490, 221, 492, 206,
	356, 315, 223, 362, 114, 321, 393, 323, 503, 658,
	657, 495, 230, 505, 380, 79, 315, 652, 274, 276,
	465, 357, 653, 1011, 642, 629, 108, 499, 1025, 108,
	978, 221, 902, 901, 892, 866, 848, 783, 516, 782,
	772, 228, 497, 458, 748, 745, 743, 734, 221, 704,
	346, 346, 693, 679, 469, 321, 460, 323, 542, 545,
	546, 309, 643, 547, 452, 324, 525, 531, 634, 307,
	387, 551, 909, 498, 555, 306, 315, 108, 515, 896,
	895, 491, 346, 844, 346, 346, 346, 321, 506, 323,
	599, 324, 513, 502, 775, 223, 733, 717, 385, 522,
	38, 365, 701, 372, 369, 702, 810, 559, 368, 471,
	78, 117, 115, 116, 608, 508, 235, 367, 340, 310,
	647, 949, 383, 618, 381, 518, 617, 602, 600, 232,
	530, 108, 523, 588, 504, 472, 470, 117, 115, 116,
	305, 268, 267, 266, 219, 611, 817, 818, 587, 598,
	218, 9, 214, 510, 511, 118, 1029, 108, 1028, 8,
	607, 624, 593, 625, 795, 592, 7, 627, 274, 678,
	791, 38, 626, 606, 474, 271, 6, 609, 830, 831,
	590, 1018, 791, 303, 304, 510, 632, 511, 511, 510,
	206, 315, 637, 997, 538, 315, 290, 291, 292, 293,
	294, 295, 296, 297, 298, 299, 300, 301, 302, 791,
	655, 830, 831, 791, 5, 540, 996, 389, 660, 388,
	648, 977, 937, 903, 898, 891, 889, 221, 664, 827,
	117, 115, 116, 823, 796, 636, 771, 631, 770, 768,
	766, 633, 763, 815, 603, 589, 289, 677, 114, 473,
	462, 656, 319, 512, 349, 350, 352, 356, 418, 364,
	355, 417, 370, 371, 416, 373, 374, 640, 659, 78,
	668, 665, 666, 869, 661, 867, 969, 366, 539, 365,
	683, 78, 223, 820, 758, 654, 537, 509, 951, 1003,
	950, 612, 536, 697, 414, 699, 692, 897, 366, 945,
	38, 703, 907, 868, 356, 849, 843, 362, 78, 683,
	683, 663, 78, 347, 348, 863, 715, 716, 223, 788,
	742, 721, 685, 621, 496, 496, 731, 366, 366, 411,
	829, 596, 269, 817, 818, 698, 38, 217, 113, 705,
	78, 275, 113, 263, 737, 249, 208, 754, 753, 752,
	929, 9, 321, 321, 323, 323, 230, 344, 1000, 8,
	723, 535, 545, 359, 223, 924, 7, 555, 208, 747,
	358, 883, 284, 285, 526, 532, 6, 321, 670, 323,
	922, 208, 872, 223, 550, 249, 282, 283, 675, 223,
	458, 707, 773, 719, 764, 786, 744, 757, 741, 623,
	559, 315, 761, 541, 746, 396, 466, 324, 204, 683,
	205, 777, 790, 396, 5, 732, 784, 117, 115, 116,
	998, 798, 847, 999, 315, 695, 797, 366, 762, 769,
	366, 396, 792, 808, 817, 818, 228, 781, 780, 712,
	817, 818, 683, 410, 78, 278, 279, 321, 78, 323,
	208, 736, 727, 117, 115, 116, 787, 414, 690, 595,
	366, 114, 377, 378, 801, 825, 315, 395, 914, 814,
	913, 201, 811, 776, 38, 650, 845, 204, 883, 205,
	824, 850, 209, 207, 790, 774, 862, 38, 819, 649,
	620, 282, 283, 865, 838, 832, 799, 834, 828, 117,
	115, 116, 366, 1, 209, 114, 877, 38, 286, 288,
	287, 619, 321, 212, 323, 597, 749, 209, 117, 115,
	116, 893, 759, 723, 117, 115, 116, 277, 723, 114,
	864, 468, 467, 887, 890, 900, 280, 880, 840, 114,
	908, 904, 910, 899, 830, 831, 463, 819, 794, 270,
	839, 662, 819, 915, 496, 496, 667, 833, 830, 831,
	911, 853, 808, 921, 217, 113, 851, 923, 912, 814,
	347, 348, 852, 960, 342, 38, 223, 920, 114, 919,
	353, 906, 751, 365, 112, 779, 209, 207, 819, 926,
	714, 821, 936, 548, 347, 348, 836, 939, 935, 803,
	802, 60, 807, 790, 930, 944, 931, 805, 846, 622,
	38, 790, 943, 970, 38, 971, 948, 819, 456, 954,
	694, 366, 854, 819, 932, 819, 967, 111, 1027, 366,
	700, 916, 975, 976, 972, 974, 973, 816, 870, 813,
	881, 873, 875, 981, 878, 314, 38, 41, 985, 119,
	686, 988, 114, 687, 38, 966, 984, 512, 755, 958,
	756, 13, 819, 995, 819, 324, 993, 114, 967, 40,
	955, 78, 379, 859, 860, 861, 858, 857, 856, 979,
	1008, 543, 946, 1010, 1009, 38, 38, 1005, 17, 1007,
	948, 38, 1017, 1012, 954, 38, 952, 966, 553, 1015,
	1014, 1019, 16, 683, 905, 1020, 233, 1021, 1016, 644,
	1022, 117, 115, 116, 363, 47, 933, 347, 348, 1026,
	322, 366, 325, 1023, 46, 836, 110, 1030, 48, 38,
	83, 108, 347, 348, 81, 723, 71, 339, 312, 61,
	38, 571, 572, 562, 143, 94, 95, 558, 114, 114,
	361, 59, 965, 343, 964, 112, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 177, 178, 179,
	180, 181, 169, 170, 584, 586, 172, 173, 158, 159,
	160, 565, 162, 163, 164, 165, 166, 569, 570, 963,
	189, 187, 188, 184, 185, 962, 789, 560, 585, 183,
	583, 579, 580, 581, 576, 577, 859, 860, 861, 858,
	857, 856, 104, 347, 348, 229, 226, 186, 582, 578,
	43, 556, 573, 574, 575, 136, 137, 138, 139, 567,
	561, 144, 145, 146, 563, 564, 566, 126, 127, 128,
	129, 130, 52, 53, 75, 62, 63, 64, 65, 66,
	67, 68, 778, 711, 681, 413, 400, 3, 941, 557,
	928, 884, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 78, 117, 115, 116, 105, 72, 0, 0, 0,
	0, 58, 552, 50, 0, 0, 0, 55, 54, 56,
	57, 70, 108, 571, 572, 562, 143, 94, 95, 558,
	0, 114, 0, 0, 0, 0, 0, 112, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 177,
	178, 179, 180, 181, 169, 170, 584, 586, 172, 173,
	158, 159, 160, 565, 162, 163, 164, 165, 166, 569,
	570, 0, 189, 187, 188, 184, 185, 0, 0, 560,
	585, 183, 583, 579, 580, 581, 576, 577, 114, 0,
	0, 114, 0, 512, 104, 0, 375, 0, 0, 186,
	582, 578, 0, 556, 573, 574, 575, 136, 137, 138,
	139, 567, 561, 144, 145, 146, 563, 564, 566, 126,
	127, 128, 129, 130, 52, 53, 75, 62, 63, 64,
	65, 66, 67, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 347, 348, 376, 347, 348, 0, 0,
	0, 0, 568, 78, 117, 115, 116, 105, 72, 0,
	0, 0, 0, 58, 0, 50, 0, 0, 0, 55,
	54, 56, 57, 70, 108, 4, 0, 89, 90, 69,
	45, 94, 95, 36, 0, 114, 0, 28, 0, 0,
	0, 112, 27, 19, 18, 0, 20, 0, 31, 0,
	32, 0, 0, 21, 0, 0, 0, 22, 23, 35,
	37, 113, 14, 24, 34, 0, 0, 76, 12, 263,
	25, 0, 30, 87, 88, 10, 0, 0, 0, 0,
	0, 0, 0, 49, 111, 0, 103, 99, 100, 101,
	96, 97, 0, 0, 0, 0, 0, 0, 104, 0,
	0, 0, 0, 11, 102, 98, 0, 0, 91, 92,
	93, 249, 252, 253, 0, 85, 51, 0, 259, 261,
	73, 74, 26, 0, 0, 0, 0, 0, 52, 53,
	75, 62, 63, 64, 65, 66, 67, 68, 247, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 250,
	251, 258, 260, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 86, 78, 117, 115,
	116, 105, 72, 15, 684, 33, 0, 58, 0, 50,
	0, 0, 0, 55, 54, 56, 57, 70, 108, 4,
	0, 89, 90, 69, 45, 94, 95, 36, 0, 114,
	0, 28, 0, 0, 0, 112, 27, 19, 18, 0,
	20, 0, 31, 0, 32, 0, 0, 21, 0, 0,
	0, 22, 23, 35, 37, 113, 14, 24, 34, 0,
	0, 76, 12, 0, 25, 0, 30, 87, 88, 10,
	0, 0, 0, 0, 0, 0, 0, 49, 111, 0,
	103, 99, 100, 101, 96, 97, 0, 0, 0, 0,
	0, 0, 104, 0, 0, 0, 0, 11, 102, 98,
	0, 0, 91, 92, 93, 0, 0, 0, 0, 85,
	51, 0, 0, 0, 73, 74, 26, 0, 0, 0,
	0, 0, 52, 53, 75, 62, 63, 64, 65, 66,
	67, 68, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	86, 78, 117, 115, 116, 105, 72, 15, 591, 33,
	0, 58, 0, 50, 0, 0, 0, 55, 54, 56,
	57, 70, 108, 4, 0, 89, 90, 69, 45, 94,
	95, 36, 0, 114, 0, 28, 0, 0, 0, 112,
	27, 19, 18, 0, 20, 0, 31, 0, 32, 0,
	0, 21, 0, 0, 0, 22, 23, 35, 37, 113,
	14, 24, 34, 0, 0, 76, 12, 0, 25, 0,
	30, 87, 88, 10, 0, 0, 0, 0, 0, 0,
	0, 49, 111, 0, 103, 99, 100, 101, 96, 97,
	0, 0, 0, 0, 0, 0, 104, 0, 0, 0,
	0, 11, 102, 98, 0, 0, 91, 92, 93, 0,
	0, 0, 0, 85, 51, 0, 0, 0, 73, 74,
	26, 0, 0, 0, 0, 0, 52, 53, 75, 62,
	63, 64, 65, 66, 67, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 86, 78, 117, 115, 116, 105,
	72, 15, 0, 33, 0, 58, 0, 50, 0, 0,
	0, 55, 54, 56, 57, 70, 108, 131, 132, 142,
	143, 0, 0, 528, 0, 114, 0, 0, 0, 0,
	0, 0, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 177, 178, 179, 180, 181, 169, 170,
	171, 198, 172, 173, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 0, 189, 187, 188, 184,
	185, 0, 0, 176, 182, 183, 190, 191, 193, 192,
	194, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 197, 196, 0, 0, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 144, 145, 146,
	174, 175, 125, 126, 127, 128, 129, 130, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 89, 90,
	69, 45, 94, 95, 36, 0, 114, 0, 28, 0,
	0, 0, 112, 27, 19, 18, 0, 20, 0, 31,
	0, 32, 0, 0, 21, 0, 199, 0, 22, 23,
	35, 37, 113, 527, 24, 34, 0, 0, 76, 0,
	0, 25, 0, 30, 87, 88, 408, 0, 108, 0,
	0, 0, 0, 0, 49, 111, 0, 103, 99, 100,
	101, 96, 97, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 0, 0, 102, 98, 0, 0, 91,
	92, 93, 0, 0, 0, 0, 85, 51, 0, 0,
	0, 73, 74, 26, 0, 0, 0, 0, 0, 52,
	53, 75, 62, 63, 64, 65, 66, 67, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 78, 117,
	115, 116, 105, 72, 15, 1031, 33, 0, 58, 0,
	50, 0, 0, 0, 55, 54, 56, 57, 70, 108,
	402, 0, 89, 90, 69, 45, 94, 95, 36, 0,
	114, 0, 28, 0, 0, 0, 112, 27, 19, 18,
	0, 20, 0, 31, 0, 32, 0, 0, 21, 0,
	0, 0, 22, 23, 35, 37, 113, 0, 24, 34,
	0, 0, 76, 0, 0, 25, 0, 30, 87, 88,
	408, 0, 0, 0, 0, 0, 0, 0, 49, 111,
	0, 103, 99, 100, 101, 96, 97, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 0, 102,
	98, 0, 0, 91, 92, 93, 0, 0, 0, 0,
	85, 51, 0, 0, 0, 73, 74, 26, 0, 0,
	0, 0, 0, 52, 53, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 78, 117, 115, 116, 105, 72, 15, 1024,
	33, 0, 58, 0, 50, 0, 0, 0, 55, 54,
	56, 57, 70, 108, 402, 0, 89, 90, 69, 45,
	94, 95, 36, 0, 114, 0, 28, 0, 0, 0,
	112, 27, 19, 18, 0, 20, 0, 31, 0, 32,
	0, 0, 21, 0, 0, 0, 22, 23, 35, 37,
	113, 0, 24, 34, 0, 0, 76, 0, 0, 25,
	0, 30, 87, 88, 408, 0, 0, 0, 0, 0,
	0, 0, 49, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 102, 98, 0, 0, 91, 92, 93,
	0, 0, 0, 0, 85, 51, 0, 0, 0, 73,
	74, 26, 0, 0, 0, 0, 0, 52, 53, 75,
	62, 63, 64, 65, 66, 67, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 78, 117, 115, 116,
	105, 72, 15, 1006, 33, 0, 58, 0, 50, 0,
	0, 0, 55, 54, 56, 57, 70, 108, 402, 0,
	89, 90, 69, 45, 94, 95, 36, 0, 114, 0,
	28, 0, 0, 0, 112, 27, 19, 18, 0, 20,
	0, 31, 0, 32, 0, 0, 21, 0, 0, 0,
	22, 23, 35, 37, 113, 0, 24, 34, 0, 0,
	76, 0, 0, 25, 0, 30, 87, 88, 408, 0,
	0, 0, 0, 0, 0, 0, 49, 111, 0, 103,
	99, 100, 101, 96, 97, 0, 0, 0, 0, 0,
	0, 104, 0, 0, 0, 0, 0, 102, 98, 0,
	0, 91, 92, 93, 0, 0, 0, 0, 85, 51,
	0, 0, 0, 73, 74, 26, 0, 0, 0, 0,
	0, 52, 53, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	78, 117, 115, 116, 105, 72, 15, 1004, 33, 0,
	58, 0, 50, 0, 0, 0, 55, 54, 56, 57,
	70, 108, 402, 0, 89, 90, 69, 45, 94, 95,
	36, 0, 114, 0, 28, 0, 0, 0, 112, 27,
	19, 18, 0, 20, 1002, 31, 0, 32, 0, 0,
	21, 0, 0, 0, 22, 23, 35, 37, 113, 0,
	24, 34, 0, 0, 76, 0, 0, 25, 0, 30,
	87, 88, 408, 0, 0, 0, 0, 0, 0, 0,
	49, 111, 0, 103, 99, 100, 101, 96, 97, 0,
	0, 0, 0, 0, 0, 104, 0, 0, 0, 0,
	0, 102, 98, 0, 0, 91, 92, 93, 0, 0,
	0, 0, 85, 51, 0, 0, 0, 73, 74, 26,
	0, 0, 0, 0, 0, 52, 53, 75, 62, 63,
	64, 65, 66, 67, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 78, 117, 115, 116, 105, 72,
	15, 0, 33, 0, 58, 0, 50, 0, 0, 0,
	55, 54, 56, 57, 70, 108, 402, 0, 89, 90,
	69, 45, 94, 95, 36, 0, 114, 0, 28, 0,
	0, 0, 112, 27, 19, 18, 0, 20, 0, 31,
	0, 32, 0, 0, 21, 0, 0, 0, 22, 23,
	35, 37, 113, 0, 24, 34, 0, 0, 76, 0,
	0, 25, 0, 30, 87, 88, 408, 0, 0, 0,
	0, 0, 0, 0, 49, 111, 0, 103, 99, 100,
	101, 96, 97, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 0, 0, 102, 98, 0, 0, 91,
	92, 93, 0, 0, 0, 0, 85, 51, 0, 0,
	0, 73, 74, 26, 0, 0, 0, 0, 0, 52,
	53, 75, 62, 63, 64, 65, 66, 67, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 78, 117,
	115, 116, 105, 72, 15, 980, 33, 0, 58, 0,
	50, 0, 0, 0, 55, 54, 56, 57, 70, 108,
	402, 0, 89, 90, 69, 45, 94, 95, 36, 0,
	114, 0, 28, 0, 0, 0, 112, 27, 19, 18,
	0, 20, 0, 31, 0, 32, 0, 0, 21, 0,
	0, 0, 22, 23, 35, 37, 113, 0, 24, 34,
	0, 0, 76, 0, 0, 25, 0, 30, 87, 88,
	408, 0, 0, 0, 0, 0, 0, 0, 49, 111,
	0, 103, 99, 100, 101, 96, 97, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 0, 102,
	98, 0, 0, 91, 92, 93, 0, 0, 0, 0,
	85, 51, 0, 0, 0, 73, 74, 26, 0, 0,
	0, 0, 0, 52, 53, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 78, 117, 115, 116, 105, 72, 15, 940,
	33, 0, 58, 0, 50, 0, 0, 0, 55, 54,
	56, 57, 70, 108, 402, 0, 89, 90, 69, 45,
	94, 95, 36, 0, 114, 0, 28, 0, 0, 0,
	112, 27, 19, 18, 0, 20, 0, 31, 938, 32,
	0, 0, 21, 0, 0, 0, 22, 23, 35, 37,
	113, 0, 24, 34, 0, 0, 76, 0, 0, 25,
	0, 30, 87, 88, 408, 0, 0, 0, 0, 0,
	0, 0, 49, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 102, 98, 0, 0, 91, 92, 93,
	0, 0, 0, 0, 85, 51, 0, 0, 0, 73,
	74, 26, 0, 0, 0, 0, 0, 52, 53, 75,
	62, 63, 64, 65, 66, 67, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 78, 117, 115, 116,
	105, 72, 15, 0, 33, 0, 58, 0, 50, 0,
	0, 0, 55, 54, 56, 57, 70, 108, 402, 0,
	89, 90, 69, 45, 94, 95, 36, 0, 114, 0,
	28, 0, 0, 0, 112, 27, 19, 18, 0, 20,
	0, 31, 0, 32, 842, 0, 21, 0, 0, 0,
	22, 23, 35, 37, 113, 0, 24, 34, 0, 0,
	76, 0, 0, 25, 0, 30, 87, 88, 408, 0,
	0, 0, 0, 0, 0, 0, 49, 111, 0, 103,
	99, 100, 101, 96, 97, 0, 0, 0, 0, 0,
	0, 104, 0, 0, 0, 0, 0, 102, 98, 0,
	0, 91, 92, 93, 0, 0, 0, 0, 85, 51,
	0, 0, 0, 73, 74, 26, 0, 0, 0, 0,
	0, 52, 53, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	78, 117, 115, 116, 105, 72, 15, 0, 33, 0,
	58, 0, 50, 0, 0, 0, 55, 54, 56, 57,
	70, 108, 402, 0, 89, 90, 69, 45, 94, 95,
	36, 0, 114, 0, 28, 0, 0, 0, 112, 27,
	19, 18, 826, 20, 0, 31, 0, 32, 0, 0,
	21, 0, 0, 0, 22, 23, 35, 37, 113, 0,
	24, 34, 0, 0, 76, 0, 0, 25, 0, 30,
	87, 88, 408, 0, 0, 0, 0, 0, 0, 0,
	49, 111, 0, 103, 99, 100, 101, 96, 97, 0,
	0, 0, 0, 0, 0, 104, 0, 0, 0, 0,
	0, 102, 98, 0, 0, 91, 92, 93, 0, 0,
	0, 0, 85, 51, 0, 0, 0, 73, 74, 26,
	0, 0, 0, 0, 0, 52, 53, 75, 62, 63,
	64, 65, 66, 67, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 78, 117, 115, 116, 105, 72,
	15, 0, 33, 0, 58, 0, 50, 0, 0, 0,
	55, 54, 56, 57, 70, 108, 402, 0, 89, 90,
	69, 45, 94, 95, 36, 0, 114, 0, 28, 0,
	0, 0, 112, 27, 19, 18, 0, 20, 0, 31,
	0, 32, 0, 0, 21, 0, 0, 0, 22, 23,
	35, 37, 113, 0, 24, 34, 0, 0, 76, 0,
	0, 25, 0, 30, 87, 88, 408, 0, 0, 0,
	0, 0, 0, 0, 49, 111, 0, 103, 99, 100,
	101, 96, 97, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 0, 0, 102, 98, 0, 0, 91,
	92, 93, 0, 0, 0, 0, 85, 51, 0, 0,
	726, 73, 74, 26, 0, 0, 0, 0, 0, 52,
	53, 75, 62, 63, 64, 65, 66, 67, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 78, 117,
	115, 116, 105, 72, 15, 0, 33, 0, 58, 0,
	50, 0, 0, 0, 55, 54, 56, 57, 70, 108,
	402, 0, 89, 90, 69, 45, 94, 95, 36, 0,
	114, 0, 28, 0, 0, 0, 112, 27, 19, 18,
	0, 20, 0, 31, 0, 32, 0, 0, 21, 0,
	0, 0, 22, 23, 35, 37, 113, 0, 24, 34,
	0, 0, 76, 0, 0, 25, 0, 30, 87, 88,
	408, 0, 0, 0, 0, 0, 0, 0, 49, 111,
	0, 103, 99, 100, 101, 96, 97, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 0, 102,
	98, 0, 0, 91, 92, 93, 0, 0, 0, 0,
	85, 51, 0, 0, 0, 73, 74, 26, 0, 0,
	0, 0, 0, 52, 53, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 78, 117, 115, 116, 105, 72, 15, 616,
	33, 0, 58, 0, 50, 0, 0, 0, 55, 54,
	56, 57, 70, 108, 402, 0, 89, 90, 69, 45,
	94, 95, 36, 0, 114, 0, 28, 0, 0, 0,
	112, 27, 19, 18, 0, 20, 0, 31, 0, 32,
	0, 0, 21, 0, 0, 0, 22, 23, 35, 37,
	113, 0, 24, 34, 0, 0, 76, 0, 0, 25,
	0, 30, 87, 88, 408, 0, 0, 0, 0, 0,
	0, 0, 49, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 102, 98, 0, 0, 91, 92, 93,
	0, 0, 0, 0, 85, 51, 0, 0, 0, 73,
	74, 26, 0, 0, 0, 0, 0, 52, 53, 75,
	62, 63, 64, 65, 66, 67, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 78, 117, 115, 116,
	105, 72, 15, 401, 33, 0, 58, 0, 50, 0,
	0, 0, 55, 54, 56, 57, 70, 108, 402, 0,
	89, 90, 69, 45, 94, 95, 36, 0, 114, 0,
	28, 0, 0, 0, 112, 27, 19, 18, 0, 20,
	0, 31, 0, 32, 0, 0, 21, 0, 0, 0,
	22, 23, 35, 37, 113, 0, 24, 34, 0, 0,
	76, 0, 0, 25, 0, 30, 87, 88, 408, 0,
	0, 0, 0, 0, 0, 0, 49, 111, 0, 103,
	99, 100, 101, 96, 97, 0, 0, 0, 0, 0,
	0, 104, 0, 0, 0, 0, 0, 102, 98, 0,
	0, 91, 92, 93, 0, 0, 0, 0, 85, 51,
	0, 0, 0, 73, 74, 26, 0, 0, 0, 0,
	0, 52, 53, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	78, 117, 115, 116, 105, 72, 15, 0, 33, 0,
	58, 0, 50, 0, 0, 0, 55, 54, 56, 57,
	70, 108, 89, 90, 69, 45, 94, 95, 36, 0,
	114, 0, 28, 0, 0, 0, 112, 27, 19, 18,
	0, 20, 0, 31, 0, 32, 0, 0, 21, 0,
	0, 0, 22, 23, 35, 217, 113, 0, 24, 34,
	0, 0, 76, 0, 0, 25, 0, 30, 87, 88,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 111,
	0, 103, 99, 100, 101, 96, 97, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 0, 102,
	98, 0, 0, 91, 92, 93, 0, 0, 0, 0,
	85, 51, 0, 0, 0, 73, 74, 26, 0, 0,
	0, 0, 0, 52, 53, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 78, 117, 115, 116, 105, 72, 15, 0,
	33, 837, 58, 0, 50, 0, 0, 0, 55, 54,
	56, 57, 70, 108, 89, 90, 69, 45, 94, 95,
	36, 0, 114, 0, 28, 0, 0, 0, 112, 27,
	19, 18, 0, 20, 0, 31, 0, 32, 0, 0,
	21, 0, 0, 0, 22, 23, 35, 217, 113, 0,
	24, 34, 0, 0, 76, 0, 0, 25, 0, 30,
	87, 88, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 111, 0, 103, 99, 100, 101, 96, 97, 0,
	0, 0, 0, 0, 0, 104, 0, 0, 0, 0,
	0, 102, 98, 0, 0, 91, 92, 93, 0, 0,
	0, 0, 85, 51, 0, 0, 0, 73, 74, 26,
	0, 0, 0, 0, 0, 52, 53, 75, 62, 63,
	64, 65, 66, 67, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 78, 117, 115, 116, 105, 72,
	15, 0, 33, 934, 58, 0, 50, 0, 0, 0,
	55, 54, 56, 57, 70, 108, 89, 90, 69, 45,
	94, 95, 36, 0, 114, 0, 28, 0, 0, 0,
	112, 27, 19, 18, 0, 20, 0, 31, 0, 32,
	0, 0, 21, 0, 0, 0, 22, 23, 35, 217,
	113, 0, 24, 34, 0, 0, 76, 0, 0, 25,
	0, 30, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 102, 98, 0, 0, 91, 92, 93,
	0, 0, 0, 0, 85, 51, 0, 0, 0, 73,
	74, 26, 0, 0, 0, 0, 0, 52, 53, 75,
	62, 63, 64, 65, 66, 67, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 78, 117, 115, 116,
	105, 72, 15, 0, 33, 728, 58, 0, 50, 0,
	0, 0, 55, 54, 56, 57, 70, 108, 89, 90,
	69, 45, 94, 95, 36, 0, 114, 0, 28, 0,
	0, 0, 112, 27, 19, 18, 0, 20, 0, 31,
	0, 32, 0, 0, 21, 0, 0, 0, 22, 23,
	35, 217, 113, 0, 24, 34, 0, 0, 76, 0,
	0, 25, 0, 30, 87, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 111, 0, 103, 99, 100,
	101, 96, 97, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 0, 0, 102, 98, 0, 0, 91,
	92, 93, 0, 0, 0, 0, 85, 51, 0, 0,
	0, 73, 74, 26, 0, 0, 0, 0, 0, 52,
	53, 75, 62, 63, 64, 65, 66, 67, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 78, 117,
	115, 116, 105, 72, 15, 0, 33, 713, 58, 0,
	50, 0, 0, 0, 55, 54, 56, 57, 70, 108,
	89, 90, 69, 45, 94, 95, 36, 0, 114, 0,
	28, 0, 0, 0, 112, 27, 19, 18, 0, 20,
	0, 31, 0, 32, 0, 0, 21, 0, 0, 0,
	22, 23, 35, 217, 113, 0, 24, 34, 0, 0,
	76, 0, 0, 25, 0, 30, 87, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 111, 0, 103,
	99, 100, 101, 96, 97, 0, 0, 0, 0, 0,
	0, 104, 0, 0, 0, 0, 0, 102, 98, 0,
	0, 91, 92, 93, 0, 0, 0, 0, 85, 51,
	0, 0, 0, 73, 74, 26, 0, 0, 0, 0,
	0, 52, 53, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	78, 117, 115, 116, 105, 72, 15, 0, 33, 696,
	58, 0, 50, 0, 0, 0, 55, 54, 56, 57,
	70, 108, 89, 90, 69, 45, 94, 95, 36, 0,
	114, 0, 28, 0, 0, 0, 112, 27, 19, 18,
	0, 20, 0, 31, 0, 32, 0, 0, 21, 0,
	0, 0, 22, 23, 35, 217, 113, 0, 24, 34,
	0, 0, 76, 0, 0, 25, 0, 30, 87, 88,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 111,
	0, 103, 99, 100, 101, 96, 97, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 0, 102,
	98, 0, 0, 91, 92, 93, 0, 0, 0, 0,
	85, 51, 0, 0, 0, 73, 74, 26, 0, 0,
	0, 0, 0, 52, 53, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 78, 117, 115, 116, 105, 72, 15, 0,
	33, 0, 58, 0, 50, 0, 0, 0, 55, 54,
	56, 57, 70, 108, 131, 132, 142, 143, 0, 0,
	968, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	177, 178, 179, 180, 181, 169, 170, 171, 198, 172,
	173, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 0, 189, 187, 188, 184, 185, 0, 0,
	176, 182, 183, 190, 191, 193, 192, 194, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 197, 196, 0, 0, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 144, 145, 146, 174, 175, 125,
	126, 127, 128, 129, 130, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 132,
	142, 143, 0, 199, 968, 117, 115, 116, 0, 0,
	0, 994, 0, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 177, 178, 179, 180, 181, 169,
	170, 171, 198, 172, 173, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 0, 189, 187, 188,
	184, 185, 0, 0, 176, 182, 183, 190, 191, 193,
	192, 194, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 197, 196, 0, 0, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 144, 145,
	146, 174, 175, 125, 126, 127, 128, 129, 130, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 132, 142, 143, 0, 199, 121, 117,
	115, 116, 0, 0, 0, 959, 0, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 177, 178,
	179, 180, 181, 169, 170, 171, 198, 172, 173, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	0, 189, 187, 188, 184, 185, 0, 0, 176, 182,
	183, 190, 191, 193, 192, 194, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 197,
	196, 0, 0, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 144, 145, 146, 174, 175, 125, 126, 127,
	128, 129, 130, 89, 90, 69, 0, 94, 95, 223,
	0, 114, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 113, 0, 0,
	0, 199, 0, 76, 123, 0, 0, 0, 120, 87,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	111, 0, 103, 99, 100, 101, 96, 97, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 0, 0, 0,
	102, 98, 0, 317, 91, 92, 93, 0, 0, 0,
	0, 85, 51, 0, 0, 0, 73, 74, 222, 0,
	0, 0, 0, 0, 52, 53, 75, 62, 63, 64,
	65, 66, 67, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 86, 78, 117, 115, 116, 105, 72, 0,
	0, 0, 0, 58, 0, 50, 0, 0, 316, 55,
	54, 56, 57, 70, 108, 89, 90, 69, 0, 94,
	95, 223, 0, 114, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 806, 0, 0, 0, 217, 113,
	0, 223, 0, 114, 0, 76, 0, 0, 0, 112,
	0, 87, 88, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 111, 0, 103, 99, 100, 101, 96, 97,
	0, 0, 0, 0, 0, 0, 104, 0, 0, 0,
	0, 0, 102, 98, 0, 0, 91, 92, 93, 0,
	0, 709, 111, 85, 51, 0, 0, 0, 73, 74,
	222, 0, 0, 0, 0, 0, 52, 53, 75, 62,
	63, 64, 65, 66, 67, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 86, 78, 117, 115, 116, 105,
	72, 0, 0, 0, 0, 58, 0, 50, 0, 0,
	0, 55, 54, 56, 57, 70, 108, 89, 90, 69,
	0, 94, 95, 223, 0, 114, 117, 115, 116, 0,
	0, 112, 0, 0, 0, 322, 0, 710, 0, 0,
	708, 0, 0, 0, 0, 0, 108, 0, 0, 0,
	217, 113, 0, 0, 0, 0, 0, 76, 0, 0,
	0, 0, 0, 87, 88, 0, 0, 0, 0, 0,
	0, 0, 0, 639, 111, 0, 103, 99, 100, 101,
	96, 97, 0, 0, 0, 0, 0, 0, 104, 0,
	0, 0, 0, 0, 102, 98, 0, 0, 91, 92,
	93, 0, 0, 0, 0, 85, 51, 0, 0, 0,
	73, 74, 222, 0, 0, 0, 0, 0, 52, 53,
	75, 62, 63, 64, 65, 66, 67, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 86, 78, 117, 115,
	116, 105, 72, 0, 0, 0, 0, 58, 0, 50,
	0, 0, 638, 55, 54, 56, 57, 70, 108, 89,
	90, 69, 0, 94, 95, 223, 517, 114, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 113, 0, 0, 0, 0, 0, 76,
	0, 0, 0, 0, 0, 87, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 111, 0, 103, 99,
	100, 101, 96, 97, 0, 0, 0, 0, 0, 0,
	104, 0, 0, 0, 0, 0, 102, 98, 0, 0,
	91, 92, 93, 0, 0, 0, 0, 85, 51, 0,
	0, 0, 73, 74, 222, 0, 0, 0, 0, 0,
	52, 53, 75, 62, 63, 64, 65, 66, 67, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 86, 78,
	117, 115, 116, 105, 72, 0, 0, 0, 0, 58,
	0, 50, 0, 0, 0, 55, 54, 56, 57, 70,
	108, 89, 90, 69, 0, 94, 95, 223, 0, 114,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 113, 0, 0, 0, 0,
	0, 76, 0, 0, 0, 0, 0, 87, 88, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 111, 0,
	103, 99, 100, 101, 96, 97, 0, 0, 0, 0,
	0, 0, 104, 0, 0, 0, 0, 0, 102, 98,
	0, 0, 91, 92, 93, 0, 0, 0, 0, 85,
	51, 0, 0, 0, 73, 74, 222, 0, 0, 0,
	0, 0, 52, 53, 75, 62, 63, 64, 65, 66,
	67, 68, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	86, 78, 117, 115, 116, 105, 72, 0, 0, 0,
	0, 58, 0, 50, 0, 0, 476, 55, 54, 56,
	57, 70, 108, 89, 90, 69, 0, 94, 95, 223,
	0, 114, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 113, 0, 0,
	0, 0, 0, 76, 0, 0, 0, 0, 0, 87,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	111, 0, 103, 99, 100, 101, 96, 97, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 0, 0, 0,
	102, 98, 0, 0, 91, 92, 93, 0, 0, 0,
	0, 85, 51, 0, 0, 0, 73, 74, 222, 0,
	0, 0, 0, 0, 52, 53, 75, 62, 63, 64,
	65, 66, 67, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 86, 78, 117, 115, 116, 105, 72, 0,
	0, 0, 454, 58, 0, 50, 0, 0, 0, 55,
	54, 56, 57, 70, 108, 89, 90, 69, 0, 94,
	95, 223, 0, 114, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 113,
	0, 0, 0, 0, 0, 76, 0, 0, 0, 0,
	0, 87, 88, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 111, 0, 103, 99, 100, 101, 96, 97,
	0, 0, 0, 0, 0, 0, 104, 0, 0, 0,
	0, 0, 102, 98, 0, 0, 91, 92, 93, 0,
	0, 0, 0, 85, 51, 0, 0, 0, 73, 74,
	222, 0, 0, 0, 0, 0, 52, 53, 75, 62,
	63, 64, 65, 66, 67, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 86, 78, 117, 115, 116, 105,
	72, 0, 0, 0, 0, 58, 0, 50, 0, 0,
	0, 55, 54, 56, 57, 70, 108, 131, 132, 142,
	143, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 177, 178, 179, 180, 181, 169, 170,
	171, 198, 172, 173, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 0, 189, 187, 188, 184,
	185, 0, 0, 176, 182, 183, 190, 191, 193, 192,
	194, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 197, 196, 0, 0, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 144, 145, 146,
	174, 175, 125, 126, 127, 128, 129, 130, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 132, 142, 143, 0, 0, 1013, 0,
	0, 0, 0, 0, 0, 0, 199, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 177, 178,
	179, 180, 181, 169, 170, 171, 198, 172, 173, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	0, 189, 187, 188, 184, 185, 0, 0, 176, 182,
	183, 190, 191, 193, 192, 194, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 197,
	196, 0, 0, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 144, 145, 146, 174, 175, 859, 860, 861,
	858, 857, 856, 239, 241, 240, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 237, 238, 249, 252,
	253, 254, 255, 256, 257, 259, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 896, 895, 239,
	241, 240, 263, 264, 243, 247, 246, 0, 0, 0,
	0, 0, 242, 0, 244, 248, 250, 251, 258, 260,
	245, 0, 0, 0, 0, 0, 265, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 249, 252, 253, 254, 255, 256,
	257, 259, 261, 0, 0, 0, 0, 0, 0, 0,
	239, 241, 240, 263, 0, 0, 0, 0, 800, 264,
	243, 247, 246, 0, 0, 0, 0, 0, 242, 0,
	244, 248, 250, 251, 258, 260, 245, 265, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 249, 252, 253, 254, 255,
	256, 257, 259, 261, 0, 0, 0, 0, 0, 0,
	0, 239, 241, 240, 263, 0, 0, 765, 0, 0,
	264, 243, 247, 246, 0, 0, 0, 0, 0, 242,
	0, 244, 248, 250, 251, 258, 260, 245, 265, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 249, 252, 253, 254,
	255, 256, 257, 259, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 740, 239, 241, 240, 263, 0,
	0, 264, 243, 247, 246, 0, 0, 0, 0, 0,
	242, 0, 244, 248, 250, 251, 258, 260, 245, 0,
	0, 0, 265, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	249, 252, 253, 254, 255, 256, 257, 259, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 738, 239,
	241, 240, 263, 0, 0, 264, 243, 247, 246, 0,
	0, 0, 0, 0, 242, 0, 244, 248, 250, 251,
	258, 260, 245, 0, 0, 0, 265, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 249, 252, 253, 254, 255, 256,
	257, 259, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 729, 239, 241, 240, 263, 0, 0, 264,
	243, 247, 246, 0, 0, 0, 0, 0, 242, 0,
	244, 248, 250, 251, 258, 260, 245, 0, 0, 0,
	265, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 238, 249, 252,
	253, 254, 255, 256, 257, 259, 261, 0, 0, 0,
	0, 0, 0, 0, 239, 241, 240, 263, 0, 0,
	725, 0, 0, 264, 243, 247, 246, 0, 0, 0,
	0, 0, 242, 0, 244, 248, 250, 251, 258, 260,
	245, 265, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 238, 249,
	252, 253, 254, 255, 256, 257, 259, 261, 0, 0,
	0, 0, 0, 0, 0, 239, 241, 240, 263, 0,
	0, 724, 0, 0, 264, 243, 247, 246, 0, 0,
	0, 0, 0, 242, 0, 244, 248, 250, 251, 258,
	260, 245, 265, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	249, 252, 253, 254, 255, 256, 257, 259, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 674, 239,
	241, 240, 263, 0, 0, 264, 243, 247, 246, 0,
	0, 0, 0, 0, 242, 0, 244, 248, 250, 251,
	258, 260, 245, 0, 0, 0, 265, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 249, 252, 253, 254, 255, 256,
	257, 259, 261, 0, 0, 0, 0, 0, 0, 0,
	239, 241, 240, 263, 0, 0, 673, 0, 0, 264,
	243, 247, 246, 0, 0, 0, 0, 0, 242, 0,
	244, 248, 250, 251, 258, 260, 245, 265, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 249, 252, 253, 254, 255,
	256, 257, 259, 261, 0, 0, 0, 0, 0, 0,
	0, 239, 241, 240, 263, 0, 0, 672, 0, 0,
	264, 243, 247, 246, 0, 0, 0, 0, 0, 242,
	0, 244, 248, 250, 251, 258, 260, 245, 265, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 249, 252, 253, 254,
	255, 256, 257, 259, 261, 0, 0, 0, 0, 0,
	0, 0, 239, 241, 240, 263, 0, 0, 669, 0,
	0, 264, 243, 247, 246, 0, 0, 0, 0, 0,
	242, 0, 244, 248, 250, 251, 258, 260, 245, 265,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 238, 249, 252, 253,
	254, 255, 256, 257, 259, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 651, 239, 241, 240, 263,
	0, 0, 264, 243, 247, 246, 0, 0, 0, 0,
	0, 242, 0, 244, 248, 250, 251, 258, 260, 245,
	0, 0, 0, 265, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	238, 249, 252, 253, 254, 255, 256, 257, 259, 261,
	0, 0, 0, 0, 0, 0, 0, 239, 241, 240,
	263, 0, 0, 641, 0, 0, 264, 243, 247, 246,
	0, 0, 0, 0, 0, 242, 0, 244, 248, 250,
	251, 258, 260, 245, 265, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 238, 249, 252, 253, 254, 255, 256, 257, 259,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	630, 239, 241, 240, 263, 614, 0, 264, 243, 247,
	246, 0, 0, 0, 0, 0, 242, 0, 244, 248,
	250, 251, 258, 260, 245, 0, 0, 0, 265, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 238, 249, 252, 253, 254,
	255, 256, 257, 259, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 241, 240, 263, 628, 0,
	0, 264, 243, 247, 246, 0, 0, 0, 0, 0,
	242, 0, 244, 248, 250, 251, 258, 260, 245, 0,
	0, 265, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 238, 249,
	252, 253, 254, 255, 256, 257, 259, 261, 0, 0,
	0, 0, 0, 0, 0, 239, 241, 240, 263, 0,
	0, 0, 0, 0, 264, 243, 247, 246, 0, 0,
	0, 0, 0, 242, 0, 244, 248, 250, 251, 258,
	260, 245, 265, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	249, 252, 253, 254, 255, 256, 257, 259, 261, 0,
	0, 0, 0, 0, 0, 0, 239, 241, 240, 263,
	610, 0, 0, 0, 0, 264, 243, 247, 246, 0,
	0, 0, 0, 0, 242, 0, 244, 248, 250, 251,
	258, 260, 245, 265, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	238, 249, 252, 253, 254, 255, 256, 257, 259, 261,
	0, 0, 0, 0, 0, 0, 0, 239, 241, 240,
	263, 0, 0, 605, 0, 0, 264, 243, 247, 246,
	0, 0, 0, 0, 0, 242, 0, 244, 248, 250,
	251, 258, 260, 245, 265, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 238, 249, 252, 253, 254, 255, 256, 257, 259,
	261, 0, 0, 0, 0, 0, 0, 0, 239, 241,
	240, 263, 0, 0, 601, 0, 0, 264, 243, 247,
	246, 0, 0, 0, 0, 0, 242, 0, 244, 248,
	250, 251, 258, 260, 245, 265, 262, 0, 0, 0,
	501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 238, 249, 252, 253, 254, 255, 256, 257,
	259, 261, 0, 0, 0, 0, 0, 0, 0, 239,
	241, 240, 263, 0, 0, 507, 0, 0, 264, 243,
	247, 246, 0, 0, 0, 0, 0, 242, 0, 244,
	248, 250, 251, 258, 260, 245, 265, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 249, 252, 253, 254, 255, 256,
	257, 259, 261, 0, 0, 0, 0, 0, 0, 0,
	239, 241, 240, 263, 0, 0, 0, 0, 0, 264,
	243, 247, 246, 0, 0, 0, 0, 0, 242, 0,
	244, 248, 250, 251, 258, 260, 245, 265, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 238, 249, 252, 253, 254, 255,
	256, 257, 259, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 239, 241, 240, 263, 0,
	264, 243, 247, 246, 0, 0, 0, 0, 0, 242,
	0, 244, 248, 250, 251, 258, 260, 245, 0, 0,
	0, 0, 265, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 238,
	249, 252, 253, 254, 255, 256, 257, 259, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 240, 263,
	0, 0, 0, 0, 0, 264, 243, 247, 246, 0,
	0, 0, 0, 0, 242, 0, 244, 248, 250, 251,
	258, 260, 245, 265, 262, 0, 0, 0, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	238, 249, 252, 253, 254, 255, 256, 257, 259, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 264, 243, 247, 246,
	0, 0, 0, 0, 0, 242, 0, 244, 248, 250,
	251, 258, 260, 245, 265, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 238, 249, 252, 253, 254, 255, 256, 257, 259,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 264, 243, 247,
	246, 0, 0, 0, 0, 0, 242, 0, 244, 248,
	250, 251, 258, 260, 245, 265, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 238, 249, 252, 253, 254, 255, 256, 257,
	259, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 264, 243,
	247, 246, 0, 0, 0, 0, 0, 242, 0, 244,
	248, 250, 251, 258, 260, 245, 265, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 238, 249, 252, 253, 254, 255, 256,
	257, 259, 261, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 247, 246, 0, 0, 0, 0, 0, 242, 262,
	244, 248, 250, 251, 258, 260, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 249, 252, 253, 254,
	255, 256, 257, 259, 261, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 247, 246, 0, 0, 0, 0, 0,
	242, 262, 244, 248, 250, 251, 258, 260, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 252,
	253, 254, 255, 256, 257, 259, 261, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 247, 246, 0, 0, 0,
	0, 0, 242, 262, 244, 248, 250, 251, 258, 260,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 252, 253, 254, 255, 256, 257, 259, 261, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 243, 247, 246, 0,
	0, 0, 0, 0, 262, 0, 244, 248, 250, 251,
	258, 260, 245, 0, 0, 0, 0, 0, 0, 0,
	262, 249, 252, 253, 254, 255, 256, 257, 259, 261,
	0, 0, 0, 0, 0, 0, 0, 249, 252, 253,
	254, 255, 256, 257, 259, 261, 0, 243, 247, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 250,
	251, 258, 260, 245, 247, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 250, 251, 258, 260, 245,
}
var yyPact = [...]int{

	-1000, -1000, 1701, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	311, 5508, 750, -1000, 813, -1000, -1000, -1000, 308, 5078,
	306, 300, 6581, 6581, 6581, 222, 837, 6581, -1000, 8252,
	299, 298, 297, -1000, 492, 849, 332, 46, 614, 701,
	588, 724, 388, -1000, -1000, 296, -1000, -1000, 229, 275,
	5609, 6581, 876, 876, 6581, 6581, 6581, 6581, 6581, -1000,
	-1000, -1000, 6581, 6581, 6581, 6581, 6581, 6581, 6581, 274,
	6581, -1000, 1046, 6581, 6581, 6581, 6581, -1000, 618, -1000,
	175, -1000, 601, 594, -1000, 276, 273, 264, 260, 6581,
	6581, 259, 6581, 6581, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1269, 965, -1000, -1000, 174, 278,
	278, 254, -1000, 46, -1000, -1000, -1000, -1000, 225, 377,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	123, 646, 694, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	112, -1000, -41, 3942, 6581, 732, 610, 46, 6581, 6581,
	422, 8317, 610, -1000, 419, 416, 71, -1000, -1000, 70,
	-1000, -1000, -44, 35, -1000, 8317, -1000, 6581, 6581, 6581,
	6581, 6581, 6581, 6581, 6581, 6581, 6581, 6581, 6581, 6581,
	6581, 6581, 6581, 6581, 6581, 6581, 6581, 6581, 6581, 6581,
	6581, 6581, 6581, 302, 6419, 6581, 876, 6581, 813, -1000,
	408, -1000, 846, -1000, -1000, 46, -1000, 663, 832, 831,
	596, -1000, -1000, -1000, 292, 5078, 291, 407, 331, 6257,
	6581, 6581, 6581, 6581, 6581, 6581, 6581, 6581, 6581, 6581,
	6581, 6581, 6581, -1000, -1000, 6581, 6581, 6581, 171, 171,
	5609, 180, 108, -1000, -1000, 8191, 876, 6581, 290, -1000,
	-1000, 175, 6581, -1000, -1000, 5609, -1000, 522, 522, 562,
	522, 8130, 522, 522, 522, 522, 522, 522, 522, -1000,
	6581, 522, 448, 803, 950, -1000, 246, 6095, 876, 8500,
	8439, 8500, 8317, 101, -1000, 278, -1000, 6581, 1863, 1863,
	278, -1000, 592, 446, 660, -1000, 506, 6581, 6581, 6581,
	8317, 8317, 6581, 8317, 8317, 827, -1000, 1266, 546, 803,
	6581, -1000, -1000, 1047, -1000, 5609, 289, 403, -1000, -1000,
	1537, -1000, 646, 16, 686, 491, 815, -1000, 813, 6581,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 284, 8069,
	283, -1000, 402, 69, 8317, 8008, -1000, -1000, -1000, -1000,
	222, -1000, 759, 6581, -1000, 6581, 8613, 8665, 8378, 8500,
	39, 8717, 8784, 8768, 24, 99, 99, 562, 522, 562,
	562, 56, 56, 1328, 1328, 1328, 1328, 32, 32, 32,
	32, 1328, -1000, 7947, 6581, 8561, 65, -1000, -1000, 7886,
	63, 3778, -1000, 282, 279, 811, 790, 483, 653, -1000,
	6581, -1000, 6581, -1000, -1000, 8500, 6581, 8500, 8500, 8500,
	8500, 8500, 8500, 8500, 8500, 8500, 8500, 8500, 8500, 8500,
	7823, 178, 7759, 278, -1000, 6581, -1000, 278, 223, -51,
	5609, 5933, -1000, 8317, 5609, 7698, 177, -1000, 217, -1000,
	-1000, -1000, -1000, 270, 789, 775, 7634, 176, 444, 6581,
	618, 163, -1000, 162, 278, -1000, -1000, 6581, -1000, -1000,
	278, -1000, -1000, -1000, -1000, 222, 6581, 6581, 171, 171,
	222, 278, 7573, 64, -1000, 8317, 7512, 7451, -1000, -1000,
	-1000, 7387, -1000, 59, -1000, 8317, 6581, 326, -1000, -1000,
	275, 6581, 274, 6581, 6581, 6581, 610, 276, 273, 264,
	260, 6581, 6581, 259, 6581, 6581, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 46, 254, 46, 208, 506, -1000,
	1373, -1000, -1000, 712, -1000, 482, 681, -1000, -1000, 8317,
	207, 4916, 6581, 6581, 6581, 262, -1000, -1000, 8317, -1000,
	6581, 8561, 204, 876, 5801, 4754, -1000, 506, 506, 253,
	647, -1000, 481, 664, 7326, 7265, 3614, 8784, 4592, -1000,
	-1000, -1000, 7201, -1000, -52, 6581, -1000, 8317, 876, 252,
	202, -1000, -1000, -1000, 148, -1000, -1000, 748, -1000, -1000,
	-1000, -1000, -1000, 6581, -1000, 8500, -1000, -1000, -1000, -1000,
	7137, -1000, -1000, 128, 7073, -1000, -1000, -1000, 647, 480,
	201, 6581, -1000, -1000, -1000, 200, 1209, 8317, 6581, -1000,
	199, 58, -1000, 555, -1000, 668, 443, 25, -1000, -1000,
	668, 709, -1000, 400, -1000, -1000, -1000, 7012, 398, 8317,
	-1000, 397, 396, 8561, 394, -1000, 195, 643, 876, 250,
	5609, -1000, -1000, -1000, 705, 194, 192, 506, 648, 664,
	478, -1000, -23, -1000, 5078, 321, 392, -1000, -1000, -1000,
	6581, 8500, -1000, 5609, -52, -1000, -1000, 6951, -1000, -1000,
	-1000, 648, 5771, -1000, -1000, -1000, -1000, 8317, 263, -1000,
	506, 395, -1000, -1000, -1000, 442, 22, -1000, 391, -1000,
	681, -1000, 765, -1000, 3450, 387, 6581, 489, -1000, 836,
	-1000, -1000, 4268, 5801, -1000, 5609, 122, 3286, -1000, -1000,
	466, 239, 263, 687, 191, 465, 664, -1000, -1000, -1000,
	884, 664, 474, 664, -1000, -1000, -1000, 4106, 8500, 190,
	434, 463, 432, 3, -1000, 633, -5, -10, 8317, -1000,
	689, -1000, 117, -1000, -25, 683, -26, -1000, -1000, -1000,
	384, -1000, 668, -1000, -1000, -1000, 383, -1000, 189, -1000,
	6581, 237, 456, 382, 822, -1000, -1000, -1000, 188, -1000,
	187, -1000, 381, -1000, 664, 462, 263, 228, 263, -1000,
	-23, 395, 741, 1017, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -4, -1000, -1000, 4106, -52, -1000, -1000, -1000,
	-1000, 5771, 6581, 631, -1000, -1000, 6581, 616, -1000, -30,
	582, -33, -1000, -1000, 576, -1000, 683, -1000, 683, -1000,
	-1000, -1000, 4430, 6885, -1000, -1000, -1000, -1000, -1000, 380,
	3122, 4268, -1000, -1000, 2958, 106, -1000, -1000, 459, 272,
	450, 447, 759, 6743, 46, -1000, -1000, -1000, 5374, 435,
	-1000, 8317, 6581, 8317, 6581, 582, -1000, 582, 759, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 4106, -1000, 379, -1000,
	-1000, 185, 664, -1000, 2794, -1000, -6, -1000, -1000, 759,
	-1000, -1000, -14, -1000, -55, -21, -1000, -62, 6743, -1000,
	5240, -1000, 374, 351, 684, 704, 589, -1000, -1000, -1000,
	8317, 8317, -1000, -1000, -72, 2630, 4106, -1000, 449, -1000,
	-1000, 2466, -1000, 272, -1000, 2302, -1000, 759, -1000, 6581,
	-1000, 6743, 6581, 179, -1000, -1000, -1000, -1000, 664, 6868,
	6743, 6581, 339, -1000, -1000, -1000, -1000, -1000, 8317, -1000,
	8317, 506, -23, -1000, -1000, 6743, -1000, 8317, -1000, 2138,
	-1000, -1000, 183, -1000, -1000, 263, 316, -1000, -1000, -1000,
	1974, -1000,
}
var yyPgo = [...]int{

	0, 1171, 1170, 54, 10, 33, 17, 1169, 16, 1168,
	144, 14, 768, 1167, 46, 133, 95, 85, 78, 70,
	60, 1166, 41, 1165, 0, 84, 8, 1164, 1163, 1162,
	35, 86, 31, 37, 1130, 1126, 62, 1125, 47, 1106,
	12, 1105, 1099, 1064, 1062, 11, 61, 1061, 1060, 49,
	110, 325, 1049, 1048, 72, 1047, 1046, 13, 1044, 80,
	42, 1040, 50, 48, 1038, 1036, 1034, 1025, 1024, 119,
	1019, 1016, 1014, 4, 1012, 97, 1008, 1006, 998, 992,
	991, 980, 979, 971, 29, 82, 21, 970, 968, 963,
	960, 114, 2, 107, 959, 79, 957, 955, 44, 34,
	954, 18, 950, 3, 949, 27, 947, 26, 83, 53,
	38, 941, 940, 938, 5, 934, 930, 112, 99, 928,
	39, 32, 919, 918, 917, 912, 911, 15, 910, 909,
	900, 895, 892, 40, 890, 111, 9, 30, 667, 884,
	36, 883, 100, 7, 20, 882, 876, 871, 846, 837,
	1, 19, 813, 6,
}
var yyR1 = [...]int{

	0, 152, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 10, 10, 9, 9, 8, 142, 142, 94,
	94, 94, 93, 93, 95, 95, 14, 14, 14, 14,
	133, 133, 134, 134, 135, 151, 151, 150, 150, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 12, 12, 83, 83, 90, 89, 89,
	88, 87, 87, 91, 91, 84, 84, 86, 86, 85,
	85, 75, 75, 143, 143, 21, 21, 21, 21, 21,
	21, 21, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 130, 130, 131, 72, 72,
	29, 29, 119, 119, 30, 16, 16, 1, 1, 2,
	2, 149, 149, 148, 148, 108, 108, 17, 18, 19,
	120, 120, 122, 122, 121, 121, 137, 137, 137, 137,
	115, 115, 114, 114, 28, 28, 112, 112, 112, 112,
	140, 140, 140, 11, 11, 116, 116, 82, 82, 74,
	74, 96, 96, 78, 78, 26, 26, 27, 27, 132,
	132, 132, 132, 32, 32, 100, 100, 100, 101, 101,
	105, 105, 105, 102, 102, 106, 106, 104, 104, 104,
	107, 107, 103, 103, 109, 109, 76, 76, 33, 33,
	33, 35, 35, 36, 37, 37, 38, 38, 144, 144,
	39, 39, 39, 39, 73, 73, 111, 111, 111, 141,
	141, 40, 40, 41, 42, 42, 42, 42, 44, 44,
	43, 113, 113, 146, 146, 145, 145, 147, 147, 136,
	136, 136, 136, 136, 136, 77, 77, 45, 45, 81,
	81, 92, 20, 71, 71, 46, 22, 22, 23, 23,
	48, 47, 47, 124, 125, 125, 126, 128, 128, 129,
	129, 127, 127, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 118, 118, 117, 117, 153, 3, 3, 123,
	123, 79, 79, 57, 57, 58, 58, 58, 58, 49,
	49, 50, 50, 55, 55, 139, 139, 139, 110, 110,
	62, 62, 62, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 63,
	63, 63, 24, 24, 25, 25, 61, 64, 64, 64,
	65, 65, 65, 66, 66, 66, 66, 66, 66, 66,
	31, 31, 31, 31, 51, 51, 51, 67, 67, 68,
	68, 68, 68, 68, 68, 68, 59, 59, 59, 60,
	60, 60, 54, 98, 98, 53, 53, 97, 97, 97,
	97, 97, 97, 97, 138, 138, 138, 138, 69, 69,
	69, 69, 69, 69, 69, 69, 70, 70, 70, 70,
	52, 52, 52, 52, 52, 52, 52, 80, 80, 99,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 1, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 3, 4, 1, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 5, 4, 3,
	4, 1, 3, 1, 1, 8, 7, 2, 3, 1,
	2, 3, 1, 3, 1, 1, 2, 1, 3, 1,
	3, 3, 1, 2, 0, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 1, 5, 7, 9, 5, 3,
	3, 3, 3, 3, 3, 1, 2, 6, 7, 9,
	5, 1, 6, 3, 2, 0, 2, 8, 1, 3,
	0, 4, 1, 3, 1, 10, 11, 0, 1, 0,
	1, 0, 1, 1, 2, 1, 1, 9, 6, 7,
	0, 2, 0, 2, 0, 2, 1, 2, 4, 3,
	1, 4, 1, 4, 1, 4, 3, 4, 4, 5,
	0, 5, 4, 1, 1, 1, 4, 5, 6, 1,
	3, 6, 7, 3, 6, 2, 0, 1, 3, 0,
	1, 1, 1, 6, 8, 1, 2, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 1, 2, 1,
	0, 1, 0, 2, 2, 4, 1, 3, 1, 2,
	3, 3, 1, 1, 3, 1, 1, 3, 2, 0,
	5, 5, 10, 3, 1, 3, 1, 2, 3, 1,
	2, 2, 2, 3, 3, 3, 4, 3, 1, 1,
	3, 1, 3, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 4, 3,
	1, 4, 4, 3, 1, 1, 0, 1, 3, 1,
	8, 3, 2, 2, 3, 1, 7, 0, 2, 1,
	3, 3, 4, 6, 5, 3, 4, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 5,
	4, 3, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 3, 2, 1, 2, 4, 2, 2,
	1, 2, 1, 2, 11, 9, 0, 0, 1, 0,
	4, 3, 1, 1, 2, 2, 4, 4, 2, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 0, 1,
	4, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 3, 3, 1, 1, 1,
	3, 3, 1, 1, 0, 1, 1, 1, 3, 1,
	1, 3, 1, 1, 4, 4, 4, 4, 4, 1,
	1, 1, 3, 3, 1, 4, 2, 3, 3, 1,
	4, 4, 3, 3, 3, 3, 1, 3, 1, 1,
	3, 1, 1, 0, 1, 3, 1, 3, 1, 4,
	2, 2, 6, 4, 2, 2, 1, 2, 1, 4,
	3, 3, 3, 3, 6, 3, 1, 1, 2, 1,
	5, 4, 2, 2, 4, 2, 2, 1, 3, 1,
}
var yyChk = [...]int{

	-1000, -152, -142, -13, 2, -15, -16, -17, -18, -19,
	52, 80, 45, -83, 39, 150, -74, -78, 21, 20,
	23, 30, 34, 35, 40, 47, 99, 19, 14, -24,
	49, 25, 27, 152, 41, 36, 10, 37, -151, -150,
	-82, -96, -31, -34, -135, 7, -66, -67, -64, 60,
	156, 93, 105, 106, 161, 160, 162, 163, 154, -47,
	-126, -52, 108, 109, 110, 111, 112, 113, 114, 6,
	164, -56, 149, 97, 98, 107, 44, -118, 144, -51,
	-63, -58, -49, -61, -62, 92, 143, 50, 51, 4,
	5, 85, 86, 87, 8, 9, 67, 68, 82, 64,
	65, 66, 81, 63, 75, 148, -117, -8, 165, -14,
	-65, 61, 18, 38, 12, 146, 147, 145, 154, -94,
	150, 10, -5, 146, -4, 99, 100, 101, 102, 103,
	104, 4, 5, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 6, 7, 94, 95, 96, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 41, 42,
	43, 44, 45, 46, 47, 48, 49, 50, 51, 35,
	36, 37, 39, 40, 97, 98, 60, 30, 31, 32,
	33, 34, 61, 62, 56, 57, 80, 54, 55, 53,
	63, 64, 66, 65, 67, 68, 82, 81, 38, 143,
	-91, -12, -95, -85, 37, 39, -93, 147, 10, 146,
	-75, -20, 10, -143, 154, -15, -151, 37, 154, 154,
	-25, -24, 99, 10, -25, -25, -35, -36, -51, -37,
	-118, -38, -8, -71, -46, -24, 152, 131, 132, 88,
	90, 89, 167, 159, 169, 175, 161, 160, 170, 133,
	171, 172, 134, 135, 136, 137, 138, 139, 173, 140,
	174, 141, 116, 91, 158, 115, 154, 154, 154, 150,
	10, 153, -3, 159, -135, 37, -117, -149, 54, 55,
	-148, -108, 100, 101, 94, 95, 94, 96, 95, 168,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 105, 106, 154, 156, 150, 58, 142,
	154, -54, -53, -98, -97, -24, 159, 84, 60, -24,
	-31, -63, 154, -62, 99, 156, -31, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -55,
	154, -24, -139, 17, -138, -69, -8, 77, 78, -24,
	-24, -24, -24, -134, -133, -49, -14, 156, 79, 79,
	-50, -48, -49, -68, -150, -51, -151, 154, 154, 154,
	-24, -24, 154, -24, -24, 17, 76, -138, -138, 17,
	150, -51, -109, 154, -109, 154, -3, 155, 152, 150,
	-142, 152, 166, -91, -95, 83, 29, 152, 166, 168,
	-21, 151, 2, -15, -16, -17, -18, -19, 52, -24,
	21, -3, -22, -23, -24, -24, 152, 152, 152, 152,
	166, 152, 166, 168, 152, 166, -24, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -24, -50, -24, 153, -24, -119, -30, -31, -24,
	-75, -143, 152, 10, -153, -3, 53, 10, 10, -108,
	154, -15, 154, 152, 153, -24, 159, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -25, -24, -60, 10, 150, -51, -60, -54, 157,
	166, 59, -31, -24, 154, -24, -54, 155, -25, 149,
	-69, -69, 17, 156, 58, 142, -24, 11, -31, 59,
	166, -10, -109, -25, -59, -6, -51, 150, 10, -5,
	-59, -6, -51, -110, -109, 79, 156, 150, 58, 142,
	79, 53, -24, -80, -99, -24, -24, -24, 76, 76,
	148, -24, 155, -76, -33, -24, 84, -7, 10, -5,
	60, 93, 6, 97, 98, 44, 99, 92, 143, 50,
	51, 4, 5, 85, 86, 87, 67, 68, 82, 64,
	65, 66, 81, 63, 37, 61, 38, -54, 154, 152,
	-142, 151, -85, -95, 152, 83, 150, 10, -20, -24,
	154, 155, 154, 152, 166, 155, -36, -38, -24, -46,
	153, -24, -10, 166, 29, 155, 151, 154, 154, 10,
	10, 150, -122, 56, -24, -24, -143, -24, 155, 157,
	151, -109, -24, -109, 155, 168, -98, -24, 159, 60,
	-54, 155, 157, 155, -70, 10, 13, 160, -8, 10,
	10, 151, 151, 156, 151, -24, -133, 157, 157, -109,
	-24, -109, -51, -25, -24, -60, -60, -51, -110, 155,
	-10, 166, 155, 155, 151, -10, 166, -24, 153, 155,
	-26, -27, -32, -150, 151, 150, -90, -89, -84, -86,
	-12, -93, -153, 155, -116, -15, 153, -24, -22, -24,
	-112, 150, 153, -24, 155, -30, -137, -31, 159, 60,
	156, -28, -15, 153, -130, -26, -26, 154, -120, 56,
	-144, 150, -73, -14, 155, 155, 96, -15, 153, 151,
	168, -24, -31, 154, 155, 157, 13, -24, 151, 157,
	151, -120, 150, 155, -99, 155, -33, -24, 155, -10,
	166, -132, 104, 103, 102, -88, -87, -86, 151, -10,
	166, -86, 29, 152, -143, 155, 152, -140, 152, -140,
	152, 152, 155, 59, -31, 154, -54, -143, -29, -131,
	43, 42, 155, 155, -26, -121, 57, -14, 151, -39,
	-150, 45, -144, 166, -15, 153, 152, -143, -24, -54,
	157, -121, -128, -129, -127, -124, 33, -125, -24, -103,
	153, -32, -107, -104, -105, 158, -106, 61, 62, -14,
	151, -10, 166, 152, -84, 10, 22, 152, -22, 151,
	32, 33, -140, 31, -140, -114, -15, 153, -137, -31,
	-54, 157, 28, 150, 154, -103, -123, 45, 155, 150,
	-73, -146, -145, -147, 48, -136, 104, 103, 102, 99,
	100, 101, -73, 151, -14, -143, 155, 151, 150, 151,
	-10, 166, 59, -10, 166, -10, 166, -153, -100, -101,
	158, -102, -105, 99, -1, 159, 167, -105, 167, 152,
	-86, 152, 155, -24, -11, 153, 152, 151, 152, 31,
	-143, 155, 155, 152, -143, -72, -14, 150, -103, 154,
	-103, -144, -107, 39, 37, -136, -111, 152, 150, -144,
	-127, -24, 59, -24, 59, 167, -101, 167, -2, 84,
	-105, -105, -115, -15, 153, -11, -143, 152, 26, -114,
	151, -9, 167, -8, -143, 150, -79, -57, -8, 159,
	150, 151, -77, -45, -8, -81, -92, -6, -3, 151,
	-141, -40, -41, -42, -43, -44, -14, -6, 10, 151,
	-24, -24, -101, -101, -8, -143, -143, 152, 155, -14,
	151, -143, 155, 166, -8, -143, 152, 166, -153, 168,
	152, 166, 168, -6, 151, -40, 152, 152, 46, 29,
	79, 168, 24, 150, 151, -57, 151, -45, -24, -92,
	-24, 154, -73, 10, -4, -136, -6, -24, 152, -143,
	-153, -153, -26, -6, 151, 155, -103, -113, 152, 150,
	-143, 151,
}
var yyDef = [...]int{

	88, -2, -2, 87, 109, 110, 111, 112, 113, 114,
	0, 0, 0, 121, 0, 144, 153, 154, 0, 0,
	0, 0, 474, 474, 474, 0, 439, 0, 165, 0,
	0, 0, 0, 171, 0, 0, 96, 427, 108, 191,
	229, 0, -2, 473, 105, 0, -2, 491, 476, 0,
	513, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	398, 402, 0, 0, 0, 0, 0, 0, 0, 443,
	0, 412, 445, 0, 415, 0, 0, 420, 0, 483,
	468, 489, 0, 0, -2, 107, 0, 0, 0, 0,
	0, 0, 0, 0, 453, 454, 455, 456, 457, 458,
	459, 460, 461, 462, 0, 0, 422, 494, 0, -2,
	0, 0, 452, 427, 86, 97, 98, 99, 0, 0,
	88, 89, 90, 91, 71, 72, 73, 74, 75, 76,
	77, 2, 3, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
	41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
	51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 139, 134, 123, 124, 94, 95, 92, 93,
	0, 142, 0, -2, 0, 0, 0, 427, 326, 0,
	0, 475, 439, 96, 0, 0, 0, 272, 273, 0,
	421, 275, 276, 0, 324, 325, 166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 174, 426, 428, 106, 427, 423, 0, 0, 0,
	192, 193, 195, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 363, 0, 474, 0, 0, 0,
	513, 0, 512, 516, 514, 518, 0, 0, 0, 347,
	-2, 0, 0, -2, 439, 513, -2, 382, 383, 384,
	385, 0, 403, 404, 405, 406, 407, 408, 409, 410,
	474, 411, 0, 446, 447, 526, 528, 0, 0, 414,
	416, 418, 419, 82, 102, 100, 440, 474, 0, 0,
	448, 332, 441, 442, 0, 499, 108, 0, 0, 0,
	542, 543, 0, 545, 546, 0, 464, 0, 0, 0,
	0, 496, 435, 0, 438, 513, 0, 0, 116, 88,
	-2, 119, 0, 0, 139, 0, 0, 122, 0, 0,
	143, 152, 145, 146, 147, 148, 149, 150, 0, 0,
	0, 426, 0, 327, 329, 0, 159, 160, 161, 162,
	0, 163, 0, 0, 164, 0, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 381, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 395, 0, 0, 401, 82, 182, -2, 0,
	0, -2, 173, 0, 0, 426, 0, 0, 202, 194,
	0, 230, 0, 233, 144, 345, 0, 348, 349, 350,
	351, 352, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 0, 0, 492, 509, 0, 511, 493, 0, 451,
	513, 0, -2, 521, 513, 0, 0, -2, 0, 413,
	527, 524, 525, 0, 0, 0, 0, 0, 477, 0,
	83, 0, 101, 0, 0, -2, -2, 0, 78, 79,
	0, -2, -2, 331, 449, 0, 474, 0, 0, 0,
	0, 448, 0, 82, 547, 549, 0, 0, 463, 466,
	465, 0, 264, 82, 266, 268, 0, 0, -2, 81,
	47, 12, -2, 45, -2, 32, -2, -2, 70, 38,
	39, 2, 3, 4, 5, 6, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 53, -2, 0, -2, 115,
	-2, 118, 133, 139, 120, 0, 0, 140, 141, 426,
	0, 0, 0, 326, 0, 0, 271, 274, 277, 323,
	0, 400, 0, 83, 0, 0, 175, -2, -2, 0,
	200, 279, 0, 0, 0, 0, -2, 346, 0, 484,
	486, 487, 0, 488, 0, 0, 515, 517, 0, 0,
	0, -2, 451, 444, 0, 536, 537, 0, 539, 530,
	531, 532, 533, 0, 535, 417, 103, 104, 485, 436,
	0, 437, 504, 0, 0, 502, 503, 505, 200, 0,
	0, 83, 541, 544, 495, 0, 83, 269, 0, 450,
	0, 82, 237, 239, 117, 0, 0, 82, 129, 135,
	0, 137, 322, 0, 155, 225, 144, 0, 0, 328,
	158, 220, 220, 399, 0, 183, 0, -2, 0, 0,
	513, 170, 214, 144, 180, 0, 0, -2, 204, 0,
	107, 279, 203, 284, 0, 0, 0, 227, 144, 510,
	0, 344, -2, 513, 523, 529, 538, 0, 507, 500,
	501, 204, 337, 540, 548, 265, 267, 270, 262, 235,
	-2, 260, 240, 241, 242, 0, 82, 132, 0, 127,
	83, 136, 0, 151, -2, 0, 326, 0, 220, 0,
	220, 167, 0, 0, -2, 513, 0, -2, 172, 176,
	0, 0, 262, 429, 0, 0, 0, 201, 198, 278,
	305, 0, 107, 0, 228, 144, 234, -2, 343, 0,
	0, 0, 0, 82, 339, 0, 82, 82, 335, 426,
	0, 238, 187, 261, 257, 0, 259, 250, 251, 252,
	0, 130, 83, 126, 128, 138, 0, 156, 0, 216,
	0, 0, 0, 0, 0, 168, 212, 144, 0, -2,
	0, -2, 0, 144, 0, 0, 262, 0, 262, 279,
	205, 260, 0, -2, 304, 307, 309, 310, 311, 312,
	313, 314, 0, 199, 285, -2, 522, 534, 279, 336,
	338, 83, 0, 0, 83, 333, 83, 0, 263, 245,
	0, 247, 248, 249, 189, 188, 0, 258, 0, 125,
	131, 226, 0, 0, 144, 223, 224, 217, 218, 0,
	-2, 0, 208, 215, -2, 84, 178, 144, 0, 0,
	0, 107, 0, 0, 427, 308, 283, 286, 0, 107,
	340, 341, 0, 334, 0, 0, 246, 0, 0, 190,
	255, 256, 157, 210, 144, 144, -2, 219, 0, 169,
	181, 0, 0, 85, -2, 144, 0, 432, 433, 0,
	144, 197, 0, 316, 426, 0, 320, 0, 0, 287,
	0, 289, 0, 0, 299, 0, 0, 298, -2, 330,
	342, 425, 253, 254, 243, -2, -2, 213, 0, 179,
	185, -2, 430, 0, 434, -2, 280, 0, 317, 0,
	281, 0, 0, 0, 288, 290, 291, 292, 0, 0,
	0, 0, 0, 144, 424, 431, 186, 315, 426, 319,
	426, -2, 293, 294, 295, 297, 300, 244, 211, -2,
	318, 321, 0, 296, 177, 262, 0, 282, 301, 144,
	-2, 302,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 162, 148, 3, 165, 172, 159, 3,
	154, 155, 170, 161, 166, 160, 175, 171, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 153, 152,
	173, 168, 174, 158, 164, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 156, 3, 157, 169, 3, 149, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 150, 167, 151, 163,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

// line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:304
		{
			yylex.(*Parser).currentToken.Value = nil

			yylex.(*Parser).rootNode = &ast.Root{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].list),
				Stmts:    yyDollar[1].list,
				EndTkn:   yylex.(*Parser).currentToken,
			}
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:334
		{
			yyVAL.token = yyDollar[1].token
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:335
		{
			yyVAL.token = yyDollar[1].token
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:339
		{
			yyVAL.token = yyDollar[1].token
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:340
		{
			yyVAL.token = yyDollar[1].token
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:344
		{
			yyVAL.token = nil
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:345
		{
			yyVAL.token = yyDollar[1].token
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:349
		{
			yyVAL.token = nil
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:350
		{
			yyVAL.token = yyDollar[1].token
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:354
		{
			yyVAL.token = yyDollar[1].token
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:358
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:363
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:367
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:368
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:369
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:373
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:374
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:378
		{
			yyVAL.node = yyDollar[1].node
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:379
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameFullyQualified(yyDollar[1].token)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:383
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:384
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:385
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameFullyQualified(yyDollar[1].token)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:386
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameRelative(yyDollar[1].token)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:390
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttribute(yyDollar[1].node, nil)
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:391
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttribute(yyDollar[1].node, yyDollar[2].node)
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:395
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:396
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:401
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttributeGroup(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token, yyDollar[4].token)
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:405
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:406
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:410
		{
			yyVAL.list = nil
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:411
		{
			yyVAL.list = yyDollar[1].list
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:415
		{
			yyVAL.node = nil
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:416
		{
			yyVAL.node = yyDollar[1].node
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:417
		{
			yyVAL.node = yyDollar[1].node
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:418
		{
			yyVAL.node = yyDollar[1].node
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:419
		{
			yyVAL.node = yyDollar[1].node
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:420
		{
			yyVAL.node = yyDollar[1].node
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:422
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:432
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, yyDollar[2].node, nil, nil, nil, yyDollar[3].token)
		}
	case 117:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:434
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token, yyDollar[4].list, yyDollar[5].token, nil)
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:436
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, nil, yyDollar[2].token, yyDollar[3].list, yyDollar[4].token, nil)
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:439
		{
			yyVAL.node = yylex.(*Parser).builder.NewUseList(yyDollar[1].token, nil, yyDollar[2].node, yyDollar[3].token)
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:441
		{
			yyVAL.node = yylex.(*Parser).builder.NewUseList(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:443
		{
			yyVAL.node = yyDollar[1].node
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:446
		{
			yyVAL.node = &ast.StmtConstList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ConstTkn:      yyDollar[1].token,
				Consts:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:458
		{
			yyVAL.token = yyDollar[1].token
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:459
		{
			yyVAL.token = yyDollar[1].token
		}
	case 125:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:464
		{
			yyVAL.node = yylex.(*Parser).builder.NewGroupUseList(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token, yyDollar[8].token)
		}
	case 126:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:466
		{
			yyVAL.node = yylex.(*Parser).builder.NewGroupUseList(yyDollar[1].token, nil, yyDollar[2].node, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].token, yyDollar[7].token)
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:471
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:476
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:478
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:483
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:488
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:490
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:494
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:495
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:499
		{
			yyVAL.node = yyDollar[1].node
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:500
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.Type = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
			decl.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
			yyVAL.node = yyDollar[2].node
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:509
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, nil, nil)
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:510
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].token)
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:514
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, nil, nil)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:515
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].token)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:519
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:520
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:524
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:529
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:533
		{
			yyVAL.node = nil
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:534
		{
			yyVAL.node = yyDollar[1].node
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:535
		{
			yyVAL.node = yyDollar[1].node
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:536
		{
			yyVAL.node = yyDollar[1].node
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:537
		{
			yyVAL.node = yyDollar[1].node
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:538
		{
			yyVAL.node = yyDollar[1].node
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:540
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:552
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:561
		{
			yyVAL.node = yyDollar[1].node
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:565
		{
			yyVAL.node = yyDollar[1].node
		}
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:569
		{
			yyDollar[5].node.(*ast.StmtWhile).WhileTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtWhile).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtWhile).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtWhile).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtWhile).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:579
		{
			yyVAL.node = &ast.StmtDo{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				DoTkn:               yyDollar[1].token,
				Stmt:                yyDollar[2].node,
				WhileTkn:            yyDollar[3].token,
				OpenParenthesisTkn:  yyDollar[4].token,
				Cond:                yyDollar[5].node,
				CloseParenthesisTkn: yyDollar[6].token,
				SemiColonTkn:        yyDollar[7].token,
			}
		}
	case 157:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:592
		{
			yyDollar[9].node.(*ast.StmtFor).ForTkn = yyDollar[1].token
			yyDollar[9].node.(*ast.StmtFor).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[9].node.(*ast.StmtFor).Init = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).InitSeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).InitSemiColonTkn = yyDollar[4].token
			yyDollar[9].node.(*ast.StmtFor).Cond = yyDollar[5].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).CondSeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CondSemiColonTkn = yyDollar[6].token
			yyDollar[9].node.(*ast.StmtFor).Loop = yyDollar[7].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).LoopSeparatorTkns = yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CloseParenthesisTkn = yyDollar[8].token
			yyDollar[9].node.(*ast.StmtFor).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			yyVAL.node = yyDollar[9].node
		}
	case 158:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:609
		{
			yyDollar[5].node.(*ast.StmtSwitch).SwitchTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtSwitch).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtSwitch).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtSwitch).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtSwitch).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:619
		{
			yyVAL.node = &ast.StmtBreak{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				BreakTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:628
		{
			yyVAL.node = &ast.StmtContinue{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ContinueTkn:  yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:637
		{
			yyVAL.node = &ast.StmtReturn{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ReturnTkn:    yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:646
		{
			yyDollar[2].node.(*ast.StmtGlobal).GlobalTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtGlobal).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtGlobal).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:654
		{
			yyDollar[2].node.(*ast.StmtStatic).StaticTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtStatic).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtStatic).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:662
		{
			yyDollar[2].node.(*ast.StmtEcho).EchoTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtEcho).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtEcho).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:670
		{
			yyVAL.node = &ast.StmtInlineHtml{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				InlineHtmlTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:678
		{
			yyVAL.node = yylex.(*Parser).builder.NewExpressionStmt(yyDollar[1].node, yyDollar[2].token)
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:682
		{
			yyDollar[3].node.(*ast.StmtUnset).UnsetTkn = yyDollar[1].token
			yyDollar[3].node.(*ast.StmtUnset).OpenParenthesisTkn = yyDollar[2].token
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[4].token)
			}
			yyDollar[3].node.(*ast.StmtUnset).CloseParenthesisTkn = yyDollar[5].token
			yyDollar[3].node.(*ast.StmtUnset).SemiColonTkn = yyDollar[6].token
			yyDollar[3].node.(*ast.StmtUnset).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			yyVAL.node = yyDollar[3].node
		}
	case 168:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:695
		{
			foreach := yyDollar[7].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[7].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Var = yyDollar[5].node
			foreach.CloseParenthesisTkn = yyDollar[6].token

			if val, ok := yyDollar[5].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 169:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:714
		{
			foreach := yyDollar[9].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Key = yyDollar[5].node
			foreach.DoubleArrowTkn = yyDollar[6].token
			foreach.Var = yyDollar[7].node
			foreach.CloseParenthesisTkn = yyDollar[8].token

			if val, ok := yyDollar[7].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:735
		{
			yyDollar[5].node.(*ast.StmtDeclare).DeclareTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtDeclare).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtDeclare).Consts = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[5].node.(*ast.StmtDeclare).SeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[5].node.(*ast.StmtDeclare).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtDeclare).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:746
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 172:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:753
		{
			yyVAL.node = yylex.(*Parser).builder.NewTry(yyDollar[1].token, yyDollar[2].token, yyDollar[3].list, yyDollar[4].token, yyDollar[5].node, yyDollar[6].node)
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:757
		{
			yyVAL.node = &ast.StmtGoto{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				GotoTkn:  yyDollar[1].token,
				Label: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:770
		{
			yyVAL.node = &ast.StmtLabel{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				ColonTkn: yyDollar[2].token,
			}
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:783
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:784
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, nil, yyDollar[2].node)
		}
	case 177:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:789
		{
			yyVAL.node = yylex.(*Parser).builder.NewCatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:793
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:794
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:799
		{
			yyVAL.node = nil
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:803
		{
			yyVAL.node = &ast.StmtFinally{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				FinallyTkn:           yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:816
		{
			yyVAL.node = &ast.StmtUnset{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:822
		{
			yyDollar[1].node.(*ast.StmtUnset).Vars = append(yyDollar[1].node.(*ast.StmtUnset).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:832
		{
			yyVAL.node = yyDollar[1].node
		}
	case 185:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:839
		{
			yyVAL.node = yylex.(*Parser).builder.NewFunction(nil, yyDollar[1].token, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].token, yyDollar[7].node, yyDollar[8].token, yyDollar[9].list, yyDollar[10].token)
		}
	case 186:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:842
		{
			yyVAL.node = yylex.(*Parser).builder.NewFunction(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token, yyDollar[8].node, yyDollar[9].token, yyDollar[10].list, yyDollar[11].token)
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:846
		{
			yyVAL.token = nil
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:847
		{
			yyVAL.token = yyDollar[1].token
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:851
		{
			yyVAL.token = nil
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:852
		{
			yyVAL.token = yyDollar[1].token
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:856
		{
			yyVAL.list = nil
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:857
		{
			yyVAL.list = yyDollar[1].list
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:861
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:862
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:866
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:867
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 197:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:873
		{
			yyVAL.node = yylex.(*Parser).builder.NewClass(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].node, yyDollar[7].token, yyDollar[8].list, yyDollar[9].token)
		}
	case 198:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:879
		{
			yyVAL.node = yylex.(*Parser).builder.NewTrait(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].list, yyDollar[6].token)
		}
	case 199:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:885
		{
			yyVAL.node = yylex.(*Parser).builder.NewInterface(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token, yyDollar[6].list, yyDollar[7].token)
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:890
		{
			yyVAL.node = nil
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:894
		{
			yyVAL.node = &ast.StmtClass{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExtendsTkn: yyDollar[1].token,
				Extends:    yyDollar[2].node,
			}
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:905
		{
			yyVAL.node = nil
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:909
		{
			yyVAL.node = &ast.StmtInterface{
				Position:             yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ExtendsTkn:           yyDollar[1].token,
				Extends:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ExtendsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:921
		{
			yyVAL.node = nil
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:925
		{
			yyVAL.node = &ast.StmtClass{
				Position:                yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ImplementsTkn:           yyDollar[1].token,
				Implements:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ImplementsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:937
		{
			yyVAL.node = yyDollar[1].node
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:941
		{
			yyVAL.node = &ast.StmtForeach{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Var:          yyDollar[2].node,
			}
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:949
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ListTkn:         yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:960
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:973
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:980
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForTkn:    yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:996
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1003
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForeachTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1019
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1026
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndDeclareTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1042
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Cases:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1051
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CaseSeparatorTkn:     yyDollar[2].token,
				Cases:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1061
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn:     yyDollar[1].token,
				Cases:        yyDollar[2].list,
				EndSwitchTkn: yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1071
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				ColonTkn:         yyDollar[1].token,
				CaseSeparatorTkn: yyDollar[2].token,
				Cases:            yyDollar[3].list,
				EndSwitchTkn:     yyDollar[4].token,
				SemiColonTkn:     yyDollar[5].token,
			}
		}
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1085
		{
			yyVAL.list = nil
		}
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1089
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtCase{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list),
				CaseTkn:          yyDollar[2].token,
				Cond:             yyDollar[3].node,
				CaseSeparatorTkn: yyDollar[4].token,
				Stmts:            yyDollar[5].list,
			})
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1099
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtDefault{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				DefaultTkn:       yyDollar[2].token,
				CaseSeparatorTkn: yyDollar[3].token,
				Stmts:            yyDollar[4].list,
			})
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1111
		{
			yyVAL.token = yyDollar[1].token
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1115
		{
			yyVAL.token = yyDollar[1].token
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1122
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1129
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndWhileTkn:  yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1145
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				Stmt:                yyDollar[5].node,
			}
		}
	case 228:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1156
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				Stmt:                yyDollar[6].node,
			})

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)

			yyVAL.node = yyDollar[1].node
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1174
		{
			yyVAL.node = yyDollar[1].node
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1178
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[3].node),
				ElseTkn:  yyDollar[2].token,
				Stmt:     yyDollar[3].node,
			}

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 231:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1193
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[6].list),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				ColonTkn:            yyDollar[5].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[6].list),
					Stmts:    yyDollar[6].list,
				},
			}
		}
	case 232:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1208
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[7].list),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[7].list),
					Stmts:    yyDollar[7].list,
				},
			})

			yyVAL.node = yyDollar[1].node
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1228
		{
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[2].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[3].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			yyVAL.node = yyDollar[1].node
		}
	case 234:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1236
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				ElseTkn:  yyDollar[2].token,
				ColonTkn: yyDollar[3].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[4].list),
					Stmts:    yyDollar[4].list,
				},
			}
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[5].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[6].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token)

			yyVAL.node = yyDollar[1].node
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1255
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1256
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1260
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1261
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1265
		{
			yyVAL.node = nil
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1266
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1267
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1268
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 243:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1274
		{
			yyVAL.node = yylex.(*Parser).builder.NewParameter(yyDollar[1].list, yyDollar[2].node, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, nil, nil, false)
		}
	case 244:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1277
		{
			yyVAL.node = yylex.(*Parser).builder.NewParameter(yyDollar[1].list, yyDollar[2].node, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].token, yyDollar[8].node, true)
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1281
		{
			yyVAL.node = yyDollar[1].node
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1282
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1283
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1287
		{
			yyVAL.node = yyDollar[1].node
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1288
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1292
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1293
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1294
		{
			yyVAL.node = yyDollar[1].node
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1298
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1299
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1304
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1306
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1310
		{
			yyVAL.node = yyDollar[1].node
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1311
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1312
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 260:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1316
		{
			yyVAL.node = nil
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1317
		{
			yyVAL.node = yyDollar[1].node
		}
	case 262:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1321
		{
			yyVAL.node = &ReturnType{}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1322
		{
			yyVAL.node = yylex.(*Parser).builder.NewReturnType(yyDollar[1].token, yyDollar[2].node)
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1327
		{
			yyVAL.node = &ArgumentList{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				CloseParenthesisTkn: yyDollar[2].token,
			}
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1335
		{
			argumentList := yyDollar[2].node.(*ArgumentList)
			argumentList.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			argumentList.OpenParenthesisTkn = yyDollar[1].token
			if yyDollar[3].token != nil {
				argumentList.SeparatorTkns = append(argumentList.SeparatorTkns, yyDollar[3].token)
			}
			argumentList.CloseParenthesisTkn = yyDollar[4].token

			yyVAL.node = argumentList
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1350
		{
			yyVAL.node = &ArgumentList{
				Arguments: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1356
		{
			yyDollar[1].node.(*ArgumentList).SeparatorTkns = append(yyDollar[1].node.(*ArgumentList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ArgumentList).Arguments = append(yyDollar[1].node.(*ArgumentList).Arguments, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1366
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgument(yyDollar[1].node)
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1370
		{
			yyVAL.node = yylex.(*Parser).builder.NewVariadicArgument(yyDollar[1].token, yyDollar[2].node)
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1374
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamedArgument(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node)
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1381
		{
			yyDollar[1].node.(*ast.StmtGlobal).Vars = append(yyDollar[1].node.(*ast.StmtGlobal).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1388
		{
			yyVAL.node = &ast.StmtGlobal{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1397
		{
			yyVAL.node = yyDollar[1].node
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1404
		{
			yyDollar[1].node.(*ast.StmtStatic).Vars = append(yyDollar[1].node.(*ast.StmtStatic).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1411
		{
			yyVAL.node = &ast.StmtStatic{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1420
		{

			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1435
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1453
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1454
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1459
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyList(yyDollar[1].list, yyDollar[2].list, yyDollar[3].node, yyDollar[4].node, yyDollar[5].token)
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1461
		{
			yyVAL.node = yylex.(*Parser).builder.NewClassConstList(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token)
		}
	case 282:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:1463
		{
			yyVAL.node = yylex.(*Parser).builder.NewClassMethod(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].node, yyDollar[8].token, yyDollar[9].node, yyDollar[10].node)
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1465
		{
			traitUse := &ast.StmtTraitUse{
				Position:      yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				UseTkn:        yyDollar[1].token,
				Traits:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}

			switch n := yyDollar[3].node.(type) {
			case *TraitAdaptationList:
				traitUse.OpenCurlyBracketTkn = n.OpenCurlyBracketTkn
				traitUse.Adaptations = n.Adaptations
				traitUse.CloseCurlyBracketTkn = n.CloseCurlyBracketTkn
			case *ast.StmtNop:
				traitUse.SemiColonTkn = n.SemiColonTkn
			}

			yyVAL.node = traitUse
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1487
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1488
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1493
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1500
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CloseCurlyBracketTkn: yyDollar[2].token,
			}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1508
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Adaptations:          yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1520
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1524
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1531
		{
			yyDollar[1].node.(*ast.StmtTraitUsePrecedence).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1537
		{
			yyDollar[1].node.(*ast.StmtTraitUseAlias).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1546
		{
			yyVAL.node = &ast.StmtTraitUsePrecedence{
				Position:       yylex.(*Parser).builder.Pos.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].node.(*ParserSeparatedList).Items),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				InsteadofTkn:   yyDollar[2].token,
				Insteadof:      yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1561
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1576
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1591
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1607
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
			}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1621
		{
			yyVAL.node = &TraitMethodRef{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1632
		{
			yyVAL.node = yyDollar[1].node
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1639
		{
			yyVAL.node = &TraitMethodRef{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1655
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1662
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1673
		{
			yyVAL.list = yyDollar[1].list
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1674
		{
			yyVAL.list = []ast.Vertex{yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)}
		}
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1678
		{
			yyVAL.list = nil
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1679
		{
			yyVAL.list = yyDollar[1].list
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1683
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1684
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1688
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1689
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1690
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1691
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1692
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1693
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1698
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1705
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1714
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				Expr: nil,
			}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1729
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1748
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1755
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1764
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1780
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1796
		{
			yyDollar[1].node.(*ast.StmtEcho).Exprs = append(yyDollar[1].node.(*ast.StmtEcho).Exprs, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1803
		{
			yyVAL.node = &ast.StmtEcho{
				Exprs: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1812
		{
			yyVAL.node = yyDollar[1].node
		}
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1819
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1823
		{
			yyVAL.node = yyDollar[1].node
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1830
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1837
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 330:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1847
		{
			yyVAL.node = yylex.(*Parser).builder.NewAnonClass(yyDollar[1].list, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node, yyDollar[5].node, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1852
		{
			if yyDollar[3].node != nil {
				yyVAL.node = &ast.ExprNew{
					Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
					NewTkn:              yyDollar[1].token,
					Class:               yyDollar[2].node,
					OpenParenthesisTkn:  yyDollar[3].node.(*ArgumentList).OpenParenthesisTkn,
					Args:                yyDollar[3].node.(*ArgumentList).Arguments,
					SeparatorTkns:       yyDollar[3].node.(*ArgumentList).SeparatorTkns,
					CloseParenthesisTkn: yyDollar[3].node.(*ArgumentList).CloseParenthesisTkn,
				}
			} else {
				yyVAL.node = &ast.ExprNew{
					Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
					NewTkn:   yyDollar[1].token,
					Class:    yyDollar[2].node,
				}
			}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1872
		{
			yyVAL.node = &ast.ExprNew{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				NewTkn:   yyDollar[1].token,
				Class:    yyDollar[2].node,
			}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1883
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1890
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1895
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 336:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1902
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token)
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1909
		{
			yyVAL.node = nil
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1914
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1921
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1926
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1933
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(nil, nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1938
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(yyDollar[1].token, yyDollar[2].token, nil, yyDollar[3].token, yyDollar[4].node)
		}
	case 343:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1945
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
				EqualTkn: yyDollar[5].token,
				Expr:     yyDollar[6].node,
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1961
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
					OpenBracketTkn:  yyDollar[1].token,
					Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[3].token,
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1976
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1985
		{
			yyVAL.node = &ast.ExprAssignReference{
				Position:     yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Var:          yyDollar[1].node,
				EqualTkn:     yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Expr:         yyDollar[4].node,
			}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1995
		{
			yyVAL.node = &ast.ExprClone{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CloneTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2003
		{
			yyVAL.node = &ast.ExprAssignPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2012
		{
			yyVAL.node = &ast.ExprAssignMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2021
		{
			yyVAL.node = &ast.ExprAssignMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2030
		{
			yyVAL.node = &ast.ExprAssignPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2039
		{
			yyVAL.node = &ast.ExprAssignDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2048
		{
			yyVAL.node = &ast.ExprAssignConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2057
		{
			yyVAL.node = &ast.ExprAssignMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2066
		{
			yyVAL.node = &ast.ExprAssignBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2075
		{
			yyVAL.node = &ast.ExprAssignBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2084
		{
			yyVAL.node = &ast.ExprAssignBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2093
		{
			yyVAL.node = &ast.ExprAssignShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2102
		{
			yyVAL.node = &ast.ExprAssignShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2111
		{
			yyVAL.node = &ast.ExprAssignCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2120
		{
			yyVAL.node = &ast.ExprPostInc{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				IncTkn:   yyDollar[2].token,
			}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2128
		{
			yyVAL.node = &ast.ExprPreInc{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2136
		{
			yyVAL.node = &ast.ExprPostDec{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				DecTkn:   yyDollar[2].token,
			}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2144
		{
			yyVAL.node = &ast.ExprPreDec{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DecTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2152
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2161
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2170
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2179
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2188
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2197
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2206
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2215
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2224
		{
			yyVAL.node = &ast.ExprBinaryConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2233
		{
			yyVAL.node = &ast.ExprBinaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2242
		{
			yyVAL.node = &ast.ExprBinaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2251
		{
			yyVAL.node = &ast.ExprBinaryMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2260
		{
			yyVAL.node = &ast.ExprBinaryPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2269
		{
			yyVAL.node = &ast.ExprBinaryDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2278
		{
			yyVAL.node = &ast.ExprBinaryMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2287
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2296
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2305
		{
			yyVAL.node = &ast.ExprUnaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PlusTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2313
		{
			yyVAL.node = &ast.ExprUnaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				MinusTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2321
		{
			yyVAL.node = &ast.ExprBooleanNot{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExclamationTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2329
		{
			yyVAL.node = &ast.ExprBitwiseNot{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				TildaTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2337
		{
			yyVAL.node = &ast.ExprBinaryIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2346
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2355
		{
			yyVAL.node = &ast.ExprBinaryEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2364
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2373
		{
			yyVAL.node = &ast.ExprBinarySmaller{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2382
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2391
		{
			yyVAL.node = &ast.ExprBinaryGreater{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2400
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2409
		{
			yyVAL.node = &ast.ExprBinarySpaceship{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2418
		{
			yyVAL.node = &ast.ExprInstanceOf{
				Position:      yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Expr:          yyDollar[1].node,
				InstanceOfTkn: yyDollar[2].token,
				Class:         yyDollar[3].node,
			}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2427
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2436
		{
			yyVAL.node = yyDollar[1].node
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2440
		{
			yyVAL.node = yyDollar[1].node
		}
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:2444
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[5].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				IfTrue:      yyDollar[3].node,
				ColonTkn:    yyDollar[4].token,
				IfFalse:     yyDollar[5].node,
			}
		}
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2455
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				ColonTkn:    yyDollar[3].token,
				IfFalse:     yyDollar[4].node,
			}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2465
		{
			yyVAL.node = &ast.ExprBinaryCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2474
		{
			yyVAL.node = yyDollar[1].node
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2478
		{
			yyVAL.node = &ast.ExprCastInt{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2486
		{
			yyVAL.node = &ast.ExprCastDouble{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2494
		{
			yyVAL.node = &ast.ExprCastString{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2502
		{
			yyVAL.node = &ast.ExprCastArray{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2510
		{
			yyVAL.node = &ast.ExprCastObject{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2518
		{
			yyVAL.node = &ast.ExprCastBool{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2526
		{
			yyVAL.node = &ast.ExprCastUnset{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2534
		{
			exit := &ast.ExprExit{
				ExitTkn: yyDollar[1].token,
			}

			if yyDollar[2].node == nil {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token)
			} else {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				exit.OpenParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).OpenParenthesisTkn
				exit.Expr = yyDollar[2].node.(*ast.ExprBrackets).Expr
				exit.CloseParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).CloseParenthesisTkn
			}

			yyVAL.node = exit
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2551
		{
			yyVAL.node = &ast.ExprErrorSuppress{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AtTkn:    yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2559
		{
			yyVAL.node = yyDollar[1].node
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2563
		{
			yyVAL.node = &ast.ExprShellExec{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBacktickTkn:  yyDollar[1].token,
				Parts:            yyDollar[2].list,
				CloseBacktickTkn: yyDollar[3].token,
			}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2572
		{
			yyVAL.node = &ast.ExprPrint{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PrintTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2580
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				YieldTkn: yyDollar[1].token,
			}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2587
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldTkn: yyDollar[1].token,
				Val:      yyDollar[2].node,
			}
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2595
		{
			yyVAL.node = &ast.ExprYield{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				YieldTkn:       yyDollar[1].token,
				Key:            yyDollar[2].node,
				DoubleArrowTkn: yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2605
		{
			yyVAL.node = &ast.ExprYieldFrom{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldFromTkn: yyDollar[1].token,
				Expr:         yyDollar[2].node,
			}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2613
		{
			yyVAL.node = yylex.(*Parser).builder.NewThrowExpr(yyDollar[1].token, yyDollar[2].node)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2617
		{
			yyVAL.node = yyDollar[1].node
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2621
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			}

			yyVAL.node = yyDollar[2].node
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2636
		{
			yyVAL.node = yyDollar[1].node
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2638
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[2].node)
				n.AttrGroups = yyDollar[1].list
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[2].node)
				n.AttrGroups = yyDollar[1].list
			}

			yyVAL.node = yyDollar[2].node
		}
	case 424:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:2654
		{
			closure := yyDollar[7].node.(*ast.ExprClosure)

			closure.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token)
			closure.FunctionTkn = yyDollar[1].token
			closure.AmpersandTkn = yyDollar[2].token
			closure.OpenParenthesisTkn = yyDollar[4].token
			closure.Params = yyDollar[5].node.(*ParserSeparatedList).Items
			closure.SeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			closure.CloseParenthesisTkn = yyDollar[6].token
			closure.ColonTkn = yyDollar[8].node.(*ReturnType).ColonTkn
			closure.ReturnType = yyDollar[8].node.(*ReturnType).Type
			closure.OpenCurlyBracketTkn = yyDollar[9].token
			closure.Stmts = yyDollar[10].list
			closure.CloseCurlyBracketTkn = yyDollar[11].token

			yyVAL.node = closure
		}
	case 425:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:2673
		{
			yyVAL.node = &ast.ExprArrowFunction{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node),
				FnTkn:               yyDollar[1].token,
				AmpersandTkn:        yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Params:              yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[6].node.(*ReturnType).Type,
				DoubleArrowTkn:      yyDollar[8].token,
				Expr:                yyDollar[9].node,
			}
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2695
		{
			yyVAL.token = nil
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2696
		{
			yyVAL.token = yyDollar[1].token
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2701
		{
			yyVAL.node = &ast.ExprClosure{}
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2705
		{
			yyVAL.node = &ast.ExprClosure{
				UseTkn:                 yyDollar[1].token,
				UseOpenParenthesisTkn:  yyDollar[2].token,
				Uses:                   yyDollar[3].node.(*ParserSeparatedList).Items,
				UseSeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				UseCloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2718
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2725
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2734
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2748
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				AmpersandTkn: yyDollar[1].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						IdentifierTkn: yyDollar[2].token,
						Value:         yyDollar[2].token.Value,
					},
				},
			}
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2766
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2777
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2798
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2819
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2833
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2841
		{
			yyVAL.node = yyDollar[1].node
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2848
		{
			yyVAL.node = yyDollar[1].node
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2852
		{
			yyVAL.node = yyDollar[1].node
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2859
		{
			yyVAL.node = nil
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2863
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2875
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2879
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
			}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2889
		{
			yyVAL.list = yyDollar[1].list
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2896
		{
			yyVAL.node = nil
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2900
		{
			yyVAL.node = yyDollar[1].node
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2907
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ArrayTkn:        yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2918
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2928
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2939
		{
			yyVAL.node = &ast.ScalarLnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2947
		{
			yyVAL.node = &ast.ScalarDnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2955
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2963
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2971
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2979
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2987
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2995
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3003
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3011
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3019
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:       yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn: yyDollar[1].token,
				Parts: []ast.Vertex{
					&ast.ScalarEncapsedStringPart{
						Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						EncapsedStrTkn: yyDollar[2].token,
						Value:          yyDollar[2].token.Value,
					},
				},
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3034
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenHeredocTkn:  yyDollar[1].token,
				CloseHeredocTkn: yyDollar[2].token,
			}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3042
		{
			yyVAL.node = &ast.ScalarEncapsed{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenQuoteTkn:  yyDollar[1].token,
				Parts:         yyDollar[2].list,
				CloseQuoteTkn: yyDollar[3].token,
			}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3051
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn:  yyDollar[1].token,
				Parts:           yyDollar[2].list,
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3060
		{
			yyVAL.node = yyDollar[1].node
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3064
		{
			yyVAL.node = yyDollar[1].node
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3071
		{
			yyVAL.node = &ast.ExprConstFetch{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Const:    yyDollar[1].node,
			}
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3078
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3091
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3107
		{
			yyVAL.node = yyDollar[1].node
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3111
		{
			yyVAL.node = yyDollar[1].node
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3118
		{
			yyVAL.node = nil
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3122
		{
			yyVAL.node = yyDollar[1].node
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3129
		{
			yyVAL.node = yyDollar[1].node
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3136
		{
			yyVAL.node = yyDollar[1].node
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3140
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3149
		{
			yyVAL.node = yyDollar[1].node
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3156
		{
			yyVAL.node = yyDollar[1].node
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3160
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3169
		{
			yyVAL.node = yyDollar[1].node
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3176
		{
			yyVAL.node = yyDollar[1].node
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3180
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3190
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3200
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3212
		{
			yyVAL.node = yylex.(*Parser).builder.NewMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3216
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafeMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3220
		{
			yyVAL.node = yyDollar[1].node
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3227
		{
			yyVAL.node = yyDollar[1].node
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3231
		{
			yyVAL.node = yyDollar[1].node
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3235
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3239
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3246
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3257
		{
			yyVAL.node = &ast.ExprVariable{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				DollarTkn:            yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Name:                 yyDollar[3].node,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3267
		{
			yyVAL.node = &ast.ExprVariable{
				Position:  yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DollarTkn: yyDollar[1].token,
				Name:      yyDollar[2].node,
			}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3278
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3287
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3299
		{
			yyVAL.node = yyDollar[1].node
		}
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3303
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3313
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3325
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3329
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3333
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3342
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3354
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3362
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3371
		{
			yyVAL.node = yyDollar[1].node
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3378
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3386
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3395
		{
			yyVAL.node = yyDollar[1].node
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3402
		{
			pairList := yyDollar[1].node.(*ParserSeparatedList)
			fistPair := pairList.Items[0].(*ast.ExprArrayItem)

			if fistPair.Key == nil && fistPair.Val == nil && len(pairList.Items) == 1 {
				pairList.Items = nil
			}

			yyVAL.node = yyDollar[1].node
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3416
		{
			yyVAL.node = &ast.ExprArrayItem{}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3420
		{
			yyVAL.node = yyDollar[1].node
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3427
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3434
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3443
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val:            yyDollar[3].node,
			}
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3452
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Val:      yyDollar[1].node,
			}
		}
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3459
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				AmpersandTkn:   yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3469
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Val:          yyDollar[2].node,
			}
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3477
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:    yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				EllipsisTkn: yyDollar[1].token,
				Val:         yyDollar[2].node,
			}
		}
	case 522:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:3485
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[3].token, yyDollar[6].token),
					ListTkn:         yyDollar[3].token,
					OpenBracketTkn:  yyDollar[4].token,
					Items:           yyDollar[5].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[6].token,
				},
			}
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3501
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
			}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3518
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3522
		{
			yyVAL.list = append(
				yyDollar[1].list,
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					EncapsedStrTkn: yyDollar[2].token,
					Value:          yyDollar[2].token.Value,
				},
			)
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3533
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3537
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
				yyDollar[2].node,
			}
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3551
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3562
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3579
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3583
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3587
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name:                      yyDollar[2].node,
				CloseCurlyBracketTkn:      yyDollar[3].token,
			}
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3596
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 534:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:3609
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenSquareBracketTkn:  yyDollar[3].token,
				Dim:                   yyDollar[4].node,
				CloseSquareBracketTkn: yyDollar[5].token,
				CloseCurlyBracketTkn:  yyDollar[6].token,
			}
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3625
		{
			yyVAL.node = &ast.ScalarEncapsedStringBrackets{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Var:                  yyDollar[2].node,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3637
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3645
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(string(yyDollar[1].token.Value)); err == nil {
				yyVAL.node = &ast.ScalarLnumber{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					NumberTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					StringTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3662
		{
			_, err := strconv.Atoi(string(yyDollar[2].token.Value))
			isInt := err == nil

			if isInt {
				yyVAL.node = &ast.ExprUnaryMinus{
					Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn: yyDollar[1].token,
					Expr: &ast.ScalarLnumber{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						NumberTkn: yyDollar[2].token,
						Value:     yyDollar[2].token.Value,
					},
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn:  yyDollar[1].token,
					StringTkn: yyDollar[2].token,
					Value:     append([]byte("-"), yyDollar[2].token.Value...),
				}
			}
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3686
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:3700
		{
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[4].token)
			}

			yyVAL.node = &ast.ExprIsset{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				IssetTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Vars:                yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
			}
		}
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3715
		{
			yyVAL.node = &ast.ExprEmpty{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EmptyTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3725
		{
			yyVAL.node = &ast.ExprInclude{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3733
		{
			yyVAL.node = &ast.ExprIncludeOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3741
		{
			yyVAL.node = &ast.ExprEval{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EvalTkn:             yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3751
		{
			yyVAL.node = &ast.ExprRequire{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3759
		{
			yyVAL.node = &ast.ExprRequireOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3770
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3776
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3786
		{
			yyVAL.node = yyDollar[1].node
		}
	}
	goto yystack /* stack new state and value */
}
