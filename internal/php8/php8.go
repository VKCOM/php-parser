// Code generated by goyacc -o internal/php8/php8.go internal/php8/php8.y. DO NOT EDIT.

// line internal/php8/php8.y:2
package php8

import __yyfmt__ "fmt"

// line internal/php8/php8.y:2

import (
	"strconv"

	"github.com/VKCOM/php-parser/pkg/ast"
	"github.com/VKCOM/php-parser/pkg/token"
)

// line internal/php8/php8.y:13
type yySymType struct {
	yys   int
	node  ast.Vertex
	token *token.Token
	list  []ast.Vertex
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_FN = 57380
const T_CONST = 57381
const T_RETURN = 57382
const T_TRY = 57383
const T_CATCH = 57384
const T_FINALLY = 57385
const T_THROW = 57386
const T_USE = 57387
const T_INSTEADOF = 57388
const T_GLOBAL = 57389
const T_VAR = 57390
const T_UNSET = 57391
const T_ISSET = 57392
const T_EMPTY = 57393
const T_HALT_COMPILER = 57394
const T_CLASS = 57395
const T_TRAIT = 57396
const T_INTERFACE = 57397
const T_EXTENDS = 57398
const T_IMPLEMENTS = 57399
const T_OBJECT_OPERATOR = 57400
const T_DOUBLE_ARROW = 57401
const T_LIST = 57402
const T_ARRAY = 57403
const T_CALLABLE = 57404
const T_CLASS_C = 57405
const T_TRAIT_C = 57406
const T_METHOD_C = 57407
const T_FUNC_C = 57408
const T_LINE = 57409
const T_FILE = 57410
const T_COMMENT = 57411
const T_DOC_COMMENT = 57412
const T_OPEN_TAG = 57413
const T_OPEN_TAG_WITH_ECHO = 57414
const T_CLOSE_TAG = 57415
const T_WHITESPACE = 57416
const T_START_HEREDOC = 57417
const T_END_HEREDOC = 57418
const T_DOLLAR_OPEN_CURLY_BRACES = 57419
const T_CURLY_OPEN = 57420
const T_PAAMAYIM_NEKUDOTAYIM = 57421
const T_NAMESPACE = 57422
const T_NS_C = 57423
const T_DIR = 57424
const T_NS_SEPARATOR = 57425
const T_ELLIPSIS = 57426
const T_EVAL = 57427
const T_REQUIRE = 57428
const T_REQUIRE_ONCE = 57429
const T_LOGICAL_OR = 57430
const T_LOGICAL_XOR = 57431
const T_LOGICAL_AND = 57432
const T_INSTANCEOF = 57433
const T_NEW = 57434
const T_CLONE = 57435
const T_ELSEIF = 57436
const T_ELSE = 57437
const T_ENDIF = 57438
const T_PRINT = 57439
const T_YIELD = 57440
const T_STATIC = 57441
const T_ABSTRACT = 57442
const T_FINAL = 57443
const T_PRIVATE = 57444
const T_PROTECTED = 57445
const T_PUBLIC = 57446
const T_INC = 57447
const T_DEC = 57448
const T_YIELD_FROM = 57449
const T_INT_CAST = 57450
const T_DOUBLE_CAST = 57451
const T_STRING_CAST = 57452
const T_ARRAY_CAST = 57453
const T_OBJECT_CAST = 57454
const T_BOOL_CAST = 57455
const T_UNSET_CAST = 57456
const T_COALESCE = 57457
const T_SPACESHIP = 57458
const T_NOELSE = 57459
const T_PLUS_EQUAL = 57460
const T_MINUS_EQUAL = 57461
const T_MUL_EQUAL = 57462
const T_POW_EQUAL = 57463
const T_DIV_EQUAL = 57464
const T_CONCAT_EQUAL = 57465
const T_MOD_EQUAL = 57466
const T_AND_EQUAL = 57467
const T_OR_EQUAL = 57468
const T_XOR_EQUAL = 57469
const T_SL_EQUAL = 57470
const T_SR_EQUAL = 57471
const T_COALESCE_EQUAL = 57472
const T_BOOLEAN_OR = 57473
const T_BOOLEAN_AND = 57474
const T_POW = 57475
const T_SL = 57476
const T_SR = 57477
const T_IS_IDENTICAL = 57478
const T_IS_NOT_IDENTICAL = 57479
const T_IS_EQUAL = 57480
const T_IS_NOT_EQUAL = 57481
const T_IS_SMALLER_OR_EQUAL = 57482
const T_IS_GREATER_OR_EQUAL = 57483
const T_NULLSAFE_OBJECT_OPERATOR = 57484
const T_MATCH = 57485
const T_ATTRIBUTE = 57486
const T_NAME_RELATIVE = 57487
const T_NAME_QUALIFIED = 57488
const T_NAME_FULLY_QUALIFIED = 57489
const T_READONLY = 57490
const T_ENUM = 57491

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_FN",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_COALESCE_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"T_NULLSAFE_OBJECT_OPERATOR",
	"T_MATCH",
	"T_ATTRIBUTE",
	"T_NAME_RELATIVE",
	"T_NAME_QUALIFIED",
	"T_NAME_FULLY_QUALIFIED",
	"T_READONLY",
	"T_ENUM",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

// line internal/php8/php8.y:3429

// line yacctab:1
var yyExca = [...]int16{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	-2, 0,
	-1, 43,
	58, 493,
	79, 493,
	142, 493,
	152, 493,
	158, 493,
	-2, 489,
	-1, 45,
	29, 80,
	155, 80,
	-2, 97,
	-1, 48,
	156, 499,
	-2, 508,
	-1, 84,
	79, 454,
	-2, 497,
	-1, 85,
	58, 498,
	142, 498,
	152, 498,
	158, 498,
	-2, 478,
	-1, 98,
	58, 495,
	79, 495,
	142, 495,
	152, 495,
	156, 501,
	158, 495,
	-2, 476,
	-1, 99,
	58, 496,
	79, 496,
	142, 496,
	152, 496,
	158, 496,
	-2, 477,
	-1, 103,
	79, 456,
	-2, 480,
	-1, 220,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	-2, 0,
	-1, 329,
	58, 493,
	79, 493,
	142, 493,
	152, 493,
	158, 493,
	-2, 376,
	-1, 332,
	156, 501,
	-2, 495,
	-1, 336,
	58, 493,
	79, 493,
	142, 493,
	152, 493,
	158, 493,
	-2, 378,
	-1, 399,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	-2, 0,
	-1, 453,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 400,
	-1, 454,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 401,
	-1, 455,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 402,
	-1, 456,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 403,
	-1, 457,
	140, 0,
	141, 0,
	175, 0,
	176, 0,
	-2, 404,
	-1, 458,
	140, 0,
	141, 0,
	175, 0,
	176, 0,
	-2, 405,
	-1, 459,
	140, 0,
	141, 0,
	175, 0,
	176, 0,
	-2, 406,
	-1, 460,
	140, 0,
	141, 0,
	175, 0,
	176, 0,
	-2, 407,
	-1, 461,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 408,
	-1, 468,
	157, 187,
	168, 187,
	-2, 493,
	-1, 471,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	-2, 0,
	-1, 513,
	157, 537,
	159, 537,
	168, 537,
	-2, 493,
	-1, 518,
	58, 494,
	79, 494,
	142, 494,
	152, 494,
	156, 500,
	158, 494,
	-2, 410,
	-1, 535,
	156, 523,
	-2, 479,
	-1, 536,
	156, 525,
	-2, 515,
	-1, 567,
	155, 13,
	-2, 460,
	-1, 569,
	155, 46,
	-2, 429,
	-1, 571,
	155, 73,
	-2, 455,
	-1, 572,
	155, 11,
	-2, 108,
	-1, 581,
	156, 441,
	-2, 42,
	-1, 583,
	155, 61,
	-2, 488,
	-1, 584,
	155, 62,
	-2, 484,
	-1, 585,
	155, 63,
	-2, 486,
	-1, 586,
	155, 64,
	-2, 485,
	-1, 587,
	155, 65,
	-2, 481,
	-1, 588,
	155, 66,
	-2, 482,
	-1, 589,
	155, 67,
	-2, 483,
	-1, 590,
	155, 68,
	-2, 487,
	-1, 591,
	156, 441,
	-2, 69,
	-1, 594,
	157, 245,
	-2, 108,
	-1, 596,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	-2, 0,
	-1, 623,
	157, 245,
	-2, 108,
	-1, 624,
	157, 245,
	-2, 108,
	-1, 634,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	-2, 0,
	-1, 649,
	156, 500,
	-2, 494,
	-1, 715,
	157, 215,
	-2, 493,
	-1, 725,
	157, 245,
	-2, 108,
	-1, 748,
	157, 536,
	159, 536,
	168, 536,
	-2, 493,
	-1, 767,
	157, 84,
	-2, 108,
	-1, 778,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	-2, 0,
	-1, 788,
	157, 216,
	-2, 493,
	-1, 791,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	-2, 0,
	-1, 812,
	53, 108,
	54, 108,
	55, 108,
	94, 240,
	95, 240,
	96, 240,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	-2, 0,
	-1, 856,
	157, 215,
	-2, 493,
	-1, 858,
	157, 218,
	-2, 468,
	-1, 870,
	37, 319,
	39, 319,
	-2, 316,
	-1, 884,
	53, 108,
	54, 108,
	55, 108,
	94, 241,
	95, 241,
	96, 241,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	-2, 0,
	-1, 917,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	-2, 0,
	-1, 921,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	-2, 0,
	-1, 955,
	31, 231,
	32, 231,
	33, 231,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	153, 231,
	-2, 0,
	-1, 963,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	-2, 0,
	-1, 996,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	-2, 0,
	-1, 997,
	31, 230,
	32, 230,
	33, 230,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	153, 230,
	-2, 0,
	-1, 1002,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	-2, 0,
	-1, 1007,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	-2, 0,
	-1, 1035,
	157, 245,
	-2, 108,
	-1, 1043,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	-2, 0,
	-1, 1054,
	53, 108,
	54, 108,
	55, 108,
	100, 108,
	101, 108,
	148, 108,
	149, 108,
	-2, 0,
}

const yyPrivate = 57344

const yyLast = 9616

var yyAct = [...]int16{
	30, 824, 976, 688, 564, 730, 983, 872, 967, 220,
	128, 40, 852, 474, 973, 734, 911, 819, 828, 735,
	422, 728, 781, 697, 228, 228, 228, 714, 696, 242,
	552, 532, 690, 320, 562, 412, 732, 726, 5, 467,
	417, 540, 105, 10, 98, 416, 79, 364, 9, 504,
	541, 322, 234, 324, 328, 241, 222, 337, 338, 339,
	340, 341, 217, 238, 209, 342, 343, 344, 345, 346,
	347, 348, 395, 351, 237, 289, 359, 360, 361, 362,
	415, 227, 2, 8, 216, 414, 413, 99, 7, 6,
	206, 379, 380, 1025, 382, 383, 368, 46, 373, 332,
	332, 223, 1014, 1011, 39, 980, 231, 232, 746, 100,
	936, 279, 935, 643, 118, 208, 699, 433, 408, 1012,
	1008, 946, 944, 365, 37, 905, 806, 600, 85, 370,
	212, 903, 270, 1013, 1009, 621, 219, 281, 118, 355,
	218, 401, 333, 333, 434, 43, 407, 806, 270, 283,
	431, 429, 406, 400, 389, 391, 272, 269, 435, 1005,
	895, 277, 893, 890, 432, 430, 407, 401, 839, 774,
	767, 683, 244, 245, 256, 259, 260, 261, 262, 263,
	264, 266, 268, 330, 330, 678, 619, 610, 375, 531,
	256, 259, 260, 511, 280, 902, 103, 266, 268, 270,
	329, 336, 250, 254, 253, 118, 858, 399, 118, 755,
	249, 751, 251, 255, 257, 258, 265, 267, 252, 254,
	253, 665, 419, 660, 650, 637, 424, 425, 661, 255,
	257, 258, 265, 267, 252, 219, 510, 118, 654, 1049,
	1003, 256, 999, 919, 118, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	461, 961, 463, 465, 918, 469, 237, 366, 506, 909,
	255, 257, 258, 366, 885, 865, 471, 797, 796, 786,
	765, 101, 317, 102, 761, 759, 750, 421, 402, 486,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 370, 712, 501, 228, 503, 332, 239,
	324, 281, 39, 403, 212, 312, 313, 514, 701, 687,
	482, 545, 516, 283, 651, 642, 324, 396, 299, 300,
	301, 302, 303, 304, 305, 306, 307, 308, 309, 310,
	311, 228, 547, 509, 969, 475, 270, 1035, 527, 926,
	470, 333, 861, 102, 480, 789, 356, 462, 508, 517,
	332, 749, 535, 548, 725, 525, 318, 550, 553, 554,
	270, 825, 555, 392, 387, 381, 316, 655, 558, 356,
	298, 563, 315, 324, 913, 912, 810, 502, 256, 102,
	218, 378, 330, 332, 473, 377, 230, 376, 356, 605,
	477, 478, 479, 333, 709, 546, 533, 710, 686, 468,
	350, 804, 256, 259, 260, 544, 592, 254, 253, 804,
	319, 543, 519, 390, 614, 5, 242, 255, 257, 258,
	10, 624, 505, 505, 623, 9, 333, 608, 606, 594,
	515, 254, 253, 483, 330, 481, 314, 737, 738, 526,
	275, 255, 257, 258, 274, 617, 598, 366, 273, 226,
	604, 513, 225, 281, 221, 524, 122, 1053, 631, 1052,
	8, 596, 632, 612, 633, 7, 6, 330, 635, 804,
	804, 615, 538, 521, 522, 634, 613, 485, 618, 847,
	848, 39, 278, 1042, 529, 847, 848, 640, 804, 398,
	1021, 397, 324, 645, 1020, 538, 324, 599, 212, 1016,
	80, 998, 270, 956, 521, 920, 522, 915, 80, 990,
	603, 663, 218, 522, 521, 908, 906, 971, 667, 844,
	840, 121, 119, 120, 228, 670, 811, 785, 784, 648,
	80, 782, 780, 777, 609, 639, 835, 595, 230, 641,
	118, 484, 685, 644, 256, 259, 260, 328, 472, 359,
	360, 362, 428, 39, 365, 427, 426, 379, 380, 664,
	382, 383, 888, 677, 373, 666, 886, 837, 80, 80,
	772, 675, 682, 254, 253, 671, 672, 937, 881, 662,
	625, 626, 1027, 255, 257, 258, 691, 80, 252, 705,
	424, 707, 970, 964, 924, 370, 801, 711, 237, 700,
	914, 230, 887, 118, 866, 669, 846, 723, 724, 81,
	706, 860, 5, 807, 118, 691, 691, 10, 758, 523,
	729, 693, 9, 703, 747, 356, 356, 334, 627, 653,
	657, 658, 602, 276, 421, 520, 235, 720, 256, 713,
	230, 270, 753, 214, 332, 332, 224, 117, 293, 294,
	505, 505, 743, 948, 375, 214, 356, 8, 356, 553,
	282, 117, 7, 6, 563, 356, 356, 764, 295, 297,
	296, 332, 80, 121, 119, 120, 375, 1024, 39, 357,
	358, 405, 542, 256, 372, 290, 291, 333, 333, 760,
	334, 737, 738, 757, 778, 102, 374, 771, 762, 324,
	354, 766, 775, 405, 239, 375, 375, 773, 366, 798,
	367, 791, 388, 783, 333, 943, 39, 691, 941, 808,
	803, 214, 891, 787, 733, 727, 230, 813, 330, 330,
	324, 805, 790, 292, 812, 601, 121, 119, 120, 823,
	629, 332, 230, 799, 685, 468, 715, 372, 210, 366,
	211, 549, 593, 80, 476, 330, 809, 404, 102, 691,
	1022, 424, 230, 814, 864, 795, 794, 80, 834, 1023,
	324, 931, 748, 930, 816, 121, 119, 120, 862, 215,
	826, 845, 838, 841, 333, 849, 776, 851, 538, 405,
	880, 215, 213, 737, 738, 855, 656, 803, 386, 118,
	884, 230, 853, 857, 523, 420, 731, 375, 739, 883,
	375, 752, 332, 737, 738, 334, 539, 393, 896, 214,
	118, 898, 219, 285, 286, 330, 1, 118, 910, 126,
	889, 736, 284, 892, 894, 904, 876, 877, 878, 875,
	874, 873, 788, 907, 917, 925, 210, 927, 211, 375,
	921, 736, 224, 117, 288, 333, 870, 215, 933, 768,
	39, 121, 119, 120, 357, 358, 929, 834, 928, 290,
	291, 823, 940, 39, 867, 803, 942, 121, 119, 120,
	374, 842, 118, 868, 982, 879, 118, 375, 939, 938,
	352, 523, 899, 630, 39, 945, 330, 121, 119, 120,
	979, 955, 698, 949, 800, 950, 118, 954, 363, 827,
	731, 958, 793, 856, 963, 977, 207, 292, 287, 722,
	803, 989, 991, 818, 992, 952, 817, 507, 507, 62,
	803, 916, 847, 848, 853, 822, 121, 119, 120, 820,
	993, 863, 994, 996, 997, 739, 556, 357, 358, 628,
	557, 357, 358, 466, 1002, 215, 213, 702, 951, 80,
	1007, 1017, 1051, 1015, 708, 375, 39, 989, 1010, 1019,
	934, 357, 358, 836, 932, 833, 900, 536, 1004, 897,
	323, 731, 42, 882, 978, 118, 123, 694, 118, 695,
	384, 769, 1032, 394, 1029, 1034, 1033, 770, 977, 39,
	14, 41, 739, 39, 1031, 975, 1041, 551, 1036, 1040,
	375, 1039, 739, 966, 1038, 965, 18, 1043, 972, 1046,
	375, 248, 247, 270, 1047, 118, 1044, 691, 1045, 560,
	353, 1050, 850, 847, 848, 538, 17, 39, 923, 922,
	235, 538, 240, 1054, 739, 39, 652, 272, 269, 385,
	357, 358, 371, 357, 358, 49, 48, 104, 50, 84,
	534, 82, 73, 244, 245, 256, 259, 260, 261, 262,
	263, 264, 266, 268, 349, 321, 739, 63, 39, 39,
	739, 83, 739, 538, 39, 369, 61, 538, 987, 39,
	357, 358, 271, 250, 254, 253, 986, 985, 984, 802,
	236, 249, 233, 251, 255, 257, 258, 265, 267, 252,
	230, 44, 792, 988, 719, 689, 423, 375, 538, 409,
	3, 739, 960, 739, 947, 39, 901, 0, 1037, 538,
	0, 0, 0, 0, 0, 0, 39, 0, 1000, 0,
	246, 248, 247, 270, 538, 0, 0, 0, 0, 0,
	0, 0, 668, 0, 0, 507, 507, 673, 0, 988,
	0, 737, 738, 869, 0, 0, 0, 272, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 871,
	0, 0, 374, 244, 245, 256, 259, 260, 261, 262,
	263, 264, 266, 268, 962, 0, 0, 0, 968, 731,
	0, 974, 831, 830, 829, 0, 913, 912, 0, 0,
	0, 0, 271, 250, 254, 253, 0, 0, 0, 995,
	0, 249, 0, 251, 255, 257, 258, 265, 267, 252,
	876, 877, 878, 875, 874, 873, 0, 0, 0, 0,
	0, 1006, 0, 0, 0, 121, 119, 120, 832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	835, 0, 0, 0, 0, 0, 0, 0, 576, 577,
	567, 148, 95, 96, 45, 0, 118, 968, 0, 879,
	0, 974, 115, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 182, 183, 184, 185, 186, 174,
	175, 581, 591, 177, 178, 163, 164, 165, 570, 167,
	168, 169, 170, 171, 574, 575, 0, 194, 192, 193,
	189, 190, 0, 0, 565, 582, 188, 583, 584, 586,
	585, 587, 588, 0, 0, 0, 0, 0, 0, 97,
	0, 0, 0, 0, 191, 590, 589, 0, 561, 578,
	579, 580, 141, 142, 143, 144, 572, 566, 149, 150,
	151, 568, 569, 571, 130, 131, 132, 133, 134, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 573, 80, 121,
	119, 120, 135, 205, 116, 74, 0, 0, 0, 0,
	60, 559, 52, 0, 0, 0, 57, 56, 58, 59,
	72, 102, 576, 577, 567, 148, 95, 96, 45, 0,
	118, 0, 0, 0, 0, 0, 115, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 182, 183,
	184, 185, 186, 174, 175, 581, 591, 177, 178, 163,
	164, 165, 570, 167, 168, 169, 170, 171, 574, 575,
	0, 194, 192, 193, 189, 190, 0, 0, 565, 582,
	188, 583, 584, 586, 585, 587, 588, 0, 0, 0,
	0, 0, 0, 97, 0, 0, 0, 0, 191, 590,
	589, 0, 763, 578, 579, 580, 141, 142, 143, 144,
	572, 566, 149, 150, 151, 568, 569, 571, 130, 131,
	132, 133, 134, 54, 55, 77, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 573, 80, 121, 119, 120, 135, 205, 116, 74,
	0, 0, 0, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 102, 4, 0, 90, 91,
	71, 47, 95, 96, 45, 0, 118, 0, 29, 0,
	0, 0, 115, 28, 20, 19, 0, 21, 0, 32,
	0, 33, 0, 0, 22, 0, 0, 0, 23, 24,
	36, 38, 117, 15, 25, 35, 0, 0, 78, 13,
	0, 26, 0, 31, 88, 89, 11, 0, 0, 0,
	0, 0, 0, 0, 51, 114, 0, 113, 109, 110,
	111, 106, 107, 0, 0, 0, 0, 0, 0, 97,
	0, 0, 0, 0, 12, 112, 108, 0, 0, 92,
	93, 94, 0, 0, 0, 0, 86, 53, 0, 0,
	0, 75, 76, 27, 0, 0, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 80, 121,
	119, 120, 0, 0, 116, 74, 16, 692, 34, 0,
	60, 0, 52, 0, 0, 0, 57, 56, 58, 59,
	72, 102, 4, 0, 90, 91, 71, 47, 95, 96,
	45, 0, 118, 0, 29, 0, 0, 0, 115, 28,
	20, 19, 0, 21, 0, 32, 0, 33, 0, 0,
	22, 0, 0, 0, 23, 24, 36, 38, 117, 15,
	25, 35, 0, 0, 78, 13, 0, 26, 0, 31,
	88, 89, 11, 0, 0, 0, 0, 0, 0, 0,
	51, 114, 0, 113, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 0,
	12, 112, 108, 0, 0, 92, 93, 94, 0, 0,
	0, 0, 86, 53, 0, 0, 0, 75, 76, 27,
	0, 0, 0, 0, 0, 54, 55, 77, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 87, 80, 121, 119, 120, 0, 0,
	116, 74, 16, 597, 34, 0, 60, 0, 52, 0,
	0, 0, 57, 56, 58, 59, 72, 102, 136, 137,
	147, 148, 0, 0, 219, 0, 118, 0, 0, 0,
	0, 0, 0, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 182, 183, 184, 185, 186, 174,
	175, 176, 203, 177, 178, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 0, 194, 192, 193,
	189, 190, 0, 0, 181, 187, 188, 195, 196, 198,
	197, 199, 200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 202, 201, 0, 0, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 149, 150,
	151, 179, 180, 129, 130, 131, 132, 133, 134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 0, 0,
	0, 0, 135, 205, 0, 0, 537, 4, 0, 90,
	91, 71, 47, 95, 96, 45, 0, 118, 0, 29,
	0, 102, 0, 115, 28, 20, 19, 0, 21, 0,
	32, 0, 33, 0, 0, 22, 0, 0, 0, 23,
	24, 36, 38, 117, 15, 25, 35, 0, 0, 78,
	13, 0, 26, 0, 31, 88, 89, 11, 0, 0,
	0, 0, 0, 0, 0, 51, 114, 0, 113, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 12, 112, 108, 0, 0,
	92, 93, 94, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 75, 76, 27, 0, 0, 0, 0, 0,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 80,
	121, 119, 120, 0, 0, 116, 74, 16, 0, 34,
	0, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 72, 102, 411, 0, 90, 91, 71, 47, 95,
	96, 45, 0, 118, 0, 29, 0, 0, 0, 115,
	28, 20, 19, 0, 21, 0, 32, 0, 33, 0,
	0, 22, 0, 0, 0, 23, 24, 36, 38, 117,
	0, 25, 35, 0, 0, 78, 0, 0, 26, 0,
	31, 88, 89, 418, 0, 0, 0, 0, 0, 0,
	0, 51, 114, 0, 113, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 112, 108, 0, 0, 92, 93, 94, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 75, 76,
	27, 0, 0, 0, 0, 0, 54, 55, 77, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 80, 121, 119, 120, 0,
	0, 116, 74, 16, 1055, 34, 0, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 72, 102, 411,
	0, 90, 91, 71, 47, 95, 96, 45, 0, 118,
	0, 29, 0, 0, 0, 115, 28, 20, 19, 0,
	21, 0, 32, 0, 33, 0, 0, 22, 0, 0,
	0, 23, 24, 36, 38, 117, 0, 25, 35, 0,
	0, 78, 0, 0, 26, 0, 31, 88, 89, 418,
	0, 0, 0, 0, 0, 0, 0, 51, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 92, 93, 94, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 75, 76, 27, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 80, 121, 119, 120, 0, 0, 116, 74, 16,
	1048, 34, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 102, 411, 0, 90, 91, 71,
	47, 95, 96, 45, 0, 118, 0, 29, 0, 0,
	0, 115, 28, 20, 19, 0, 21, 0, 32, 0,
	33, 0, 0, 22, 0, 0, 0, 23, 24, 36,
	38, 117, 0, 25, 35, 0, 0, 78, 0, 0,
	26, 0, 31, 88, 89, 418, 0, 0, 0, 0,
	0, 0, 0, 51, 114, 0, 113, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 112, 108, 0, 0, 92, 93,
	94, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	75, 76, 27, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 80, 121, 119,
	120, 0, 0, 116, 74, 16, 1030, 34, 0, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 72,
	102, 411, 0, 90, 91, 71, 47, 95, 96, 45,
	0, 118, 0, 29, 0, 0, 0, 115, 28, 20,
	19, 0, 21, 0, 32, 0, 33, 0, 0, 22,
	0, 0, 0, 23, 24, 36, 38, 117, 0, 25,
	35, 0, 0, 78, 0, 0, 26, 0, 31, 88,
	89, 418, 0, 0, 0, 0, 0, 0, 0, 51,
	114, 0, 113, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	112, 108, 0, 0, 92, 93, 94, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 75, 76, 27, 0,
	0, 0, 0, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 80, 121, 119, 120, 0, 0, 116,
	74, 16, 1028, 34, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 102, 411, 0, 90,
	91, 71, 47, 95, 96, 45, 0, 118, 0, 29,
	0, 0, 0, 115, 28, 20, 19, 0, 21, 1026,
	32, 0, 33, 0, 0, 22, 0, 0, 0, 23,
	24, 36, 38, 117, 0, 25, 35, 0, 0, 78,
	0, 0, 26, 0, 31, 88, 89, 418, 0, 0,
	0, 0, 0, 0, 0, 51, 114, 0, 113, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 112, 108, 0, 0,
	92, 93, 94, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 75, 76, 27, 0, 0, 0, 0, 0,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 80,
	121, 119, 120, 0, 0, 116, 74, 16, 0, 34,
	0, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 72, 102, 411, 0, 90, 91, 71, 47, 95,
	96, 45, 0, 118, 0, 29, 0, 0, 0, 115,
	28, 20, 19, 0, 21, 0, 32, 0, 33, 0,
	0, 22, 0, 0, 0, 23, 24, 36, 38, 117,
	0, 25, 35, 0, 0, 78, 0, 0, 26, 0,
	31, 88, 89, 418, 0, 0, 0, 0, 0, 0,
	0, 51, 114, 0, 113, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 112, 108, 0, 0, 92, 93, 94, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 75, 76,
	27, 0, 0, 0, 0, 0, 54, 55, 77, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 80, 121, 119, 120, 0,
	0, 116, 74, 16, 1001, 34, 0, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 72, 102, 411,
	0, 90, 91, 71, 47, 95, 96, 45, 0, 118,
	0, 29, 0, 0, 0, 115, 28, 20, 19, 0,
	21, 0, 32, 0, 33, 0, 0, 22, 0, 0,
	0, 23, 24, 36, 38, 117, 0, 25, 35, 0,
	0, 78, 0, 0, 26, 0, 31, 88, 89, 418,
	0, 0, 0, 0, 0, 0, 0, 51, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 92, 93, 94, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 75, 76, 27, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 80, 121, 119, 120, 0, 0, 116, 74, 16,
	959, 34, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 102, 411, 0, 90, 91, 71,
	47, 95, 96, 45, 0, 118, 0, 29, 0, 0,
	0, 115, 28, 20, 19, 0, 21, 0, 32, 957,
	33, 0, 0, 22, 0, 0, 0, 23, 24, 36,
	38, 117, 0, 25, 35, 0, 0, 78, 0, 0,
	26, 0, 31, 88, 89, 418, 0, 0, 0, 0,
	0, 0, 0, 51, 114, 0, 113, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 112, 108, 0, 0, 92, 93,
	94, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	75, 76, 27, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 80, 121, 119,
	120, 0, 0, 116, 74, 16, 0, 34, 0, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 72,
	102, 411, 0, 90, 91, 71, 47, 95, 96, 45,
	0, 118, 0, 29, 0, 0, 0, 115, 28, 20,
	19, 0, 21, 0, 32, 0, 33, 859, 0, 22,
	0, 0, 0, 23, 24, 36, 38, 117, 0, 25,
	35, 0, 0, 78, 0, 0, 26, 0, 31, 88,
	89, 418, 0, 0, 0, 0, 0, 0, 0, 51,
	114, 0, 113, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	112, 108, 0, 0, 92, 93, 94, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 75, 76, 27, 0,
	0, 0, 0, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 80, 121, 119, 120, 0, 0, 116,
	74, 16, 0, 34, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 102, 411, 0, 90,
	91, 71, 47, 95, 96, 45, 0, 118, 0, 29,
	0, 0, 0, 115, 28, 20, 19, 843, 21, 0,
	32, 0, 33, 0, 0, 22, 0, 0, 0, 23,
	24, 36, 38, 117, 0, 25, 35, 0, 0, 78,
	0, 0, 26, 0, 31, 88, 89, 418, 0, 0,
	0, 0, 0, 0, 0, 51, 114, 0, 113, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 112, 108, 0, 0,
	92, 93, 94, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 75, 76, 27, 0, 0, 0, 0, 0,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 80,
	121, 119, 120, 0, 0, 116, 74, 16, 0, 34,
	0, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 72, 102, 411, 0, 90, 91, 71, 47, 95,
	96, 45, 0, 118, 0, 29, 0, 0, 0, 115,
	28, 20, 19, 0, 21, 0, 32, 0, 33, 0,
	0, 22, 0, 0, 0, 23, 24, 36, 38, 117,
	0, 25, 35, 0, 0, 78, 0, 0, 26, 0,
	31, 88, 89, 418, 0, 0, 0, 0, 0, 0,
	0, 51, 114, 0, 113, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 112, 108, 0, 0, 92, 93, 94, 0,
	0, 0, 0, 86, 53, 0, 0, 742, 75, 76,
	27, 0, 0, 0, 0, 0, 54, 55, 77, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 80, 121, 119, 120, 0,
	0, 116, 74, 16, 0, 34, 0, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 72, 102, 411,
	0, 90, 91, 71, 47, 95, 96, 45, 0, 118,
	0, 29, 0, 0, 0, 115, 28, 20, 19, 0,
	21, 0, 32, 0, 33, 0, 0, 22, 0, 0,
	0, 23, 24, 36, 38, 117, 0, 25, 35, 0,
	0, 78, 0, 0, 26, 0, 31, 88, 89, 418,
	0, 0, 0, 0, 0, 0, 0, 51, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 92, 93, 94, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 75, 76, 27, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 80, 121, 119, 120, 0, 0, 116, 74, 16,
	622, 34, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 102, 411, 0, 90, 91, 71,
	47, 95, 96, 45, 0, 118, 0, 29, 0, 0,
	0, 115, 28, 20, 19, 0, 21, 0, 32, 0,
	33, 0, 0, 22, 0, 0, 0, 23, 24, 36,
	38, 117, 0, 25, 35, 0, 0, 78, 0, 0,
	26, 0, 31, 88, 89, 418, 0, 0, 0, 0,
	0, 0, 0, 51, 114, 0, 113, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 112, 108, 0, 0, 92, 93,
	94, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	75, 76, 27, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 80, 121, 119,
	120, 0, 0, 116, 74, 16, 410, 34, 0, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 72,
	102, 411, 0, 90, 91, 71, 47, 95, 96, 45,
	0, 118, 0, 29, 0, 0, 0, 115, 28, 20,
	19, 0, 21, 0, 32, 0, 33, 0, 0, 22,
	0, 0, 0, 23, 24, 36, 38, 117, 0, 25,
	35, 0, 0, 78, 0, 0, 26, 0, 31, 88,
	89, 418, 0, 0, 0, 0, 0, 0, 0, 51,
	114, 0, 113, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	112, 108, 0, 0, 92, 93, 94, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 75, 76, 27, 0,
	0, 0, 0, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 80, 121, 119, 120, 0, 0, 116,
	74, 16, 0, 34, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 102, 90, 91, 71,
	47, 95, 96, 45, 0, 118, 0, 29, 0, 0,
	0, 115, 28, 20, 19, 0, 21, 0, 32, 0,
	33, 0, 0, 22, 0, 0, 0, 23, 24, 36,
	224, 117, 0, 25, 35, 0, 0, 78, 0, 0,
	26, 0, 31, 88, 89, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 114, 0, 113, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 112, 108, 0, 0, 92, 93,
	94, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	75, 76, 27, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 80, 121, 119,
	120, 0, 0, 116, 74, 16, 0, 34, 854, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 72,
	102, 90, 91, 71, 47, 95, 96, 45, 0, 118,
	0, 29, 0, 0, 0, 115, 28, 20, 19, 0,
	21, 0, 32, 0, 33, 0, 0, 22, 0, 0,
	0, 23, 24, 36, 224, 117, 0, 25, 35, 0,
	0, 78, 0, 0, 26, 0, 31, 88, 89, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 92, 93, 94, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 75, 76, 27, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 80, 121, 119, 120, 0, 0, 116, 74, 16,
	0, 34, 953, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 102, 90, 91, 71, 47, 95,
	96, 45, 0, 118, 0, 29, 0, 0, 0, 115,
	28, 20, 19, 0, 21, 0, 32, 0, 33, 0,
	0, 22, 0, 0, 0, 23, 24, 36, 224, 117,
	0, 25, 35, 0, 0, 78, 0, 0, 26, 0,
	31, 88, 89, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 114, 0, 113, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 112, 108, 0, 0, 92, 93, 94, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 75, 76,
	27, 0, 0, 0, 0, 0, 54, 55, 77, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 80, 121, 119, 120, 0,
	0, 116, 74, 16, 0, 34, 744, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 72, 102, 90,
	91, 71, 47, 95, 96, 45, 0, 118, 0, 29,
	0, 0, 0, 115, 28, 20, 19, 0, 21, 0,
	32, 0, 33, 0, 0, 22, 0, 0, 0, 23,
	24, 36, 224, 117, 0, 25, 35, 0, 0, 78,
	0, 0, 26, 0, 31, 88, 89, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 114, 0, 113, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 112, 108, 0, 0,
	92, 93, 94, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 75, 76, 27, 0, 0, 0, 0, 0,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 80,
	121, 119, 120, 0, 0, 116, 74, 16, 0, 34,
	721, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 72, 102, 90, 91, 71, 47, 95, 96, 45,
	0, 118, 0, 29, 0, 0, 0, 115, 28, 20,
	19, 0, 21, 0, 32, 0, 33, 0, 0, 22,
	0, 0, 0, 23, 24, 36, 224, 117, 0, 25,
	35, 0, 0, 78, 0, 0, 26, 0, 31, 88,
	89, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	114, 0, 113, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	112, 108, 0, 0, 92, 93, 94, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 75, 76, 27, 0,
	0, 0, 0, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 80, 121, 119, 120, 0, 0, 116,
	74, 16, 0, 34, 704, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 102, 90, 91, 71,
	47, 95, 96, 45, 0, 118, 0, 29, 0, 0,
	0, 115, 28, 20, 19, 0, 21, 0, 32, 0,
	33, 0, 0, 22, 0, 0, 0, 23, 24, 36,
	224, 117, 0, 25, 35, 0, 0, 78, 0, 0,
	26, 0, 31, 88, 89, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 114, 0, 113, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 112, 108, 0, 0, 92, 93,
	94, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	75, 76, 27, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 80, 121, 119,
	120, 0, 0, 116, 74, 16, 0, 34, 0, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 72,
	102, 136, 137, 147, 148, 0, 0, 45, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 182, 183, 184,
	185, 186, 174, 175, 176, 203, 177, 178, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 0,
	194, 192, 193, 189, 190, 0, 0, 181, 187, 188,
	195, 196, 198, 197, 199, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 202, 201,
	0, 0, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 149, 150, 151, 179, 180, 129, 130, 131, 132,
	133, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 121, 119, 120, 135, 205, 0, 0, 0,
	1018, 136, 137, 147, 148, 0, 0, 45, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 182, 183, 184,
	185, 186, 174, 175, 176, 203, 177, 178, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 0,
	194, 192, 193, 189, 190, 0, 0, 181, 187, 188,
	195, 196, 198, 197, 199, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 202, 201,
	0, 0, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 149, 150, 151, 179, 180, 129, 130, 131, 132,
	133, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 121, 119, 120, 135, 205, 0, 0, 0,
	981, 136, 137, 147, 148, 0, 0, 125, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 182, 183, 184,
	185, 186, 174, 175, 176, 203, 177, 178, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 0,
	194, 192, 193, 189, 190, 0, 0, 181, 187, 188,
	195, 196, 198, 197, 199, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 202, 201,
	0, 0, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 149, 150, 151, 179, 180, 129, 130, 131, 132,
	133, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 137, 147, 148, 0,
	204, 219, 0, 127, 0, 135, 205, 0, 0, 124,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 182, 183, 184, 185, 186, 174, 175, 176, 203,
	177, 178, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 0, 194, 192, 193, 189, 190, 0,
	0, 181, 187, 188, 195, 196, 198, 197, 199, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 202, 201, 0, 0, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 149, 150, 151, 179, 180,
	129, 130, 131, 132, 133, 134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 137, 147, 148,
	0, 0, 219, 0, 204, 0, 0, 0, 0, 135,
	205, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 182, 183, 184, 185, 186, 174, 175, 176,
	203, 177, 178, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 0, 194, 192, 193, 189, 190,
	0, 0, 181, 187, 188, 195, 196, 198, 197, 199,
	200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 202, 201, 0, 0, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 149, 150, 151, 179,
	180, 876, 877, 878, 875, 874, 873, 90, 91, 71,
	0, 95, 96, 230, 0, 118, 0, 0, 0, 0,
	0, 115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 117, 0, 0, 0, 204, 0, 78, 0, 0,
	879, 205, 0, 88, 89, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 114, 0, 113, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 112, 108, 0, 326, 92, 93,
	94, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	75, 76, 229, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 80, 121, 119,
	120, 0, 0, 116, 74, 0, 0, 0, 0, 60,
	0, 52, 0, 0, 325, 57, 56, 58, 59, 72,
	102, 90, 91, 71, 0, 95, 96, 230, 0, 118,
	0, 0, 0, 0, 0, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	821, 0, 0, 0, 224, 117, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 0, 0, 88, 89, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 92, 93, 94, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 75, 76, 229, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 80, 121, 119, 120, 0, 0, 116, 74, 0,
	0, 0, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 102, 90, 91, 71, 0, 95,
	96, 230, 0, 118, 0, 0, 0, 0, 0, 115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 117,
	0, 0, 0, 0, 0, 78, 0, 0, 0, 0,
	0, 88, 89, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 114, 0, 113, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 112, 108, 0, 0, 92, 93, 94, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 75, 76,
	229, 0, 0, 0, 0, 0, 54, 55, 77, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 80, 121, 119, 120, 0,
	0, 116, 74, 0, 0, 0, 0, 60, 684, 52,
	0, 0, 0, 57, 56, 58, 59, 72, 102, 90,
	91, 71, 0, 95, 96, 230, 0, 118, 0, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 117, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 0, 0, 88, 89, 0, 0, 0,
	0, 0, 0, 0, 0, 647, 114, 0, 113, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 112, 108, 0, 0,
	92, 93, 94, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 75, 76, 229, 0, 0, 0, 0, 0,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 80,
	121, 119, 120, 0, 0, 116, 74, 0, 0, 0,
	0, 60, 0, 52, 0, 0, 646, 57, 56, 58,
	59, 72, 102, 90, 91, 71, 0, 95, 96, 230,
	528, 118, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 117, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 0, 0, 88,
	89, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	114, 0, 113, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	112, 108, 0, 0, 92, 93, 94, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 75, 76, 229, 0,
	0, 0, 0, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 80, 121, 119, 120, 0, 0, 116,
	74, 0, 0, 0, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 102, 90, 91, 71,
	0, 95, 96, 230, 0, 118, 0, 0, 0, 0,
	0, 115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 117, 0, 0, 0, 0, 0, 78, 0, 0,
	0, 0, 0, 88, 89, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 114, 0, 113, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 112, 108, 0, 0, 92, 93,
	94, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	75, 76, 229, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 80, 121, 119,
	120, 0, 0, 116, 74, 0, 0, 0, 0, 60,
	0, 52, 0, 0, 487, 57, 56, 58, 59, 72,
	102, 90, 91, 71, 0, 95, 96, 230, 0, 118,
	0, 0, 0, 0, 0, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 117, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 0, 0, 88, 89, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 92, 93, 94, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 75, 76, 229, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 80, 121, 119, 120, 0, 0, 116, 74, 0,
	0, 0, 464, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 102, 90, 91, 71, 0, 95,
	96, 230, 0, 118, 0, 0, 0, 0, 0, 115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 117,
	0, 0, 0, 0, 0, 78, 0, 0, 0, 0,
	0, 88, 89, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 114, 0, 113, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 112, 108, 0, 0, 92, 93, 94, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 75, 76,
	229, 0, 0, 0, 0, 0, 54, 55, 77, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 248, 247, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 80, 121, 119, 120, 0,
	0, 116, 74, 272, 269, 0, 0, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 72, 102, 244,
	245, 256, 259, 260, 261, 262, 263, 264, 266, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	248, 247, 270, 0, 0, 0, 0, 815, 271, 250,
	254, 253, 0, 0, 0, 0, 0, 249, 0, 251,
	255, 257, 258, 265, 267, 252, 272, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 256, 259, 260, 261, 262, 263,
	264, 266, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 248, 247, 270, 0, 0, 779, 0,
	0, 271, 250, 254, 253, 0, 0, 0, 0, 0,
	249, 0, 251, 255, 257, 258, 265, 267, 252, 272,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 256, 259, 260,
	261, 262, 263, 264, 266, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 756, 246, 248,
	247, 270, 0, 0, 271, 250, 254, 253, 0, 0,
	0, 0, 0, 249, 0, 251, 255, 257, 258, 265,
	267, 252, 0, 0, 0, 272, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 256, 259, 260, 261, 262, 263, 264,
	266, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 754, 246, 248, 247, 270, 0, 0,
	271, 250, 254, 253, 0, 0, 0, 0, 0, 249,
	0, 251, 255, 257, 258, 265, 267, 252, 0, 0,
	0, 272, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 256,
	259, 260, 261, 262, 263, 264, 266, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	246, 248, 247, 270, 0, 0, 271, 250, 254, 253,
	0, 0, 0, 0, 0, 249, 0, 251, 255, 257,
	258, 265, 267, 252, 0, 0, 0, 272, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 256, 259, 260, 261, 262,
	263, 264, 266, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 248, 247, 270, 0, 0, 741,
	0, 0, 271, 250, 254, 253, 0, 0, 0, 0,
	0, 249, 0, 251, 255, 257, 258, 265, 267, 252,
	272, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 256, 259,
	260, 261, 262, 263, 264, 266, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 248, 247, 270,
	0, 0, 740, 0, 0, 271, 250, 254, 253, 0,
	0, 0, 0, 0, 249, 0, 251, 255, 257, 258,
	265, 267, 252, 272, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 256, 259, 260, 261, 262, 263, 264, 266, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 681, 246, 248, 247, 270, 0, 0, 271, 250,
	254, 253, 0, 0, 0, 0, 0, 249, 0, 251,
	255, 257, 258, 265, 267, 252, 0, 0, 0, 272,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 256, 259, 260,
	261, 262, 263, 264, 266, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 248, 247, 270, 0,
	0, 680, 0, 0, 271, 250, 254, 253, 0, 0,
	0, 0, 0, 249, 0, 251, 255, 257, 258, 265,
	267, 252, 272, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	256, 259, 260, 261, 262, 263, 264, 266, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 248,
	247, 270, 0, 0, 679, 0, 0, 271, 250, 254,
	253, 0, 0, 0, 0, 0, 249, 0, 251, 255,
	257, 258, 265, 267, 252, 272, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 256, 259, 260, 261, 262, 263, 264,
	266, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 248, 247, 270, 0, 0, 676, 0, 0,
	271, 250, 254, 253, 0, 0, 0, 0, 0, 249,
	0, 251, 255, 257, 258, 265, 267, 252, 272, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 256, 259, 260, 261,
	262, 263, 264, 266, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 248, 247, 270, 0, 0,
	674, 0, 0, 271, 250, 254, 253, 0, 0, 0,
	0, 0, 249, 0, 251, 255, 257, 258, 265, 267,
	252, 272, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 256,
	259, 260, 261, 262, 263, 264, 266, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 659,
	246, 248, 247, 270, 0, 0, 271, 250, 254, 253,
	0, 0, 0, 0, 0, 249, 0, 251, 255, 257,
	258, 265, 267, 252, 0, 0, 0, 272, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 256, 259, 260, 261, 262,
	263, 264, 266, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 248, 247, 270, 0, 0, 649,
	0, 0, 271, 250, 254, 253, 0, 0, 0, 0,
	0, 249, 0, 251, 255, 257, 258, 265, 267, 252,
	272, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 256, 259,
	260, 261, 262, 263, 264, 266, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 638, 246,
	248, 247, 270, 620, 0, 271, 250, 254, 253, 0,
	0, 0, 0, 0, 249, 0, 251, 255, 257, 258,
	265, 267, 252, 0, 0, 0, 272, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 256, 259, 260, 261, 262, 263,
	264, 266, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 248, 247, 270, 0, 0, 636, 0,
	0, 271, 250, 254, 253, 0, 0, 0, 0, 0,
	249, 0, 251, 255, 257, 258, 265, 267, 252, 272,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 256, 259, 260,
	261, 262, 263, 264, 266, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 248, 247, 270, 0,
	0, 0, 0, 0, 271, 250, 254, 253, 0, 0,
	0, 0, 0, 249, 0, 251, 255, 257, 258, 265,
	267, 252, 272, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	256, 259, 260, 261, 262, 263, 264, 266, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 248,
	247, 270, 616, 0, 0, 0, 0, 271, 250, 254,
	253, 0, 0, 0, 0, 0, 249, 0, 251, 255,
	257, 258, 265, 267, 252, 272, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 256, 259, 260, 261, 262, 263, 264,
	266, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 248, 247, 270, 0, 0, 611, 0, 0,
	271, 250, 254, 253, 0, 0, 0, 0, 0, 249,
	0, 251, 255, 257, 258, 265, 267, 252, 272, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 256, 259, 260, 261,
	262, 263, 264, 266, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 248, 247, 270, 0, 0,
	607, 0, 0, 271, 250, 254, 253, 0, 0, 0,
	0, 0, 249, 0, 251, 255, 257, 258, 265, 267,
	252, 272, 269, 0, 0, 0, 0, 0, 512, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 256,
	259, 260, 261, 262, 263, 264, 266, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 248, 247,
	270, 0, 0, 518, 0, 0, 271, 250, 254, 253,
	0, 0, 0, 0, 0, 249, 0, 251, 255, 257,
	258, 265, 267, 252, 272, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 256, 259, 260, 261, 262, 263, 264, 266,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 248, 247, 270, 0, 0, 0, 0, 0, 271,
	250, 254, 253, 0, 0, 0, 0, 0, 249, 0,
	251, 255, 257, 258, 265, 267, 252, 272, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 256, 259, 260, 261, 262,
	263, 264, 266, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 246, 248, 247,
	270, 0, 271, 250, 254, 253, 0, 0, 0, 0,
	0, 249, 0, 251, 255, 257, 258, 265, 267, 252,
	0, 0, 0, 0, 272, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 256, 259, 260, 261, 262, 263, 264, 266,
	268, 247, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	250, 254, 253, 0, 0, 0, 272, 269, 249, 0,
	251, 255, 257, 258, 265, 267, 252, 530, 0, 0,
	0, 0, 244, 245, 256, 259, 260, 261, 262, 263,
	264, 266, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 271, 250, 254, 253, 0, 0, 0, 0, 0,
	249, 0, 251, 255, 257, 258, 265, 267, 252, 0,
	0, 0, 0, 272, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 256, 259, 260, 261, 262, 263, 264, 266, 268,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 250,
	254, 253, 0, 0, 272, 269, 0, 249, 0, 251,
	255, 257, 258, 265, 267, 252, 0, 0, 0, 0,
	244, 245, 256, 259, 260, 261, 262, 263, 264, 266,
	268, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	250, 254, 253, 0, 0, 0, 269, 0, 249, 0,
	251, 255, 257, 258, 265, 267, 252, 0, 0, 0,
	0, 0, 245, 256, 259, 260, 261, 262, 263, 264,
	266, 268, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 254, 253, 0, 0, 0, 269, 0, 249,
	0, 251, 255, 257, 258, 265, 267, 252, 0, 0,
	0, 0, 0, 0, 256, 259, 260, 261, 262, 263,
	264, 266, 268, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 254, 253, 0, 0, 0, 269, 0,
	249, 0, 251, 255, 257, 258, 265, 267, 252, 0,
	0, 0, 0, 0, 0, 256, 259, 260, 261, 262,
	263, 264, 266, 268, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 250, 254, 253, 0, 0, 0, 269,
	0, 0, 0, 251, 255, 257, 258, 265, 267, 252,
	0, 0, 0, 0, 0, 269, 256, 259, 260, 261,
	262, 263, 264, 266, 268, 0, 0, 0, 0, 0,
	0, 0, 256, 259, 260, 261, 262, 263, 264, 266,
	268, 230, 0, 118, 250, 254, 253, 0, 0, 115,
	0, 0, 0, 0, 0, 255, 257, 258, 265, 267,
	252, 254, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 258, 265, 267, 252, 0, 230, 0,
	118, 0, 0, 0, 0, 0, 115, 0, 0, 0,
	0, 717, 114, 0, 113, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	334, 113, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 121, 119, 120, 0,
	0, 116, 0, 0, 0, 0, 0, 331, 0, 718,
	0, 0, 716, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 119, 120, 0, 0, 116, 0,
	0, 0, 0, 0, 331, 0, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 102,
}

var yyPact = [...]int16{
	-1000, -1000, 2095, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 320, 5867, 829, -1000, 832, -1000, -1000, -1000, 318,
	5403, 316, 313, 7381, 7381, 7381, 196, 835, 7381, -1000,
	8822, 312, 308, 304, -1000, 501, 832, 347, 33, 643,
	789, 574, 594, 220, -1000, -1000, -1000, 300, -1000, -1000,
	234, 274, 6233, 7381, 9448, 9448, 7381, 7381, 7381, 7381,
	7381, -1000, -1000, -1000, 7381, 7381, 7381, 7381, 7381, 7381,
	7381, 264, 7381, -1000, 1033, 7381, 7381, 7381, 7381, -1000,
	736, -1000, -1000, 651, -1000, -1000, 548, 251, 249, 245,
	7381, 7381, 229, 7381, 7381, -1000, -1000, 993, -1000, -1000,
	-1000, -1000, 232, 277, 277, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 227, -1000, 996, 33, -1000, -1000,
	-1000, -1000, 180, 357, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1, 665, 694, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -2, -1000, -52, -1000,
	4253, 7381, 804, 629, 33, 7381, 7381, 422, 8889, 629,
	-1000, 421, 418, -3, -1000, -1000, -4, -1000, -1000, -53,
	-10, -1000, 8889, -1000, 7381, 7381, 7381, 7381, 7381, 7381,
	7381, 7381, 7381, 7381, 7381, 7381, 7381, 7381, 7381, 7381,
	7381, 7381, 7381, 7381, 7381, 7381, 7381, 7381, 7381, 7381,
	611, 7217, 7381, 9448, 7381, 832, -1000, 414, -1000, 832,
	-1000, -1000, 33, -1000, 721, 832, 832, 832, 605, -1000,
	-1000, -1000, -1000, 299, 5403, 297, 407, 342, 7053, 7381,
	7381, 7381, 7381, 7381, 7381, 7381, 7381, 7381, 7381, 7381,
	7381, 7381, -1000, -1000, 7381, 7381, 7381, 126, 126, 6233,
	77, 25, -1000, -1000, 8759, 9448, 7381, 294, -1000, -1000,
	-1000, 7381, -1000, -1000, -1000, 6233, -1000, 525, 525, 570,
	525, 8696, 525, 525, 525, 525, 525, 525, 525, -1000,
	7381, 525, 504, 914, 807, -1000, 317, 6889, 9448, 9059,
	9008, 9059, 8889, 21, -1000, 277, -1000, 1944, 277, -1000,
	623, 273, 7381, 718, -1000, 406, 7381, 7381, 7381, 8889,
	8889, 7381, 8889, 8889, 890, -1000, 894, 7381, -1000, -1000,
	1284, -1000, 6233, 622, 914, 293, 403, -1000, -1000, 1780,
	-1000, 665, -27, 672, 500, 832, -1000, 832, 7381, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 292, 8633,
	291, -1000, 400, 19, 8889, 8570, -1000, -1000, -1000, -1000,
	196, -1000, 828, 7381, -1000, 7381, 9110, 9161, 952, 9059,
	8941, 9212, 9279, 9263, 289, 108, 108, 570, 525, 570,
	570, 265, 265, 57, 57, 57, 57, 431, 431, 431,
	431, 57, -1000, 8507, 7381, 41, 18, -1000, -1000, 8444,
	-22, 4087, -1000, 288, 285, 832, 832, 496, 704, 323,
	-1000, 7381, -1000, 7381, -1000, -1000, 9059, 7381, 9059, 9059,
	9059, 9059, 9059, 9059, 9059, 9059, 9059, 9059, 9059, 9059,
	9059, 8381, 66, 8315, 277, -1000, 7381, -1000, 277, 178,
	-57, 6233, 6725, -1000, 8889, 6233, 8252, 65, -1000, 177,
	-1000, -1000, -1000, -1000, 225, 832, 832, 8186, 70, 446,
	7381, 736, 62, -1000, 277, -1000, -1000, 7381, -1000, -1000,
	-1000, -1000, 196, 7381, 7381, 126, 126, 196, 8123, 277,
	8060, 17, -1000, 8889, 7997, 7934, -1000, -1000, 7868, -1000,
	3, 6561, -1000, 8889, 263, 274, 7381, 264, 7381, 7381,
	7381, 629, 548, 251, 249, 245, 7381, 7381, 229, 7381,
	7381, 33, 227, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 33, 172, -1000, 406, -1000, 1614, -1000, -1000, 780,
	-1000, 489, 731, -1000, -1000, 8889, 171, 5239, 7381, 7381,
	7381, 262, -1000, -1000, 8889, -1000, 7381, 41, 157, 9448,
	9411, 5075, -1000, 406, 406, 218, 689, -1000, 488, 811,
	687, 772, 7805, 7742, 3921, 9279, 4911, -1000, -1000, -1000,
	7676, -1000, -62, 7381, -1000, 8889, 9448, 215, 139, -1000,
	-1000, -1000, 52, -1000, -1000, 818, -1000, -1000, -1000, -1000,
	-1000, 7381, -1000, 9059, -1000, -1000, -1000, 7610, -1000, 50,
	7544, -1000, -1000, -1000, -1000, 689, 486, 138, 7381, -1000,
	-1000, -1000, 137, 1448, -1000, 8889, 7381, -1000, 133, 2,
	-1000, -1000, -1000, 653, 437, 1, -1000, -1000, 653, 777,
	-1000, 399, -1000, -1000, -1000, 7481, 398, 8889, -1000, 397,
	394, 41, 393, -1000, 132, 684, 9448, 209, 6233, -1000,
	-1000, -1000, 743, 131, 130, 406, 687, 811, 463, -1000,
	-21, -1000, 481, 811, -1000, -1000, -1000, -1000, -1000, -1000,
	5403, 241, 392, -1000, -1000, -1000, 7381, 9059, -1000, 6233,
	-62, -1000, -1000, 7418, -1000, -1000, -1000, 687, 6397, -1000,
	-1000, -1000, -1000, 7381, 8889, 226, -1000, 406, 1120, 434,
	0, -1000, 386, -1000, 731, -1000, 832, -1000, 3755, 385,
	7381, 473, -1000, 1021, -1000, -1000, 4583, 9411, -1000, 6233,
	47, 3589, -1000, -1000, 479, 206, 226, 739, 128, 472,
	-1000, -1000, -1000, 1151, 811, 445, 811, -1000, -21, -1000,
	-1000, -1000, 4419, 9059, 127, 433, 470, 429, -5, -1000,
	683, -6, -8, 8889, -1000, 752, -1000, -1000, 34, -1000,
	-1000, -1000, -1000, -1000, -38, 650, -44, 382, -1000, 653,
	-1000, -1000, -1000, 381, -1000, 122, -1000, 7381, 240, 467,
	373, 920, -1000, -1000, -1000, 117, -1000, 86, -1000, 371,
	-1000, 811, 462, 226, 203, 226, -1000, 396, 754, 832,
	757, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-42, -1000, -1000, 444, 4419, -62, -1000, -1000, -1000, -1000,
	6397, 7381, 679, -1000, -1000, 7381, 676, -1000, -47, 772,
	-48, 589, -1000, 650, -1000, 650, -1000, -1000, -1000, 4747,
	1072, -1000, -1000, -1000, -1000, -1000, 369, 3423, 4583, -1000,
	-1000, 3257, 102, -1000, -1000, 461, 193, 460, 384, 828,
	6001, 33, -65, -1000, -1000, -1000, 5717, -1000, 376, -1000,
	8889, 7381, 8889, 7381, 772, -1000, 772, 828, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 4419, -1000, 367, -1000, -1000,
	85, 811, -1000, 3091, -1000, 83, -9, -1000, -1000, 828,
	-1000, -1000, -34, -1000, -67, -35, -1000, -68, 6001, 365,
	7381, -1000, 5567, -1000, 360, 356, 734, 760, 618, -1000,
	-1000, 8889, 8889, -1000, -1000, -77, 2925, 4419, -1000, 450,
	-1000, -1000, 2759, -1000, -1000, 193, -1000, 2593, -1000, 828,
	-1000, 7381, -1000, 6001, 7381, 201, -1000, 8889, -1000, -1000,
	-1000, -1000, 811, 6132, 6001, 7381, 349, -1000, -1000, -1000,
	-1000, -1000, 8889, -1000, 8889, 406, -21, -1000, -1000, 6001,
	-1000, 8889, -1000, 2427, -1000, -1000, 82, -1000, -1000, 226,
	325, -1000, -1000, -1000, 2261, -1000,
}

var yyPgo = [...]int16{
	0, 1146, 1144, 72, 10, 836, 124, 4, 291, 1142,
	31, 16, 922, 1140, 196, 35, 86, 85, 80, 45,
	62, 1139, 20, 1136, 0, 81, 3, 1135, 1134, 1132,
	39, 145, 32, 34, 1131, 1122, 52, 1120, 63, 1119,
	6, 1118, 1117, 1116, 1108, 14, 55, 1106, 1105, 42,
	1101, 96, 629, 1097, 1095, 33, 1094, 1082, 8, 1081,
	1080, 49, 128, 87, 44, 1079, 1078, 1077, 1076, 1075,
	1072, 139, 1066, 1062, 1059, 5, 1056, 84, 1049, 1038,
	1036, 1035, 1033, 1027, 1025, 1021, 1020, 28, 64, 23,
	1017, 1011, 1009, 1007, 90, 2, 116, 1006, 115, 1002,
	1000, 51, 30, 999, 15, 996, 1, 995, 19, 993,
	18, 75, 50, 41, 990, 984, 982, 12, 978, 977,
	109, 46, 973, 37, 36, 969, 961, 959, 955, 949,
	17, 946, 943, 939, 932, 929, 47, 928, 97, 40,
	920, 913, 7, 27, 720, 910, 22, 904, 82, 9,
	21, 903, 894, 879, 876, 874, 852, 11, 101, 846,
	13,
}

var yyR1 = [...]uint8{
	0, 159, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
	6, 7, 7, 10, 10, 9, 9, 8, 148, 148,
	97, 97, 97, 96, 96, 98, 98, 14, 14, 14,
	14, 136, 136, 137, 137, 138, 158, 158, 157, 157,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 12, 12, 86, 86, 93,
	92, 92, 91, 90, 90, 94, 94, 87, 87, 89,
	89, 88, 88, 77, 77, 149, 149, 21, 21, 21,
	21, 21, 21, 21, 21, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 133, 133,
	134, 74, 74, 29, 29, 122, 122, 30, 16, 16,
	1, 1, 2, 2, 156, 156, 155, 155, 111, 111,
	111, 17, 18, 19, 139, 141, 141, 140, 140, 123,
	123, 125, 125, 124, 124, 143, 143, 143, 143, 118,
	118, 117, 117, 28, 28, 115, 115, 115, 115, 146,
	146, 146, 11, 11, 119, 119, 85, 85, 76, 76,
	99, 99, 80, 80, 26, 26, 27, 27, 153, 153,
	135, 135, 135, 135, 32, 32, 103, 103, 103, 104,
	104, 108, 108, 108, 105, 105, 109, 109, 107, 107,
	107, 110, 110, 106, 106, 112, 112, 112, 78, 78,
	33, 33, 33, 35, 35, 36, 37, 37, 38, 38,
	150, 150, 39, 39, 39, 39, 39, 75, 75, 114,
	114, 114, 147, 147, 40, 40, 41, 42, 42, 42,
	42, 44, 44, 43, 116, 116, 152, 152, 151, 151,
	154, 154, 142, 142, 142, 142, 142, 142, 142, 79,
	79, 45, 45, 84, 84, 95, 20, 73, 73, 46,
	22, 22, 23, 23, 48, 47, 47, 127, 128, 128,
	129, 131, 131, 132, 132, 130, 130, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 121, 121, 120, 120,
	160, 3, 3, 126, 126, 81, 82, 82, 58, 58,
	59, 59, 59, 50, 50, 49, 49, 51, 51, 51,
	56, 56, 145, 145, 145, 113, 113, 64, 64, 64,
	64, 57, 57, 57, 57, 57, 57, 57, 57, 63,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 24,
	24, 25, 25, 65, 65, 65, 65, 66, 66, 67,
	67, 67, 68, 68, 68, 68, 68, 68, 31, 31,
	31, 31, 52, 52, 52, 69, 70, 70, 70, 70,
	70, 70, 70, 60, 60, 60, 61, 61, 61, 55,
	101, 101, 54, 54, 100, 100, 100, 100, 100, 100,
	100, 144, 144, 144, 144, 71, 71, 71, 71, 71,
	71, 71, 71, 72, 72, 72, 72, 53, 53, 53,
	53, 53, 53, 53, 83, 83, 102,
}

var yyR2 = [...]int8{
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 3, 4, 1, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 5,
	4, 3, 4, 1, 3, 1, 1, 8, 7, 2,
	3, 1, 2, 3, 1, 3, 1, 1, 2, 1,
	3, 1, 3, 3, 1, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 1, 5, 7,
	9, 5, 3, 3, 3, 3, 3, 3, 1, 2,
	6, 7, 9, 5, 1, 6, 3, 2, 0, 2,
	8, 1, 3, 0, 4, 1, 3, 1, 10, 11,
	0, 1, 0, 1, 0, 1, 1, 2, 1, 1,
	1, 9, 6, 7, 8, 0, 2, 0, 2, 0,
	2, 0, 2, 0, 2, 1, 2, 4, 3, 1,
	4, 1, 4, 1, 4, 3, 4, 4, 5, 0,
	5, 4, 1, 1, 1, 4, 5, 6, 1, 3,
	6, 7, 3, 6, 2, 0, 1, 3, 0, 2,
	1, 1, 1, 1, 6, 8, 1, 2, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 1, 2,
	1, 0, 1, 0, 2, 2, 4, 3, 1, 3,
	1, 2, 3, 3, 1, 1, 3, 1, 1, 3,
	2, 0, 5, 5, 10, 3, 5, 1, 3, 1,
	2, 3, 1, 2, 2, 2, 3, 3, 3, 4,
	3, 1, 1, 3, 1, 3, 1, 1, 0, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 4, 3, 1, 4, 4, 3, 1, 1,
	0, 1, 3, 1, 8, 3, 2, 2, 3, 1,
	7, 0, 2, 1, 3, 3, 4, 6, 5, 3,
	4, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 5, 4, 3, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 3, 2, 1,
	2, 4, 2, 2, 1, 2, 1, 2, 11, 9,
	0, 0, 1, 0, 4, 2, 3, 1, 1, 2,
	2, 4, 2, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 1, 1, 0, 1, 4, 3, 1,
	3, 1, 1, 3, 2, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 3, 1, 1, 1, 1, 1,
	3, 1, 1, 4, 4, 4, 4, 1, 1, 1,
	3, 3, 1, 4, 2, 3, 1, 4, 4, 3,
	3, 3, 3, 1, 3, 1, 1, 3, 1, 1,
	0, 1, 3, 1, 3, 1, 4, 2, 2, 6,
	4, 2, 2, 1, 2, 1, 4, 3, 3, 3,
	3, 6, 3, 1, 1, 2, 1, 5, 4, 2,
	2, 4, 2, 2, 1, 3, 1,
}

var yyChk = [...]int16{
	-1000, -159, -148, -13, 2, -15, -16, -17, -18, -19,
	-139, 52, 80, 45, -86, 39, 152, -76, -80, 21,
	20, 23, 30, 34, 35, 40, 47, 99, 19, 14,
	-24, 49, 25, 27, 154, 41, 36, -6, 37, -158,
	-157, -85, -99, -31, -34, 10, -138, 7, -68, -69,
	-66, 60, 158, 93, 105, 106, 163, 162, 164, 165,
	156, -47, -129, -53, 108, 109, 110, 111, 112, 113,
	114, 6, 166, -57, 151, 97, 98, 107, 44, -121,
	144, -52, -59, -50, -65, -62, 92, 143, 50, 51,
	4, 5, 85, 86, 87, 8, 9, 75, -64, -63,
	-120, -8, 167, -14, -67, -49, 67, 68, 82, 64,
	65, 66, 81, 63, 61, 18, 150, 38, 12, 146,
	147, 145, 156, -97, 152, 10, -5, 146, -4, 99,
	100, 101, 102, 103, 104, 148, 4, 5, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 6, 7, 94,
	95, 96, 19, 20, 21, 22, 23, 24, 25, 26,
	27, 28, 29, 41, 42, 43, 44, 45, 46, 47,
	48, 49, 50, 51, 35, 36, 37, 39, 40, 97,
	98, 60, 30, 31, 32, 33, 34, 61, 62, 56,
	57, 80, 54, 55, 53, 63, 64, 66, 65, 67,
	68, 82, 81, 38, 143, 149, -94, -12, -98, -88,
	37, 39, -96, 147, 10, 146, -77, -20, -6, 10,
	-149, 156, -15, -158, 37, 156, 156, -25, -24, 99,
	10, -25, -25, -35, -36, -52, -37, -121, -38, -8,
	-73, -46, -24, 154, 131, 132, 88, 90, 89, 169,
	161, 171, 177, 163, 162, 172, 133, 173, 174, 134,
	135, 136, 137, 138, 139, 175, 140, 176, 141, 116,
	91, 160, 115, 156, 156, 156, 152, -6, 155, -3,
	161, -138, 37, -120, -156, 54, 55, 149, -155, -111,
	100, 101, 148, 94, 95, 94, 96, 95, 170, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 105, 106, 156, 158, 152, 58, 142, 156,
	-55, -54, -101, -100, -24, 161, 84, 60, -24, -31,
	-62, 156, -64, -63, 99, 158, -31, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -56,
	156, -24, -145, 17, -144, -71, -8, 77, 78, -24,
	-24, -24, -24, -137, -136, -49, -14, 79, -51, -48,
	-49, -70, 156, -157, -52, -158, 156, 156, 156, -24,
	-24, 156, -24, -24, 17, 76, -144, 152, -52, -112,
	156, -112, 156, -144, 17, -3, 157, 154, 152, -148,
	154, 168, -94, -98, 83, 29, 154, 168, 170, -21,
	153, 2, -15, -16, -17, -18, -19, -139, 52, -24,
	21, -3, -22, -23, -24, -24, 154, 154, 154, 154,
	168, 154, 168, 170, 154, 168, -24, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -24, -51, -24, 155, -24, -122, -30, -31, -24,
	-77, -149, 154, -6, -160, -3, 53, -6, -6, -6,
	-111, 156, -15, 156, 154, 155, -24, 161, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -24, -25, -24, -61, -6, 152, -52, -61, -55,
	159, 168, 59, -31, -24, 156, -24, -55, 157, -25,
	151, -71, -71, 17, 158, 58, 142, -24, 11, -31,
	59, 168, -10, -112, -60, -7, -52, 152, -6, -5,
	-113, -112, 79, 158, 152, 58, 142, 79, -24, 53,
	-24, -83, -102, -24, -24, -24, 76, 76, -24, 157,
	-78, 84, -33, -24, -7, 60, 93, 6, 97, 98,
	44, 99, 92, 143, 50, 51, 4, 5, 85, 86,
	87, 37, 61, 63, 64, 66, 65, 67, 68, 82,
	81, 38, -55, 150, 156, 154, -148, 153, -88, -98,
	154, 83, 152, -6, -20, -24, 156, 157, 156, 154,
	168, 157, -36, -38, -24, -46, 155, -24, -10, 168,
	29, 157, 153, 156, 156, -6, -6, 152, -125, 56,
	-141, 155, -24, -24, -149, -24, 157, 159, 153, -112,
	-24, -112, 157, 170, -101, -24, 161, 60, -55, 157,
	159, 157, -72, -6, 13, 162, -8, -6, -6, 153,
	153, 158, 153, -24, -136, 159, -112, -24, -52, -25,
	-24, -61, -61, -52, 157, -113, 157, -10, 168, 157,
	157, 153, -10, 168, 157, -24, 155, 157, -26, -27,
	-32, -157, 153, 152, -93, -92, -87, -89, -12, -96,
	-160, 157, -119, -15, 155, -24, -22, -24, -115, 152,
	155, -24, 157, -30, -143, -31, 161, 60, 158, -28,
	-15, 155, -133, -26, -26, 156, -123, 56, -150, 152,
	-75, -14, -124, 57, -104, -108, 99, 61, 62, -14,
	157, 157, 96, -15, 155, 153, 170, -24, -31, 156,
	157, 159, 13, -24, 153, 159, 153, -123, 152, 157,
	-102, 157, -33, 84, -24, 157, -10, 168, -153, -91,
	-90, -89, 153, -10, 168, -89, 29, 154, -149, 157,
	154, -146, 154, -146, 154, 154, 157, 59, -31, 156,
	-55, -149, -29, -134, 43, 42, 157, 157, -26, -124,
	-14, 153, -39, -157, 45, -150, 168, 152, -75, -15,
	155, 154, -149, -24, -55, 159, -124, -131, -132, -130,
	-127, 33, -128, -24, -106, 155, -32, -135, -110, 104,
	103, 102, 148, -107, -108, 160, -109, 153, -10, 168,
	154, -87, -6, 22, 154, -22, 153, 32, 33, -146,
	31, -146, -117, -15, 155, -143, -31, -55, 159, 28,
	152, 156, -106, -126, 45, 157, 152, -152, -151, 32,
	-154, 48, -142, 104, 103, 102, 99, 100, 101, 148,
	-75, 153, -14, -150, -149, 157, 153, 152, 153, -10,
	168, 59, -10, 168, -10, 168, -160, -103, -104, 160,
	-105, -1, 161, 169, -108, 169, 154, -89, 154, 157,
	-24, -11, 155, 154, 153, 154, 31, -149, 157, 157,
	154, -149, -74, -14, 152, -106, 156, -106, -150, -110,
	39, 37, -6, -142, -114, 154, 152, 153, -150, -130,
	-24, 59, -24, 59, 169, -104, 169, -2, 84, -108,
	-108, -118, -15, 155, -11, -149, 154, 26, -117, 153,
	-9, 169, -8, -149, 152, -81, -82, -58, -8, 161,
	152, 153, -79, -45, -8, -84, -95, -7, -3, -140,
	170, 153, -147, -40, -41, -42, -43, -44, -14, -7,
	153, -24, -24, -104, -104, -8, -149, -149, 154, 157,
	-14, 153, -149, 157, -10, 168, -8, -149, 154, 168,
	-160, 170, 154, 168, 170, -7, 154, -24, 153, -40,
	154, 154, 46, 29, 79, 170, 24, 152, 153, -58,
	153, -45, -24, -95, -24, 156, -75, -6, -4, -142,
	-7, -24, 154, -149, -160, -160, -26, -7, 153, 157,
	-106, -116, 154, 152, -149, 153,
}

var yyDef = [...]int16{
	89, -2, -2, 88, 110, 111, 112, 113, 114, 115,
	116, 0, 0, 0, 123, 0, 146, 156, 157, 0,
	0, 0, 0, 491, 491, 491, 0, 455, 0, 168,
	0, 0, 0, 0, 174, 0, 0, 0, 441, 109,
	194, 238, 0, -2, 490, -2, 106, 0, -2, 509,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 412, 416, 0, 0, 0, 0, 0, 0,
	0, 460, 0, 426, 462, 0, 429, 0, 0, 434,
	0, 502, 507, 0, -2, -2, 108, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 472, 0, -2, -2,
	436, 512, 0, -2, 0, 453, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 469, 0, 441, 87, 98,
	99, 100, 0, 0, 89, 90, 91, 92, 72, 73,
	74, 75, 76, 77, 78, 79, 2, 3, 4, 5,
	6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
	16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
	26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
	36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
	46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 0, 0, 141, 136,
	125, 126, 95, 96, 93, 94, 0, 144, 0, 80,
	-2, 0, 0, 0, 441, 340, 0, 0, 492, 455,
	97, 0, 0, 0, 284, 285, 0, 435, 287, 288,
	0, 338, 339, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 177, 440,
	442, 107, 441, 437, 0, 0, 0, 0, 195, 196,
	198, 199, 200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 377, 0, 491, 0, 0, 0, 530,
	0, 529, 533, 531, 535, 0, 0, 0, 361, -2,
	498, 0, -2, 496, 455, 530, -2, 396, 397, 398,
	399, 0, 417, 418, 419, 420, 421, 422, 423, 424,
	491, 425, 0, 463, 464, 543, 545, 0, 0, 428,
	430, 432, 433, 83, 103, 101, 456, 0, 465, 346,
	457, 458, 0, 0, 516, 109, 0, 0, 0, 559,
	560, 0, 562, 563, 0, 474, 0, 0, 514, 450,
	0, 452, 530, 0, 0, 0, 0, 118, 89, -2,
	121, 0, 0, 141, 0, 0, 124, 0, 0, 145,
	155, 147, 148, 149, 150, 151, 152, 153, 0, 0,
	0, 440, 0, 341, 343, 0, 162, 163, 164, 165,
	0, 166, 0, 0, 167, 0, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 394, 395, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 409, 0, 0, 415, 83, 185, -2, 0,
	0, -2, 176, 0, 0, 440, 0, 0, 211, 205,
	197, 0, 239, 0, 242, 146, 359, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	374, 0, 0, 0, 510, 526, 0, 528, 511, 0,
	468, 530, 0, -2, 538, 530, 0, 0, -2, 0,
	427, 544, 541, 542, 0, 0, 0, 0, 0, 493,
	0, 84, 0, 102, 0, -2, -2, 0, 81, 82,
	345, 466, 0, 491, 0, 0, 0, 0, 0, 465,
	0, 83, 564, 566, 0, 0, 473, 475, 0, 275,
	83, 0, 278, 280, 0, 47, 12, -2, 45, -2,
	32, -2, -2, 70, 38, 39, 2, 3, 4, 5,
	6, -2, 53, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 470, -2, 117, -2, 120, 135, 141,
	122, 0, 0, 142, 143, 440, 0, 0, 0, 340,
	0, 0, 283, 286, 289, 337, 0, 414, 0, 84,
	0, 0, 178, -2, -2, 0, 209, 291, 0, 0,
	213, 0, 0, 0, -2, 360, 0, 503, 504, 505,
	0, 506, 0, 0, 532, 534, 0, 0, 0, -2,
	468, 461, 0, 553, 554, 0, 556, 547, 548, 549,
	550, 0, 552, 431, 104, 105, 451, 0, 521, 0,
	0, 519, 520, 522, 459, 209, 0, 0, 84, 558,
	561, 513, 0, 84, 277, 281, 0, 467, 0, 83,
	246, 248, 119, 0, 0, 83, 131, 137, 0, 139,
	336, 0, 158, 234, 146, 0, 0, 342, 161, 229,
	229, 413, 0, 186, 0, -2, 0, 0, 530, 173,
	223, 146, 183, 0, 0, -2, 213, 0, 108, 291,
	212, 297, 0, 0, 206, 259, 260, 261, 262, 263,
	0, 0, 0, 236, 146, 527, 0, 358, -2, 530,
	540, 546, 555, 0, 524, 517, 518, 213, 351, 557,
	565, 276, 279, 0, 282, 273, 244, -2, 271, 0,
	83, 134, 0, 129, 84, 138, 0, 154, -2, 0,
	340, 0, 229, 0, 229, 170, 0, 0, -2, 530,
	0, -2, 175, 179, 0, 0, 273, 443, 0, 0,
	210, 202, 290, 318, 0, 108, 0, 291, 214, 237,
	146, 243, -2, 357, 0, 0, 0, 0, 83, 353,
	0, 83, 83, 349, 440, 0, 247, 249, 190, 250,
	251, 252, 253, 272, 268, 0, 270, 0, 132, 84,
	128, 130, 140, 0, 159, 0, 225, 0, 0, 0,
	0, 0, 171, 221, 146, 0, -2, 0, -2, 0,
	146, 0, 0, 273, 0, 273, 291, 271, 0, 0,
	-2, 317, 320, 322, 323, 324, 325, 326, 327, 328,
	0, 203, 298, 108, -2, 539, 551, 291, 350, 352,
	84, 0, 0, 84, 347, 84, 0, 274, 256, 0,
	258, 192, 191, 0, 269, 0, 127, 133, 235, 0,
	0, 146, 232, 233, 226, 227, 0, -2, 0, 217,
	224, -2, 85, 181, 146, 0, 0, 0, 108, 0,
	0, 441, 207, 321, 295, 299, 0, 204, 108, 354,
	355, 0, 348, 0, 0, 257, 0, 0, 193, 266,
	267, 160, 219, 146, 146, -2, 228, 0, 172, 184,
	0, 0, 86, -2, 146, 0, 83, 447, 448, 0,
	146, 201, 0, 330, 440, 0, 334, 0, 0, 0,
	0, 300, 0, 302, 0, 0, 312, 0, 0, 311,
	344, 356, 439, 264, 265, 254, -2, -2, 222, 0,
	182, 188, -2, 444, 445, 84, 449, -2, 292, 0,
	331, 0, 293, 0, 0, 0, 296, 208, 301, 303,
	304, 305, 0, 0, 0, 0, 0, 146, 438, 446,
	189, 329, 440, 333, 440, -2, 306, 307, 308, 310,
	313, 255, 220, -2, 332, 335, 0, 309, 180, 273,
	0, 294, 314, 146, -2, 315,
}

var yyTok1 = [...]uint8{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 164, 150, 3, 167, 174, 161, 3,
	156, 157, 172, 163, 168, 162, 177, 173, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 155, 154,
	175, 170, 176, 160, 166, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 158, 3, 159, 171, 3, 151, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 152, 169, 153, 165,
}

var yyTok2 = [...]uint8{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149,
}

var yyTok3 = [...]int8{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

// line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(yyPact[state])
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && int(yyChk[int(yyAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || int(yyExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := int(yyExca[i])
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(yyTok1[0])
		goto out
	}
	if char < len(yyTok1) {
		token = int(yyTok1[char])
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = int(yyTok2[char-yyPrivate])
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = int(yyTok3[i+0])
		if token == char {
			token = int(yyTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(yyTok2[1]) /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = int(yyPact[yystate])
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = int(yyAct[yyn])
	if int(yyChk[yyn]) == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = int(yyDef[yystate])
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && int(yyExca[xi+1]) == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = int(yyExca[xi+0])
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = int(yyExca[xi+1])
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = int(yyPact[yyS[yyp].yys]) + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = int(yyAct[yyn]) /* simulate a shift of "error" */
					if int(yyChk[yystate]) == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= int(yyR2[yyn])
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = int(yyR1[yyn])
	yyg := int(yyPgo[yyn])
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = int(yyAct[yyg])
	} else {
		yystate = int(yyAct[yyj])
		if int(yyChk[yystate]) != -yyn {
			yystate = int(yyAct[yyg])
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yylex.(*Parser).currentToken.Value = nil

			yylex.(*Parser).rootNode = &ast.Root{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].list),
				Stmts:    yyDollar[1].list,
				EndTkn:   yylex.(*Parser).currentToken,
			}
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:324
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:332
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:335
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:335
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:335
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:335
		{
			yyVAL.token = yyDollar[1].token
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:336
		{
			yyVAL.token = yyDollar[1].token
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:336
		{
			yyVAL.token = yyDollar[1].token
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:336
		{
			yyVAL.token = yyDollar[1].token
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:340
		{
			yyVAL.token = yyDollar[1].token
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:344
		{
			yyVAL.token = yyDollar[1].token
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:345
		{
			yyVAL.token = yyDollar[1].token
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:349
		{
			yyVAL.token = nil
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:350
		{
			yyVAL.token = yyDollar[1].token
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:354
		{
			yyVAL.token = nil
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:355
		{
			yyVAL.token = yyDollar[1].token
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:359
		{
			yyVAL.token = yyDollar[1].token
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:363
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:368
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:372
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:373
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:374
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:378
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:379
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:383
		{
			yyVAL.node = yyDollar[1].node
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:384
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameFullyQualified(yyDollar[1].token)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:388
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:389
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:390
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameFullyQualified(yyDollar[1].token)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:391
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameRelative(yyDollar[1].token)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:395
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttribute(yyDollar[1].node, nil)
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:396
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttribute(yyDollar[1].node, yyDollar[2].node)
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:400
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:401
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:406
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttributeGroup(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token, yyDollar[4].token)
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:410
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:411
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 108:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:415
		{
			yyVAL.list = nil
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:416
		{
			yyVAL.list = yyDollar[1].list
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:420
		{
			yyVAL.node = nil
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:421
		{
			yyVAL.node = yyDollar[1].node
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:422
		{
			yyVAL.node = yyDollar[1].node
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:423
		{
			yyVAL.node = yyDollar[1].node
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:424
		{
			yyVAL.node = yyDollar[1].node
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:425
		{
			yyVAL.node = yyDollar[1].node
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:426
		{
			yyVAL.node = yyDollar[1].node
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:428
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:438
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, yyDollar[2].node, nil, nil, nil, yyDollar[3].token)
		}
	case 119:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:440
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token, yyDollar[4].list, yyDollar[5].token, nil)
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:442
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, nil, yyDollar[2].token, yyDollar[3].list, yyDollar[4].token, nil)
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:445
		{
			yyVAL.node = yylex.(*Parser).builder.NewUseList(yyDollar[1].token, nil, yyDollar[2].node, yyDollar[3].token)
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:447
		{
			yyVAL.node = yylex.(*Parser).builder.NewUseList(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token)
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:449
		{
			yyVAL.node = yyDollar[1].node
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:452
		{
			yyVAL.node = &ast.StmtConstList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ConstTkn:      yyDollar[1].token,
				Consts:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:464
		{
			yyVAL.token = yyDollar[1].token
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:465
		{
			yyVAL.token = yyDollar[1].token
		}
	case 127:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:470
		{
			yyVAL.node = yylex.(*Parser).builder.NewGroupUseList(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token, yyDollar[8].token)
		}
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:472
		{
			yyVAL.node = yylex.(*Parser).builder.NewGroupUseList(yyDollar[1].token, nil, yyDollar[2].node, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].token, yyDollar[7].token)
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:477
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:482
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:484
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:489
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:494
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:496
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:500
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:501
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:505
		{
			yyVAL.node = yyDollar[1].node
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:506
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.Type = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
			decl.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
			yyVAL.node = yyDollar[2].node
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:515
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, nil, nil)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:516
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].token)
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:520
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, nil, nil)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:521
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].token)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:525
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:526
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:530
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:535
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:539
		{
			yyVAL.node = nil
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:540
		{
			yyVAL.node = yyDollar[1].node
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:541
		{
			yyVAL.node = yyDollar[1].node
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:542
		{
			yyVAL.node = yyDollar[1].node
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:543
		{
			yyVAL.node = yyDollar[1].node
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:544
		{
			yyVAL.node = yyDollar[1].node
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:545
		{
			yyVAL.node = yyDollar[1].node
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:547
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:559
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:568
		{
			yyVAL.node = yyDollar[1].node
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:572
		{
			yyVAL.node = yyDollar[1].node
		}
	case 158:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:576
		{
			yyDollar[5].node.(*ast.StmtWhile).WhileTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtWhile).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtWhile).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtWhile).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtWhile).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 159:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:586
		{
			yyVAL.node = &ast.StmtDo{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				DoTkn:               yyDollar[1].token,
				Stmt:                yyDollar[2].node,
				WhileTkn:            yyDollar[3].token,
				OpenParenthesisTkn:  yyDollar[4].token,
				Cond:                yyDollar[5].node,
				CloseParenthesisTkn: yyDollar[6].token,
				SemiColonTkn:        yyDollar[7].token,
			}
		}
	case 160:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:599
		{
			yyDollar[9].node.(*ast.StmtFor).ForTkn = yyDollar[1].token
			yyDollar[9].node.(*ast.StmtFor).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[9].node.(*ast.StmtFor).Init = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).InitSeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).InitSemiColonTkn = yyDollar[4].token
			yyDollar[9].node.(*ast.StmtFor).Cond = yyDollar[5].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).CondSeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CondSemiColonTkn = yyDollar[6].token
			yyDollar[9].node.(*ast.StmtFor).Loop = yyDollar[7].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).LoopSeparatorTkns = yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CloseParenthesisTkn = yyDollar[8].token
			yyDollar[9].node.(*ast.StmtFor).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			yyVAL.node = yyDollar[9].node
		}
	case 161:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:616
		{
			yyDollar[5].node.(*ast.StmtSwitch).SwitchTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtSwitch).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtSwitch).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtSwitch).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtSwitch).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:626
		{
			yyVAL.node = &ast.StmtBreak{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				BreakTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:635
		{
			yyVAL.node = &ast.StmtContinue{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ContinueTkn:  yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:644
		{
			yyVAL.node = &ast.StmtReturn{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ReturnTkn:    yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:653
		{
			yyDollar[2].node.(*ast.StmtGlobal).GlobalTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtGlobal).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtGlobal).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:661
		{
			yyDollar[2].node.(*ast.StmtStatic).StaticTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtStatic).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtStatic).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:669
		{
			yyDollar[2].node.(*ast.StmtEcho).EchoTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtEcho).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtEcho).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:677
		{
			yyVAL.node = &ast.StmtInlineHtml{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				InlineHtmlTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:685
		{
			yyVAL.node = yylex.(*Parser).builder.NewExpressionStmt(yyDollar[1].node, yyDollar[2].token)
		}
	case 170:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:689
		{
			yyDollar[3].node.(*ast.StmtUnset).UnsetTkn = yyDollar[1].token
			yyDollar[3].node.(*ast.StmtUnset).OpenParenthesisTkn = yyDollar[2].token
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[4].token)
			}
			yyDollar[3].node.(*ast.StmtUnset).CloseParenthesisTkn = yyDollar[5].token
			yyDollar[3].node.(*ast.StmtUnset).SemiColonTkn = yyDollar[6].token
			yyDollar[3].node.(*ast.StmtUnset).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			yyVAL.node = yyDollar[3].node
		}
	case 171:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:702
		{
			foreach := yyDollar[7].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[7].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Var = yyDollar[5].node
			foreach.CloseParenthesisTkn = yyDollar[6].token

			if val, ok := yyDollar[5].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 172:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:721
		{
			foreach := yyDollar[9].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Key = yyDollar[5].node
			foreach.DoubleArrowTkn = yyDollar[6].token
			foreach.Var = yyDollar[7].node
			foreach.CloseParenthesisTkn = yyDollar[8].token

			if val, ok := yyDollar[7].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 173:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:742
		{
			yyDollar[5].node.(*ast.StmtDeclare).DeclareTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtDeclare).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtDeclare).Consts = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[5].node.(*ast.StmtDeclare).SeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[5].node.(*ast.StmtDeclare).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtDeclare).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:753
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 175:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:760
		{
			yyVAL.node = yylex.(*Parser).builder.NewTry(yyDollar[1].token, yyDollar[2].token, yyDollar[3].list, yyDollar[4].token, yyDollar[5].node, yyDollar[6].node)
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:764
		{
			yyVAL.node = &ast.StmtGoto{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				GotoTkn:  yyDollar[1].token,
				Label: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:777
		{
			yyVAL.node = &ast.StmtLabel{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				ColonTkn: yyDollar[2].token,
			}
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:790
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:791
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, nil, yyDollar[2].node)
		}
	case 180:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:796
		{
			yyVAL.node = yylex.(*Parser).builder.NewCatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:800
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:801
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:806
		{
			yyVAL.node = nil
		}
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:810
		{
			yyVAL.node = &ast.StmtFinally{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				FinallyTkn:           yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:823
		{
			yyVAL.node = &ast.StmtUnset{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:829
		{
			yyDollar[1].node.(*ast.StmtUnset).Vars = append(yyDollar[1].node.(*ast.StmtUnset).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:838
		{
			yyVAL.node = yyDollar[1].node
		}
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:843
		{
			yyVAL.node = yylex.(*Parser).builder.NewFunction(nil, yyDollar[1].token, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].token, yyDollar[7].node, yyDollar[8].token, yyDollar[9].list, yyDollar[10].token)
		}
	case 189:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:846
		{
			yyVAL.node = yylex.(*Parser).builder.NewFunction(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token, yyDollar[8].node, yyDollar[9].token, yyDollar[10].list, yyDollar[11].token)
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:850
		{
			yyVAL.token = nil
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:851
		{
			yyVAL.token = yyDollar[1].token
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:855
		{
			yyVAL.token = nil
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:856
		{
			yyVAL.token = yyDollar[1].token
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:860
		{
			yyVAL.list = nil
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:861
		{
			yyVAL.list = yyDollar[1].list
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:865
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:866
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:870
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:871
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:872
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 201:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:878
		{
			yyVAL.node = yylex.(*Parser).builder.NewClass(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].node, yyDollar[7].token, yyDollar[8].list, yyDollar[9].token)
		}
	case 202:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:884
		{
			yyVAL.node = yylex.(*Parser).builder.NewTrait(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].list, yyDollar[6].token)
		}
	case 203:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:890
		{
			yyVAL.node = yylex.(*Parser).builder.NewInterface(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token, yyDollar[6].list, yyDollar[7].token)
		}
	case 204:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:896
		{
			yyVAL.node = yylex.(*Parser).builder.NewEnum(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].node, yyDollar[5].node, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:900
		{
			yyVAL.node = nil
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:901
		{
			yyVAL.node = yylex.(*Parser).builder.NewEnumType(yyDollar[1].token, yyDollar[2].node)
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:904
		{
			yyVAL.node = nil
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:905
		{
			yyVAL.node = yylex.(*Parser).builder.NewEnumExpr(yyDollar[1].token, yyDollar[2].node)
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:909
		{
			yyVAL.node = nil
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:913
		{
			yyVAL.node = &ast.StmtClass{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExtendsTkn: yyDollar[1].token,
				Extends:    yyDollar[2].node,
			}
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:924
		{
			yyVAL.node = nil
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:928
		{
			yyVAL.node = &ast.StmtInterface{
				Position:             yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ExtendsTkn:           yyDollar[1].token,
				Extends:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ExtendsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:940
		{
			yyVAL.node = nil
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:944
		{
			yyVAL.node = &ast.StmtClass{
				Position:                yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ImplementsTkn:           yyDollar[1].token,
				Implements:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ImplementsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:956
		{
			yyVAL.node = yyDollar[1].node
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:960
		{
			yyVAL.node = &ast.StmtForeach{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Var:          yyDollar[2].node,
			}
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:968
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ListTkn:         yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:979
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:992
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:999
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForTkn:    yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1015
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1022
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForeachTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1038
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1045
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndDeclareTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1061
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Cases:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1070
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CaseSeparatorTkn:     yyDollar[2].token,
				Cases:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1080
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn:     yyDollar[1].token,
				Cases:        yyDollar[2].list,
				EndSwitchTkn: yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1090
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				ColonTkn:         yyDollar[1].token,
				CaseSeparatorTkn: yyDollar[2].token,
				Cases:            yyDollar[3].list,
				EndSwitchTkn:     yyDollar[4].token,
				SemiColonTkn:     yyDollar[5].token,
			}
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1104
		{
			yyVAL.list = nil
		}
	case 230:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1108
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtCase{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list),
				CaseTkn:          yyDollar[2].token,
				Cond:             yyDollar[3].node,
				CaseSeparatorTkn: yyDollar[4].token,
				Stmts:            yyDollar[5].list,
			})
		}
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1118
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtDefault{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				DefaultTkn:       yyDollar[2].token,
				CaseSeparatorTkn: yyDollar[3].token,
				Stmts:            yyDollar[4].list,
			})
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1129
		{
			yyVAL.token = yyDollar[1].token
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1130
		{
			yyVAL.token = yyDollar[1].token
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1135
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1142
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndWhileTkn:  yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 236:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1158
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				Stmt:                yyDollar[5].node,
			}
		}
	case 237:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1169
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				Stmt:                yyDollar[6].node,
			})

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)

			yyVAL.node = yyDollar[1].node
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1187
		{
			yyVAL.node = yyDollar[1].node
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1191
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[3].node),
				ElseTkn:  yyDollar[2].token,
				Stmt:     yyDollar[3].node,
			}

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 240:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1206
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[6].list),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				ColonTkn:            yyDollar[5].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[6].list),
					Stmts:    yyDollar[6].list,
				},
			}
		}
	case 241:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1221
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[7].list),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[7].list),
					Stmts:    yyDollar[7].list,
				},
			})

			yyVAL.node = yyDollar[1].node
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1241
		{
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[2].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[3].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			yyVAL.node = yyDollar[1].node
		}
	case 243:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1249
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				ElseTkn:  yyDollar[2].token,
				ColonTkn: yyDollar[3].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[4].list),
					Stmts:    yyDollar[4].list,
				},
			}
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[5].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[6].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token)

			yyVAL.node = yyDollar[1].node
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1268
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1269
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1273
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1274
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 248:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1278
		{
			yyVAL.list = nil
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1279
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1283
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1284
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1285
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1286
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 254:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1292
		{
			yyVAL.node = yylex.(*Parser).builder.NewParameter(yyDollar[1].list, yyDollar[2].list, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, nil, nil, false)
		}
	case 255:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1295
		{
			yyVAL.node = yylex.(*Parser).builder.NewParameter(yyDollar[1].list, yyDollar[2].list, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].token, yyDollar[8].node, true)
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1299
		{
			yyVAL.node = yyDollar[1].node
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1300
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1301
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1305
		{
			yyVAL.node = yyDollar[1].node
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1306
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1310
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1311
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1312
		{
			yyVAL.node = yyDollar[1].node
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1316
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1317
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1322
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1324
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1328
		{
			yyVAL.node = yyDollar[1].node
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1329
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1330
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 271:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1334
		{
			yyVAL.node = nil
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1335
		{
			yyVAL.node = yyDollar[1].node
		}
	case 273:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1339
		{
			yyVAL.node = &ReturnType{}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1340
		{
			yyVAL.node = yylex.(*Parser).builder.NewReturnType(yyDollar[1].token, yyDollar[2].node)
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1344
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgumentList(yyDollar[1].token, nil, nil, nil, yyDollar[2].token)
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1346
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgumentList(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token, nil, yyDollar[4].token)
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1347
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgumentList(yyDollar[1].token, nil, nil, yyDollar[2].token, yyDollar[3].token)
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1351
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1353
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1357
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgument(yyDollar[1].node)
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1358
		{
			yyVAL.node = yylex.(*Parser).builder.NewVariadicArgument(yyDollar[1].token, yyDollar[2].node)
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1359
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamedArgument(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node)
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1364
		{
			yyDollar[1].node.(*ast.StmtGlobal).Vars = append(yyDollar[1].node.(*ast.StmtGlobal).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1371
		{
			yyVAL.node = &ast.StmtGlobal{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1379
		{
			yyVAL.node = yyDollar[1].node
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1384
		{
			yyDollar[1].node.(*ast.StmtStatic).Vars = append(yyDollar[1].node.(*ast.StmtStatic).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1391
		{
			yyVAL.node = &ast.StmtStatic{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1400
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1414
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1432
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1433
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 292:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1438
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyList(yyDollar[1].list, yyDollar[2].list, yyDollar[3].node, yyDollar[4].node, yyDollar[5].token)
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1440
		{
			yyVAL.node = yylex.(*Parser).builder.NewClassConstList(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token)
		}
	case 294:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:1442
		{
			yyVAL.node = yylex.(*Parser).builder.NewClassMethod(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].node, yyDollar[8].token, yyDollar[9].node, yyDollar[10].node)
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1444
		{
			traitUse := &ast.StmtTraitUse{
				Position:      yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				UseTkn:        yyDollar[1].token,
				Traits:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}

			switch n := yyDollar[3].node.(type) {
			case *TraitAdaptationList:
				traitUse.OpenCurlyBracketTkn = n.OpenCurlyBracketTkn
				traitUse.Adaptations = n.Adaptations
				traitUse.CloseCurlyBracketTkn = n.CloseCurlyBracketTkn
			case *ast.StmtNop:
				traitUse.SemiColonTkn = n.SemiColonTkn
			}

			yyVAL.node = traitUse
		}
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1464
		{
			yyVAL.node = yylex.(*Parser).builder.NewEnumCase(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token)
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1468
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1469
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1474
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1481
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CloseCurlyBracketTkn: yyDollar[2].token,
			}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1489
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Adaptations:          yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1500
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1501
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1506
		{
			yyDollar[1].node.(*ast.StmtTraitUsePrecedence).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1512
		{
			yyDollar[1].node.(*ast.StmtTraitUseAlias).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1521
		{
			yyVAL.node = &ast.StmtTraitUsePrecedence{
				Position:       yylex.(*Parser).builder.Pos.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].node.(*ParserSeparatedList).Items),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				InsteadofTkn:   yyDollar[2].token,
				Insteadof:      yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1536
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1551
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1566
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1582
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
			}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1596
		{
			yyVAL.node = &TraitMethodRef{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1607
		{
			yyVAL.node = yyDollar[1].node
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1614
		{
			yyVAL.node = &TraitMethodRef{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1630
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1637
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1648
		{
			yyVAL.list = yyDollar[1].list
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1649
		{
			yyVAL.list = []ast.Vertex{yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)}
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1653
		{
			yyVAL.list = nil
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1654
		{
			yyVAL.list = yyDollar[1].list
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1658
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1659
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1663
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1664
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1665
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1666
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1667
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1668
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1669
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1673
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1674
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1679
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				Expr: nil,
			}
		}
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1694
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1712
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1713
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1718
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1734
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1750
		{
			yyDollar[1].node.(*ast.StmtEcho).Exprs = append(yyDollar[1].node.(*ast.StmtEcho).Exprs, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1757
		{
			yyVAL.node = &ast.StmtEcho{
				Exprs: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1765
		{
			yyVAL.node = yyDollar[1].node
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1769
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1770
		{
			yyVAL.node = yyDollar[1].node
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1774
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1775
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 344:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1781
		{
			yyVAL.node = yylex.(*Parser).builder.NewAnonClass(yyDollar[1].list, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node, yyDollar[5].node, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1786
		{
			if yyDollar[3].node != nil {
				yyVAL.node = &ast.ExprNew{
					Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
					NewTkn:              yyDollar[1].token,
					Class:               yyDollar[2].node,
					OpenParenthesisTkn:  yyDollar[3].node.(*ArgumentList).OpenParenthesisTkn,
					Args:                yyDollar[3].node.(*ArgumentList).Arguments,
					SeparatorTkns:       yyDollar[3].node.(*ArgumentList).SeparatorTkns,
					CloseParenthesisTkn: yyDollar[3].node.(*ArgumentList).CloseParenthesisTkn,
				}
			} else {
				yyVAL.node = &ast.ExprNew{
					Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
					NewTkn:   yyDollar[1].token,
					Class:    yyDollar[2].node,
				}
			}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1806
		{
			yyVAL.node = &ast.ExprNew{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				NewTkn:   yyDollar[1].token,
				Class:    yyDollar[2].node,
			}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1817
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1821
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1822
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 350:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1827
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token)
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1832
		{
			yyVAL.node = nil
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1834
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1839
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1841
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1846
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(nil, nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1848
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(yyDollar[1].token, yyDollar[2].token, nil, yyDollar[3].token, yyDollar[4].node)
		}
	case 357:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1853
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
				EqualTkn: yyDollar[5].token,
				Expr:     yyDollar[6].node,
			}
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1869
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
					OpenBracketTkn:  yyDollar[1].token,
					Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[3].token,
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1884
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1893
		{
			yyVAL.node = &ast.ExprAssignReference{
				Position:     yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Var:          yyDollar[1].node,
				EqualTkn:     yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Expr:         yyDollar[4].node,
			}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1903
		{
			yyVAL.node = &ast.ExprClone{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CloneTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1911
		{
			yyVAL.node = &ast.ExprAssignPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1920
		{
			yyVAL.node = &ast.ExprAssignMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1929
		{
			yyVAL.node = &ast.ExprAssignMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1938
		{
			yyVAL.node = &ast.ExprAssignPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1947
		{
			yyVAL.node = &ast.ExprAssignDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1956
		{
			yyVAL.node = &ast.ExprAssignConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1965
		{
			yyVAL.node = &ast.ExprAssignMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1974
		{
			yyVAL.node = &ast.ExprAssignBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1983
		{
			yyVAL.node = &ast.ExprAssignBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1992
		{
			yyVAL.node = &ast.ExprAssignBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2001
		{
			yyVAL.node = &ast.ExprAssignShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2010
		{
			yyVAL.node = &ast.ExprAssignShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2019
		{
			yyVAL.node = &ast.ExprAssignCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2028
		{
			yyVAL.node = &ast.ExprPostInc{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				IncTkn:   yyDollar[2].token,
			}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2036
		{
			yyVAL.node = &ast.ExprPreInc{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2044
		{
			yyVAL.node = &ast.ExprPostDec{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				DecTkn:   yyDollar[2].token,
			}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2052
		{
			yyVAL.node = &ast.ExprPreDec{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DecTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2060
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2069
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2078
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2087
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2096
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2105
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2114
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2123
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2132
		{
			yyVAL.node = &ast.ExprBinaryConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2141
		{
			yyVAL.node = &ast.ExprBinaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2150
		{
			yyVAL.node = &ast.ExprBinaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2159
		{
			yyVAL.node = &ast.ExprBinaryMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2168
		{
			yyVAL.node = &ast.ExprBinaryPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2177
		{
			yyVAL.node = &ast.ExprBinaryDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2186
		{
			yyVAL.node = &ast.ExprBinaryMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2195
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2204
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2213
		{
			yyVAL.node = &ast.ExprUnaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PlusTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2221
		{
			yyVAL.node = &ast.ExprUnaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				MinusTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2229
		{
			yyVAL.node = &ast.ExprBooleanNot{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExclamationTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2237
		{
			yyVAL.node = &ast.ExprBitwiseNot{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				TildaTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2245
		{
			yyVAL.node = &ast.ExprBinaryIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2254
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2263
		{
			yyVAL.node = &ast.ExprBinaryEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2272
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2281
		{
			yyVAL.node = &ast.ExprBinarySmaller{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2290
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2299
		{
			yyVAL.node = &ast.ExprBinaryGreater{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2308
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2317
		{
			yyVAL.node = &ast.ExprBinarySpaceship{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2326
		{
			yyVAL.node = &ast.ExprInstanceOf{
				Position:      yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Expr:          yyDollar[1].node,
				InstanceOfTkn: yyDollar[2].token,
				Class:         yyDollar[3].node,
			}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2335
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2344
		{
			yyVAL.node = yyDollar[1].node
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2348
		{
			yyVAL.node = yyDollar[1].node
		}
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:2352
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[5].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				IfTrue:      yyDollar[3].node,
				ColonTkn:    yyDollar[4].token,
				IfFalse:     yyDollar[5].node,
			}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2363
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				ColonTkn:    yyDollar[3].token,
				IfFalse:     yyDollar[4].node,
			}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2373
		{
			yyVAL.node = &ast.ExprBinaryCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2382
		{
			yyVAL.node = yyDollar[1].node
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2386
		{
			yyVAL.node = &ast.ExprCastInt{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2394
		{
			yyVAL.node = &ast.ExprCastDouble{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2402
		{
			yyVAL.node = &ast.ExprCastString{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2410
		{
			yyVAL.node = &ast.ExprCastArray{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2418
		{
			yyVAL.node = &ast.ExprCastObject{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2426
		{
			yyVAL.node = &ast.ExprCastBool{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2434
		{
			yyVAL.node = &ast.ExprCastUnset{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2442
		{
			exit := &ast.ExprExit{
				ExitTkn: yyDollar[1].token,
			}

			if yyDollar[2].node == nil {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token)
			} else {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				exit.OpenParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).OpenParenthesisTkn
				exit.Expr = yyDollar[2].node.(*ast.ExprBrackets).Expr
				exit.CloseParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).CloseParenthesisTkn
			}

			yyVAL.node = exit
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2459
		{
			yyVAL.node = &ast.ExprErrorSuppress{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AtTkn:    yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2467
		{
			yyVAL.node = yyDollar[1].node
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2471
		{
			yyVAL.node = &ast.ExprShellExec{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBacktickTkn:  yyDollar[1].token,
				Parts:            yyDollar[2].list,
				CloseBacktickTkn: yyDollar[3].token,
			}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2480
		{
			yyVAL.node = &ast.ExprPrint{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PrintTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2488
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				YieldTkn: yyDollar[1].token,
			}
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2495
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldTkn: yyDollar[1].token,
				Val:      yyDollar[2].node,
			}
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2503
		{
			yyVAL.node = &ast.ExprYield{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				YieldTkn:       yyDollar[1].token,
				Key:            yyDollar[2].node,
				DoubleArrowTkn: yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2513
		{
			yyVAL.node = &ast.ExprYieldFrom{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldFromTkn: yyDollar[1].token,
				Expr:         yyDollar[2].node,
			}
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2521
		{
			yyVAL.node = yylex.(*Parser).builder.NewThrowExpr(yyDollar[1].token, yyDollar[2].node)
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2525
		{
			yyVAL.node = yyDollar[1].node
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2529
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			}

			yyVAL.node = yyDollar[2].node
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2544
		{
			yyVAL.node = yyDollar[1].node
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2546
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[2].node)
				n.AttrGroups = yyDollar[1].list
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[2].node)
				n.AttrGroups = yyDollar[1].list
			}

			yyVAL.node = yyDollar[2].node
		}
	case 438:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:2562
		{
			closure := yyDollar[7].node.(*ast.ExprClosure)

			closure.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token)
			closure.FunctionTkn = yyDollar[1].token
			closure.AmpersandTkn = yyDollar[2].token
			closure.OpenParenthesisTkn = yyDollar[4].token
			closure.Params = yyDollar[5].node.(*ParserSeparatedList).Items
			closure.SeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			closure.CloseParenthesisTkn = yyDollar[6].token
			closure.ColonTkn = yyDollar[8].node.(*ReturnType).ColonTkn
			closure.ReturnType = yyDollar[8].node.(*ReturnType).Type
			closure.OpenCurlyBracketTkn = yyDollar[9].token
			closure.Stmts = yyDollar[10].list
			closure.CloseCurlyBracketTkn = yyDollar[11].token

			yyVAL.node = closure
		}
	case 439:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:2581
		{
			yyVAL.node = &ast.ExprArrowFunction{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node),
				FnTkn:               yyDollar[1].token,
				AmpersandTkn:        yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Params:              yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[6].node.(*ReturnType).Type,
				DoubleArrowTkn:      yyDollar[8].token,
				Expr:                yyDollar[9].node,
			}
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2603
		{
			yyVAL.token = nil
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2604
		{
			yyVAL.token = yyDollar[1].token
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2609
		{
			yyVAL.node = &ast.ExprClosure{}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2611
		{
			yyVAL.node = &ast.ExprClosure{
				UseTkn:                 yyDollar[1].token,
				UseOpenParenthesisTkn:  yyDollar[2].token,
				Uses:                   yyDollar[3].node.(*ParserSeparatedList).Items,
				UseSeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				UseCloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2623
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2627
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2628
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2633
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2647
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				AmpersandTkn: yyDollar[1].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						IdentifierTkn: yyDollar[2].token,
						Value:         yyDollar[2].token.Value,
					},
				},
			}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2665
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				EllipsisTkn:         yyDollar[2].node.(*ArgumentList).EllipsisTkn,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2677
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				EllipsisTkn:         yyDollar[4].node.(*ArgumentList).EllipsisTkn,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2699
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				EllipsisTkn:         yyDollar[2].node.(*ArgumentList).EllipsisTkn,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2713
		{
			yyVAL.node = yyDollar[1].node
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2714
		{
			yyVAL.node = yyDollar[1].node
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2718
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2719
		{
			yyVAL.node = yyDollar[1].node
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2723
		{
			yyVAL.node = yyDollar[1].node
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2724
		{
			yyVAL.node = yyDollar[1].node
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2725
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2729
		{
			yyVAL.node = nil
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2730
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2735
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2739
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
			}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2749
		{
			yyVAL.list = yyDollar[1].list
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2755
		{
			yyVAL.node = nil
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2756
		{
			yyVAL.node = yyDollar[1].node
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2761
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ArrayTkn:        yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2772
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2782
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2790
		{
			yyVAL.node = &ast.ScalarEncapsed{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenQuoteTkn:  yyDollar[1].token,
				Parts:         yyDollar[2].list,
				CloseQuoteTkn: yyDollar[3].token,
			}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2802
		{
			yyVAL.node = &ast.ScalarLnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2810
		{
			yyVAL.node = &ast.ScalarDnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2818
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:       yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn: yyDollar[1].token,
				Parts: []ast.Vertex{
					&ast.ScalarEncapsedStringPart{
						Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						EncapsedStrTkn: yyDollar[2].token,
						Value:          yyDollar[2].token.Value,
					},
				},
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2833
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenHeredocTkn:  yyDollar[1].token,
				CloseHeredocTkn: yyDollar[2].token,
			}
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2841
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn:  yyDollar[1].token,
				Parts:           yyDollar[2].list,
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2849
		{
			yyVAL.node = yyDollar[1].node
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2850
		{
			yyVAL.node = yyDollar[1].node
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2851
		{
			yyVAL.node = yyDollar[1].node
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2856
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2871
		{
			yyVAL.node = yylex.(*Parser).builder.NewConstFetch(yyDollar[1].node)
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2872
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2873
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2874
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2875
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2876
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2877
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2878
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2879
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2883
		{
			yyVAL.node = yyDollar[1].node
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2884
		{
			yyVAL.node = yyDollar[1].node
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2888
		{
			yyVAL.node = nil
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2889
		{
			yyVAL.node = yyDollar[1].node
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2893
		{
			yyVAL.node = yyDollar[1].node
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2894
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2895
		{
			yyVAL.node = yyDollar[1].node
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2896
		{
			yyVAL.node = yyDollar[1].node
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2900
		{
			yyVAL.node = yyDollar[1].node
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2901
		{
			yyVAL.node = yyDollar[1].node
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2905
		{
			yyVAL.node = yyDollar[1].node
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2906
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2907
		{
			yyVAL.node = yyDollar[1].node
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2912
		{
			yyVAL.node = yyDollar[1].node
		}
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2914
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2924
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2936
		{
			yyVAL.node = yylex.(*Parser).builder.NewMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2938
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafeMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2940
		{
			yyVAL.node = yyDollar[1].node
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2945
		{
			yyVAL.node = yyDollar[1].node
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2947
		{
			yyVAL.node = yyDollar[1].node
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2949
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2951
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2956
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2967
		{
			yyVAL.node = &ast.ExprVariable{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				DollarTkn:            yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Name:                 yyDollar[3].node,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2977
		{
			yyVAL.node = &ast.ExprVariable{
				Position:  yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DollarTkn: yyDollar[1].token,
				Name:      yyDollar[2].node,
			}
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2988
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3000
		{
			yyVAL.node = yyDollar[1].node
		}
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3004
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3014
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3026
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3030
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3034
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3043
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3054
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3055
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3056
		{
			yyVAL.node = yyDollar[1].node
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3060
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3061
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3062
		{
			yyVAL.node = yyDollar[1].node
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3067
		{
			pairList := yyDollar[1].node.(*ParserSeparatedList)
			fistPair := pairList.Items[0].(*ast.ExprArrayItem)

			if fistPair.Key == nil && fistPair.Val == nil && len(pairList.Items) == 1 {
				pairList.Items = nil
			}

			yyVAL.node = yyDollar[1].node
		}
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3080
		{
			yyVAL.node = &ast.ExprArrayItem{}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3081
		{
			yyVAL.node = yyDollar[1].node
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3086
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3088
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3093
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val:            yyDollar[3].node,
			}
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3102
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Val:      yyDollar[1].node,
			}
		}
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3109
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				AmpersandTkn:   yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3119
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Val:          yyDollar[2].node,
			}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3127
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:    yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				EllipsisTkn: yyDollar[1].token,
				Val:         yyDollar[2].node,
			}
		}
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:3135
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[3].token, yyDollar[6].token),
					ListTkn:         yyDollar[3].token,
					OpenBracketTkn:  yyDollar[4].token,
					Items:           yyDollar[5].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[6].token,
				},
			}
		}
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3151
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
			}
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3168
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3172
		{
			yyVAL.list = append(
				yyDollar[1].list,
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					EncapsedStrTkn: yyDollar[2].token,
					Value:          yyDollar[2].token.Value,
				},
			)
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3183
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3187
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
				yyDollar[2].node,
			}
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3201
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3212
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3229
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3233
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3237
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name:                      yyDollar[2].node,
				CloseCurlyBracketTkn:      yyDollar[3].token,
			}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3246
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 551:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:3259
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenSquareBracketTkn:  yyDollar[3].token,
				Dim:                   yyDollar[4].node,
				CloseSquareBracketTkn: yyDollar[5].token,
				CloseCurlyBracketTkn:  yyDollar[6].token,
			}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3275
		{
			yyVAL.node = &ast.ScalarEncapsedStringBrackets{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Var:                  yyDollar[2].node,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3287
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3295
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(string(yyDollar[1].token.Value)); err == nil {
				yyVAL.node = &ast.ScalarLnumber{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					NumberTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					StringTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3312
		{
			_, err := strconv.Atoi(string(yyDollar[2].token.Value))
			isInt := err == nil

			if isInt {
				yyVAL.node = &ast.ExprUnaryMinus{
					Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn: yyDollar[1].token,
					Expr: &ast.ScalarLnumber{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						NumberTkn: yyDollar[2].token,
						Value:     yyDollar[2].token.Value,
					},
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn:  yyDollar[1].token,
					StringTkn: yyDollar[2].token,
					Value:     append([]byte("-"), yyDollar[2].token.Value...),
				}
			}
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3336
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:3350
		{
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[4].token)
			}

			yyVAL.node = &ast.ExprIsset{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				IssetTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Vars:                yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
			}
		}
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3365
		{
			yyVAL.node = &ast.ExprEmpty{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EmptyTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3375
		{
			yyVAL.node = &ast.ExprInclude{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3383
		{
			yyVAL.node = &ast.ExprIncludeOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3391
		{
			yyVAL.node = &ast.ExprEval{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EvalTkn:             yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3401
		{
			yyVAL.node = &ast.ExprRequire{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3409
		{
			yyVAL.node = &ast.ExprRequireOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3419
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3420
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3424
		{
			yyVAL.node = yyDollar[1].node
		}
	}
	goto yystack /* stack new state and value */
}
