// Code generated by goyacc -o internal/php8/php8.go internal/php8/php8.y. DO NOT EDIT.

// line internal/php8/php8.y:1

package php8

import __yyfmt__ "fmt"

// line internal/php8/php8.y:3

import (
	"strconv"

	"github.com/VKCOM/php-parser/pkg/ast"
	"github.com/VKCOM/php-parser/pkg/token"
)

// line internal/php8/php8.y:13
type yySymType struct {
	yys   int
	node  ast.Vertex
	token *token.Token
	list  []ast.Vertex
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_FN = 57380
const T_CONST = 57381
const T_RETURN = 57382
const T_TRY = 57383
const T_CATCH = 57384
const T_FINALLY = 57385
const T_THROW = 57386
const T_USE = 57387
const T_INSTEADOF = 57388
const T_GLOBAL = 57389
const T_VAR = 57390
const T_UNSET = 57391
const T_ISSET = 57392
const T_EMPTY = 57393
const T_HALT_COMPILER = 57394
const T_CLASS = 57395
const T_TRAIT = 57396
const T_INTERFACE = 57397
const T_EXTENDS = 57398
const T_IMPLEMENTS = 57399
const T_OBJECT_OPERATOR = 57400
const T_DOUBLE_ARROW = 57401
const T_LIST = 57402
const T_ARRAY = 57403
const T_CALLABLE = 57404
const T_CLASS_C = 57405
const T_TRAIT_C = 57406
const T_METHOD_C = 57407
const T_FUNC_C = 57408
const T_LINE = 57409
const T_FILE = 57410
const T_COMMENT = 57411
const T_DOC_COMMENT = 57412
const T_OPEN_TAG = 57413
const T_OPEN_TAG_WITH_ECHO = 57414
const T_CLOSE_TAG = 57415
const T_WHITESPACE = 57416
const T_START_HEREDOC = 57417
const T_END_HEREDOC = 57418
const T_DOLLAR_OPEN_CURLY_BRACES = 57419
const T_CURLY_OPEN = 57420
const T_PAAMAYIM_NEKUDOTAYIM = 57421
const T_NAMESPACE = 57422
const T_NS_C = 57423
const T_DIR = 57424
const T_NS_SEPARATOR = 57425
const T_ELLIPSIS = 57426
const T_EVAL = 57427
const T_REQUIRE = 57428
const T_REQUIRE_ONCE = 57429
const T_LOGICAL_OR = 57430
const T_LOGICAL_XOR = 57431
const T_LOGICAL_AND = 57432
const T_INSTANCEOF = 57433
const T_NEW = 57434
const T_CLONE = 57435
const T_ELSEIF = 57436
const T_ELSE = 57437
const T_ENDIF = 57438
const T_PRINT = 57439
const T_YIELD = 57440
const T_STATIC = 57441
const T_ABSTRACT = 57442
const T_FINAL = 57443
const T_PRIVATE = 57444
const T_PROTECTED = 57445
const T_PUBLIC = 57446
const T_INC = 57447
const T_DEC = 57448
const T_YIELD_FROM = 57449
const T_INT_CAST = 57450
const T_DOUBLE_CAST = 57451
const T_STRING_CAST = 57452
const T_ARRAY_CAST = 57453
const T_OBJECT_CAST = 57454
const T_BOOL_CAST = 57455
const T_UNSET_CAST = 57456
const T_COALESCE = 57457
const T_SPACESHIP = 57458
const T_NOELSE = 57459
const T_PLUS_EQUAL = 57460
const T_MINUS_EQUAL = 57461
const T_MUL_EQUAL = 57462
const T_POW_EQUAL = 57463
const T_DIV_EQUAL = 57464
const T_CONCAT_EQUAL = 57465
const T_MOD_EQUAL = 57466
const T_AND_EQUAL = 57467
const T_OR_EQUAL = 57468
const T_XOR_EQUAL = 57469
const T_SL_EQUAL = 57470
const T_SR_EQUAL = 57471
const T_COALESCE_EQUAL = 57472
const T_BOOLEAN_OR = 57473
const T_BOOLEAN_AND = 57474
const T_POW = 57475
const T_SL = 57476
const T_SR = 57477
const T_IS_IDENTICAL = 57478
const T_IS_NOT_IDENTICAL = 57479
const T_IS_EQUAL = 57480
const T_IS_NOT_EQUAL = 57481
const T_IS_SMALLER_OR_EQUAL = 57482
const T_IS_GREATER_OR_EQUAL = 57483
const T_NULLSAFE_OBJECT_OPERATOR = 57484
const T_MATCH = 57485
const T_ATTRIBUTE = 57486
const T_NAME_RELATIVE = 57487
const T_NAME_QUALIFIED = 57488
const T_NAME_FULLY_QUALIFIED = 57489

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_FN",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_COALESCE_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"T_NULLSAFE_OBJECT_OPERATOR",
	"T_MATCH",
	"T_ATTRIBUTE",
	"T_NAME_RELATIVE",
	"T_NAME_QUALIFIED",
	"T_NAME_FULLY_QUALIFIED",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

// line internal/php8/php8.y:3423

// line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 42,
	58, 479,
	79, 479,
	142, 479,
	150, 479,
	156, 479,
	-2, 475,
	-1, 46,
	154, 485,
	-2, 494,
	-1, 82,
	79, 440,
	-2, 483,
	-1, 83,
	58, 484,
	142, 484,
	150, 484,
	156, 484,
	-2, 464,
	-1, 96,
	58, 481,
	79, 481,
	142, 481,
	150, 481,
	154, 487,
	156, 481,
	-2, 462,
	-1, 97,
	58, 482,
	79, 482,
	142, 482,
	150, 482,
	156, 482,
	-2, 463,
	-1, 101,
	79, 442,
	-2, 466,
	-1, 215,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 322,
	58, 479,
	79, 479,
	142, 479,
	150, 479,
	156, 479,
	-2, 362,
	-1, 325,
	154, 487,
	-2, 481,
	-1, 329,
	58, 479,
	79, 479,
	142, 479,
	150, 479,
	156, 479,
	-2, 364,
	-1, 392,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 445,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 386,
	-1, 446,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 387,
	-1, 447,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 388,
	-1, 448,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 389,
	-1, 449,
	140, 0,
	141, 0,
	173, 0,
	174, 0,
	-2, 390,
	-1, 450,
	140, 0,
	141, 0,
	173, 0,
	174, 0,
	-2, 391,
	-1, 451,
	140, 0,
	141, 0,
	173, 0,
	174, 0,
	-2, 392,
	-1, 452,
	140, 0,
	141, 0,
	173, 0,
	174, 0,
	-2, 393,
	-1, 453,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 394,
	-1, 460,
	155, 184,
	166, 184,
	-2, 479,
	-1, 463,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 504,
	155, 523,
	157, 523,
	166, 523,
	-2, 479,
	-1, 509,
	58, 480,
	79, 480,
	142, 480,
	150, 480,
	154, 486,
	156, 480,
	-2, 396,
	-1, 527,
	154, 511,
	-2, 501,
	-1, 530,
	154, 78,
	-2, 80,
	-1, 531,
	154, 79,
	-2, 81,
	-1, 557,
	153, 80,
	-2, 96,
	-1, 561,
	153, 13,
	-2, 446,
	-1, 563,
	153, 46,
	-2, 415,
	-1, 565,
	153, 72,
	-2, 441,
	-1, 566,
	153, 11,
	-2, 107,
	-1, 575,
	154, 427,
	-2, 42,
	-1, 577,
	153, 61,
	-2, 474,
	-1, 578,
	153, 62,
	-2, 470,
	-1, 579,
	153, 63,
	-2, 472,
	-1, 580,
	153, 64,
	-2, 471,
	-1, 581,
	153, 65,
	-2, 467,
	-1, 582,
	153, 66,
	-2, 468,
	-1, 583,
	153, 67,
	-2, 469,
	-1, 584,
	153, 68,
	-2, 473,
	-1, 585,
	154, 427,
	-2, 69,
	-1, 588,
	155, 236,
	-2, 107,
	-1, 590,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 617,
	155, 236,
	-2, 107,
	-1, 618,
	155, 236,
	-2, 107,
	-1, 626,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 641,
	154, 486,
	-2, 480,
	-1, 706,
	155, 206,
	-2, 479,
	-1, 716,
	155, 236,
	-2, 107,
	-1, 731,
	155, 522,
	157, 522,
	166, 522,
	-2, 479,
	-1, 749,
	155, 83,
	-2, 107,
	-1, 763,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 773,
	155, 207,
	-2, 479,
	-1, 776,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 796,
	53, 107,
	54, 107,
	55, 107,
	94, 231,
	95, 231,
	96, 231,
	100, 107,
	101, 107,
	-2, 0,
	-1, 838,
	155, 206,
	-2, 479,
	-1, 840,
	155, 209,
	-2, 454,
	-1, 852,
	37, 306,
	39, 306,
	-2, 303,
	-1, 864,
	53, 107,
	54, 107,
	55, 107,
	94, 232,
	95, 232,
	96, 232,
	100, 107,
	101, 107,
	-2, 0,
	-1, 899,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 903,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 935,
	31, 222,
	32, 222,
	33, 222,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	151, 222,
	-2, 0,
	-1, 943,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 970,
	79, 96,
	-2, 78,
	-1, 977,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 978,
	31, 221,
	32, 221,
	33, 221,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	151, 221,
	-2, 0,
	-1, 983,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 988,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 1014,
	155, 236,
	-2, 107,
	-1, 1022,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
	-1, 1033,
	53, 107,
	54, 107,
	55, 107,
	100, 107,
	101, 107,
	-2, 0,
}

const yyPrivate = 57344

const yyLast = 9249

var yyAct = [...]int{

	29, 39, 947, 808, 854, 963, 466, 215, 679, 721,
	126, 956, 878, 953, 834, 893, 811, 957, 803, 218,
	719, 688, 38, 223, 223, 223, 705, 687, 237, 681,
	881, 784, 959, 553, 544, 313, 766, 414, 459, 717,
	532, 495, 315, 357, 124, 233, 101, 213, 96, 236,
	103, 317, 321, 388, 97, 330, 331, 332, 333, 334,
	283, 205, 229, 335, 336, 337, 338, 339, 340, 341,
	409, 344, 99, 9, 352, 353, 354, 355, 556, 2,
	523, 408, 77, 204, 8, 212, 366, 222, 361, 372,
	373, 274, 375, 376, 407, 406, 533, 7, 6, 234,
	44, 325, 325, 98, 368, 265, 1004, 326, 326, 232,
	690, 226, 227, 995, 348, 992, 116, 202, 729, 635,
	917, 425, 916, 208, 401, 359, 496, 993, 116, 358,
	989, 359, 926, 924, 887, 363, 792, 615, 885, 276,
	594, 994, 278, 426, 990, 349, 265, 251, 400, 423,
	421, 399, 393, 116, 394, 405, 792, 427, 5, 986,
	875, 873, 870, 424, 422, 400, 394, 821, 349, 759,
	749, 264, 675, 670, 116, 217, 613, 604, 522, 502,
	645, 116, 116, 646, 250, 252, 253, 349, 251, 254,
	255, 256, 257, 258, 259, 261, 263, 275, 382, 384,
	884, 840, 392, 738, 734, 657, 642, 652, 629, 501,
	868, 1014, 653, 1028, 245, 249, 248, 411, 984, 980,
	901, 416, 417, 900, 246, 250, 252, 253, 260, 262,
	247, 891, 865, 847, 782, 38, 781, 771, 747, 744,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 497, 455, 457, 742,
	461, 941, 733, 413, 703, 692, 678, 643, 634, 463,
	389, 100, 908, 843, 516, 895, 894, 396, 774, 732,
	716, 380, 477, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 100, 232, 492, 223,
	494, 537, 359, 317, 208, 385, 363, 325, 265, 276,
	505, 395, 278, 326, 809, 507, 310, 100, 949, 317,
	647, 467, 539, 700, 374, 371, 701, 1003, 370, 369,
	343, 312, 383, 471, 223, 618, 617, 602, 500, 600,
	588, 518, 506, 499, 454, 474, 462, 472, 307, 270,
	251, 254, 255, 269, 508, 268, 540, 325, 517, 221,
	542, 545, 546, 326, 220, 547, 83, 216, 528, 120,
	42, 550, 515, 1032, 554, 1031, 317, 249, 248, 829,
	830, 794, 677, 531, 476, 538, 493, 250, 252, 253,
	325, 273, 599, 536, 829, 830, 326, 790, 1021, 535,
	311, 391, 38, 390, 225, 1000, 558, 999, 309, 349,
	349, 586, 979, 225, 308, 116, 608, 936, 237, 323,
	323, 510, 902, 322, 329, 790, 897, 890, 888, 526,
	265, 826, 822, 473, 795, 770, 769, 265, 598, 767,
	349, 765, 349, 762, 603, 524, 592, 611, 589, 349,
	349, 512, 513, 9, 475, 816, 817, 464, 420, 276,
	607, 590, 419, 624, 8, 625, 418, 609, 593, 627,
	866, 819, 251, 38, 626, 606, 757, 7, 6, 251,
	254, 255, 512, 654, 513, 225, 790, 234, 632, 210,
	1006, 513, 512, 317, 637, 208, 78, 317, 896, 249,
	248, 950, 327, 971, 944, 790, 249, 248, 906, 250,
	252, 253, 655, 828, 867, 848, 250, 252, 253, 225,
	659, 247, 842, 741, 78, 720, 223, 662, 225, 612,
	511, 951, 640, 684, 621, 636, 816, 817, 5, 119,
	117, 118, 596, 271, 210, 78, 676, 78, 119, 117,
	118, 321, 814, 352, 353, 355, 656, 365, 366, 359,
	265, 372, 373, 358, 375, 376, 210, 251, 100, 663,
	664, 206, 667, 207, 882, 928, 368, 347, 648, 534,
	682, 360, 631, 116, 923, 78, 633, 921, 514, 753,
	752, 751, 862, 696, 416, 698, 691, 871, 368, 772,
	38, 702, 251, 359, 78, 219, 115, 363, 327, 682,
	682, 787, 658, 661, 669, 785, 714, 715, 210, 413,
	119, 117, 118, 674, 846, 211, 730, 368, 368, 284,
	285, 697, 718, 879, 623, 323, 38, 1001, 232, 460,
	280, 281, 704, 541, 736, 206, 116, 207, 350, 351,
	468, 9, 325, 325, 119, 117, 118, 1002, 326, 326,
	722, 545, 8, 119, 117, 118, 554, 398, 746, 277,
	115, 219, 115, 379, 761, 7, 6, 325, 286, 287,
	211, 209, 398, 326, 398, 323, 284, 285, 225, 504,
	780, 779, 386, 763, 412, 743, 756, 740, 558, 745,
	317, 760, 211, 209, 288, 290, 289, 913, 682, 912,
	776, 789, 78, 735, 689, 783, 116, 116, 323, 587,
	797, 595, 520, 317, 824, 796, 368, 203, 768, 368,
	650, 791, 807, 649, 620, 775, 5, 116, 397, 816,
	817, 682, 514, 619, 116, 1, 325, 694, 225, 514,
	116, 748, 326, 79, 211, 786, 416, 758, 798, 368,
	214, 711, 800, 597, 225, 317, 898, 829, 830, 810,
	470, 813, 469, 38, 726, 844, 78, 823, 78, 230,
	548, 350, 351, 789, 116, 849, 38, 818, 465, 837,
	861, 279, 864, 827, 831, 272, 833, 282, 852, 116,
	839, 368, 350, 351, 377, 876, 38, 850, 549, 350,
	351, 325, 832, 829, 830, 816, 817, 326, 851, 962,
	892, 345, 722, 119, 117, 118, 820, 722, 356, 863,
	750, 116, 778, 889, 899, 886, 387, 327, 367, 907,
	903, 909, 713, 802, 801, 60, 818, 914, 806, 350,
	351, 818, 804, 882, 381, 845, 622, 911, 458, 910,
	693, 807, 920, 378, 350, 351, 922, 931, 1030, 793,
	699, 813, 915, 869, 38, 815, 872, 874, 918, 919,
	905, 116, 925, 119, 117, 118, 346, 818, 812, 880,
	877, 935, 365, 316, 41, 121, 350, 351, 934, 119,
	117, 118, 789, 100, 943, 938, 929, 685, 930, 38,
	789, 686, 972, 38, 973, 754, 818, 835, 755, 13,
	368, 40, 818, 955, 818, 969, 543, 974, 368, 975,
	946, 977, 978, 858, 859, 860, 857, 856, 855, 945,
	17, 952, 983, 552, 16, 38, 350, 351, 988, 904,
	235, 991, 644, 38, 968, 364, 47, 960, 998, 46,
	102, 818, 48, 818, 82, 525, 80, 942, 996, 71,
	969, 948, 342, 314, 954, 61, 81, 362, 981, 1008,
	323, 323, 59, 1011, 460, 706, 1013, 38, 38, 967,
	976, 966, 965, 38, 1010, 1020, 1012, 1018, 38, 968,
	964, 1015, 788, 1017, 1022, 323, 682, 853, 1023, 731,
	1024, 1019, 987, 1025, 231, 228, 43, 985, 777, 367,
	710, 680, 1029, 415, 368, 402, 1026, 3, 940, 927,
	1033, 883, 38, 0, 0, 0, 0, 932, 722, 241,
	243, 242, 265, 38, 0, 0, 835, 0, 0, 948,
	0, 0, 0, 954, 0, 0, 0, 0, 858, 859,
	860, 857, 856, 855, 498, 498, 267, 264, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 773, 0,
	0, 0, 239, 240, 251, 254, 255, 256, 257, 258,
	259, 261, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 895, 894, 0, 0, 0, 0, 266,
	245, 249, 248, 0, 527, 0, 0, 0, 244, 0,
	246, 250, 252, 253, 260, 262, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 570, 571, 561, 145, 93,
	94, 557, 0, 116, 0, 0, 230, 0, 0, 113,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 179, 180, 181, 182, 183, 171, 172, 575, 585,
	174, 175, 160, 161, 162, 564, 164, 165, 166, 167,
	168, 568, 569, 0, 191, 189, 190, 186, 187, 0,
	0, 559, 576, 185, 577, 578, 580, 579, 581, 582,
	0, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 188, 584, 583, 0, 555, 572, 573, 574, 138,
	139, 140, 141, 566, 560, 146, 147, 148, 562, 563,
	565, 128, 129, 130, 131, 132, 52, 53, 75, 62,
	63, 64, 65, 66, 67, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 660, 0,
	0, 498, 498, 665, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 567, 78, 119, 117, 118, 114,
	72, 0, 0, 0, 0, 58, 551, 50, 0, 0,
	367, 55, 54, 56, 57, 70, 100, 570, 571, 561,
	145, 93, 94, 557, 0, 116, 0, 0, 0, 0,
	0, 113, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 179, 180, 181, 182, 183, 171, 172,
	575, 585, 174, 175, 160, 161, 162, 564, 164, 165,
	166, 167, 168, 568, 569, 0, 191, 189, 190, 186,
	187, 0, 0, 559, 576, 185, 577, 578, 580, 579,
	581, 582, 0, 0, 0, 0, 0, 0, 95, 0,
	0, 0, 0, 188, 584, 583, 0, 555, 572, 573,
	574, 138, 139, 140, 141, 566, 560, 146, 147, 148,
	562, 563, 565, 128, 129, 130, 131, 132, 52, 53,
	75, 62, 63, 64, 65, 66, 67, 68, 0, 305,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 299,
	300, 301, 302, 303, 304, 0, 567, 78, 119, 117,
	118, 114, 72, 0, 0, 0, 0, 58, 0, 50,
	0, 0, 0, 55, 54, 56, 57, 70, 100, 4,
	0, 88, 89, 69, 45, 93, 94, 36, 0, 116,
	0, 28, 291, 0, 0, 113, 27, 19, 18, 0,
	20, 0, 31, 0, 32, 0, 0, 21, 0, 0,
	0, 22, 23, 35, 37, 115, 14, 24, 34, 0,
	0, 76, 12, 265, 25, 0, 30, 86, 87, 10,
	0, 0, 0, 0, 0, 0, 0, 49, 112, 0,
	111, 107, 108, 109, 104, 105, 0, 0, 0, 0,
	0, 0, 95, 0, 0, 0, 0, 11, 110, 106,
	0, 0, 90, 91, 92, 251, 254, 255, 0, 84,
	51, 0, 261, 263, 73, 74, 26, 0, 0, 0,
	0, 0, 52, 53, 75, 62, 63, 64, 65, 66,
	67, 68, 249, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 252, 253, 260, 262, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 78, 119, 117, 118, 114, 72, 15, 683, 33,
	0, 58, 0, 50, 0, 0, 0, 55, 54, 56,
	57, 70, 100, 4, 0, 88, 89, 69, 45, 93,
	94, 36, 0, 116, 0, 28, 0, 0, 0, 113,
	27, 19, 18, 0, 20, 0, 31, 0, 32, 0,
	0, 21, 0, 0, 0, 22, 23, 35, 37, 115,
	14, 24, 34, 0, 0, 76, 12, 0, 25, 0,
	30, 86, 87, 10, 0, 0, 0, 0, 0, 0,
	0, 49, 112, 0, 111, 107, 108, 109, 104, 105,
	0, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 11, 110, 106, 0, 0, 90, 91, 92, 0,
	0, 0, 0, 84, 51, 0, 0, 0, 73, 74,
	26, 0, 0, 0, 0, 0, 52, 53, 75, 62,
	63, 64, 65, 66, 67, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 78, 119, 117, 118, 114,
	72, 15, 591, 33, 0, 58, 0, 50, 0, 0,
	0, 55, 54, 56, 57, 70, 100, 4, 0, 88,
	89, 69, 45, 93, 94, 36, 0, 116, 0, 28,
	0, 0, 0, 113, 27, 19, 18, 0, 20, 0,
	31, 0, 32, 0, 0, 21, 0, 0, 0, 22,
	23, 35, 37, 115, 14, 24, 34, 0, 0, 76,
	12, 0, 25, 0, 30, 86, 87, 10, 0, 0,
	0, 0, 0, 0, 0, 49, 112, 0, 111, 107,
	108, 109, 104, 105, 0, 0, 0, 0, 0, 0,
	95, 0, 0, 0, 0, 11, 110, 106, 0, 0,
	90, 91, 92, 0, 0, 0, 0, 84, 51, 0,
	0, 0, 73, 74, 26, 0, 0, 0, 0, 0,
	52, 53, 75, 62, 63, 64, 65, 66, 67, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 78,
	119, 117, 118, 114, 72, 15, 0, 33, 0, 58,
	0, 50, 0, 0, 0, 55, 54, 56, 57, 70,
	100, 133, 134, 144, 145, 0, 0, 530, 0, 116,
	0, 0, 0, 0, 0, 0, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 179, 180, 181,
	182, 183, 171, 172, 173, 200, 174, 175, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 0,
	191, 189, 190, 186, 187, 0, 0, 178, 184, 185,
	192, 193, 195, 194, 196, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 199, 198,
	0, 0, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 146, 147, 148, 176, 177, 127, 128, 129, 130,
	131, 132, 0, 0, 0, 0, 0, 0, 0, 0,
	404, 0, 88, 89, 69, 45, 93, 94, 36, 0,
	116, 0, 28, 0, 0, 0, 113, 27, 19, 18,
	0, 20, 0, 31, 0, 32, 0, 0, 21, 0,
	201, 0, 22, 23, 35, 37, 115, 529, 24, 34,
	0, 0, 76, 0, 0, 25, 0, 30, 86, 87,
	410, 0, 100, 0, 0, 0, 0, 0, 49, 112,
	0, 111, 107, 108, 109, 104, 105, 0, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 110,
	106, 0, 0, 90, 91, 92, 0, 0, 0, 0,
	84, 51, 0, 0, 0, 73, 74, 26, 0, 0,
	0, 0, 0, 52, 53, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 78, 119, 117, 118, 114, 72, 15, 1034,
	33, 0, 58, 0, 50, 0, 0, 0, 55, 54,
	56, 57, 70, 100, 404, 0, 88, 89, 69, 45,
	93, 94, 36, 0, 116, 0, 28, 0, 0, 0,
	113, 27, 19, 18, 0, 20, 0, 31, 0, 32,
	0, 0, 21, 0, 0, 0, 22, 23, 35, 37,
	115, 0, 24, 34, 0, 0, 76, 0, 0, 25,
	0, 30, 86, 87, 410, 0, 0, 0, 0, 0,
	0, 0, 49, 112, 0, 111, 107, 108, 109, 104,
	105, 0, 0, 0, 0, 0, 0, 95, 0, 0,
	0, 0, 0, 110, 106, 0, 0, 90, 91, 92,
	0, 0, 0, 0, 84, 51, 0, 0, 0, 73,
	74, 26, 0, 0, 0, 0, 0, 52, 53, 75,
	62, 63, 64, 65, 66, 67, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 78, 119, 117, 118,
	114, 72, 15, 1027, 33, 0, 58, 0, 50, 0,
	0, 0, 55, 54, 56, 57, 70, 100, 404, 0,
	88, 89, 69, 45, 93, 94, 36, 0, 116, 0,
	28, 0, 0, 0, 113, 27, 19, 18, 0, 20,
	0, 31, 0, 32, 0, 0, 21, 0, 0, 0,
	22, 23, 35, 37, 115, 0, 24, 34, 0, 0,
	76, 0, 0, 25, 0, 30, 86, 87, 410, 0,
	0, 0, 0, 0, 0, 0, 49, 112, 0, 111,
	107, 108, 109, 104, 105, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 110, 106, 0,
	0, 90, 91, 92, 0, 0, 0, 0, 84, 51,
	0, 0, 0, 73, 74, 26, 0, 0, 0, 0,
	0, 52, 53, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	78, 119, 117, 118, 114, 72, 15, 1009, 33, 0,
	58, 0, 50, 0, 0, 0, 55, 54, 56, 57,
	70, 100, 404, 0, 88, 89, 69, 45, 93, 94,
	36, 0, 116, 0, 28, 0, 0, 0, 113, 27,
	19, 18, 0, 20, 0, 31, 0, 32, 0, 0,
	21, 0, 0, 0, 22, 23, 35, 37, 115, 0,
	24, 34, 0, 0, 76, 0, 0, 25, 0, 30,
	86, 87, 410, 0, 0, 0, 0, 0, 0, 0,
	49, 112, 0, 111, 107, 108, 109, 104, 105, 0,
	0, 0, 0, 0, 0, 95, 0, 0, 0, 0,
	0, 110, 106, 0, 0, 90, 91, 92, 0, 0,
	0, 0, 84, 51, 0, 0, 0, 73, 74, 26,
	0, 0, 0, 0, 0, 52, 53, 75, 62, 63,
	64, 65, 66, 67, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 78, 119, 117, 118, 114, 72,
	15, 1007, 33, 0, 58, 0, 50, 0, 0, 0,
	55, 54, 56, 57, 70, 100, 404, 0, 88, 89,
	69, 45, 93, 94, 36, 0, 116, 0, 28, 0,
	0, 0, 113, 27, 19, 18, 0, 20, 1005, 31,
	0, 32, 0, 0, 21, 0, 0, 0, 22, 23,
	35, 37, 115, 0, 24, 34, 0, 0, 76, 0,
	0, 25, 0, 30, 86, 87, 410, 0, 0, 0,
	0, 0, 0, 0, 49, 112, 0, 111, 107, 108,
	109, 104, 105, 0, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 0, 110, 106, 0, 0, 90,
	91, 92, 0, 0, 0, 0, 84, 51, 0, 0,
	0, 73, 74, 26, 0, 0, 0, 0, 0, 52,
	53, 75, 62, 63, 64, 65, 66, 67, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 78, 119,
	117, 118, 114, 72, 15, 0, 33, 0, 58, 0,
	50, 0, 0, 0, 55, 54, 56, 57, 70, 100,
	404, 0, 88, 89, 69, 45, 93, 94, 36, 0,
	116, 0, 28, 0, 0, 0, 113, 27, 19, 18,
	0, 20, 0, 31, 0, 32, 0, 0, 21, 0,
	0, 0, 22, 23, 35, 37, 115, 0, 24, 34,
	0, 0, 76, 0, 0, 25, 0, 30, 86, 87,
	410, 0, 0, 0, 0, 0, 0, 0, 49, 112,
	0, 111, 107, 108, 109, 104, 105, 0, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 110,
	106, 0, 0, 90, 91, 92, 0, 0, 0, 0,
	84, 51, 0, 0, 0, 73, 74, 26, 0, 0,
	0, 0, 0, 52, 53, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 78, 119, 117, 118, 114, 72, 15, 982,
	33, 0, 58, 0, 50, 0, 0, 0, 55, 54,
	56, 57, 70, 100, 404, 0, 88, 89, 69, 45,
	93, 94, 36, 0, 116, 0, 28, 0, 0, 0,
	113, 27, 19, 18, 0, 20, 0, 31, 0, 32,
	0, 0, 21, 0, 0, 0, 22, 23, 35, 37,
	115, 0, 24, 34, 0, 0, 76, 0, 0, 25,
	0, 30, 86, 87, 410, 0, 0, 0, 0, 0,
	0, 0, 49, 112, 0, 111, 107, 108, 109, 104,
	105, 0, 0, 0, 0, 0, 0, 95, 0, 0,
	0, 0, 0, 110, 106, 0, 0, 90, 91, 92,
	0, 0, 0, 0, 84, 51, 0, 0, 0, 73,
	74, 26, 0, 0, 0, 0, 0, 52, 53, 75,
	62, 63, 64, 65, 66, 67, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 78, 119, 117, 118,
	114, 72, 15, 939, 33, 0, 58, 0, 50, 0,
	0, 0, 55, 54, 56, 57, 70, 100, 404, 0,
	88, 89, 69, 45, 93, 94, 36, 0, 116, 0,
	28, 0, 0, 0, 113, 27, 19, 18, 0, 20,
	0, 31, 937, 32, 0, 0, 21, 0, 0, 0,
	22, 23, 35, 37, 115, 0, 24, 34, 0, 0,
	76, 0, 0, 25, 0, 30, 86, 87, 410, 0,
	0, 0, 0, 0, 0, 0, 49, 112, 0, 111,
	107, 108, 109, 104, 105, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 110, 106, 0,
	0, 90, 91, 92, 0, 0, 0, 0, 84, 51,
	0, 0, 0, 73, 74, 26, 0, 0, 0, 0,
	0, 52, 53, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	78, 119, 117, 118, 114, 72, 15, 0, 33, 0,
	58, 0, 50, 0, 0, 0, 55, 54, 56, 57,
	70, 100, 404, 0, 88, 89, 69, 45, 93, 94,
	36, 0, 116, 0, 28, 0, 0, 0, 113, 27,
	19, 18, 0, 20, 0, 31, 0, 32, 841, 0,
	21, 0, 0, 0, 22, 23, 35, 37, 115, 0,
	24, 34, 0, 0, 76, 0, 0, 25, 0, 30,
	86, 87, 410, 0, 0, 0, 0, 0, 0, 0,
	49, 112, 0, 111, 107, 108, 109, 104, 105, 0,
	0, 0, 0, 0, 0, 95, 0, 0, 0, 0,
	0, 110, 106, 0, 0, 90, 91, 92, 0, 0,
	0, 0, 84, 51, 0, 0, 0, 73, 74, 26,
	0, 0, 0, 0, 0, 52, 53, 75, 62, 63,
	64, 65, 66, 67, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 78, 119, 117, 118, 114, 72,
	15, 0, 33, 0, 58, 0, 50, 0, 0, 0,
	55, 54, 56, 57, 70, 100, 404, 0, 88, 89,
	69, 45, 93, 94, 36, 0, 116, 0, 28, 0,
	0, 0, 113, 27, 19, 18, 825, 20, 0, 31,
	0, 32, 0, 0, 21, 0, 0, 0, 22, 23,
	35, 37, 115, 0, 24, 34, 0, 0, 76, 0,
	0, 25, 0, 30, 86, 87, 410, 0, 0, 0,
	0, 0, 0, 0, 49, 112, 0, 111, 107, 108,
	109, 104, 105, 0, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 0, 110, 106, 0, 0, 90,
	91, 92, 0, 0, 0, 0, 84, 51, 0, 0,
	0, 73, 74, 26, 0, 0, 0, 0, 0, 52,
	53, 75, 62, 63, 64, 65, 66, 67, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 78, 119,
	117, 118, 114, 72, 15, 0, 33, 0, 58, 0,
	50, 0, 0, 0, 55, 54, 56, 57, 70, 100,
	404, 0, 88, 89, 69, 45, 93, 94, 36, 0,
	116, 0, 28, 0, 0, 0, 113, 27, 19, 18,
	0, 20, 0, 31, 0, 32, 0, 0, 21, 0,
	0, 0, 22, 23, 35, 37, 115, 0, 24, 34,
	0, 0, 76, 0, 0, 25, 0, 30, 86, 87,
	410, 0, 0, 0, 0, 0, 0, 0, 49, 112,
	0, 111, 107, 108, 109, 104, 105, 0, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 110,
	106, 0, 0, 90, 91, 92, 0, 0, 0, 0,
	84, 51, 0, 0, 725, 73, 74, 26, 0, 0,
	0, 0, 0, 52, 53, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 78, 119, 117, 118, 114, 72, 15, 0,
	33, 0, 58, 0, 50, 0, 0, 0, 55, 54,
	56, 57, 70, 100, 404, 0, 88, 89, 69, 45,
	93, 94, 36, 0, 116, 0, 28, 0, 0, 0,
	113, 27, 19, 18, 0, 20, 0, 31, 0, 32,
	0, 0, 21, 0, 0, 0, 22, 23, 35, 37,
	115, 0, 24, 34, 0, 0, 76, 0, 0, 25,
	0, 30, 86, 87, 410, 0, 0, 0, 0, 0,
	0, 0, 49, 112, 0, 111, 107, 108, 109, 104,
	105, 0, 0, 0, 0, 0, 0, 95, 0, 0,
	0, 0, 0, 110, 106, 0, 0, 90, 91, 92,
	0, 0, 0, 0, 84, 51, 0, 0, 0, 73,
	74, 26, 0, 0, 0, 0, 0, 52, 53, 75,
	62, 63, 64, 65, 66, 67, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 78, 119, 117, 118,
	114, 72, 15, 616, 33, 0, 58, 0, 50, 0,
	0, 0, 55, 54, 56, 57, 70, 100, 404, 0,
	88, 89, 69, 45, 93, 94, 36, 0, 116, 0,
	28, 0, 0, 0, 113, 27, 19, 18, 0, 20,
	0, 31, 0, 32, 0, 0, 21, 0, 0, 0,
	22, 23, 35, 37, 115, 0, 24, 34, 0, 0,
	76, 0, 0, 25, 0, 30, 86, 87, 410, 0,
	0, 0, 0, 0, 0, 0, 49, 112, 0, 111,
	107, 108, 109, 104, 105, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 110, 106, 0,
	0, 90, 91, 92, 0, 0, 0, 0, 84, 51,
	0, 0, 0, 73, 74, 26, 0, 0, 0, 0,
	0, 52, 53, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	78, 119, 117, 118, 114, 72, 15, 403, 33, 0,
	58, 0, 50, 0, 0, 0, 55, 54, 56, 57,
	70, 100, 404, 0, 88, 89, 69, 45, 93, 94,
	36, 0, 116, 0, 28, 0, 0, 0, 113, 27,
	19, 18, 0, 20, 0, 31, 0, 32, 0, 0,
	21, 0, 0, 0, 22, 23, 35, 37, 115, 0,
	24, 34, 0, 0, 76, 0, 0, 25, 0, 30,
	86, 87, 410, 0, 0, 0, 0, 0, 0, 0,
	49, 112, 0, 111, 107, 108, 109, 104, 105, 0,
	0, 0, 0, 0, 0, 95, 0, 0, 0, 0,
	0, 110, 106, 0, 0, 90, 91, 92, 0, 0,
	0, 0, 84, 51, 0, 0, 0, 73, 74, 26,
	0, 0, 0, 0, 0, 52, 53, 75, 62, 63,
	64, 65, 66, 67, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 78, 119, 117, 118, 114, 72,
	15, 0, 33, 0, 58, 0, 50, 0, 0, 0,
	55, 54, 56, 57, 70, 100, 88, 89, 69, 45,
	93, 94, 36, 0, 116, 0, 28, 0, 0, 0,
	113, 27, 19, 18, 0, 20, 0, 31, 0, 32,
	0, 0, 21, 0, 0, 0, 22, 23, 35, 219,
	115, 0, 24, 34, 0, 0, 76, 0, 0, 25,
	0, 30, 86, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 112, 0, 111, 107, 108, 109, 104,
	105, 0, 0, 0, 0, 0, 0, 95, 0, 0,
	0, 0, 0, 110, 106, 0, 0, 90, 91, 92,
	0, 0, 0, 0, 84, 51, 0, 0, 0, 73,
	74, 26, 0, 0, 0, 0, 0, 52, 53, 75,
	62, 63, 64, 65, 66, 67, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 78, 119, 117, 118,
	114, 72, 15, 0, 33, 836, 58, 0, 50, 0,
	0, 0, 55, 54, 56, 57, 70, 100, 88, 89,
	69, 45, 93, 94, 36, 0, 116, 0, 28, 0,
	0, 0, 113, 27, 19, 18, 0, 20, 0, 31,
	0, 32, 0, 0, 21, 0, 0, 0, 22, 23,
	35, 219, 115, 0, 24, 34, 0, 0, 76, 0,
	0, 25, 0, 30, 86, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 112, 0, 111, 107, 108,
	109, 104, 105, 0, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 0, 110, 106, 0, 0, 90,
	91, 92, 0, 0, 0, 0, 84, 51, 0, 0,
	0, 73, 74, 26, 0, 0, 0, 0, 0, 52,
	53, 75, 62, 63, 64, 65, 66, 67, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 78, 119,
	117, 118, 114, 72, 15, 0, 33, 933, 58, 0,
	50, 0, 0, 0, 55, 54, 56, 57, 70, 100,
	88, 89, 69, 45, 93, 94, 36, 0, 116, 0,
	28, 0, 0, 0, 113, 27, 19, 18, 0, 20,
	0, 31, 0, 32, 0, 0, 21, 0, 0, 0,
	22, 23, 35, 219, 115, 0, 24, 34, 0, 0,
	76, 0, 0, 25, 0, 30, 86, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 112, 0, 111,
	107, 108, 109, 104, 105, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 110, 106, 0,
	0, 90, 91, 92, 0, 0, 0, 0, 84, 51,
	0, 0, 0, 73, 74, 26, 0, 0, 0, 0,
	0, 52, 53, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	78, 119, 117, 118, 114, 72, 15, 0, 33, 727,
	58, 0, 50, 0, 0, 0, 55, 54, 56, 57,
	70, 100, 88, 89, 69, 45, 93, 94, 36, 0,
	116, 0, 28, 0, 0, 0, 113, 27, 19, 18,
	0, 20, 0, 31, 0, 32, 0, 0, 21, 0,
	0, 0, 22, 23, 35, 219, 115, 0, 24, 34,
	0, 0, 76, 0, 0, 25, 0, 30, 86, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 112,
	0, 111, 107, 108, 109, 104, 105, 0, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 110,
	106, 0, 0, 90, 91, 92, 0, 0, 0, 0,
	84, 51, 0, 0, 0, 73, 74, 26, 0, 0,
	0, 0, 0, 52, 53, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 78, 119, 117, 118, 114, 72, 15, 0,
	33, 712, 58, 0, 50, 0, 0, 0, 55, 54,
	56, 57, 70, 100, 88, 89, 69, 45, 93, 94,
	36, 0, 116, 0, 28, 0, 0, 0, 113, 27,
	19, 18, 0, 20, 0, 31, 0, 32, 0, 0,
	21, 0, 0, 0, 22, 23, 35, 219, 115, 0,
	24, 34, 0, 0, 76, 0, 0, 25, 0, 30,
	86, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 112, 0, 111, 107, 108, 109, 104, 105, 0,
	0, 0, 0, 0, 0, 95, 0, 0, 0, 0,
	0, 110, 106, 0, 0, 90, 91, 92, 0, 0,
	0, 0, 84, 51, 0, 0, 0, 73, 74, 26,
	0, 0, 0, 0, 0, 52, 53, 75, 62, 63,
	64, 65, 66, 67, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 78, 119, 117, 118, 114, 72,
	15, 0, 33, 695, 58, 0, 50, 0, 0, 0,
	55, 54, 56, 57, 70, 100, 88, 89, 69, 45,
	93, 94, 36, 0, 116, 0, 28, 0, 0, 0,
	113, 27, 19, 18, 0, 20, 0, 31, 0, 32,
	0, 0, 21, 0, 0, 0, 22, 23, 35, 219,
	115, 0, 24, 34, 0, 0, 76, 0, 0, 25,
	0, 30, 86, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 112, 0, 111, 107, 108, 109, 104,
	105, 0, 0, 0, 0, 0, 0, 95, 0, 0,
	0, 0, 0, 110, 106, 0, 0, 90, 91, 92,
	0, 0, 0, 0, 84, 51, 0, 0, 0, 73,
	74, 26, 0, 0, 0, 0, 0, 52, 53, 75,
	62, 63, 64, 65, 66, 67, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 78, 119, 117, 118,
	114, 72, 15, 0, 33, 0, 58, 0, 50, 0,
	0, 0, 55, 54, 56, 57, 70, 100, 133, 134,
	144, 145, 0, 0, 970, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 179, 180, 181, 182, 183, 171,
	172, 173, 200, 174, 175, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 0, 191, 189, 190,
	186, 187, 0, 0, 178, 184, 185, 192, 193, 195,
	194, 196, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 199, 198, 0, 0, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 146, 147,
	148, 176, 177, 127, 128, 129, 130, 131, 132, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 134, 144, 145, 0, 201, 970, 119,
	117, 118, 0, 0, 0, 997, 0, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 179, 180,
	181, 182, 183, 171, 172, 173, 200, 174, 175, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	0, 191, 189, 190, 186, 187, 0, 0, 178, 184,
	185, 192, 193, 195, 194, 196, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 199,
	198, 0, 0, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 146, 147, 148, 176, 177, 127, 128, 129,
	130, 131, 132, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 134, 144, 145,
	0, 201, 123, 119, 117, 118, 0, 0, 0, 961,
	0, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 179, 180, 181, 182, 183, 171, 172, 173,
	200, 174, 175, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 0, 191, 189, 190, 186, 187,
	0, 0, 178, 184, 185, 192, 193, 195, 194, 196,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 199, 198, 0, 0, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 146, 147, 148, 176,
	177, 127, 128, 129, 130, 131, 132, 88, 89, 69,
	0, 93, 94, 225, 0, 116, 0, 0, 0, 0,
	0, 113, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 115, 0, 0, 0, 201, 0, 76, 125, 0,
	0, 0, 122, 86, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 112, 0, 111, 107, 108, 109,
	104, 105, 0, 0, 0, 0, 0, 0, 95, 0,
	0, 0, 0, 0, 110, 106, 0, 319, 90, 91,
	92, 0, 0, 0, 0, 84, 51, 0, 0, 0,
	73, 74, 224, 0, 0, 0, 0, 0, 52, 53,
	75, 62, 63, 64, 65, 66, 67, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 78, 119, 117,
	118, 114, 72, 0, 0, 0, 0, 58, 0, 50,
	0, 0, 318, 55, 54, 56, 57, 70, 100, 88,
	89, 69, 0, 93, 94, 225, 0, 116, 0, 0,
	0, 0, 0, 113, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 805, 0,
	0, 0, 219, 115, 0, 0, 0, 0, 0, 76,
	0, 0, 0, 0, 0, 86, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 112, 0, 111, 107,
	108, 109, 104, 105, 0, 0, 0, 0, 0, 0,
	95, 0, 0, 0, 0, 0, 110, 106, 0, 0,
	90, 91, 92, 0, 0, 0, 0, 84, 51, 0,
	0, 0, 73, 74, 224, 0, 0, 0, 0, 0,
	52, 53, 75, 62, 63, 64, 65, 66, 67, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 78,
	119, 117, 118, 114, 72, 0, 0, 0, 0, 58,
	0, 50, 0, 0, 0, 55, 54, 56, 57, 70,
	100, 88, 89, 69, 0, 93, 94, 225, 0, 116,
	0, 0, 0, 0, 0, 113, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 115, 0, 0, 0, 0,
	0, 76, 0, 0, 0, 0, 0, 86, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 639, 112, 0,
	111, 107, 108, 109, 104, 105, 0, 0, 0, 0,
	0, 0, 95, 0, 0, 0, 0, 0, 110, 106,
	0, 0, 90, 91, 92, 0, 0, 0, 0, 84,
	51, 0, 0, 0, 73, 74, 224, 0, 0, 0,
	0, 0, 52, 53, 75, 62, 63, 64, 65, 66,
	67, 68, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 78, 119, 117, 118, 114, 72, 0, 0, 0,
	0, 58, 0, 50, 0, 0, 638, 55, 54, 56,
	57, 70, 100, 88, 89, 69, 0, 93, 94, 225,
	519, 116, 0, 0, 0, 0, 0, 113, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 115, 0, 0,
	0, 0, 0, 76, 0, 0, 0, 0, 0, 86,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	112, 0, 111, 107, 108, 109, 104, 105, 0, 0,
	0, 0, 0, 0, 95, 0, 0, 0, 0, 0,
	110, 106, 0, 0, 90, 91, 92, 0, 0, 0,
	0, 84, 51, 0, 0, 0, 73, 74, 224, 0,
	0, 0, 0, 0, 52, 53, 75, 62, 63, 64,
	65, 66, 67, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 78, 119, 117, 118, 114, 72, 0,
	0, 0, 0, 58, 0, 50, 0, 0, 0, 55,
	54, 56, 57, 70, 100, 88, 89, 69, 0, 93,
	94, 225, 0, 116, 0, 0, 0, 0, 0, 113,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 115,
	0, 0, 0, 0, 0, 76, 0, 0, 0, 0,
	0, 86, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 112, 0, 111, 107, 108, 109, 104, 105,
	0, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 110, 106, 0, 0, 90, 91, 92, 0,
	0, 0, 0, 84, 51, 0, 0, 0, 73, 74,
	224, 0, 0, 0, 0, 0, 52, 53, 75, 62,
	63, 64, 65, 66, 67, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 78, 119, 117, 118, 114,
	72, 0, 0, 0, 0, 58, 0, 50, 0, 0,
	478, 55, 54, 56, 57, 70, 100, 88, 89, 69,
	0, 93, 94, 225, 0, 116, 0, 0, 0, 0,
	0, 113, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 115, 0, 0, 0, 0, 0, 76, 0, 0,
	0, 0, 0, 86, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 112, 0, 111, 107, 108, 109,
	104, 105, 0, 0, 0, 0, 0, 0, 95, 0,
	0, 0, 0, 0, 110, 106, 0, 0, 90, 91,
	92, 0, 0, 0, 0, 84, 51, 0, 0, 0,
	73, 74, 224, 0, 0, 0, 0, 0, 52, 53,
	75, 62, 63, 64, 65, 66, 67, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 78, 119, 117,
	118, 114, 72, 0, 0, 0, 456, 58, 0, 50,
	0, 0, 0, 55, 54, 56, 57, 70, 100, 88,
	89, 69, 0, 93, 94, 225, 0, 116, 0, 0,
	0, 0, 0, 113, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 115, 0, 0, 0, 0, 0, 76,
	0, 0, 0, 0, 0, 86, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 112, 0, 111, 107,
	108, 109, 104, 105, 0, 0, 0, 0, 0, 0,
	95, 0, 0, 0, 0, 0, 110, 106, 0, 0,
	90, 91, 92, 0, 0, 0, 0, 84, 51, 0,
	0, 0, 73, 74, 224, 0, 0, 0, 0, 0,
	52, 53, 75, 62, 63, 64, 65, 66, 67, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 78,
	119, 117, 118, 114, 72, 0, 0, 0, 0, 58,
	0, 50, 0, 0, 0, 55, 54, 56, 57, 70,
	100, 133, 134, 144, 145, 0, 0, 958, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 179, 180, 181,
	182, 183, 171, 172, 173, 200, 174, 175, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 0,
	191, 189, 190, 186, 187, 0, 0, 178, 184, 185,
	192, 193, 195, 194, 196, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 199, 198,
	0, 0, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 146, 147, 148, 176, 177, 127, 128, 129, 130,
	131, 132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 134, 144, 145,
	0, 0, 1016, 0, 0, 0, 0, 0, 0, 0,
	201, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 179, 180, 181, 182, 183, 171, 172, 173,
	200, 174, 175, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 0, 191, 189, 190, 186, 187,
	0, 0, 178, 184, 185, 192, 193, 195, 194, 196,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 199, 198, 0, 0, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 146, 147, 148, 176,
	177, 858, 859, 860, 857, 856, 855, 241, 243, 242,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 0, 0, 0, 0,
	239, 240, 251, 254, 255, 256, 257, 258, 259, 261,
	263, 0, 0, 0, 0, 0, 0, 0, 241, 243,
	242, 265, 0, 0, 0, 0, 799, 266, 245, 249,
	248, 0, 0, 0, 0, 0, 244, 0, 246, 250,
	252, 253, 260, 262, 247, 267, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 240, 251, 254, 255, 256, 257, 258, 259,
	261, 263, 0, 0, 0, 0, 0, 0, 0, 241,
	243, 242, 265, 0, 0, 764, 0, 0, 266, 245,
	249, 248, 0, 0, 0, 0, 0, 244, 0, 246,
	250, 252, 253, 260, 262, 247, 267, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 240, 251, 254, 255, 256, 257, 258,
	259, 261, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 739, 241, 243, 242, 265, 0, 0, 266,
	245, 249, 248, 0, 0, 0, 0, 0, 244, 0,
	246, 250, 252, 253, 260, 262, 247, 0, 0, 0,
	267, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 240, 251, 254,
	255, 256, 257, 258, 259, 261, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 737, 241, 243, 242,
	265, 0, 0, 266, 245, 249, 248, 0, 0, 0,
	0, 0, 244, 0, 246, 250, 252, 253, 260, 262,
	247, 0, 0, 0, 267, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 240, 251, 254, 255, 256, 257, 258, 259, 261,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 241, 243, 242, 265, 0, 0, 266, 245, 249,
	248, 0, 0, 0, 0, 0, 244, 0, 246, 250,
	252, 253, 260, 262, 247, 0, 0, 0, 267, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 240, 251, 254, 255, 256,
	257, 258, 259, 261, 263, 0, 0, 0, 0, 0,
	0, 0, 241, 243, 242, 265, 0, 0, 724, 0,
	0, 266, 245, 249, 248, 0, 0, 0, 0, 0,
	244, 0, 246, 250, 252, 253, 260, 262, 247, 267,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 240, 251, 254, 255,
	256, 257, 258, 259, 261, 263, 0, 0, 0, 0,
	0, 0, 0, 241, 243, 242, 265, 0, 0, 723,
	0, 0, 266, 245, 249, 248, 0, 0, 0, 0,
	0, 244, 0, 246, 250, 252, 253, 260, 262, 247,
	267, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 240, 251, 254,
	255, 256, 257, 258, 259, 261, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 673, 241, 243, 242,
	265, 0, 0, 266, 245, 249, 248, 0, 0, 0,
	0, 0, 244, 0, 246, 250, 252, 253, 260, 262,
	247, 0, 0, 0, 267, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 240, 251, 254, 255, 256, 257, 258, 259, 261,
	263, 0, 0, 0, 0, 0, 0, 0, 241, 243,
	242, 265, 0, 0, 672, 0, 0, 266, 245, 249,
	248, 0, 0, 0, 0, 0, 244, 0, 246, 250,
	252, 253, 260, 262, 247, 267, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 240, 251, 254, 255, 256, 257, 258, 259,
	261, 263, 0, 0, 0, 0, 0, 0, 0, 241,
	243, 242, 265, 0, 0, 671, 0, 0, 266, 245,
	249, 248, 0, 0, 0, 0, 0, 244, 0, 246,
	250, 252, 253, 260, 262, 247, 267, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 240, 251, 254, 255, 256, 257, 258,
	259, 261, 263, 0, 0, 0, 0, 0, 0, 0,
	241, 243, 242, 265, 0, 0, 668, 0, 0, 266,
	245, 249, 248, 0, 0, 0, 0, 0, 244, 0,
	246, 250, 252, 253, 260, 262, 247, 267, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 240, 251, 254, 255, 256, 257,
	258, 259, 261, 263, 0, 0, 0, 0, 0, 0,
	0, 241, 243, 242, 265, 0, 0, 666, 0, 0,
	266, 245, 249, 248, 0, 0, 0, 0, 0, 244,
	0, 246, 250, 252, 253, 260, 262, 247, 267, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 240, 251, 254, 255, 256,
	257, 258, 259, 261, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 241, 243, 242, 265, 0,
	0, 266, 245, 249, 248, 0, 0, 0, 0, 0,
	244, 0, 246, 250, 252, 253, 260, 262, 247, 0,
	0, 0, 267, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 240,
	251, 254, 255, 256, 257, 258, 259, 261, 263, 0,
	0, 0, 0, 0, 0, 0, 241, 243, 242, 265,
	0, 0, 641, 0, 0, 266, 245, 249, 248, 0,
	0, 0, 0, 0, 244, 0, 246, 250, 252, 253,
	260, 262, 247, 267, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	240, 251, 254, 255, 256, 257, 258, 259, 261, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 630,
	241, 243, 242, 265, 614, 0, 266, 245, 249, 248,
	0, 0, 0, 0, 0, 244, 0, 246, 250, 252,
	253, 260, 262, 247, 0, 0, 0, 267, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 240, 251, 254, 255, 256, 257,
	258, 259, 261, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 243, 242, 265, 628, 0, 0,
	266, 245, 249, 248, 0, 0, 0, 0, 0, 244,
	0, 246, 250, 252, 253, 260, 262, 247, 0, 0,
	267, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 240, 251, 254,
	255, 256, 257, 258, 259, 261, 263, 0, 0, 0,
	0, 0, 0, 0, 241, 243, 242, 265, 0, 0,
	0, 0, 0, 266, 245, 249, 248, 0, 0, 0,
	0, 0, 244, 0, 246, 250, 252, 253, 260, 262,
	247, 267, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 240, 251,
	254, 255, 256, 257, 258, 259, 261, 263, 0, 0,
	0, 0, 0, 0, 0, 241, 243, 242, 265, 610,
	0, 0, 0, 0, 266, 245, 249, 248, 0, 0,
	0, 0, 0, 244, 0, 246, 250, 252, 253, 260,
	262, 247, 267, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 240,
	251, 254, 255, 256, 257, 258, 259, 261, 263, 0,
	0, 0, 0, 0, 0, 0, 241, 243, 242, 265,
	0, 0, 605, 0, 0, 266, 245, 249, 248, 0,
	0, 0, 0, 0, 244, 0, 246, 250, 252, 253,
	260, 262, 247, 267, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	240, 251, 254, 255, 256, 257, 258, 259, 261, 263,
	0, 0, 0, 0, 0, 0, 0, 241, 243, 242,
	265, 0, 0, 601, 0, 0, 266, 245, 249, 248,
	0, 0, 0, 0, 0, 244, 0, 246, 250, 252,
	253, 260, 262, 247, 267, 264, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 240, 251, 254, 255, 256, 257, 258, 259, 261,
	263, 0, 0, 0, 0, 0, 0, 0, 241, 243,
	242, 265, 0, 0, 509, 0, 0, 266, 245, 249,
	248, 0, 0, 0, 0, 0, 244, 0, 246, 250,
	252, 253, 260, 262, 247, 267, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 240, 251, 254, 255, 256, 257, 258, 259,
	261, 263, 0, 0, 0, 0, 0, 0, 0, 241,
	243, 242, 265, 0, 0, 0, 0, 0, 266, 245,
	249, 248, 0, 0, 0, 0, 0, 244, 0, 246,
	250, 252, 253, 260, 262, 247, 267, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 240, 251, 254, 255, 256, 257, 258,
	259, 261, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 241, 243, 242, 265, 0, 266,
	245, 249, 248, 0, 0, 0, 0, 0, 244, 0,
	246, 250, 252, 253, 260, 262, 247, 0, 0, 0,
	0, 267, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 240, 251,
	254, 255, 256, 257, 258, 259, 261, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 242, 265, 0,
	0, 0, 0, 0, 266, 245, 249, 248, 0, 0,
	0, 0, 0, 244, 0, 246, 250, 252, 253, 260,
	262, 247, 267, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 240,
	251, 254, 255, 256, 257, 258, 259, 261, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 265,
	0, 0, 0, 0, 0, 266, 245, 249, 248, 0,
	0, 0, 0, 0, 244, 0, 246, 250, 252, 253,
	260, 262, 247, 267, 264, 0, 0, 0, 521, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	240, 251, 254, 255, 256, 257, 258, 259, 261, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 266, 245, 249, 248,
	0, 0, 0, 0, 0, 244, 0, 246, 250, 252,
	253, 260, 262, 247, 267, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 240, 251, 254, 255, 256, 257, 258, 259, 261,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 266, 245, 249,
	248, 0, 0, 0, 0, 0, 244, 0, 246, 250,
	252, 253, 260, 262, 247, 267, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 240, 251, 254, 255, 256, 257, 258, 259,
	261, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 266, 245,
	249, 248, 0, 0, 0, 0, 0, 244, 0, 246,
	250, 252, 253, 260, 262, 247, 267, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 240, 251, 254, 255, 256, 257, 258,
	259, 261, 263, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 249, 248, 0, 0, 0, 0, 0, 244, 264,
	246, 250, 252, 253, 260, 262, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 251, 254, 255, 256,
	257, 258, 259, 261, 263, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 249, 248, 0, 0, 0, 0, 0,
	244, 264, 246, 250, 252, 253, 260, 262, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 254,
	255, 256, 257, 258, 259, 261, 263, 0, 265, 0,
	225, 0, 116, 0, 0, 0, 0, 0, 113, 0,
	0, 0, 0, 0, 245, 249, 248, 0, 0, 0,
	0, 0, 244, 264, 246, 250, 252, 253, 260, 262,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 254, 255, 256, 257, 258, 259, 261, 263, 265,
	708, 112, 0, 111, 107, 108, 109, 104, 105, 0,
	0, 0, 0, 0, 0, 0, 245, 249, 248, 0,
	0, 110, 106, 0, 264, 0, 0, 250, 252, 253,
	260, 262, 247, 0, 0, 0, 0, 0, 0, 327,
	0, 251, 254, 255, 256, 257, 258, 259, 261, 263,
	0, 0, 0, 225, 0, 116, 0, 0, 0, 0,
	0, 113, 0, 0, 0, 0, 0, 0, 249, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 252,
	253, 260, 262, 247, 0, 119, 117, 118, 114, 0,
	0, 0, 0, 0, 324, 0, 709, 0, 0, 707,
	0, 0, 0, 0, 112, 100, 111, 107, 108, 109,
	104, 105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 117,
	118, 114, 0, 0, 0, 0, 0, 324, 0, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 100,
}
var yyPact = [...]int{

	-1000, -1000, 1825, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	225, 5632, 544, -1000, 760, -1000, -1000, -1000, 223, 5202,
	220, 215, 6705, 6705, 6705, 162, 644, 6705, -1000, 8371,
	211, 209, 205, -1000, 403, 795, 248, 38, 642, 596,
	594, 620, 1344, -1000, -1000, 204, -1000, -1000, 268, 187,
	5733, 6705, 9083, 9083, 6705, 6705, 6705, 6705, 6705, -1000,
	-1000, -1000, 6705, 6705, 6705, 6705, 6705, 6705, 6705, 186,
	6705, -1000, 879, 6705, 6705, 6705, 6705, -1000, 519, -1000,
	-1000, 512, -1000, -1000, 413, 185, 184, 181, 6705, 6705,
	180, 6705, 6705, -1000, -1000, 797, -1000, -1000, -1000, -1000,
	141, 188, 188, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 161, -1000, 829, 38, -1000, -1000, -1000, -1000,
	125, 261, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 0, 566, 665, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1, -1000, -44, 4066, 6705, 683, 578, 38,
	6705, 6705, 324, 8436, 578, -1000, 320, 316, -2, -1000,
	-1000, -3, -1000, -1000, -47, -9, -1000, 8436, -1000, 6705,
	6705, 6705, 6705, 6705, 6705, 6705, 6705, 6705, 6705, 6705,
	6705, 6705, 6705, 6705, 6705, 6705, 6705, 6705, 6705, 6705,
	6705, 6705, 6705, 6705, 6705, 748, 6543, 6705, 9083, 6705,
	760, -1000, 315, -1000, 788, -1000, -1000, 38, -1000, 607,
	772, 770, 539, -1000, -1000, -1000, 203, 5202, 201, 312,
	241, 6381, 6705, 6705, 6705, 6705, 6705, 6705, 6705, 6705,
	6705, 6705, 6705, 6705, 6705, -1000, -1000, 6705, 6705, 6705,
	116, 116, 5733, 52, 13, -1000, -1000, 8310, 9083, 6705,
	198, -1000, -1000, -1000, 6705, -1000, -1000, -1000, 5733, -1000,
	444, 444, 479, 444, 8249, 444, 444, 444, 444, 444,
	444, 444, -1000, 6705, 444, 391, 782, 735, -1000, 226,
	6219, 9083, 8680, 8619, 8680, 8436, 12, -1000, 188, -1000,
	1987, 188, -1000, 510, 253, 6705, 600, -1000, 411, 6705,
	6705, 6705, 8436, 8436, 6705, 8436, 8436, 714, -1000, 742,
	6705, -1000, -1000, 1171, -1000, 5733, 581, 782, 196, 306,
	-1000, -1000, 1661, -1000, 566, -12, 648, 402, 763, -1000,
	760, 6705, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	195, 8188, 193, -1000, 302, 11, 8436, 8127, -1000, -1000,
	-1000, -1000, 162, -1000, 715, 6705, -1000, 6705, 8793, 8845,
	8497, 8680, 8558, 55, 8948, 8897, 227, 14, 14, 479,
	444, 479, 479, 349, 349, 1452, 1452, 1452, 1452, 356,
	356, 356, 356, 1452, -1000, 8066, 6705, 8741, 10, -1000,
	-1000, 8005, -18, 3902, -1000, 192, 191, 743, 734, 394,
	588, -1000, 6705, -1000, 6705, -1000, -1000, 8680, 6705, 8680,
	8680, 8680, 8680, 8680, 8680, 8680, 8680, 8680, 8680, 8680,
	8680, 8680, 7942, 51, 7878, 188, -1000, 6705, -1000, 188,
	123, -49, 5733, 6057, -1000, 8436, 5733, 7817, 49, -1000,
	122, -1000, -1000, -1000, -1000, 170, 733, 730, 7753, 56,
	342, 6705, 519, 48, -1000, 188, -1000, -1000, -1000, 6705,
	-1000, -1000, -1000, -1000, 162, 6705, 6705, 116, 116, 162,
	7692, 188, 7631, 7, -1000, 8436, 7570, 7509, -1000, -1000,
	7445, -1000, 6, -1000, 8436, 6705, 239, -1000, -1000, 187,
	6705, 186, 6705, 6705, 6705, 578, 413, 185, 184, 181,
	6705, 6705, 180, 6705, 6705, 38, 161, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 38, 121, -1000, 411, -1000,
	1497, -1000, -1000, 663, -1000, 393, 618, -1000, -1000, 8436,
	120, 5040, 6705, 6705, 6705, 183, -1000, -1000, 8436, -1000,
	6705, 8741, 119, 9083, 8980, 4878, -1000, 411, 411, 136,
	586, -1000, 385, 528, 7384, 7323, 3738, 8948, 4716, -1000,
	-1000, -1000, 7259, -1000, -50, 6705, -1000, 8436, 9083, 135,
	117, -1000, -1000, -1000, 47, -1000, -1000, 710, -1000, -1000,
	-1000, -1000, -1000, 6705, -1000, 8680, -1000, -1000, -1000, 7195,
	-1000, 46, 7131, -1000, -1000, -1000, -1000, 586, 383, 114,
	6705, -1000, -1000, -1000, 84, 1333, 8436, 6705, -1000, 83,
	4, -1000, 497, -1000, 489, 335, 3, -1000, -1000, 489,
	655, -1000, 301, -1000, -1000, -1000, 7070, 299, 8436, -1000,
	297, 294, 8741, 293, -1000, 82, 550, 9083, 134, 5733,
	-1000, -1000, -1000, 658, 81, 79, 411, 568, 528, 470,
	-1000, -10, -1000, 5202, 238, 292, -1000, -1000, -1000, 6705,
	8680, -1000, 5733, -50, -1000, -1000, 7009, -1000, -1000, -1000,
	568, 5895, -1000, -1000, -1000, -1000, 8436, 171, -1000, 411,
	404, -1000, -1000, -1000, 330, 1, -1000, 290, -1000, 618,
	-1000, 724, -1000, 3574, 289, 6705, 372, -1000, 791, -1000,
	-1000, 4392, 8980, -1000, 5733, 44, 3410, -1000, -1000, 382,
	129, 171, 589, 78, 375, 528, -1000, -1000, -1000, 969,
	528, 451, 528, -1000, -1000, -1000, 4230, 8680, 77, 329,
	374, 59, -4, -1000, 548, -5, -6, 8436, -1000, 485,
	-1000, 41, -1000, -29, 688, -33, -1000, -1000, -1000, 286,
	-1000, 489, -1000, -1000, -1000, 285, -1000, 76, -1000, 6705,
	133, 357, 284, 745, -1000, -1000, -1000, 68, -1000, 65,
	-1000, 280, -1000, 528, 368, 171, 128, 171, -1000, -10,
	404, 680, 844, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -30, -1000, -1000, 4230, -50, -1000, -1000, -1000, -1000,
	5895, 6705, 538, -1000, -1000, 6705, 535, -1000, -34, 764,
	-35, -1000, -1000, 501, -1000, 688, -1000, 688, -1000, -1000,
	-1000, 4554, 961, -1000, -1000, -1000, -1000, -1000, 275, 3246,
	4392, -1000, -1000, 3082, 104, -1000, -1000, 364, 169, 361,
	390, 715, 6867, 38, -1000, -1000, -1000, 5498, 362, -1000,
	8436, 6705, 8436, 6705, 764, -1000, 764, 715, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 4230, -1000, 270, -1000, -1000,
	64, 528, -1000, 2918, -1000, 63, -7, -1000, -1000, 715,
	-1000, -1000, -22, -1000, -53, -25, -1000, -55, -1000, -1000,
	6867, -1000, 5364, -1000, 265, 263, 601, 638, 258, -1000,
	-1000, -1000, 8436, 8436, -1000, -1000, -62, 2754, 4230, -1000,
	350, -1000, -1000, 2590, -1000, -1000, 169, -1000, 2426, -1000,
	715, -1000, 6705, -1000, 6867, 6705, 57, -1000, -1000, -1000,
	-1000, 528, 6992, 6867, 6705, 256, -1000, -1000, -1000, -1000,
	-1000, 8436, -1000, 8436, 411, -10, -1000, -1000, 6867, -1000,
	8436, -1000, 2262, -1000, -1000, 58, -1000, -1000, 171, 233,
	-1000, -1000, -1000, 2098, -1000,
}
var yyPgo = [...]int{

	0, 1041, 1039, 53, 10, 32, 17, 78, 72, 1038,
	80, 15, 724, 1037, 46, 155, 95, 94, 81, 70,
	47, 1035, 37, 1033, 0, 87, 8, 1031, 1030, 1028,
	38, 380, 29, 33, 1026, 1025, 62, 1024, 45, 1012,
	5, 1010, 1002, 1001, 999, 13, 49, 992, 987, 50,
	986, 88, 763, 985, 983, 35, 982, 979, 2, 976,
	975, 41, 376, 54, 48, 974, 972, 970, 969, 966,
	965, 114, 962, 960, 959, 9, 954, 85, 953, 951,
	950, 949, 940, 936, 933, 931, 929, 27, 61, 21,
	928, 925, 921, 917, 117, 11, 110, 905, 83, 904,
	903, 42, 34, 900, 12, 899, 3, 898, 30, 885,
	16, 60, 96, 40, 882, 880, 878, 14, 877, 870,
	103, 82, 868, 39, 31, 866, 865, 862, 858, 855,
	18, 854, 853, 852, 842, 840, 43, 838, 100, 4,
	26, 587, 831, 36, 829, 79, 7, 20, 828, 817,
	808, 807, 801, 1, 19, 755, 6,
}
var yyR1 = [...]int{

	0, 155, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 10, 10, 9, 9, 8, 145, 145, 97,
	97, 97, 96, 96, 98, 98, 14, 14, 14, 14,
	136, 136, 137, 137, 138, 154, 154, 153, 153, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 12, 12, 86, 86, 93, 92, 92,
	91, 90, 90, 94, 94, 87, 87, 89, 89, 88,
	88, 77, 77, 146, 146, 21, 21, 21, 21, 21,
	21, 21, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 133, 133, 134, 74, 74,
	29, 29, 122, 122, 30, 16, 16, 1, 1, 2,
	2, 152, 152, 151, 151, 111, 111, 17, 18, 19,
	123, 123, 125, 125, 124, 124, 140, 140, 140, 140,
	118, 118, 117, 117, 28, 28, 115, 115, 115, 115,
	143, 143, 143, 11, 11, 119, 119, 85, 85, 76,
	76, 99, 99, 80, 80, 26, 26, 27, 27, 135,
	135, 135, 135, 32, 32, 103, 103, 103, 104, 104,
	108, 108, 108, 105, 105, 109, 109, 107, 107, 107,
	110, 110, 106, 106, 112, 112, 78, 78, 33, 33,
	33, 35, 35, 36, 37, 37, 38, 38, 147, 147,
	39, 39, 39, 39, 75, 75, 114, 114, 114, 144,
	144, 40, 40, 41, 42, 42, 42, 42, 44, 44,
	43, 116, 116, 149, 149, 148, 148, 150, 150, 139,
	139, 139, 139, 139, 139, 79, 79, 45, 45, 84,
	84, 95, 20, 73, 73, 46, 22, 22, 23, 23,
	48, 47, 47, 127, 128, 128, 129, 131, 131, 132,
	132, 130, 130, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 121, 121, 120, 120, 156, 3, 3, 126,
	126, 81, 82, 82, 58, 58, 59, 59, 59, 50,
	50, 49, 49, 51, 51, 51, 56, 56, 142, 142,
	142, 113, 113, 64, 64, 64, 64, 57, 57, 57,
	57, 57, 57, 57, 57, 63, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 24, 24, 25, 25, 65,
	65, 65, 65, 66, 66, 67, 67, 67, 68, 68,
	68, 68, 68, 68, 31, 31, 31, 31, 52, 52,
	52, 69, 70, 70, 70, 70, 70, 70, 70, 60,
	60, 60, 61, 61, 61, 55, 101, 101, 54, 54,
	100, 100, 100, 100, 100, 100, 100, 141, 141, 141,
	141, 71, 71, 71, 71, 71, 71, 71, 71, 72,
	72, 72, 72, 53, 53, 53, 53, 53, 53, 53,
	83, 83, 102,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 1, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 3, 4, 1, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 5, 4, 3,
	4, 1, 3, 1, 1, 8, 7, 2, 3, 1,
	2, 3, 1, 3, 1, 1, 2, 1, 3, 1,
	3, 3, 1, 2, 0, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 1, 5, 7, 9, 5, 3,
	3, 3, 3, 3, 3, 1, 2, 6, 7, 9,
	5, 1, 6, 3, 2, 0, 2, 8, 1, 3,
	0, 4, 1, 3, 1, 10, 11, 0, 1, 0,
	1, 0, 1, 1, 2, 1, 1, 9, 6, 7,
	0, 2, 0, 2, 0, 2, 1, 2, 4, 3,
	1, 4, 1, 4, 1, 4, 3, 4, 4, 5,
	0, 5, 4, 1, 1, 1, 4, 5, 6, 1,
	3, 6, 7, 3, 6, 2, 0, 1, 3, 0,
	1, 1, 1, 6, 8, 1, 2, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 1, 2, 1,
	0, 1, 0, 2, 2, 4, 1, 3, 1, 2,
	3, 3, 1, 1, 3, 1, 1, 3, 2, 0,
	5, 5, 10, 3, 1, 3, 1, 2, 3, 1,
	2, 2, 2, 3, 3, 3, 4, 3, 1, 1,
	3, 1, 3, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 4, 3,
	1, 4, 4, 3, 1, 1, 0, 1, 3, 1,
	8, 3, 2, 2, 3, 1, 7, 0, 2, 1,
	3, 3, 4, 6, 5, 3, 4, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 5,
	4, 3, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 3, 2, 1, 2, 4, 2, 2,
	1, 2, 1, 2, 11, 9, 0, 0, 1, 0,
	4, 2, 3, 1, 1, 2, 2, 4, 2, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 1,
	1, 0, 1, 4, 3, 1, 3, 1, 1, 3,
	2, 3, 1, 1, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 4,
	4, 4, 4, 1, 1, 1, 3, 3, 1, 4,
	2, 3, 1, 4, 4, 3, 3, 3, 3, 1,
	3, 1, 1, 3, 1, 1, 0, 1, 3, 1,
	3, 1, 4, 2, 2, 6, 4, 2, 2, 1,
	2, 1, 4, 3, 3, 3, 3, 6, 3, 1,
	1, 2, 1, 5, 4, 2, 2, 4, 2, 2,
	1, 3, 1,
}
var yyChk = [...]int{

	-1000, -155, -145, -13, 2, -15, -16, -17, -18, -19,
	52, 80, 45, -86, 39, 150, -76, -80, 21, 20,
	23, 30, 34, 35, 40, 47, 99, 19, 14, -24,
	49, 25, 27, 152, 41, 36, 10, 37, -154, -153,
	-85, -99, -31, -34, -138, 7, -68, -69, -66, 60,
	156, 93, 105, 106, 161, 160, 162, 163, 154, -47,
	-129, -53, 108, 109, 110, 111, 112, 113, 114, 6,
	164, -57, 149, 97, 98, 107, 44, -121, 144, -52,
	-59, -50, -65, -62, 92, 143, 50, 51, 4, 5,
	85, 86, 87, 8, 9, 75, -64, -63, -120, -8,
	165, -14, -67, -49, 67, 68, 82, 64, 65, 66,
	81, 63, 61, 18, 148, 38, 12, 146, 147, 145,
	154, -97, 150, 10, -5, 146, -4, 99, 100, 101,
	102, 103, 104, 4, 5, 85, 86, 87, 88, 89,
	90, 91, 92, 93, 6, 7, 94, 95, 96, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
	51, 35, 36, 37, 39, 40, 97, 98, 60, 30,
	31, 32, 33, 34, 61, 62, 56, 57, 80, 54,
	55, 53, 63, 64, 66, 65, 67, 68, 82, 81,
	38, 143, -94, -12, -98, -88, 37, 39, -96, 147,
	10, 146, -77, -20, 10, -146, 154, -15, -154, 37,
	154, 154, -25, -24, 99, 10, -25, -25, -35, -36,
	-52, -37, -121, -38, -8, -73, -46, -24, 152, 131,
	132, 88, 90, 89, 167, 159, 169, 175, 161, 160,
	170, 133, 171, 172, 134, 135, 136, 137, 138, 139,
	173, 140, 174, 141, 116, 91, 158, 115, 154, 154,
	154, 150, 10, 153, -3, 159, -138, 37, -120, -152,
	54, 55, -151, -111, 100, 101, 94, 95, 94, 96,
	95, 168, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 105, 106, 154, 156, 150,
	58, 142, 154, -55, -54, -101, -100, -24, 159, 84,
	60, -24, -31, -62, 154, -64, -63, 99, 156, -31,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -24, -56, 154, -24, -142, 17, -141, -71, -8,
	77, 78, -24, -24, -24, -24, -137, -136, -49, -14,
	79, -51, -48, -49, -70, 154, -153, -52, -154, 154,
	154, 154, -24, -24, 154, -24, -24, 17, 76, -141,
	150, -52, -112, 154, -112, 154, -141, 17, -3, 155,
	152, 150, -145, 152, 166, -94, -98, 83, 29, 152,
	166, 168, -21, 151, 2, -15, -16, -17, -18, -19,
	52, -24, 21, -3, -22, -23, -24, -24, 152, 152,
	152, 152, 166, 152, 166, 168, 152, 166, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -24, -24, -24, -51, -24, 153, -24, -122, -30,
	-31, -24, -77, -146, 152, 10, -156, -3, 53, 10,
	10, -111, 154, -15, 154, 152, 153, -24, 159, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -24, -24, -25, -24, -61, 10, 150, -52, -61,
	-55, 157, 166, 59, -31, -24, 154, -24, -55, 155,
	-25, 149, -71, -71, 17, 156, 58, 142, -24, 11,
	-31, 59, 166, -10, -112, -60, -7, -52, -6, 150,
	10, -5, -113, -112, 79, 156, 150, 58, 142, 79,
	-24, 53, -24, -83, -102, -24, -24, -24, 76, 76,
	-24, 155, -78, -33, -24, 84, -7, 10, -5, 60,
	93, 6, 97, 98, 44, 99, 92, 143, 50, 51,
	4, 5, 85, 86, 87, 37, 61, 63, 64, 66,
	65, 67, 68, 82, 81, 38, -55, 148, 154, 152,
	-145, 151, -88, -98, 152, 83, 150, 10, -20, -24,
	154, 155, 154, 152, 166, 155, -36, -38, -24, -46,
	153, -24, -10, 166, 29, 155, 151, 154, 154, 10,
	10, 150, -125, 56, -24, -24, -146, -24, 155, 157,
	151, -112, -24, -112, 155, 168, -101, -24, 159, 60,
	-55, 155, 157, 155, -72, 10, 13, 160, -8, 10,
	10, 151, 151, 156, 151, -24, -136, 157, -112, -24,
	-52, -25, -24, -61, -61, -52, 155, -113, 155, -10,
	166, 155, 155, 151, -10, 166, -24, 153, 155, -26,
	-27, -32, -153, 151, 150, -93, -92, -87, -89, -12,
	-96, -156, 155, -119, -15, 153, -24, -22, -24, -115,
	150, 153, -24, 155, -30, -140, -31, 159, 60, 156,
	-28, -15, 153, -133, -26, -26, 154, -123, 56, -147,
	150, -75, -14, 155, 155, 96, -15, 153, 151, 168,
	-24, -31, 154, 155, 157, 13, -24, 151, 157, 151,
	-123, 150, 155, -102, 155, -33, -24, 155, -10, 166,
	-135, 104, 103, 102, -91, -90, -89, 151, -10, 166,
	-89, 29, 152, -146, 155, 152, -143, 152, -143, 152,
	152, 155, 59, -31, 154, -55, -146, -29, -134, 43,
	42, 155, 155, -26, -124, 57, -14, 151, -39, -153,
	45, -147, 166, -15, 153, 152, -146, -24, -55, 157,
	-124, -131, -132, -130, -127, 33, -128, -24, -106, 153,
	-32, -110, -107, -108, 158, -109, 61, 62, -14, 151,
	-10, 166, 152, -87, 10, 22, 152, -22, 151, 32,
	33, -143, 31, -143, -117, -15, 153, -140, -31, -55,
	157, 28, 150, 154, -106, -126, 45, 155, 150, -75,
	-149, -148, -150, 48, -139, 104, 103, 102, 99, 100,
	101, -75, 151, -14, -146, 155, 151, 150, 151, -10,
	166, 59, -10, 166, -10, 166, -156, -103, -104, 158,
	-105, -108, 99, -1, 159, 167, -108, 167, 152, -89,
	152, 155, -24, -11, 153, 152, 151, 152, 31, -146,
	155, 155, 152, -146, -74, -14, 150, -106, 154, -106,
	-147, -110, 39, 37, -139, -114, 152, 150, -147, -130,
	-24, 59, -24, 59, 167, -104, 167, -2, 84, -108,
	-108, -118, -15, 153, -11, -146, 152, 26, -117, 151,
	-9, 167, -8, -146, 150, -81, -82, -58, -8, 159,
	150, 151, -79, -45, -8, -84, -95, -6, 10, -5,
	-3, 151, -144, -40, -41, -42, -43, -44, -14, -6,
	10, 151, -24, -24, -104, -104, -8, -146, -146, 152,
	155, -14, 151, -146, 155, -10, 166, -8, -146, 152,
	166, -156, 168, 152, 166, 168, -6, 151, -40, 152,
	152, 46, 29, 79, 168, 24, 150, 151, -58, 151,
	-45, -24, -95, -24, 154, -75, 10, -4, -139, -6,
	-24, 152, -146, -156, -156, -26, -6, 151, 155, -106,
	-116, 152, 150, -146, 151,
}
var yyDef = [...]int{

	88, -2, -2, 87, 109, 110, 111, 112, 113, 114,
	0, 0, 0, 121, 0, 144, 153, 154, 0, 0,
	0, 0, 477, 477, 477, 0, 441, 0, 165, 0,
	0, 0, 0, 171, 0, 0, 96, 427, 108, 191,
	229, 0, -2, 476, 105, 0, -2, 495, 0, 0,
	516, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	398, 402, 0, 0, 0, 0, 0, 0, 0, 446,
	0, 412, 448, 0, 415, 0, 0, 420, 0, 488,
	493, 0, -2, -2, 107, 0, 0, 0, 0, 0,
	0, 0, 0, 457, 458, 0, -2, -2, 422, 498,
	0, -2, 0, 439, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 455, 0, 427, 86, 97, 98, 99,
	0, 0, 88, 89, 90, 91, 71, 72, 73, 74,
	75, 76, 77, 2, 3, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 40, 41, 42, 43, 44, 45, 46, 47, 48,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 139, 134, 123, 124, 94, 95,
	92, 93, 0, 142, 0, -2, 0, 0, 0, 427,
	326, 0, 0, 478, 441, 96, 0, 0, 0, 272,
	273, 0, 421, 275, 276, 0, 324, 325, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 174, 426, 428, 106, 427, 423, 0,
	0, 0, 192, 193, 195, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 361, 363, 0, 477, 0,
	0, 0, 516, 0, 515, 519, 517, 521, 0, 0,
	0, 347, -2, 484, 0, -2, 482, 441, 516, -2,
	382, 383, 384, 385, 0, 403, 404, 405, 406, 407,
	408, 409, 410, 477, 411, 0, 449, 450, 529, 531,
	0, 0, 414, 416, 418, 419, 82, 102, 100, 442,
	0, 451, 332, 443, 444, 0, 0, 502, 108, 0,
	0, 0, 545, 546, 0, 548, 549, 0, 460, 0,
	0, 500, 436, 0, 438, 516, 0, 0, 0, 0,
	116, 88, -2, 119, 0, 0, 139, 0, 0, 122,
	0, 0, 143, 152, 145, 146, 147, 148, 149, 150,
	0, 0, 0, 426, 0, 327, 329, 0, 159, 160,
	161, 162, 0, 163, 0, 0, 164, 0, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 381, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 395, 0, 0, 401, 82, 182,
	-2, 0, 0, -2, 173, 0, 0, 426, 0, 0,
	202, 194, 0, 230, 0, 233, 144, 345, 0, 348,
	349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 0, 0, 496, 512, 0, 514, 497,
	0, 454, 516, 0, -2, 524, 516, 0, 0, -2,
	0, 413, 530, 527, 528, 0, 0, 0, 0, 0,
	479, 0, 83, 0, 101, 0, 465, -2, 509, 0,
	-2, -2, 331, 452, 0, 477, 0, 0, 0, 0,
	0, 451, 0, 82, 550, 552, 0, 0, 459, 461,
	0, 264, 82, 266, 268, 0, 0, -2, 81, 47,
	12, -2, 45, -2, 32, -2, -2, 70, 38, 39,
	2, 3, 4, 5, 6, -2, 53, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 0, 456, -2, 115,
	-2, 118, 133, 139, 120, 0, 0, 140, 141, 426,
	0, 0, 0, 326, 0, 0, 271, 274, 277, 323,
	0, 400, 0, 83, 0, 0, 175, -2, -2, 0,
	200, 279, 0, 0, 0, 0, -2, 346, 0, 489,
	490, 491, 0, 492, 0, 0, 518, 520, 0, 0,
	0, -2, 454, 447, 0, 539, 540, 0, 542, 533,
	534, 535, 536, 0, 538, 417, 103, 104, 437, 0,
	507, 0, 0, 505, 506, 508, 445, 200, 0, 0,
	83, 544, 547, 499, 0, 83, 269, 0, 453, 0,
	82, 237, 239, 117, 0, 0, 82, 129, 135, 0,
	137, 322, 0, 155, 225, 144, 0, 0, 328, 158,
	220, 220, 399, 0, 183, 0, -2, 0, 0, 516,
	170, 214, 144, 180, 0, 0, -2, 204, 0, 107,
	279, 203, 284, 0, 0, 0, 227, 144, 513, 0,
	344, -2, 516, 526, 532, 541, 0, 510, 503, 504,
	204, 337, 543, 551, 265, 267, 270, 262, 235, -2,
	260, 240, 241, 242, 0, 82, 132, 0, 127, 83,
	136, 0, 151, -2, 0, 326, 0, 220, 0, 220,
	167, 0, 0, -2, 516, 0, -2, 172, 176, 0,
	0, 262, 429, 0, 0, 0, 201, 198, 278, 305,
	0, 107, 0, 228, 144, 234, -2, 343, 0, 0,
	0, 0, 82, 339, 0, 82, 82, 335, 426, 0,
	238, 187, 261, 257, 0, 259, 250, 251, 252, 0,
	130, 83, 126, 128, 138, 0, 156, 0, 216, 0,
	0, 0, 0, 0, 168, 212, 144, 0, -2, 0,
	-2, 0, 144, 0, 0, 262, 0, 262, 279, 205,
	260, 0, -2, 304, 307, 309, 310, 311, 312, 313,
	314, 0, 199, 285, -2, 525, 537, 279, 336, 338,
	83, 0, 0, 83, 333, 83, 0, 263, 245, 0,
	247, 248, 249, 189, 188, 0, 258, 0, 125, 131,
	226, 0, 0, 144, 223, 224, 217, 218, 0, -2,
	0, 208, 215, -2, 84, 178, 144, 0, 0, 0,
	107, 0, 0, 427, 308, 283, 286, 0, 107, 340,
	341, 0, 334, 0, 0, 246, 0, 0, 190, 255,
	256, 157, 210, 144, 144, -2, 219, 0, 169, 181,
	0, 0, 85, -2, 144, 0, 82, 433, 434, 0,
	144, 197, 0, 316, 426, 0, 320, 0, 78, 79,
	0, 287, 0, 289, 0, 0, 299, 0, 0, 298,
	-2, 330, 342, 425, 253, 254, 243, -2, -2, 213,
	0, 179, 185, -2, 430, 431, 83, 435, -2, 280,
	0, 317, 0, 281, 0, 0, 0, 288, 290, 291,
	292, 0, 0, 0, 0, 0, 144, 424, 432, 186,
	315, 426, 319, 426, -2, 293, 294, 295, 297, 300,
	244, 211, -2, 318, 321, 0, 296, 177, 262, 0,
	282, 301, 144, -2, 302,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 162, 148, 3, 165, 172, 159, 3,
	154, 155, 170, 161, 166, 160, 175, 171, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 153, 152,
	173, 168, 174, 158, 164, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 156, 3, 157, 169, 3, 149, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 150, 167, 151, 163,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

// line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:305
		{
			yylex.(*Parser).currentToken.Value = nil

			yylex.(*Parser).rootNode = &ast.Root{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].list),
				Stmts:    yyDollar[1].list,
				EndTkn:   yylex.(*Parser).currentToken,
			}
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:328
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:335
		{
			yyVAL.token = yyDollar[1].token
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:336
		{
			yyVAL.token = yyDollar[1].token
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:340
		{
			yyVAL.token = yyDollar[1].token
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:341
		{
			yyVAL.token = yyDollar[1].token
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:345
		{
			yyVAL.token = nil
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:346
		{
			yyVAL.token = yyDollar[1].token
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:350
		{
			yyVAL.token = nil
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:351
		{
			yyVAL.token = yyDollar[1].token
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:355
		{
			yyVAL.token = yyDollar[1].token
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:359
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:364
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:368
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:369
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:370
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:374
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:375
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:379
		{
			yyVAL.node = yyDollar[1].node
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:380
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameFullyQualified(yyDollar[1].token)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:384
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:385
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:386
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameFullyQualified(yyDollar[1].token)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:387
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameRelative(yyDollar[1].token)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:391
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttribute(yyDollar[1].node, nil)
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:392
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttribute(yyDollar[1].node, yyDollar[2].node)
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:396
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:397
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:402
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttributeGroup(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token, yyDollar[4].token)
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:406
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:407
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:411
		{
			yyVAL.list = nil
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:412
		{
			yyVAL.list = yyDollar[1].list
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:416
		{
			yyVAL.node = nil
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:417
		{
			yyVAL.node = yyDollar[1].node
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:418
		{
			yyVAL.node = yyDollar[1].node
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:419
		{
			yyVAL.node = yyDollar[1].node
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:420
		{
			yyVAL.node = yyDollar[1].node
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:421
		{
			yyVAL.node = yyDollar[1].node
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:423
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:433
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, yyDollar[2].node, nil, nil, nil, yyDollar[3].token)
		}
	case 117:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:435
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token, yyDollar[4].list, yyDollar[5].token, nil)
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:437
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, nil, yyDollar[2].token, yyDollar[3].list, yyDollar[4].token, nil)
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:440
		{
			yyVAL.node = yylex.(*Parser).builder.NewUseList(yyDollar[1].token, nil, yyDollar[2].node, yyDollar[3].token)
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:442
		{
			yyVAL.node = yylex.(*Parser).builder.NewUseList(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:444
		{
			yyVAL.node = yyDollar[1].node
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:447
		{
			yyVAL.node = &ast.StmtConstList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ConstTkn:      yyDollar[1].token,
				Consts:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:459
		{
			yyVAL.token = yyDollar[1].token
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:460
		{
			yyVAL.token = yyDollar[1].token
		}
	case 125:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:465
		{
			yyVAL.node = yylex.(*Parser).builder.NewGroupUseList(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token, yyDollar[8].token)
		}
	case 126:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:467
		{
			yyVAL.node = yylex.(*Parser).builder.NewGroupUseList(yyDollar[1].token, nil, yyDollar[2].node, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].token, yyDollar[7].token)
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:472
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:477
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:479
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:484
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:489
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:491
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:495
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:496
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:500
		{
			yyVAL.node = yyDollar[1].node
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:501
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.Type = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
			decl.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
			yyVAL.node = yyDollar[2].node
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:510
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, nil, nil)
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:511
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].token)
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:515
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, nil, nil)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:516
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].token)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:520
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:521
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:525
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:530
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:534
		{
			yyVAL.node = nil
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:535
		{
			yyVAL.node = yyDollar[1].node
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:536
		{
			yyVAL.node = yyDollar[1].node
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:537
		{
			yyVAL.node = yyDollar[1].node
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:538
		{
			yyVAL.node = yyDollar[1].node
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:539
		{
			yyVAL.node = yyDollar[1].node
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:541
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:553
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:562
		{
			yyVAL.node = yyDollar[1].node
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:566
		{
			yyVAL.node = yyDollar[1].node
		}
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:570
		{
			yyDollar[5].node.(*ast.StmtWhile).WhileTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtWhile).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtWhile).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtWhile).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtWhile).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:580
		{
			yyVAL.node = &ast.StmtDo{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				DoTkn:               yyDollar[1].token,
				Stmt:                yyDollar[2].node,
				WhileTkn:            yyDollar[3].token,
				OpenParenthesisTkn:  yyDollar[4].token,
				Cond:                yyDollar[5].node,
				CloseParenthesisTkn: yyDollar[6].token,
				SemiColonTkn:        yyDollar[7].token,
			}
		}
	case 157:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:593
		{
			yyDollar[9].node.(*ast.StmtFor).ForTkn = yyDollar[1].token
			yyDollar[9].node.(*ast.StmtFor).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[9].node.(*ast.StmtFor).Init = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).InitSeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).InitSemiColonTkn = yyDollar[4].token
			yyDollar[9].node.(*ast.StmtFor).Cond = yyDollar[5].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).CondSeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CondSemiColonTkn = yyDollar[6].token
			yyDollar[9].node.(*ast.StmtFor).Loop = yyDollar[7].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).LoopSeparatorTkns = yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CloseParenthesisTkn = yyDollar[8].token
			yyDollar[9].node.(*ast.StmtFor).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			yyVAL.node = yyDollar[9].node
		}
	case 158:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:610
		{
			yyDollar[5].node.(*ast.StmtSwitch).SwitchTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtSwitch).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtSwitch).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtSwitch).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtSwitch).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:620
		{
			yyVAL.node = &ast.StmtBreak{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				BreakTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:629
		{
			yyVAL.node = &ast.StmtContinue{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ContinueTkn:  yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:638
		{
			yyVAL.node = &ast.StmtReturn{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ReturnTkn:    yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:647
		{
			yyDollar[2].node.(*ast.StmtGlobal).GlobalTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtGlobal).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtGlobal).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:655
		{
			yyDollar[2].node.(*ast.StmtStatic).StaticTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtStatic).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtStatic).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:663
		{
			yyDollar[2].node.(*ast.StmtEcho).EchoTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtEcho).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtEcho).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:671
		{
			yyVAL.node = &ast.StmtInlineHtml{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				InlineHtmlTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:679
		{
			yyVAL.node = yylex.(*Parser).builder.NewExpressionStmt(yyDollar[1].node, yyDollar[2].token)
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:683
		{
			yyDollar[3].node.(*ast.StmtUnset).UnsetTkn = yyDollar[1].token
			yyDollar[3].node.(*ast.StmtUnset).OpenParenthesisTkn = yyDollar[2].token
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[4].token)
			}
			yyDollar[3].node.(*ast.StmtUnset).CloseParenthesisTkn = yyDollar[5].token
			yyDollar[3].node.(*ast.StmtUnset).SemiColonTkn = yyDollar[6].token
			yyDollar[3].node.(*ast.StmtUnset).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			yyVAL.node = yyDollar[3].node
		}
	case 168:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:696
		{
			foreach := yyDollar[7].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[7].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Var = yyDollar[5].node
			foreach.CloseParenthesisTkn = yyDollar[6].token

			if val, ok := yyDollar[5].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 169:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:715
		{
			foreach := yyDollar[9].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Key = yyDollar[5].node
			foreach.DoubleArrowTkn = yyDollar[6].token
			foreach.Var = yyDollar[7].node
			foreach.CloseParenthesisTkn = yyDollar[8].token

			if val, ok := yyDollar[7].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:736
		{
			yyDollar[5].node.(*ast.StmtDeclare).DeclareTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtDeclare).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtDeclare).Consts = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[5].node.(*ast.StmtDeclare).SeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[5].node.(*ast.StmtDeclare).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtDeclare).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:747
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 172:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:754
		{
			yyVAL.node = yylex.(*Parser).builder.NewTry(yyDollar[1].token, yyDollar[2].token, yyDollar[3].list, yyDollar[4].token, yyDollar[5].node, yyDollar[6].node)
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:758
		{
			yyVAL.node = &ast.StmtGoto{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				GotoTkn:  yyDollar[1].token,
				Label: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:771
		{
			yyVAL.node = &ast.StmtLabel{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				ColonTkn: yyDollar[2].token,
			}
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:784
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:785
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, nil, yyDollar[2].node)
		}
	case 177:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:790
		{
			yyVAL.node = yylex.(*Parser).builder.NewCatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:794
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:795
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:800
		{
			yyVAL.node = nil
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:804
		{
			yyVAL.node = &ast.StmtFinally{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				FinallyTkn:           yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:817
		{
			yyVAL.node = &ast.StmtUnset{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:823
		{
			yyDollar[1].node.(*ast.StmtUnset).Vars = append(yyDollar[1].node.(*ast.StmtUnset).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:832
		{
			yyVAL.node = yyDollar[1].node
		}
	case 185:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:837
		{
			yyVAL.node = yylex.(*Parser).builder.NewFunction(nil, yyDollar[1].token, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].token, yyDollar[7].node, yyDollar[8].token, yyDollar[9].list, yyDollar[10].token)
		}
	case 186:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:840
		{
			yyVAL.node = yylex.(*Parser).builder.NewFunction(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token, yyDollar[8].node, yyDollar[9].token, yyDollar[10].list, yyDollar[11].token)
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:844
		{
			yyVAL.token = nil
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:845
		{
			yyVAL.token = yyDollar[1].token
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:849
		{
			yyVAL.token = nil
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:850
		{
			yyVAL.token = yyDollar[1].token
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:854
		{
			yyVAL.list = nil
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:855
		{
			yyVAL.list = yyDollar[1].list
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:859
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:860
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:864
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:865
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 197:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:871
		{
			yyVAL.node = yylex.(*Parser).builder.NewClass(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].node, yyDollar[7].token, yyDollar[8].list, yyDollar[9].token)
		}
	case 198:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:877
		{
			yyVAL.node = yylex.(*Parser).builder.NewTrait(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].list, yyDollar[6].token)
		}
	case 199:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:883
		{
			yyVAL.node = yylex.(*Parser).builder.NewInterface(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token, yyDollar[6].list, yyDollar[7].token)
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:888
		{
			yyVAL.node = nil
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:892
		{
			yyVAL.node = &ast.StmtClass{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExtendsTkn: yyDollar[1].token,
				Extends:    yyDollar[2].node,
			}
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:903
		{
			yyVAL.node = nil
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:907
		{
			yyVAL.node = &ast.StmtInterface{
				Position:             yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ExtendsTkn:           yyDollar[1].token,
				Extends:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ExtendsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:919
		{
			yyVAL.node = nil
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:923
		{
			yyVAL.node = &ast.StmtClass{
				Position:                yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ImplementsTkn:           yyDollar[1].token,
				Implements:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ImplementsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:935
		{
			yyVAL.node = yyDollar[1].node
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:939
		{
			yyVAL.node = &ast.StmtForeach{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Var:          yyDollar[2].node,
			}
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:947
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ListTkn:         yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:958
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:971
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:978
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForTkn:    yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:994
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1001
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForeachTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1017
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1024
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndDeclareTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1040
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Cases:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1049
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CaseSeparatorTkn:     yyDollar[2].token,
				Cases:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1059
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn:     yyDollar[1].token,
				Cases:        yyDollar[2].list,
				EndSwitchTkn: yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1069
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				ColonTkn:         yyDollar[1].token,
				CaseSeparatorTkn: yyDollar[2].token,
				Cases:            yyDollar[3].list,
				EndSwitchTkn:     yyDollar[4].token,
				SemiColonTkn:     yyDollar[5].token,
			}
		}
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1083
		{
			yyVAL.list = nil
		}
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1087
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtCase{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list),
				CaseTkn:          yyDollar[2].token,
				Cond:             yyDollar[3].node,
				CaseSeparatorTkn: yyDollar[4].token,
				Stmts:            yyDollar[5].list,
			})
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1097
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtDefault{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				DefaultTkn:       yyDollar[2].token,
				CaseSeparatorTkn: yyDollar[3].token,
				Stmts:            yyDollar[4].list,
			})
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1108
		{
			yyVAL.token = yyDollar[1].token
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1109
		{
			yyVAL.token = yyDollar[1].token
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1114
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1121
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndWhileTkn:  yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1137
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				Stmt:                yyDollar[5].node,
			}
		}
	case 228:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1148
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				Stmt:                yyDollar[6].node,
			})

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)

			yyVAL.node = yyDollar[1].node
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1166
		{
			yyVAL.node = yyDollar[1].node
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1170
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[3].node),
				ElseTkn:  yyDollar[2].token,
				Stmt:     yyDollar[3].node,
			}

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 231:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1185
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[6].list),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				ColonTkn:            yyDollar[5].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[6].list),
					Stmts:    yyDollar[6].list,
				},
			}
		}
	case 232:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1200
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[7].list),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[7].list),
					Stmts:    yyDollar[7].list,
				},
			})

			yyVAL.node = yyDollar[1].node
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1220
		{
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[2].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[3].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			yyVAL.node = yyDollar[1].node
		}
	case 234:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1228
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				ElseTkn:  yyDollar[2].token,
				ColonTkn: yyDollar[3].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[4].list),
					Stmts:    yyDollar[4].list,
				},
			}
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[5].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[6].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token)

			yyVAL.node = yyDollar[1].node
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1247
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1248
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1252
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1253
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1257
		{
			yyVAL.node = nil
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1258
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1259
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1260
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 243:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1266
		{
			yyVAL.node = yylex.(*Parser).builder.NewParameter(yyDollar[1].list, yyDollar[2].node, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, nil, nil, false)
		}
	case 244:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1269
		{
			yyVAL.node = yylex.(*Parser).builder.NewParameter(yyDollar[1].list, yyDollar[2].node, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].token, yyDollar[8].node, true)
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1273
		{
			yyVAL.node = yyDollar[1].node
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1274
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1275
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1279
		{
			yyVAL.node = yyDollar[1].node
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1280
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1284
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1285
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1286
		{
			yyVAL.node = yyDollar[1].node
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1290
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1291
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1296
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1298
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1302
		{
			yyVAL.node = yyDollar[1].node
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1303
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1304
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 260:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1308
		{
			yyVAL.node = nil
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1309
		{
			yyVAL.node = yyDollar[1].node
		}
	case 262:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1313
		{
			yyVAL.node = &ReturnType{}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1314
		{
			yyVAL.node = yylex.(*Parser).builder.NewReturnType(yyDollar[1].token, yyDollar[2].node)
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1319
		{
			yyVAL.node = &ArgumentList{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				CloseParenthesisTkn: yyDollar[2].token,
			}
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1327
		{
			argumentList := yyDollar[2].node.(*ArgumentList)
			argumentList.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			argumentList.OpenParenthesisTkn = yyDollar[1].token
			if yyDollar[3].token != nil {
				argumentList.SeparatorTkns = append(argumentList.SeparatorTkns, yyDollar[3].token)
			}
			argumentList.CloseParenthesisTkn = yyDollar[4].token

			yyVAL.node = argumentList
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1342
		{
			yyVAL.node = &ArgumentList{
				Arguments: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1348
		{
			yyDollar[1].node.(*ArgumentList).SeparatorTkns = append(yyDollar[1].node.(*ArgumentList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ArgumentList).Arguments = append(yyDollar[1].node.(*ArgumentList).Arguments, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1357
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgument(yyDollar[1].node)
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1358
		{
			yyVAL.node = yylex.(*Parser).builder.NewVariadicArgument(yyDollar[1].token, yyDollar[2].node)
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1359
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamedArgument(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node)
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1364
		{
			yyDollar[1].node.(*ast.StmtGlobal).Vars = append(yyDollar[1].node.(*ast.StmtGlobal).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1371
		{
			yyVAL.node = &ast.StmtGlobal{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1379
		{
			yyVAL.node = yyDollar[1].node
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1384
		{
			yyDollar[1].node.(*ast.StmtStatic).Vars = append(yyDollar[1].node.(*ast.StmtStatic).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1391
		{
			yyVAL.node = &ast.StmtStatic{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1400
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1414
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1432
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1433
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1438
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyList(yyDollar[1].list, yyDollar[2].list, yyDollar[3].node, yyDollar[4].node, yyDollar[5].token)
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1440
		{
			yyVAL.node = yylex.(*Parser).builder.NewClassConstList(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token)
		}
	case 282:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:1442
		{
			yyVAL.node = yylex.(*Parser).builder.NewClassMethod(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].node, yyDollar[8].token, yyDollar[9].node, yyDollar[10].node)
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1444
		{
			traitUse := &ast.StmtTraitUse{
				Position:      yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				UseTkn:        yyDollar[1].token,
				Traits:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}

			switch n := yyDollar[3].node.(type) {
			case *TraitAdaptationList:
				traitUse.OpenCurlyBracketTkn = n.OpenCurlyBracketTkn
				traitUse.Adaptations = n.Adaptations
				traitUse.CloseCurlyBracketTkn = n.CloseCurlyBracketTkn
			case *ast.StmtNop:
				traitUse.SemiColonTkn = n.SemiColonTkn
			}

			yyVAL.node = traitUse
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1466
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1467
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1472
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1479
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CloseCurlyBracketTkn: yyDollar[2].token,
			}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1487
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Adaptations:          yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1498
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1499
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1504
		{
			yyDollar[1].node.(*ast.StmtTraitUsePrecedence).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1510
		{
			yyDollar[1].node.(*ast.StmtTraitUseAlias).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1519
		{
			yyVAL.node = &ast.StmtTraitUsePrecedence{
				Position:       yylex.(*Parser).builder.Pos.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].node.(*ParserSeparatedList).Items),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				InsteadofTkn:   yyDollar[2].token,
				Insteadof:      yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1534
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1549
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1564
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1580
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
			}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1594
		{
			yyVAL.node = &TraitMethodRef{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1605
		{
			yyVAL.node = yyDollar[1].node
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1612
		{
			yyVAL.node = &TraitMethodRef{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1628
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1635
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1646
		{
			yyVAL.list = yyDollar[1].list
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1647
		{
			yyVAL.list = []ast.Vertex{yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)}
		}
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1651
		{
			yyVAL.list = nil
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1652
		{
			yyVAL.list = yyDollar[1].list
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1656
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1657
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1661
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1662
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1663
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1664
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1665
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1666
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1670
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1671
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1676
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				Expr: nil,
			}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1691
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1709
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1710
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1715
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1731
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1747
		{
			yyDollar[1].node.(*ast.StmtEcho).Exprs = append(yyDollar[1].node.(*ast.StmtEcho).Exprs, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1754
		{
			yyVAL.node = &ast.StmtEcho{
				Exprs: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1762
		{
			yyVAL.node = yyDollar[1].node
		}
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1766
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1767
		{
			yyVAL.node = yyDollar[1].node
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1771
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1772
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 330:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1778
		{
			yyVAL.node = yylex.(*Parser).builder.NewAnonClass(yyDollar[1].list, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node, yyDollar[5].node, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1783
		{
			if yyDollar[3].node != nil {
				yyVAL.node = &ast.ExprNew{
					Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
					NewTkn:              yyDollar[1].token,
					Class:               yyDollar[2].node,
					OpenParenthesisTkn:  yyDollar[3].node.(*ArgumentList).OpenParenthesisTkn,
					Args:                yyDollar[3].node.(*ArgumentList).Arguments,
					SeparatorTkns:       yyDollar[3].node.(*ArgumentList).SeparatorTkns,
					CloseParenthesisTkn: yyDollar[3].node.(*ArgumentList).CloseParenthesisTkn,
				}
			} else {
				yyVAL.node = &ast.ExprNew{
					Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
					NewTkn:   yyDollar[1].token,
					Class:    yyDollar[2].node,
				}
			}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1803
		{
			yyVAL.node = &ast.ExprNew{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				NewTkn:   yyDollar[1].token,
				Class:    yyDollar[2].node,
			}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1814
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1818
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1819
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 336:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1824
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token)
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1829
		{
			yyVAL.node = nil
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1831
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1836
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1838
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1843
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(nil, nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1845
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(yyDollar[1].token, yyDollar[2].token, nil, yyDollar[3].token, yyDollar[4].node)
		}
	case 343:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1850
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
				EqualTkn: yyDollar[5].token,
				Expr:     yyDollar[6].node,
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1866
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
					OpenBracketTkn:  yyDollar[1].token,
					Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[3].token,
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1881
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1890
		{
			yyVAL.node = &ast.ExprAssignReference{
				Position:     yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Var:          yyDollar[1].node,
				EqualTkn:     yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Expr:         yyDollar[4].node,
			}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1900
		{
			yyVAL.node = &ast.ExprClone{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CloneTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1908
		{
			yyVAL.node = &ast.ExprAssignPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1917
		{
			yyVAL.node = &ast.ExprAssignMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1926
		{
			yyVAL.node = &ast.ExprAssignMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1935
		{
			yyVAL.node = &ast.ExprAssignPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1944
		{
			yyVAL.node = &ast.ExprAssignDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1953
		{
			yyVAL.node = &ast.ExprAssignConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1962
		{
			yyVAL.node = &ast.ExprAssignMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1971
		{
			yyVAL.node = &ast.ExprAssignBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1980
		{
			yyVAL.node = &ast.ExprAssignBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1989
		{
			yyVAL.node = &ast.ExprAssignBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1998
		{
			yyVAL.node = &ast.ExprAssignShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2007
		{
			yyVAL.node = &ast.ExprAssignShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2016
		{
			yyVAL.node = &ast.ExprAssignCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2025
		{
			yyVAL.node = &ast.ExprPostInc{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				IncTkn:   yyDollar[2].token,
			}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2033
		{
			yyVAL.node = &ast.ExprPreInc{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2041
		{
			yyVAL.node = &ast.ExprPostDec{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				DecTkn:   yyDollar[2].token,
			}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2049
		{
			yyVAL.node = &ast.ExprPreDec{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DecTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2057
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2066
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2075
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2084
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2093
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2102
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2111
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2120
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2129
		{
			yyVAL.node = &ast.ExprBinaryConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2138
		{
			yyVAL.node = &ast.ExprBinaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2147
		{
			yyVAL.node = &ast.ExprBinaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2156
		{
			yyVAL.node = &ast.ExprBinaryMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2165
		{
			yyVAL.node = &ast.ExprBinaryPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2174
		{
			yyVAL.node = &ast.ExprBinaryDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2183
		{
			yyVAL.node = &ast.ExprBinaryMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2192
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2201
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2210
		{
			yyVAL.node = &ast.ExprUnaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PlusTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2218
		{
			yyVAL.node = &ast.ExprUnaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				MinusTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2226
		{
			yyVAL.node = &ast.ExprBooleanNot{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExclamationTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2234
		{
			yyVAL.node = &ast.ExprBitwiseNot{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				TildaTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2242
		{
			yyVAL.node = &ast.ExprBinaryIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2251
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2260
		{
			yyVAL.node = &ast.ExprBinaryEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2269
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2278
		{
			yyVAL.node = &ast.ExprBinarySmaller{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2287
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2296
		{
			yyVAL.node = &ast.ExprBinaryGreater{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2305
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2314
		{
			yyVAL.node = &ast.ExprBinarySpaceship{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2323
		{
			yyVAL.node = &ast.ExprInstanceOf{
				Position:      yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Expr:          yyDollar[1].node,
				InstanceOfTkn: yyDollar[2].token,
				Class:         yyDollar[3].node,
			}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2332
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2341
		{
			yyVAL.node = yyDollar[1].node
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2345
		{
			yyVAL.node = yyDollar[1].node
		}
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:2349
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[5].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				IfTrue:      yyDollar[3].node,
				ColonTkn:    yyDollar[4].token,
				IfFalse:     yyDollar[5].node,
			}
		}
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2360
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				ColonTkn:    yyDollar[3].token,
				IfFalse:     yyDollar[4].node,
			}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2370
		{
			yyVAL.node = &ast.ExprBinaryCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2379
		{
			yyVAL.node = yyDollar[1].node
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2383
		{
			yyVAL.node = &ast.ExprCastInt{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2391
		{
			yyVAL.node = &ast.ExprCastDouble{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2399
		{
			yyVAL.node = &ast.ExprCastString{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2407
		{
			yyVAL.node = &ast.ExprCastArray{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2415
		{
			yyVAL.node = &ast.ExprCastObject{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2423
		{
			yyVAL.node = &ast.ExprCastBool{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2431
		{
			yyVAL.node = &ast.ExprCastUnset{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2439
		{
			exit := &ast.ExprExit{
				ExitTkn: yyDollar[1].token,
			}

			if yyDollar[2].node == nil {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token)
			} else {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				exit.OpenParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).OpenParenthesisTkn
				exit.Expr = yyDollar[2].node.(*ast.ExprBrackets).Expr
				exit.CloseParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).CloseParenthesisTkn
			}

			yyVAL.node = exit
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2456
		{
			yyVAL.node = &ast.ExprErrorSuppress{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AtTkn:    yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2464
		{
			yyVAL.node = yyDollar[1].node
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2468
		{
			yyVAL.node = &ast.ExprShellExec{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBacktickTkn:  yyDollar[1].token,
				Parts:            yyDollar[2].list,
				CloseBacktickTkn: yyDollar[3].token,
			}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2477
		{
			yyVAL.node = &ast.ExprPrint{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PrintTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2485
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				YieldTkn: yyDollar[1].token,
			}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2492
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldTkn: yyDollar[1].token,
				Val:      yyDollar[2].node,
			}
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2500
		{
			yyVAL.node = &ast.ExprYield{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				YieldTkn:       yyDollar[1].token,
				Key:            yyDollar[2].node,
				DoubleArrowTkn: yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2510
		{
			yyVAL.node = &ast.ExprYieldFrom{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldFromTkn: yyDollar[1].token,
				Expr:         yyDollar[2].node,
			}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2518
		{
			yyVAL.node = yylex.(*Parser).builder.NewThrowExpr(yyDollar[1].token, yyDollar[2].node)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2522
		{
			yyVAL.node = yyDollar[1].node
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2526
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			}

			yyVAL.node = yyDollar[2].node
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2541
		{
			yyVAL.node = yyDollar[1].node
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2543
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[2].node)
				n.AttrGroups = yyDollar[1].list
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[2].node)
				n.AttrGroups = yyDollar[1].list
			}

			yyVAL.node = yyDollar[2].node
		}
	case 424:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:2559
		{
			closure := yyDollar[7].node.(*ast.ExprClosure)

			closure.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token)
			closure.FunctionTkn = yyDollar[1].token
			closure.AmpersandTkn = yyDollar[2].token
			closure.OpenParenthesisTkn = yyDollar[4].token
			closure.Params = yyDollar[5].node.(*ParserSeparatedList).Items
			closure.SeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			closure.CloseParenthesisTkn = yyDollar[6].token
			closure.ColonTkn = yyDollar[8].node.(*ReturnType).ColonTkn
			closure.ReturnType = yyDollar[8].node.(*ReturnType).Type
			closure.OpenCurlyBracketTkn = yyDollar[9].token
			closure.Stmts = yyDollar[10].list
			closure.CloseCurlyBracketTkn = yyDollar[11].token

			yyVAL.node = closure
		}
	case 425:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:2578
		{
			yyVAL.node = &ast.ExprArrowFunction{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node),
				FnTkn:               yyDollar[1].token,
				AmpersandTkn:        yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Params:              yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[6].node.(*ReturnType).Type,
				DoubleArrowTkn:      yyDollar[8].token,
				Expr:                yyDollar[9].node,
			}
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2600
		{
			yyVAL.token = nil
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2601
		{
			yyVAL.token = yyDollar[1].token
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2606
		{
			yyVAL.node = &ast.ExprClosure{}
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2608
		{
			yyVAL.node = &ast.ExprClosure{
				UseTkn:                 yyDollar[1].token,
				UseOpenParenthesisTkn:  yyDollar[2].token,
				Uses:                   yyDollar[3].node.(*ParserSeparatedList).Items,
				UseSeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				UseCloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2620
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2624
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2625
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2630
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2644
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				AmpersandTkn: yyDollar[1].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						IdentifierTkn: yyDollar[2].token,
						Value:         yyDollar[2].token.Value,
					},
				},
			}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2662
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2673
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2694
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2707
		{
			yyVAL.node = yyDollar[1].node
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2708
		{
			yyVAL.node = yyDollar[1].node
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2712
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2713
		{
			yyVAL.node = yyDollar[1].node
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2717
		{
			yyVAL.node = yyDollar[1].node
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2718
		{
			yyVAL.node = yyDollar[1].node
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2719
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2723
		{
			yyVAL.node = nil
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2724
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2729
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2733
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
			}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2743
		{
			yyVAL.list = yyDollar[1].list
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2749
		{
			yyVAL.node = nil
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2750
		{
			yyVAL.node = yyDollar[1].node
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2755
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ArrayTkn:        yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2766
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2776
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2784
		{
			yyVAL.node = &ast.ScalarEncapsed{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenQuoteTkn:  yyDollar[1].token,
				Parts:         yyDollar[2].list,
				CloseQuoteTkn: yyDollar[3].token,
			}
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2796
		{
			yyVAL.node = &ast.ScalarLnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2804
		{
			yyVAL.node = &ast.ScalarDnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2812
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:       yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn: yyDollar[1].token,
				Parts: []ast.Vertex{
					&ast.ScalarEncapsedStringPart{
						Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						EncapsedStrTkn: yyDollar[2].token,
						Value:          yyDollar[2].token.Value,
					},
				},
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2827
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenHeredocTkn:  yyDollar[1].token,
				CloseHeredocTkn: yyDollar[2].token,
			}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2835
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn:  yyDollar[1].token,
				Parts:           yyDollar[2].list,
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2843
		{
			yyVAL.node = yyDollar[1].node
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2844
		{
			yyVAL.node = yyDollar[1].node
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2845
		{
			yyVAL.node = yyDollar[1].node
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2850
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2865
		{
			yyVAL.node = yylex.(*Parser).builder.NewConstFetch(yyDollar[1].node)
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2866
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2867
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2868
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2869
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2870
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2871
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2872
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2873
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2877
		{
			yyVAL.node = yyDollar[1].node
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2878
		{
			yyVAL.node = yyDollar[1].node
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2882
		{
			yyVAL.node = nil
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2883
		{
			yyVAL.node = yyDollar[1].node
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2887
		{
			yyVAL.node = yyDollar[1].node
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2888
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2889
		{
			yyVAL.node = yyDollar[1].node
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2890
		{
			yyVAL.node = yyDollar[1].node
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2894
		{
			yyVAL.node = yyDollar[1].node
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2895
		{
			yyVAL.node = yyDollar[1].node
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2899
		{
			yyVAL.node = yyDollar[1].node
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2900
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2901
		{
			yyVAL.node = yyDollar[1].node
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2906
		{
			yyVAL.node = yyDollar[1].node
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2908
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2918
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2930
		{
			yyVAL.node = yylex.(*Parser).builder.NewMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2932
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafeMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2934
		{
			yyVAL.node = yyDollar[1].node
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2939
		{
			yyVAL.node = yyDollar[1].node
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2941
		{
			yyVAL.node = yyDollar[1].node
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2943
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2945
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2950
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2961
		{
			yyVAL.node = &ast.ExprVariable{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				DollarTkn:            yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Name:                 yyDollar[3].node,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2971
		{
			yyVAL.node = &ast.ExprVariable{
				Position:  yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DollarTkn: yyDollar[1].token,
				Name:      yyDollar[2].node,
			}
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2982
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2994
		{
			yyVAL.node = yyDollar[1].node
		}
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2998
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3008
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3020
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3024
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3028
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3037
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3048
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3049
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3050
		{
			yyVAL.node = yyDollar[1].node
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3054
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3055
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3056
		{
			yyVAL.node = yyDollar[1].node
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3061
		{
			pairList := yyDollar[1].node.(*ParserSeparatedList)
			fistPair := pairList.Items[0].(*ast.ExprArrayItem)

			if fistPair.Key == nil && fistPair.Val == nil && len(pairList.Items) == 1 {
				pairList.Items = nil
			}

			yyVAL.node = yyDollar[1].node
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3074
		{
			yyVAL.node = &ast.ExprArrayItem{}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3075
		{
			yyVAL.node = yyDollar[1].node
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3080
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3082
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3087
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val:            yyDollar[3].node,
			}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3096
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Val:      yyDollar[1].node,
			}
		}
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3103
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				AmpersandTkn:   yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3113
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Val:          yyDollar[2].node,
			}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3121
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:    yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				EllipsisTkn: yyDollar[1].token,
				Val:         yyDollar[2].node,
			}
		}
	case 525:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:3129
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[3].token, yyDollar[6].token),
					ListTkn:         yyDollar[3].token,
					OpenBracketTkn:  yyDollar[4].token,
					Items:           yyDollar[5].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[6].token,
				},
			}
		}
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3145
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
			}
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3162
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3166
		{
			yyVAL.list = append(
				yyDollar[1].list,
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					EncapsedStrTkn: yyDollar[2].token,
					Value:          yyDollar[2].token.Value,
				},
			)
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3177
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3181
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
				yyDollar[2].node,
			}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3195
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3206
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3223
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3227
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3231
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name:                      yyDollar[2].node,
				CloseCurlyBracketTkn:      yyDollar[3].token,
			}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3240
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:3253
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenSquareBracketTkn:  yyDollar[3].token,
				Dim:                   yyDollar[4].node,
				CloseSquareBracketTkn: yyDollar[5].token,
				CloseCurlyBracketTkn:  yyDollar[6].token,
			}
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3269
		{
			yyVAL.node = &ast.ScalarEncapsedStringBrackets{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Var:                  yyDollar[2].node,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3281
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3289
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(string(yyDollar[1].token.Value)); err == nil {
				yyVAL.node = &ast.ScalarLnumber{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					NumberTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					StringTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			}
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3306
		{
			_, err := strconv.Atoi(string(yyDollar[2].token.Value))
			isInt := err == nil

			if isInt {
				yyVAL.node = &ast.ExprUnaryMinus{
					Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn: yyDollar[1].token,
					Expr: &ast.ScalarLnumber{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						NumberTkn: yyDollar[2].token,
						Value:     yyDollar[2].token.Value,
					},
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn:  yyDollar[1].token,
					StringTkn: yyDollar[2].token,
					Value:     append([]byte("-"), yyDollar[2].token.Value...),
				}
			}
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3330
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:3344
		{
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[4].token)
			}

			yyVAL.node = &ast.ExprIsset{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				IssetTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Vars:                yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
			}
		}
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3359
		{
			yyVAL.node = &ast.ExprEmpty{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EmptyTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3369
		{
			yyVAL.node = &ast.ExprInclude{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3377
		{
			yyVAL.node = &ast.ExprIncludeOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3385
		{
			yyVAL.node = &ast.ExprEval{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EvalTkn:             yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3395
		{
			yyVAL.node = &ast.ExprRequire{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3403
		{
			yyVAL.node = &ast.ExprRequireOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3413
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3414
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3418
		{
			yyVAL.node = yyDollar[1].node
		}
	}
	goto yystack /* stack new state and value */
}
