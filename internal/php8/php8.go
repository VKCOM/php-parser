// Code generated by goyacc -o internal/php8/php8.go internal/php8/php8.y. DO NOT EDIT.

// line internal/php8/php8.y:1

package php8

import __yyfmt__ "fmt"

// line internal/php8/php8.y:3

import (
	"strconv"

	"github.com/z7zmey/php-parser/pkg/ast"
	"github.com/z7zmey/php-parser/pkg/token"
)

// line internal/php8/php8.y:13
type yySymType struct {
	yys   int
	node  ast.Vertex
	token *token.Token
	list  []ast.Vertex
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_FN = 57380
const T_CONST = 57381
const T_RETURN = 57382
const T_TRY = 57383
const T_CATCH = 57384
const T_FINALLY = 57385
const T_THROW = 57386
const T_USE = 57387
const T_INSTEADOF = 57388
const T_GLOBAL = 57389
const T_VAR = 57390
const T_UNSET = 57391
const T_ISSET = 57392
const T_EMPTY = 57393
const T_HALT_COMPILER = 57394
const T_CLASS = 57395
const T_TRAIT = 57396
const T_INTERFACE = 57397
const T_EXTENDS = 57398
const T_IMPLEMENTS = 57399
const T_OBJECT_OPERATOR = 57400
const T_DOUBLE_ARROW = 57401
const T_LIST = 57402
const T_ARRAY = 57403
const T_CALLABLE = 57404
const T_CLASS_C = 57405
const T_TRAIT_C = 57406
const T_METHOD_C = 57407
const T_FUNC_C = 57408
const T_LINE = 57409
const T_FILE = 57410
const T_COMMENT = 57411
const T_DOC_COMMENT = 57412
const T_OPEN_TAG = 57413
const T_OPEN_TAG_WITH_ECHO = 57414
const T_CLOSE_TAG = 57415
const T_WHITESPACE = 57416
const T_START_HEREDOC = 57417
const T_END_HEREDOC = 57418
const T_DOLLAR_OPEN_CURLY_BRACES = 57419
const T_CURLY_OPEN = 57420
const T_PAAMAYIM_NEKUDOTAYIM = 57421
const T_NAMESPACE = 57422
const T_NS_C = 57423
const T_DIR = 57424
const T_NS_SEPARATOR = 57425
const T_ELLIPSIS = 57426
const T_EVAL = 57427
const T_REQUIRE = 57428
const T_REQUIRE_ONCE = 57429
const T_LOGICAL_OR = 57430
const T_LOGICAL_XOR = 57431
const T_LOGICAL_AND = 57432
const T_INSTANCEOF = 57433
const T_NEW = 57434
const T_CLONE = 57435
const T_ELSEIF = 57436
const T_ELSE = 57437
const T_ENDIF = 57438
const T_PRINT = 57439
const T_YIELD = 57440
const T_STATIC = 57441
const T_ABSTRACT = 57442
const T_FINAL = 57443
const T_PRIVATE = 57444
const T_PROTECTED = 57445
const T_PUBLIC = 57446
const T_INC = 57447
const T_DEC = 57448
const T_YIELD_FROM = 57449
const T_INT_CAST = 57450
const T_DOUBLE_CAST = 57451
const T_STRING_CAST = 57452
const T_ARRAY_CAST = 57453
const T_OBJECT_CAST = 57454
const T_BOOL_CAST = 57455
const T_UNSET_CAST = 57456
const T_COALESCE = 57457
const T_SPACESHIP = 57458
const T_NOELSE = 57459
const T_PLUS_EQUAL = 57460
const T_MINUS_EQUAL = 57461
const T_MUL_EQUAL = 57462
const T_POW_EQUAL = 57463
const T_DIV_EQUAL = 57464
const T_CONCAT_EQUAL = 57465
const T_MOD_EQUAL = 57466
const T_AND_EQUAL = 57467
const T_OR_EQUAL = 57468
const T_XOR_EQUAL = 57469
const T_SL_EQUAL = 57470
const T_SR_EQUAL = 57471
const T_COALESCE_EQUAL = 57472
const T_BOOLEAN_OR = 57473
const T_BOOLEAN_AND = 57474
const T_POW = 57475
const T_SL = 57476
const T_SR = 57477
const T_IS_IDENTICAL = 57478
const T_IS_NOT_IDENTICAL = 57479
const T_IS_EQUAL = 57480
const T_IS_NOT_EQUAL = 57481
const T_IS_SMALLER_OR_EQUAL = 57482
const T_IS_GREATER_OR_EQUAL = 57483
const T_NULLSAFE_OBJECT_OPERATOR = 57484

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_FN",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_COALESCE_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"T_NULLSAFE_OBJECT_OPERATOR",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

// line internal/php8/php8.y:4398

// line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	-2, 0,
	-1, 44,
	58, 429,
	79, 429,
	142, 429,
	145, 429,
	151, 429,
	-2, 424,
	-1, 48,
	149, 432,
	-2, 442,
	-1, 85,
	58, 431,
	79, 431,
	142, 431,
	145, 431,
	149, 434,
	151, 431,
	-2, 419,
	-1, 109,
	79, 392,
	-2, 421,
	-1, 234,
	58, 429,
	79, 429,
	142, 429,
	145, 429,
	151, 429,
	-2, 318,
	-1, 237,
	149, 434,
	-2, 431,
	-1, 240,
	58, 429,
	79, 429,
	142, 429,
	145, 429,
	151, 429,
	-2, 320,
	-1, 359,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 342,
	-1, 360,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 343,
	-1, 361,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 344,
	-1, 362,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 345,
	-1, 363,
	140, 0,
	141, 0,
	168, 0,
	169, 0,
	-2, 346,
	-1, 364,
	140, 0,
	141, 0,
	168, 0,
	169, 0,
	-2, 347,
	-1, 365,
	140, 0,
	141, 0,
	168, 0,
	169, 0,
	-2, 348,
	-1, 366,
	140, 0,
	141, 0,
	168, 0,
	169, 0,
	-2, 349,
	-1, 367,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 350,
	-1, 374,
	150, 166,
	161, 166,
	-2, 429,
	-1, 420,
	150, 472,
	152, 472,
	161, 472,
	-2, 429,
	-1, 425,
	58, 430,
	79, 430,
	142, 430,
	145, 430,
	149, 433,
	151, 430,
	-2, 352,
	-1, 440,
	149, 458,
	-2, 422,
	-1, 441,
	149, 460,
	-2, 449,
	-1, 521,
	149, 458,
	-2, 423,
	-1, 522,
	149, 460,
	-2, 450,
	-1, 540,
	150, 216,
	-2, 221,
	-1, 548,
	148, 79,
	-2, 83,
	-1, 552,
	148, 13,
	-2, 395,
	-1, 554,
	148, 46,
	-2, 370,
	-1, 555,
	148, 71,
	-2, 391,
	-1, 564,
	148, 65,
	-2, 407,
	-1, 565,
	148, 66,
	-2, 408,
	-1, 566,
	148, 67,
	-2, 409,
	-1, 567,
	148, 62,
	-2, 410,
	-1, 568,
	148, 64,
	-2, 411,
	-1, 569,
	148, 63,
	-2, 412,
	-1, 570,
	148, 68,
	-2, 413,
	-1, 571,
	148, 61,
	-2, 414,
	-1, 572,
	149, 379,
	-2, 42,
	-1, 573,
	149, 379,
	-2, 69,
	-1, 611,
	150, 216,
	-2, 221,
	-1, 637,
	149, 433,
	-2, 430,
	-1, 706,
	150, 186,
	-2, 429,
	-1, 714,
	150, 216,
	-2, 221,
	-1, 730,
	150, 471,
	152, 471,
	161, 471,
	-2, 429,
	-1, 768,
	150, 187,
	-2, 429,
	-1, 784,
	37, 272,
	39, 272,
	-2, 269,
	-1, 798,
	94, 211,
	95, 211,
	96, 211,
	-2, 0,
	-1, 827,
	150, 186,
	-2, 429,
	-1, 829,
	150, 189,
	-2, 403,
	-1, 844,
	94, 212,
	95, 212,
	96, 212,
	-2, 0,
	-1, 894,
	31, 202,
	32, 202,
	33, 202,
	146, 202,
	-2, 0,
	-1, 925,
	29, 77,
	-2, 83,
	-1, 930,
	31, 201,
	32, 201,
	33, 201,
	146, 201,
	-2, 0,
	-1, 958,
	150, 216,
	-2, 221,
}

const yyPrivate = 57344

const yyLast = 7948

var yyAct = [...]int{

	28, 132, 803, 667, 881, 904, 786, 918, 877, 618,
	445, 823, 880, 858, 288, 671, 328, 719, 113, 670,
	705, 109, 140, 140, 140, 687, 686, 153, 669, 750,
	117, 123, 544, 605, 533, 188, 225, 761, 613, 444,
	373, 381, 672, 319, 83, 323, 5, 322, 9, 227,
	8, 383, 191, 229, 233, 411, 152, 241, 242, 243,
	244, 245, 134, 139, 246, 247, 248, 249, 250, 251,
	252, 81, 255, 149, 127, 263, 264, 265, 321, 320,
	145, 7, 6, 2, 130, 77, 142, 143, 523, 524,
	278, 279, 439, 281, 282, 129, 914, 911, 269, 898,
	888, 728, 631, 885, 128, 884, 339, 412, 274, 107,
	315, 148, 936, 608, 912, 908, 259, 107, 582, 721,
	721, 809, 340, 937, 314, 754, 235, 235, 913, 909,
	337, 271, 308, 296, 325, 298, 341, 335, 330, 331,
	305, 313, 743, 311, 338, 679, 664, 606, 597, 418,
	327, 336, 107, 192, 745, 314, 342, 343, 344, 345,
	346, 347, 348, 349, 350, 351, 352, 353, 354, 355,
	356, 357, 358, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 307, 369, 371, 829, 375, 905, 641, 377,
	644, 642, 737, 733, 181, 652, 308, 638, 625, 291,
	293, 417, 301, 274, 393, 395, 396, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 648, 222,
	408, 140, 410, 649, 266, 229, 271, 148, 119, 312,
	107, 969, 421, 85, 932, 866, 167, 423, 385, 865,
	229, 44, 413, 389, 856, 181, 845, 804, 833, 899,
	289, 432, 776, 119, 766, 140, 235, 108, 747, 742,
	740, 416, 434, 732, 703, 108, 692, 140, 166, 168,
	169, 273, 440, 521, 682, 639, 424, 534, 535, 415,
	368, 536, 376, 119, 409, 107, 630, 167, 237, 237,
	541, 297, 528, 545, 181, 229, 234, 240, 136, 958,
	108, 114, 235, 223, 674, 675, 221, 873, 831, 165,
	164, 769, 220, 530, 860, 859, 592, 238, 426, 166,
	168, 169, 731, 136, 163, 584, 114, 587, 714, 906,
	438, 576, 549, 643, 235, 433, 167, 170, 171, 294,
	601, 280, 153, 700, 431, 5, 701, 9, 277, 8,
	276, 254, 796, 136, 224, 292, 114, 611, 165, 164,
	595, 520, 531, 593, 540, 422, 390, 295, 166, 168,
	169, 604, 238, 163, 428, 429, 529, 388, 108, 527,
	7, 6, 219, 585, 579, 526, 186, 185, 184, 620,
	783, 621, 681, 785, 622, 623, 673, 138, 602, 591,
	428, 137, 429, 429, 428, 133, 615, 80, 115, 619,
	392, 312, 600, 973, 628, 972, 964, 599, 237, 229,
	633, 947, 610, 229, 190, 946, 374, 931, 617, 300,
	895, 299, 146, 108, 612, 181, 818, 819, 651, 818,
	819, 867, 862, 654, 790, 791, 792, 789, 788, 787,
	855, 815, 797, 765, 764, 762, 760, 757, 596, 636,
	180, 581, 578, 391, 237, 379, 334, 333, 632, 332,
	302, 119, 420, 889, 854, 851, 156, 167, 170, 171,
	172, 173, 174, 175, 177, 179, 846, 811, 650, 167,
	427, 926, 952, 181, 275, 902, 237, 901, 161, 165,
	164, 627, 577, 847, 436, 629, 160, 577, 162, 166,
	168, 169, 176, 178, 163, 260, 290, 836, 180, 577,
	430, 577, 119, 832, 107, 778, 720, 140, 658, 653,
	112, 616, 187, 181, 258, 167, 170, 171, 172, 173,
	174, 175, 177, 179, 116, 122, 193, 680, 198, 199,
	861, 807, 233, 817, 263, 264, 161, 165, 164, 116,
	278, 279, 676, 281, 282, 295, 663, 166, 168, 169,
	176, 178, 163, 111, 310, 167, 119, 678, 274, 950,
	261, 262, 614, 662, 659, 660, 525, 327, 887, 275,
	657, 119, 136, 78, 79, 114, 696, 330, 698, 268,
	119, 271, 267, 767, 702, 587, 118, 587, 310, 384,
	655, 238, 310, 697, 387, 715, 790, 791, 792, 789,
	788, 787, 948, 5, 718, 9, 949, 8, 295, 310,
	414, 414, 729, 676, 691, 310, 619, 752, 694, 285,
	286, 148, 690, 200, 202, 201, 539, 704, 835, 586,
	735, 716, 711, 119, 684, 717, 588, 119, 7, 6,
	326, 236, 685, 239, 306, 534, 590, 304, 725, 260,
	136, 119, 108, 114, 430, 441, 522, 734, 235, 235,
	545, 878, 749, 583, 125, 260, 126, 938, 260, 309,
	283, 312, 840, 688, 839, 676, 850, 758, 125, 741,
	126, 739, 150, 587, 674, 675, 235, 119, 587, 587,
	229, 646, 748, 1, 771, 150, 746, 756, 775, 549,
	753, 260, 38, 136, 773, 774, 114, 645, 798, 799,
	124, 131, 229, 538, 261, 262, 676, 46, 793, 763,
	135, 106, 260, 794, 146, 589, 770, 430, 577, 284,
	261, 262, 537, 261, 262, 135, 106, 783, 777, 260,
	785, 330, 689, 382, 287, 676, 795, 380, 800, 197,
	229, 587, 805, 587, 196, 121, 194, 816, 195, 235,
	812, 802, 810, 189, 808, 784, 261, 262, 826, 751,
	813, 842, 781, 841, 755, 688, 837, 782, 844, 917,
	820, 838, 822, 676, 260, 619, 828, 261, 262, 257,
	824, 790, 791, 792, 789, 788, 787, 713, 256, 857,
	849, 863, 818, 819, 261, 262, 676, 864, 587, 821,
	818, 819, 834, 386, 870, 372, 871, 872, 693, 235,
	237, 237, 890, 971, 853, 848, 699, 883, 374, 706,
	228, 43, 42, 869, 874, 882, 879, 751, 907, 688,
	894, 532, 903, 16, 876, 886, 543, 15, 237, 261,
	262, 893, 868, 151, 640, 272, 730, 897, 49, 48,
	110, 50, 84, 82, 72, 253, 226, 915, 927, 928,
	924, 62, 270, 61, 929, 930, 922, 921, 920, 919,
	891, 780, 147, 934, 935, 144, 45, 923, 772, 824,
	710, 668, 940, 329, 852, 942, 316, 120, 939, 303,
	910, 933, 924, 3, 547, 945, 941, 806, 744, 0,
	0, 0, 0, 656, 0, 0, 414, 414, 661, 923,
	0, 237, 0, 955, 0, 0, 0, 0, 0, 768,
	0, 0, 0, 0, 965, 963, 962, 943, 959, 0,
	961, 0, 966, 0, 275, 0, 0, 967, 0, 0,
	619, 0, 970, 0, 0, 974, 0, 0, 0, 0,
	676, 0, 956, 0, 957, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 559, 560, 552, 464, 94, 95, 548, 827,
	107, 0, 0, 0, 0, 0, 112, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 498, 499,
	500, 501, 502, 490, 491, 572, 573, 493, 494, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 557, 558,
	0, 510, 508, 509, 505, 506, 0, 0, 550, 574,
	504, 571, 567, 568, 569, 564, 565, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 575, 570,
	566, 114, 546, 561, 562, 563, 457, 458, 459, 460,
	556, 551, 465, 466, 467, 553, 554, 555, 447, 448,
	449, 450, 451, 54, 55, 76, 63, 64, 65, 66,
	67, 68, 69, 217, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 0,
	0, 105, 73, 0, 0, 0, 0, 60, 542, 52,
	0, 0, 0, 57, 56, 58, 59, 71, 108, 559,
	560, 552, 464, 94, 95, 548, 0, 107, 0, 0,
	0, 203, 0, 112, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 498, 499, 500, 501, 502,
	490, 491, 572, 573, 493, 494, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 557, 558, 0, 510, 508,
	509, 505, 506, 0, 0, 550, 574, 504, 571, 567,
	568, 569, 564, 565, 783, 0, 0, 785, 0, 0,
	104, 0, 0, 0, 0, 575, 570, 566, 114, 546,
	561, 562, 563, 457, 458, 459, 460, 556, 551, 465,
	466, 467, 553, 554, 555, 447, 448, 449, 450, 451,
	54, 55, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 790, 791,
	792, 789, 788, 787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 73,
	0, 0, 0, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 71, 108, 4, 0, 89, 90,
	70, 47, 94, 95, 36, 875, 107, 0, 27, 0,
	0, 0, 112, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 106, 13, 23, 33, 0, 0, 34, 12,
	0, 24, 0, 29, 87, 88, 10, 39, 40, 41,
	0, 0, 0, 0, 51, 111, 0, 103, 99, 100,
	101, 96, 97, 783, 0, 0, 785, 0, 0, 104,
	0, 0, 0, 0, 11, 102, 98, 114, 0, 91,
	92, 93, 0, 0, 0, 0, 86, 53, 0, 0,
	0, 74, 75, 25, 78, 79, 0, 0, 0, 54,
	55, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 790, 791, 792,
	789, 788, 787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 73, 14,
	683, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 71, 108, 4, 0, 89, 90, 70,
	47, 94, 95, 36, 843, 107, 0, 27, 0, 0,
	0, 112, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 106, 13, 23, 33, 0, 0, 34, 12, 0,
	24, 0, 29, 87, 88, 10, 39, 40, 41, 0,
	0, 0, 0, 51, 111, 0, 103, 99, 100, 101,
	96, 97, 783, 0, 0, 785, 0, 0, 104, 0,
	0, 0, 0, 11, 102, 98, 114, 0, 91, 92,
	93, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	74, 75, 25, 78, 79, 0, 0, 0, 54, 55,
	76, 63, 64, 65, 66, 67, 68, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 790, 791, 792, 789,
	788, 787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 73, 14, 580,
	32, 0, 60, 0, 52, 0, 0, 0, 57, 56,
	58, 59, 71, 108, 4, 0, 89, 90, 70, 47,
	94, 95, 36, 779, 107, 0, 27, 0, 0, 0,
	112, 26, 18, 17, 0, 19, 0, 30, 0, 31,
	0, 0, 20, 0, 0, 0, 21, 22, 35, 37,
	106, 13, 23, 33, 0, 0, 34, 12, 0, 24,
	0, 29, 87, 88, 10, 39, 40, 41, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 11, 102, 98, 114, 0, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 25, 78, 79, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 73, 14, 0, 32,
	0, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 71, 108, 318, 0, 89, 90, 70, 47, 94,
	95, 36, 0, 107, 0, 27, 0, 0, 0, 112,
	26, 18, 17, 0, 19, 0, 30, 0, 31, 0,
	0, 20, 0, 0, 0, 21, 22, 35, 37, 106,
	0, 23, 33, 0, 0, 34, 0, 0, 24, 0,
	29, 87, 88, 324, 39, 40, 41, 0, 0, 0,
	0, 51, 111, 0, 103, 99, 100, 101, 96, 97,
	0, 0, 0, 0, 0, 0, 104, 0, 0, 0,
	0, 136, 102, 98, 114, 0, 91, 92, 93, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 74, 75,
	25, 78, 79, 0, 0, 0, 54, 55, 76, 63,
	64, 65, 66, 67, 68, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 73, 14, 975, 32, 0,
	60, 0, 52, 0, 0, 0, 57, 56, 58, 59,
	71, 108, 318, 0, 89, 90, 70, 47, 94, 95,
	36, 0, 107, 0, 27, 0, 0, 0, 112, 26,
	18, 17, 0, 19, 0, 30, 0, 31, 0, 0,
	20, 0, 0, 0, 21, 22, 35, 37, 106, 0,
	23, 33, 0, 0, 34, 0, 0, 24, 0, 29,
	87, 88, 324, 39, 40, 41, 0, 0, 0, 0,
	51, 111, 0, 103, 99, 100, 101, 96, 97, 0,
	0, 0, 0, 0, 0, 104, 0, 0, 0, 0,
	136, 102, 98, 114, 0, 91, 92, 93, 0, 0,
	0, 0, 86, 53, 0, 0, 0, 74, 75, 25,
	78, 79, 0, 0, 0, 54, 55, 76, 63, 64,
	65, 66, 67, 68, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 73, 14, 968, 32, 0, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 71,
	108, 318, 0, 89, 90, 70, 47, 94, 95, 36,
	0, 107, 0, 27, 0, 0, 0, 112, 26, 18,
	17, 0, 19, 0, 30, 0, 31, 0, 0, 20,
	0, 0, 0, 21, 22, 35, 37, 106, 0, 23,
	33, 0, 0, 34, 0, 0, 24, 0, 29, 87,
	88, 324, 39, 40, 41, 0, 0, 0, 0, 51,
	111, 0, 103, 99, 100, 101, 96, 97, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 0, 0, 136,
	102, 98, 114, 0, 91, 92, 93, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 74, 75, 25, 78,
	79, 0, 0, 0, 54, 55, 76, 63, 64, 65,
	66, 67, 68, 69, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 73, 14, 954, 32, 0, 60, 0,
	52, 0, 0, 0, 57, 56, 58, 59, 71, 108,
	318, 0, 89, 90, 70, 47, 94, 95, 36, 0,
	107, 0, 27, 0, 0, 0, 112, 26, 18, 17,
	0, 19, 0, 30, 0, 31, 0, 0, 20, 0,
	0, 0, 21, 22, 35, 37, 106, 0, 23, 33,
	0, 0, 34, 0, 0, 24, 0, 29, 87, 88,
	324, 39, 40, 41, 0, 0, 0, 0, 51, 111,
	0, 103, 99, 100, 101, 96, 97, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 136, 102,
	98, 114, 0, 91, 92, 93, 0, 0, 0, 0,
	86, 53, 0, 0, 0, 74, 75, 25, 78, 79,
	0, 0, 0, 54, 55, 76, 63, 64, 65, 66,
	67, 68, 69, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 73, 14, 953, 32, 0, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 71, 108, 318,
	0, 89, 90, 70, 47, 94, 95, 36, 0, 107,
	0, 27, 0, 0, 0, 112, 26, 18, 17, 0,
	19, 951, 30, 0, 31, 0, 0, 20, 0, 0,
	0, 21, 22, 35, 37, 106, 0, 23, 33, 0,
	0, 34, 0, 0, 24, 0, 29, 87, 88, 324,
	39, 40, 41, 0, 0, 0, 0, 51, 111, 0,
	103, 99, 100, 101, 96, 97, 0, 0, 0, 0,
	0, 0, 104, 0, 0, 0, 0, 136, 102, 98,
	114, 0, 91, 92, 93, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 74, 75, 25, 78, 79, 0,
	0, 0, 54, 55, 76, 63, 64, 65, 66, 67,
	68, 69, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 73, 14, 0, 32, 0, 60, 0, 52, 0,
	0, 0, 57, 56, 58, 59, 71, 108, 318, 0,
	89, 90, 70, 47, 94, 95, 36, 0, 107, 0,
	27, 0, 0, 0, 112, 26, 18, 17, 0, 19,
	0, 30, 0, 31, 0, 0, 20, 0, 0, 0,
	21, 22, 35, 37, 106, 0, 23, 33, 0, 0,
	34, 0, 0, 24, 0, 29, 87, 88, 324, 39,
	40, 41, 0, 0, 0, 0, 51, 111, 0, 103,
	99, 100, 101, 96, 97, 0, 0, 0, 0, 0,
	0, 104, 0, 0, 0, 0, 136, 102, 98, 114,
	0, 91, 92, 93, 0, 0, 0, 0, 86, 53,
	0, 0, 0, 74, 75, 25, 78, 79, 0, 0,
	0, 54, 55, 76, 63, 64, 65, 66, 67, 68,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 105,
	73, 14, 900, 32, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 71, 108, 318, 0, 89,
	90, 70, 47, 94, 95, 36, 0, 107, 0, 27,
	0, 0, 0, 112, 26, 18, 17, 0, 19, 0,
	30, 896, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 35, 37, 106, 0, 23, 33, 0, 0, 34,
	0, 0, 24, 0, 29, 87, 88, 324, 39, 40,
	41, 0, 0, 0, 0, 51, 111, 0, 103, 99,
	100, 101, 96, 97, 0, 0, 0, 0, 0, 0,
	104, 0, 0, 0, 0, 136, 102, 98, 114, 0,
	91, 92, 93, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 74, 75, 25, 78, 79, 0, 0, 0,
	54, 55, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 73,
	14, 0, 32, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 71, 108, 318, 0, 89, 90,
	70, 47, 94, 95, 36, 0, 107, 0, 27, 0,
	0, 0, 112, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 830, 0, 20, 0, 0, 0, 21, 22,
	35, 37, 106, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 87, 88, 324, 39, 40, 41,
	0, 0, 0, 0, 51, 111, 0, 103, 99, 100,
	101, 96, 97, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 0, 136, 102, 98, 114, 0, 91,
	92, 93, 0, 0, 0, 0, 86, 53, 0, 0,
	0, 74, 75, 25, 78, 79, 0, 0, 0, 54,
	55, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 73, 14,
	0, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 71, 108, 318, 0, 89, 90, 70,
	47, 94, 95, 36, 0, 107, 0, 27, 0, 0,
	0, 112, 26, 18, 17, 814, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 106, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 87, 88, 324, 39, 40, 41, 0,
	0, 0, 0, 51, 111, 0, 103, 99, 100, 101,
	96, 97, 0, 0, 0, 0, 0, 0, 104, 0,
	0, 0, 0, 136, 102, 98, 114, 0, 91, 92,
	93, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	74, 75, 25, 78, 79, 0, 0, 0, 54, 55,
	76, 63, 64, 65, 66, 67, 68, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 73, 14, 0,
	32, 0, 60, 0, 52, 0, 0, 0, 57, 56,
	58, 59, 71, 108, 318, 0, 89, 90, 70, 47,
	94, 95, 36, 0, 107, 0, 27, 0, 0, 0,
	112, 26, 18, 17, 0, 19, 0, 30, 0, 31,
	0, 0, 20, 0, 0, 0, 21, 22, 35, 37,
	106, 0, 23, 33, 0, 0, 34, 0, 0, 24,
	0, 29, 87, 88, 324, 39, 40, 41, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 136, 102, 98, 114, 0, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 724, 74,
	75, 25, 78, 79, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 73, 14, 0, 32,
	0, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 71, 108, 318, 0, 89, 90, 70, 47, 94,
	95, 36, 0, 107, 0, 27, 0, 0, 0, 112,
	26, 18, 17, 0, 19, 0, 30, 0, 31, 0,
	0, 20, 0, 0, 0, 21, 22, 35, 37, 106,
	0, 23, 33, 0, 0, 34, 0, 0, 24, 0,
	29, 87, 88, 324, 39, 40, 41, 0, 0, 0,
	0, 51, 111, 0, 103, 99, 100, 101, 96, 97,
	0, 0, 0, 0, 0, 0, 104, 0, 0, 0,
	0, 136, 102, 98, 114, 0, 91, 92, 93, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 74, 75,
	25, 78, 79, 0, 0, 0, 54, 55, 76, 63,
	64, 65, 66, 67, 68, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 73, 14, 609, 32, 0,
	60, 0, 52, 0, 0, 0, 57, 56, 58, 59,
	71, 108, 318, 0, 89, 90, 70, 47, 94, 95,
	36, 0, 107, 0, 27, 0, 0, 0, 112, 26,
	18, 17, 0, 19, 0, 30, 0, 31, 0, 0,
	20, 0, 0, 0, 21, 22, 35, 37, 106, 0,
	23, 33, 0, 0, 34, 0, 0, 24, 0, 29,
	87, 88, 324, 39, 40, 41, 0, 0, 0, 0,
	51, 111, 0, 103, 99, 100, 101, 96, 97, 0,
	0, 0, 0, 0, 0, 104, 0, 0, 0, 0,
	136, 102, 98, 114, 0, 91, 92, 93, 0, 0,
	0, 0, 86, 53, 0, 0, 0, 74, 75, 25,
	78, 79, 0, 0, 0, 54, 55, 76, 63, 64,
	65, 66, 67, 68, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 73, 14, 317, 32, 0, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 71,
	108, 318, 0, 89, 90, 70, 47, 94, 95, 36,
	0, 107, 0, 27, 0, 0, 0, 112, 26, 18,
	17, 0, 19, 0, 30, 0, 31, 0, 0, 20,
	0, 0, 0, 21, 22, 35, 37, 106, 0, 23,
	33, 0, 0, 34, 0, 0, 24, 0, 29, 87,
	88, 324, 39, 40, 41, 0, 0, 0, 0, 51,
	111, 0, 103, 99, 100, 101, 96, 97, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 0, 0, 136,
	102, 98, 114, 0, 91, 92, 93, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 74, 75, 25, 78,
	79, 0, 0, 0, 54, 55, 76, 63, 64, 65,
	66, 67, 68, 69, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 73, 14, 0, 32, 0, 60, 0,
	52, 0, 0, 0, 57, 56, 58, 59, 71, 108,
	452, 453, 463, 464, 0, 0, 443, 0, 107, 0,
	0, 0, 0, 0, 0, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 498, 499, 500, 501,
	502, 490, 491, 492, 519, 493, 494, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 510,
	508, 509, 505, 506, 0, 0, 497, 503, 504, 511,
	512, 514, 513, 515, 516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 507, 518, 517, 0,
	0, 454, 455, 456, 457, 458, 459, 460, 461, 462,
	465, 466, 467, 495, 496, 446, 447, 448, 449, 450,
	451, 0, 89, 90, 70, 47, 94, 95, 36, 0,
	107, 0, 27, 0, 0, 0, 112, 26, 18, 17,
	0, 19, 0, 30, 0, 31, 0, 0, 20, 0,
	0, 0, 21, 22, 35, 135, 106, 0, 23, 33,
	0, 442, 34, 0, 0, 24, 0, 29, 87, 88,
	181, 0, 0, 0, 0, 0, 108, 0, 51, 111,
	0, 103, 99, 100, 101, 96, 97, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 136, 102,
	98, 114, 0, 91, 92, 93, 0, 0, 0, 0,
	86, 53, 167, 170, 171, 74, 75, 25, 0, 177,
	179, 0, 0, 54, 55, 76, 63, 64, 65, 66,
	67, 68, 69, 0, 165, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 168, 169, 176, 178, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 73, 14, 0, 32, 825, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 71, 108, 89,
	90, 70, 47, 94, 95, 36, 0, 107, 0, 27,
	0, 0, 0, 112, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 35, 135, 106, 0, 23, 33, 0, 0, 34,
	0, 0, 24, 0, 29, 87, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 111, 0, 103, 99,
	100, 101, 96, 97, 0, 0, 0, 0, 0, 0,
	104, 0, 0, 0, 0, 136, 102, 98, 114, 0,
	91, 92, 93, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 74, 75, 25, 0, 0, 0, 0, 0,
	54, 55, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 73,
	14, 0, 32, 892, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 71, 108, 89, 90, 70, 47,
	94, 95, 36, 0, 107, 0, 27, 0, 0, 0,
	112, 26, 18, 17, 0, 19, 0, 30, 0, 31,
	0, 0, 20, 0, 0, 0, 21, 22, 35, 135,
	106, 0, 23, 33, 0, 0, 34, 0, 0, 24,
	0, 29, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 136, 102, 98, 114, 0, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 25, 0, 0, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 73, 14, 0, 32,
	726, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 71, 108, 89, 90, 70, 47, 94, 95, 36,
	0, 107, 0, 27, 0, 0, 0, 112, 26, 18,
	17, 0, 19, 0, 30, 0, 31, 0, 0, 20,
	0, 0, 0, 21, 22, 35, 135, 106, 0, 23,
	33, 0, 0, 34, 0, 0, 24, 0, 29, 87,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	111, 0, 103, 99, 100, 101, 96, 97, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 0, 0, 136,
	102, 98, 114, 0, 91, 92, 93, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 74, 75, 25, 0,
	0, 0, 0, 0, 54, 55, 76, 63, 64, 65,
	66, 67, 68, 69, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 73, 14, 0, 32, 712, 60, 0,
	52, 0, 0, 0, 57, 56, 58, 59, 71, 108,
	89, 90, 70, 47, 94, 95, 36, 0, 107, 0,
	27, 0, 0, 0, 112, 26, 18, 17, 0, 19,
	0, 30, 0, 31, 0, 0, 20, 0, 0, 0,
	21, 22, 35, 135, 106, 0, 23, 33, 0, 0,
	34, 0, 0, 24, 0, 29, 87, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 111, 0, 103,
	99, 100, 101, 96, 97, 0, 0, 0, 0, 0,
	0, 104, 0, 0, 0, 0, 136, 102, 98, 114,
	0, 91, 92, 93, 0, 0, 0, 0, 86, 53,
	0, 0, 0, 74, 75, 25, 0, 0, 0, 0,
	0, 54, 55, 76, 63, 64, 65, 66, 67, 68,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 105,
	73, 14, 0, 32, 695, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 71, 108, 89, 90, 70,
	47, 94, 95, 36, 0, 107, 0, 27, 0, 0,
	0, 112, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	135, 106, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 87, 88, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 111, 0, 103, 99, 100, 101,
	96, 97, 0, 0, 0, 0, 0, 0, 104, 0,
	0, 0, 0, 136, 102, 98, 114, 0, 91, 92,
	93, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	74, 75, 25, 0, 0, 0, 0, 0, 54, 55,
	76, 63, 64, 65, 66, 67, 68, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 73, 14, 0,
	32, 0, 60, 0, 52, 0, 0, 0, 57, 56,
	58, 59, 71, 108, 452, 453, 463, 464, 0, 0,
	925, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	498, 499, 500, 501, 502, 490, 491, 492, 519, 493,
	494, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 510, 508, 509, 505, 506, 0, 0,
	497, 503, 504, 511, 512, 514, 513, 515, 516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 518, 517, 114, 0, 454, 455, 456, 457, 458,
	459, 460, 461, 462, 465, 466, 467, 495, 496, 446,
	447, 448, 449, 450, 451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 453, 463, 464, 0, 0, 925, 0,
	0, 0, 0, 0, 0, 0, 944, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 498, 499,
	500, 501, 502, 490, 491, 492, 519, 493, 494, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 510, 508, 509, 505, 506, 0, 0, 497, 503,
	504, 511, 512, 514, 513, 515, 516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 518,
	517, 114, 0, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 465, 466, 467, 495, 496, 446, 447, 448,
	449, 450, 451, 89, 90, 70, 0, 94, 95, 119,
	0, 107, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 106, 0, 0,
	0, 0, 0, 0, 916, 0, 0, 0, 0, 87,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	111, 0, 103, 99, 100, 101, 96, 97, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 0, 0, 136,
	102, 98, 114, 231, 91, 92, 93, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 74, 75, 141, 0,
	0, 0, 0, 0, 54, 55, 76, 63, 64, 65,
	66, 67, 68, 69, 0, 0, 0, 0, 89, 90,
	70, 0, 94, 95, 119, 0, 107, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 73, 0, 0, 0, 0, 60, 0,
	52, 135, 106, 230, 57, 56, 58, 59, 71, 108,
	0, 0, 0, 0, 87, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 111, 0, 103, 99, 100,
	101, 96, 97, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 0, 136, 102, 98, 114, 0, 91,
	92, 93, 0, 0, 0, 0, 86, 53, 0, 0,
	0, 74, 75, 141, 0, 0, 0, 0, 0, 54,
	55, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 0, 0, 89, 90, 70, 0, 94, 95, 119,
	435, 107, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 73, 0,
	0, 0, 0, 60, 0, 52, 135, 106, 634, 57,
	56, 58, 59, 71, 108, 0, 0, 0, 0, 87,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	111, 0, 103, 99, 100, 101, 96, 97, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 0, 0, 136,
	102, 98, 114, 0, 91, 92, 93, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 74, 75, 141, 0,
	0, 0, 0, 0, 54, 55, 76, 63, 64, 65,
	66, 67, 68, 69, 0, 0, 0, 0, 89, 90,
	70, 0, 94, 95, 119, 0, 107, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 73, 0, 0, 0, 0, 60, 0,
	52, 135, 106, 0, 57, 56, 58, 59, 71, 108,
	0, 0, 0, 0, 87, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 111, 0, 103, 99, 100,
	101, 96, 97, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 0, 136, 102, 98, 114, 0, 91,
	92, 93, 0, 0, 0, 0, 86, 53, 0, 0,
	0, 74, 75, 141, 0, 0, 0, 0, 0, 54,
	55, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 0, 0, 89, 90, 70, 0, 94, 95, 119,
	0, 107, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 73, 0,
	0, 0, 0, 60, 0, 52, 135, 106, 394, 57,
	56, 58, 59, 71, 108, 0, 0, 0, 0, 87,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	111, 0, 103, 99, 100, 101, 96, 97, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 0, 0, 136,
	102, 98, 114, 0, 91, 92, 93, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 74, 75, 141, 0,
	0, 0, 0, 0, 54, 55, 76, 63, 64, 65,
	66, 67, 68, 69, 0, 0, 0, 0, 89, 90,
	70, 0, 94, 95, 119, 0, 107, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 73, 0, 0, 0, 370, 60, 0,
	52, 135, 106, 0, 57, 56, 58, 59, 71, 108,
	0, 0, 0, 0, 87, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 111, 0, 103, 99, 100,
	101, 96, 97, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 0, 136, 102, 98, 114, 0, 91,
	92, 93, 0, 0, 0, 0, 86, 53, 0, 0,
	0, 74, 75, 141, 0, 0, 0, 0, 0, 54,
	55, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 0, 157, 159, 158, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 73, 183,
	180, 0, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 71, 108, 155, 156, 167, 170, 171,
	172, 173, 174, 175, 177, 179, 0, 0, 0, 0,
	0, 860, 859, 157, 159, 158, 181, 182, 161, 165,
	164, 0, 0, 0, 0, 0, 160, 0, 162, 166,
	168, 169, 176, 178, 163, 0, 0, 0, 0, 0,
	183, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 156, 167, 170,
	171, 172, 173, 174, 175, 177, 179, 0, 0, 157,
	159, 158, 181, 0, 0, 0, 0, 801, 182, 161,
	165, 164, 0, 0, 0, 0, 0, 160, 0, 162,
	166, 168, 169, 176, 178, 163, 183, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 156, 167, 170, 171, 172, 173, 174,
	175, 177, 179, 0, 0, 157, 159, 158, 181, 0,
	0, 759, 0, 0, 182, 161, 165, 164, 0, 0,
	0, 0, 0, 160, 0, 162, 166, 168, 169, 176,
	178, 163, 183, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 156,
	167, 170, 171, 172, 173, 174, 175, 177, 179, 0,
	0, 0, 0, 738, 157, 159, 158, 181, 0, 0,
	182, 161, 165, 164, 0, 0, 0, 0, 0, 160,
	0, 162, 166, 168, 169, 176, 178, 163, 0, 0,
	0, 183, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 156, 167,
	170, 171, 172, 173, 174, 175, 177, 179, 0, 0,
	0, 0, 736, 157, 159, 158, 181, 0, 0, 182,
	161, 165, 164, 0, 0, 0, 0, 0, 160, 0,
	162, 166, 168, 169, 176, 178, 163, 0, 0, 0,
	183, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 156, 167, 170,
	171, 172, 173, 174, 175, 177, 179, 0, 0, 0,
	0, 727, 157, 159, 158, 181, 0, 0, 182, 161,
	165, 164, 0, 0, 0, 0, 0, 160, 0, 162,
	166, 168, 169, 176, 178, 163, 0, 0, 0, 183,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 156, 167, 170, 171,
	172, 173, 174, 175, 177, 179, 0, 0, 157, 159,
	158, 181, 0, 0, 723, 0, 0, 182, 161, 165,
	164, 0, 0, 0, 0, 0, 160, 0, 162, 166,
	168, 169, 176, 178, 163, 183, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 155, 156, 167, 170, 171, 172, 173, 174, 175,
	177, 179, 0, 0, 157, 159, 158, 181, 0, 0,
	722, 0, 0, 182, 161, 165, 164, 0, 0, 0,
	0, 0, 160, 0, 162, 166, 168, 169, 176, 178,
	163, 183, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 156, 167,
	170, 171, 172, 173, 174, 175, 177, 179, 0, 0,
	0, 0, 677, 157, 159, 158, 181, 0, 0, 182,
	161, 165, 164, 0, 0, 0, 0, 0, 160, 0,
	162, 166, 168, 169, 176, 178, 163, 0, 0, 0,
	183, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 156, 167, 170,
	171, 172, 173, 174, 175, 177, 179, 0, 0, 157,
	159, 158, 181, 0, 0, 666, 0, 0, 182, 161,
	165, 164, 0, 0, 0, 0, 0, 160, 0, 162,
	166, 168, 169, 176, 178, 163, 183, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 156, 167, 170, 171, 172, 173, 174,
	175, 177, 179, 0, 0, 157, 159, 158, 181, 0,
	0, 665, 0, 0, 182, 161, 165, 164, 0, 0,
	0, 0, 0, 160, 0, 162, 166, 168, 169, 176,
	178, 163, 183, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 156,
	167, 170, 171, 172, 173, 174, 175, 177, 179, 0,
	0, 0, 0, 647, 157, 159, 158, 181, 0, 0,
	182, 161, 165, 164, 0, 0, 0, 0, 0, 160,
	0, 162, 166, 168, 169, 176, 178, 163, 0, 0,
	0, 183, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 156, 167,
	170, 171, 172, 173, 174, 175, 177, 179, 0, 0,
	157, 159, 158, 181, 0, 0, 637, 0, 0, 182,
	161, 165, 164, 0, 0, 0, 0, 0, 160, 0,
	162, 166, 168, 169, 176, 178, 163, 183, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 156, 167, 170, 171, 172, 173,
	174, 175, 177, 179, 0, 0, 607, 0, 626, 157,
	159, 158, 181, 0, 0, 182, 161, 165, 164, 0,
	0, 0, 0, 0, 160, 0, 162, 166, 168, 169,
	176, 178, 163, 0, 0, 0, 183, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 156, 167, 170, 171, 172, 173, 174,
	175, 177, 179, 0, 0, 157, 159, 158, 181, 0,
	0, 624, 0, 0, 182, 161, 165, 164, 0, 0,
	0, 0, 0, 160, 0, 162, 166, 168, 169, 176,
	178, 163, 183, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 156,
	167, 170, 171, 172, 173, 174, 175, 177, 179, 0,
	0, 157, 159, 158, 181, 0, 0, 0, 0, 0,
	182, 161, 165, 164, 0, 0, 0, 0, 0, 160,
	0, 162, 166, 168, 169, 176, 178, 163, 183, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 156, 167, 170, 171, 172,
	173, 174, 175, 177, 179, 0, 0, 157, 159, 158,
	181, 603, 0, 0, 0, 0, 182, 161, 165, 164,
	0, 0, 0, 0, 0, 160, 0, 162, 166, 168,
	169, 176, 178, 163, 183, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 156, 167, 170, 171, 172, 173, 174, 175, 177,
	179, 0, 0, 157, 159, 158, 181, 0, 0, 598,
	0, 0, 182, 161, 165, 164, 0, 0, 0, 0,
	0, 160, 0, 162, 166, 168, 169, 176, 178, 163,
	183, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 156, 167, 170,
	171, 172, 173, 174, 175, 177, 179, 0, 0, 157,
	159, 158, 181, 0, 0, 594, 0, 0, 182, 161,
	165, 164, 0, 0, 0, 0, 0, 160, 0, 162,
	166, 168, 169, 176, 178, 163, 183, 180, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 156, 167, 170, 171, 172, 173, 174,
	175, 177, 179, 0, 0, 0, 0, 157, 159, 158,
	181, 425, 0, 0, 182, 161, 165, 164, 0, 0,
	0, 0, 0, 160, 0, 162, 166, 168, 169, 176,
	178, 163, 0, 0, 183, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 156, 167, 170, 171, 172, 173, 174, 175, 177,
	179, 0, 0, 157, 159, 158, 181, 0, 0, 0,
	0, 0, 182, 161, 165, 164, 0, 0, 0, 0,
	0, 160, 0, 162, 166, 168, 169, 176, 178, 163,
	183, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 156, 167, 170,
	171, 172, 173, 174, 175, 177, 179, 0, 0, 0,
	0, 0, 378, 157, 159, 158, 181, 0, 182, 161,
	165, 164, 0, 0, 0, 0, 0, 160, 0, 162,
	166, 168, 169, 176, 178, 163, 0, 0, 0, 0,
	183, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 156, 167, 170,
	171, 172, 173, 174, 175, 177, 179, 0, 0, 0,
	0, 0, 154, 157, 159, 158, 181, 0, 182, 161,
	165, 164, 0, 0, 0, 0, 0, 160, 0, 162,
	166, 168, 169, 176, 178, 163, 0, 0, 0, 0,
	183, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 156, 167, 170,
	171, 172, 173, 174, 175, 177, 179, 0, 0, 0,
	159, 158, 181, 0, 0, 0, 0, 0, 182, 161,
	165, 164, 0, 0, 0, 0, 0, 160, 0, 162,
	166, 168, 169, 176, 178, 163, 183, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 156, 167, 170, 171, 172, 173, 174,
	175, 177, 179, 0, 0, 0, 0, 158, 181, 0,
	0, 0, 0, 0, 182, 161, 165, 164, 0, 0,
	0, 0, 0, 160, 0, 162, 166, 168, 169, 176,
	178, 163, 183, 180, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 156,
	167, 170, 171, 172, 173, 174, 175, 177, 179, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	182, 161, 165, 164, 0, 0, 0, 0, 0, 160,
	0, 162, 166, 168, 169, 176, 178, 163, 0, 0,
	183, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 156, 167, 170,
	171, 172, 173, 174, 175, 177, 179, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 0, 182, 161,
	165, 164, 0, 0, 0, 0, 0, 160, 0, 162,
	166, 168, 169, 176, 178, 163, 183, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 156, 167, 170, 171, 172, 173, 174,
	175, 177, 179, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 0, 182, 161, 165, 164, 0, 0,
	0, 0, 0, 160, 0, 162, 166, 168, 169, 176,
	178, 163, 183, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 156,
	167, 170, 171, 172, 173, 174, 175, 177, 179, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	0, 161, 165, 164, 0, 0, 0, 0, 0, 160,
	0, 162, 166, 168, 169, 176, 178, 163, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 167, 170, 171, 172, 173,
	174, 175, 177, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 165, 164, 180,
	0, 0, 0, 0, 160, 0, 162, 166, 168, 169,
	176, 178, 163, 0, 0, 181, 167, 170, 171, 172,
	173, 174, 175, 177, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 165, 164,
	180, 0, 0, 0, 0, 0, 0, 162, 166, 168,
	169, 176, 178, 163, 0, 0, 0, 167, 170, 171,
	172, 173, 174, 175, 177, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	164, 452, 453, 463, 464, 0, 0, 443, 0, 166,
	168, 169, 176, 178, 163, 0, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 498, 499, 500,
	501, 502, 490, 491, 492, 519, 493, 494, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	510, 508, 509, 505, 506, 0, 0, 497, 503, 504,
	511, 512, 514, 513, 515, 516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 518, 517,
	0, 0, 454, 455, 456, 457, 458, 459, 460, 461,
	462, 465, 466, 467, 495, 496, 446, 447, 448, 449,
	450, 451, 452, 453, 463, 464, 0, 0, 960, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 498, 499,
	500, 501, 502, 490, 491, 492, 519, 493, 494, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 510, 508, 509, 505, 506, 0, 0, 497, 503,
	504, 511, 512, 514, 513, 515, 516, 119, 0, 107,
	0, 0, 0, 0, 0, 112, 0, 0, 507, 518,
	517, 0, 0, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 465, 466, 467, 495, 496, 790, 791, 792,
	789, 788, 787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 708, 111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 709, 0,
	0, 707, 0, 0, 0, 0, 0, 108,
}
var yyPact = [...]int{

	-1000, -1000, 1632, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	259, 461, 647, 721, -1000, -1000, -1000, 256, 4743, 252,
	248, 5704, 5704, 5704, 140, 703, 5704, -1000, 6995, 239,
	238, 237, -1000, 387, 5704, 773, 276, -1, 493, 768,
	764, 759, 454, 549, 1008, -1000, -1000, 233, -1000, -1000,
	161, 205, 5129, 5704, 512, 512, 5704, 5704, 5704, 5704,
	5704, -1000, -1000, 5704, 5704, 5704, 5704, 5704, 5704, 5704,
	202, 5704, -1000, 792, 5704, 5704, 5704, -1000, -1000, -1000,
	-1000, 73, -1000, 523, 520, -1000, 218, 201, 199, 5704,
	5704, 192, 5704, 5704, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 673, 747, -1, -1000, 105, 206,
	206, 190, -1000, 482, 697, 141, 697, 284, -1000, -1000,
	323, 581, 35, 606, 697, -1000, -1000, -1000, -1000, -6,
	-1000, -53, 3540, 5704, 639, -1, 476, 5704, 5704, 322,
	7055, 718, 320, 319, -10, -1000, -1000, -17, -1000, -1000,
	-57, -25, -1000, 7055, -1000, 5704, 5704, 5704, 5704, 5704,
	5704, 5704, 5704, 5704, 5704, 5704, 5704, 5704, 5704, 5704,
	5704, 5704, 5704, 5704, 5704, 5704, 5704, 5704, 5704, 5704,
	5704, 273, 5589, 5704, 512, 5704, 721, -1000, 6935, 318,
	-1000, 757, -1000, 753, -1000, 553, -1000, 558, 228, 4743,
	217, 316, 262, 5474, 5704, 5704, 5704, 5704, 5704, 5704,
	5704, 5704, 5704, 5704, 5704, 5704, 5704, -1000, -1000, 5704,
	5704, 5704, 97, 97, 5129, 49, -12, -1000, -1000, 6879,
	512, 5704, 216, -1000, -1000, 73, 5704, -1000, -1000, 5129,
	-1000, 356, 356, 442, 356, 6821, 356, 356, 356, 356,
	356, 356, 356, -1000, 5704, 356, 346, 709, 730, -1000,
	193, 5359, 512, 7281, 7225, 7281, 5704, 3856, 3856, 206,
	-1000, 507, 234, 206, -1000, -1000, 5704, 5704, 7055, 7055,
	5704, 7055, 7055, 676, -1000, 657, 503, 709, 215, 5704,
	-1000, -1000, 998, -1000, 5129, 738, 482, 315, 482, -1000,
	-1000, 1473, -1000, 314, -29, 600, 697, -1000, 566, 511,
	735, 583, -1000, -1000, 721, 5704, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 214, 6765, 211, -1000, 311, -13,
	7055, 6709, -1000, -1000, -1000, -1000, 140, -1000, 690, 5704,
	-1000, 5704, 344, 7392, 7111, 7281, 7167, 7433, 7474, 402,
	103, 103, 103, 442, 356, 442, 442, 154, 154, 3919,
	3919, 3919, 3919, 203, 203, 203, 203, 3919, -1000, 6653,
	5704, 7337, -14, -1000, -1000, 6597, -37, 3381, -1000, -1000,
	-1000, 208, 553, 525, 590, 386, -1000, 590, 5704, -1000,
	5704, -1000, -1000, 7281, 5704, 7281, 7281, 7281, 7281, 7281,
	7281, 7281, 7281, 7281, 7281, 7281, 7281, 7281, 6541, 46,
	6482, 206, -1000, 5704, -1000, 206, 136, -61, 5129, 5244,
	-1000, 7055, 5129, 6426, 45, -1000, 125, -1000, -1000, -1000,
	-1000, 178, 717, 701, 6367, 72, 342, 5704, 43, 206,
	-1000, -1000, 5704, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	206, -1000, -1000, -1000, -1000, 140, 5704, 5704, 97, 97,
	140, 553, -15, -1000, 7055, 6311, 6255, -1000, -1000, -1000,
	243, 6196, -1000, -16, -1000, 7055, 5704, 244, -1000, -1000,
	205, 5704, 202, 5704, 5704, 718, 218, 201, 199, 5704,
	5704, 192, 5704, 5704, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1, -1, 190, 476, 124, -1000, -1000, 1314,
	-1000, -1000, -1000, 509, 579, -1000, 697, 545, 661, -1000,
	497, -1000, 7055, 116, 4586, 5704, 5704, 5704, 198, -1000,
	-1000, 7055, -1000, 5704, 7337, 114, 512, 7787, 4429, -1000,
	179, 243, 525, -1000, 590, -1000, -1000, 381, -41, -1000,
	6140, 6084, 3222, 7474, 4272, -1000, -1000, -1000, 6025, -1000,
	-62, 5704, -1000, 7055, 512, 173, 113, -1000, -1000, -1000,
	41, -1000, -1000, 664, -1000, -1000, -1000, -1000, -1000, 5704,
	-1000, 7281, -1000, -1000, 5966, -1000, -1000, 40, 5907, -1000,
	-1000, -1000, 525, 110, 5704, -1000, -1000, 109, -19, -1000,
	0, -1000, -1000, 643, -1000, -1000, -1000, -1000, 108, 1155,
	7055, 5704, -1000, -1000, 697, 492, -36, -1000, -1000, 697,
	661, -1000, 310, -1000, -1000, -1000, 5851, 309, 7055, -1000,
	308, 307, 7337, 306, -1000, 104, 544, 512, 162, 5129,
	-1000, -1000, -1000, 682, 243, 102, -1000, 380, -41, 1497,
	-1000, 590, 4743, 204, 305, -1000, -1000, -1000, 5704, 7281,
	-1000, 5129, -62, -1000, -1000, 5795, -1000, -1000, -1000, -1000,
	-1000, -1000, 99, 243, 467, -1000, -1000, -1000, -1000, 7055,
	-40, -1000, 697, 341, 661, -1000, -36, -1000, 3063, 304,
	5704, 407, -1000, 798, -1000, -1000, 3958, 7787, -1000, 5129,
	33, 2904, -1000, 159, 378, 98, 603, 372, -1000, -1000,
	-1000, 243, 655, 590, 517, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1338, -1000, -1000, -1000, -1000, 3699, 7281,
	96, 340, 358, -1000, 243, -1000, 684, -1000, 329, 697,
	-40, -1000, -1000, 328, 303, -1000, 94, -1000, 5704, 167,
	404, 295, 790, -1000, -1000, -1000, 89, -1000, 85, -1000,
	294, 590, -1000, 99, 99, 158, -1000, 1179, 669, 7627,
	-1, -42, -1000, -1000, 3699, -62, -1000, -1000, 529, -1000,
	-63, -1000, -1000, 327, -1000, -1000, 4115, 5734, -1000, -1000,
	-1000, -1000, -1000, 283, 2745, 3958, -1000, -1000, 87, -1000,
	2586, 352, 350, 175, 712, -1000, -32, -1000, -66, -33,
	-1000, -67, 7627, -1000, -1000, 5028, 345, 5704, 5704, -1000,
	-1000, -1000, -1000, -1000, 3699, -1000, 280, -1000, 84, 590,
	-1000, -1000, -1000, -38, -1000, -1000, 675, -1000, -1000, 669,
	-1000, 5704, -1000, 7627, 5704, -1000, -1000, 4900, -1000, 278,
	274, 576, 597, 500, -1000, -1000, -1000, 7281, 7055, 2427,
	3699, -1000, 347, -1000, 2268, 2109, -1000, 175, -1000, -1000,
	7055, -1000, 7055, 150, -1000, -1000, -1000, -1000, 590, 7728,
	7627, 269, -1000, -1000, -1000, -1000, -1000, -1000, 243, -41,
	-1000, -1000, 7627, -1000, -1000, 1950, 81, -1000, -1000, 99,
	268, -1000, -1000, -1000, 1791, -1000,
}
var yyPgo = [...]int{

	0, 928, 927, 14, 10, 39, 4, 924, 33, 13,
	923, 21, 43, 79, 78, 47, 45, 919, 25, 917,
	74, 104, 84, 916, 16, 913, 0, 63, 3, 911,
	910, 908, 40, 241, 28, 19, 32, 906, 905, 80,
	902, 73, 901, 7, 899, 898, 897, 896, 8, 56,
	893, 892, 44, 98, 407, 891, 886, 36, 885, 884,
	5, 883, 92, 55, 882, 233, 71, 881, 880, 879,
	878, 875, 116, 874, 873, 872, 9, 867, 95, 866,
	864, 863, 862, 861, 856, 852, 29, 26, 545, 12,
	18, 851, 850, 49, 34, 42, 2, 15, 737, 89,
	88, 847, 846, 843, 11, 842, 838, 85, 835, 51,
	38, 833, 832, 6, 762, 20, 534, 818, 817, 37,
	799, 83, 1, 17, 797, 792, 785, 722, 713, 41,
}
var yyR1 = [...]int{

	0, 128, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 6, 6, 7,
	7, 121, 121, 90, 90, 11, 11, 11, 10, 10,
	10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
	10, 10, 10, 114, 114, 17, 17, 19, 19, 8,
	8, 87, 87, 86, 86, 88, 88, 18, 18, 21,
	21, 20, 20, 78, 78, 122, 122, 23, 23, 23,
	23, 23, 23, 23, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 118, 118,
	75, 75, 31, 31, 108, 108, 32, 13, 1, 1,
	2, 2, 14, 14, 127, 127, 98, 98, 15, 16,
	109, 109, 111, 111, 110, 110, 115, 115, 115, 115,
	105, 105, 104, 104, 30, 30, 102, 102, 102, 102,
	119, 119, 119, 9, 9, 106, 106, 85, 85, 77,
	77, 91, 91, 81, 81, 28, 28, 29, 29, 34,
	34, 35, 35, 97, 97, 95, 95, 95, 96, 96,
	99, 99, 79, 79, 36, 36, 36, 38, 38, 39,
	40, 40, 41, 41, 123, 123, 42, 42, 42, 42,
	76, 76, 101, 101, 101, 120, 120, 43, 43, 44,
	45, 45, 45, 45, 47, 47, 46, 103, 103, 125,
	125, 124, 124, 126, 126, 113, 113, 113, 113, 113,
	113, 80, 80, 48, 48, 84, 84, 89, 22, 74,
	74, 49, 24, 24, 25, 25, 51, 50, 50, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 107, 107, 129, 3,
	3, 112, 112, 82, 82, 60, 60, 61, 61, 61,
	61, 52, 52, 53, 53, 58, 58, 117, 117, 117,
	100, 100, 65, 65, 65, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 66, 66, 66, 26, 26, 27, 27, 64, 67,
	67, 67, 68, 68, 68, 69, 69, 69, 69, 69,
	69, 69, 33, 33, 33, 33, 54, 54, 54, 70,
	70, 71, 71, 71, 71, 71, 71, 71, 62, 62,
	62, 63, 63, 63, 57, 93, 93, 56, 56, 92,
	92, 92, 92, 92, 92, 92, 116, 116, 116, 116,
	72, 72, 72, 72, 72, 72, 72, 72, 73, 73,
	73, 73, 55, 55, 55, 55, 55, 55, 55, 83,
	83, 94,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 0, 1, 3, 1, 3, 2, 1, 1,
	1, 1, 1, 1, 4, 3, 5, 4, 3, 4,
	3, 4, 3, 1, 1, 6, 7, 6, 7, 0,
	1, 3, 1, 3, 1, 3, 1, 1, 2, 1,
	3, 1, 2, 3, 1, 2, 0, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 1, 5, 7, 9,
	5, 3, 3, 3, 3, 3, 3, 1, 2, 6,
	7, 9, 5, 1, 6, 3, 3, 2, 0, 9,
	1, 3, 0, 4, 1, 3, 1, 11, 0, 1,
	0, 1, 9, 8, 1, 2, 1, 1, 6, 7,
	0, 2, 0, 2, 0, 2, 1, 2, 4, 3,
	1, 4, 1, 4, 1, 4, 3, 4, 4, 5,
	0, 5, 4, 1, 1, 1, 4, 5, 6, 1,
	3, 6, 7, 3, 6, 1, 0, 1, 3, 4,
	6, 0, 1, 1, 2, 1, 1, 1, 0, 2,
	2, 4, 1, 3, 1, 2, 3, 3, 1, 1,
	3, 1, 1, 3, 2, 0, 4, 4, 3, 10,
	1, 3, 1, 2, 3, 1, 2, 2, 2, 3,
	3, 3, 4, 3, 1, 1, 3, 1, 3, 1,
	1, 0, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 4, 3, 1, 4, 4, 3,
	1, 1, 0, 1, 3, 1, 8, 3, 2, 6,
	5, 3, 4, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 5, 4, 3, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 3, 2,
	1, 2, 4, 2, 1, 2, 11, 9, 0, 0,
	1, 0, 4, 3, 1, 1, 2, 2, 4, 4,
	2, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	0, 1, 4, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 2, 3, 3, 1,
	1, 1, 3, 3, 1, 1, 0, 1, 1, 1,
	3, 1, 1, 3, 1, 1, 4, 4, 4, 4,
	4, 1, 1, 1, 3, 3, 1, 4, 2, 3,
	3, 1, 4, 4, 3, 3, 3, 3, 1, 3,
	1, 1, 3, 1, 1, 0, 1, 3, 1, 3,
	1, 4, 2, 2, 6, 4, 2, 2, 1, 2,
	1, 4, 3, 3, 3, 3, 6, 3, 1, 1,
	2, 1, 5, 4, 2, 2, 4, 2, 2, 1,
	3, 1,
}
var yyChk = [...]int{

	-1000, -128, -121, -10, 2, -12, -13, -14, -15, -16,
	52, 80, 45, 39, 145, -77, -81, 21, 20, 23,
	30, 34, 35, 40, 47, 99, 19, 14, -26, 49,
	25, 27, 147, 41, 44, 36, 10, 37, -127, 53,
	54, 55, -85, -91, -33, -37, -98, 7, -69, -70,
	-67, 60, 151, 93, 105, 106, 156, 155, 157, 158,
	149, -50, -55, 108, 109, 110, 111, 112, 113, 114,
	6, 159, -59, 144, 97, 98, 107, -107, 100, 101,
	-54, -66, -61, -52, -64, -65, 92, 50, 51, 4,
	5, 85, 86, 87, 8, 9, 67, 68, 82, 64,
	65, 66, 81, 63, 75, 143, 38, 12, 160, -11,
	-68, 61, 18, -90, 83, 149, 83, -90, 145, 10,
	-19, -114, -88, -90, 83, 37, 39, -20, -21, -78,
	-22, 10, -122, 149, -12, 37, 80, 149, 149, -27,
	-26, 99, -27, -27, -38, -39, -54, -40, -107, -41,
	12, -74, -49, -26, 147, 131, 132, 88, 90, 89,
	162, 154, 164, 170, 156, 155, 165, 133, 166, 167,
	134, 135, 136, 137, 138, 139, 168, 140, 169, 141,
	116, 91, 153, 115, 149, 149, 149, 145, -26, 10,
	148, -3, 154, 53, -98, 10, 10, 10, 94, 95,
	94, 96, 95, 163, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 105, 106, 149,
	151, 145, 58, 142, 149, -57, -56, -93, -92, -26,
	154, 84, 60, -26, -33, -66, 149, -65, 99, 151,
	-33, -26, -26, -26, -26, -26, -26, -26, -26, -26,
	-26, -26, -26, -58, 149, -26, -117, 17, -116, -72,
	12, 77, 78, -26, -26, -26, 151, 79, 79, -53,
	-51, -52, -71, 53, -11, -54, 149, 149, -26, -26,
	149, -26, -26, 17, 76, -116, -116, 17, -3, 145,
	-54, -99, 149, -99, 149, 83, -90, 150, -90, 147,
	145, -121, 147, -17, -88, -90, 83, 147, 161, 83,
	29, -90, -21, 147, 161, 163, -23, 146, 2, -12,
	-13, -14, -15, -16, 52, -26, 21, -3, -24, -25,
	-26, -26, 147, 147, 147, 147, 161, 147, 161, 163,
	147, 161, -26, -26, -26, -26, -26, -26, -26, -26,
	-26, -26, -26, -26, -26, -26, -26, -26, -26, -26,
	-26, -26, -26, -26, -26, -26, -26, -26, -53, -26,
	148, -26, -108, -32, -33, -26, -78, -122, 147, 147,
	10, -129, 10, -109, 56, -129, -111, 56, 149, -12,
	149, 147, 148, -26, 154, -26, -26, -26, -26, -26,
	-26, -26, -26, -26, -26, -26, -26, -26, -26, -27,
	-26, -63, 10, 145, -54, -63, -57, 152, 161, 59,
	-33, -26, 149, -26, -57, 150, -27, 144, -72, -72,
	17, 151, 58, 142, -26, 11, -33, 59, -27, -62,
	-6, -54, 145, 10, -5, -4, 99, 100, 101, 102,
	103, 104, 4, 5, 85, 86, 87, 88, 89, 90,
	91, 92, 93, 6, 7, 94, 95, 96, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	35, 36, 37, 39, 40, 97, 98, 60, 30, 31,
	32, 33, 34, 61, 62, 56, 57, 80, 54, 55,
	53, 63, 64, 66, 65, 67, 68, 82, 81, 38,
	-62, -6, -54, -100, -99, 79, 151, 145, 58, 142,
	79, -100, -83, -94, -26, -26, -26, 76, 76, 143,
	149, -26, 150, -79, -36, -26, 84, -7, 10, -5,
	60, 93, 6, 97, 98, 99, 92, 50, 51, 4,
	5, 85, 86, 87, 67, 68, 82, 64, 65, 66,
	81, 63, 37, 38, 61, 80, -57, 10, 147, -121,
	146, 147, 147, 83, -90, -20, 83, -90, 145, 10,
	83, -22, -26, 149, 150, 149, 147, 161, 150, -39,
	-41, -26, -49, 148, -26, -8, 161, 29, 150, 146,
	-129, 149, -109, -110, 57, -11, 145, -129, -76, -11,
	-26, -26, -122, -26, 150, 152, 146, -99, -26, -99,
	150, 163, -93, -26, 154, 60, -57, 150, 152, 150,
	-73, 10, 13, 155, 12, 10, 10, 146, 146, 151,
	146, -26, 152, -99, -26, -99, -54, -27, -26, -63,
	-63, -54, -109, -8, 161, 150, 150, -28, -29, -34,
	-35, -97, -95, 153, 61, 62, -11, 146, -8, 161,
	-26, 148, 150, 146, 145, 83, -87, -18, -21, -114,
	145, -129, 150, -106, -12, 148, -26, -24, -26, -102,
	145, 148, -26, 150, -32, -115, -33, 154, 60, 151,
	-30, -12, 148, -118, 149, -28, -110, -129, -76, -123,
	145, 161, 150, 150, 96, -12, 148, 146, 163, -26,
	-33, 149, 150, 152, 13, -26, 146, 152, 146, -110,
	150, -94, 150, 161, -1, 154, -95, 150, -36, -26,
	-86, -21, 145, -8, 161, -21, -87, 147, -122, 150,
	147, -119, 147, -119, 147, 147, 150, 59, -33, 149,
	-57, -122, -31, 42, 43, -28, 150, -129, 145, 146,
	-42, -125, -124, 45, -126, 48, -113, 104, 103, 102,
	99, 100, 101, -123, -11, -12, 148, 147, -122, -26,
	-57, 152, -129, -96, 148, -34, -2, 84, -8, 161,
	-86, 146, -18, -8, 22, 147, -24, 146, 32, 33,
	-119, 31, -119, -104, -12, 148, -115, -33, -57, 152,
	28, 149, 145, 150, -112, 45, 145, -123, -35, 39,
	37, -76, -113, 146, -122, 150, 146, 145, -129, -97,
	12, 146, -21, -8, 146, 147, 150, -26, -9, 148,
	147, 146, 147, 31, -122, 150, 150, 147, -75, -11,
	-122, -96, -96, 149, -123, 146, -80, -48, 12, -84,
	-89, -6, -3, -101, 147, 145, -123, 59, 163, 146,
	-105, -12, 148, -9, -122, 147, 26, -104, 12, 162,
	146, 145, 145, -82, -60, 12, 154, 146, 147, 161,
	-129, 163, 147, 161, 163, -6, 146, -120, -43, -44,
	-45, -46, -47, -11, -6, 10, 146, -26, -26, -122,
	-122, 147, 150, -11, -122, -122, 150, 161, 12, -48,
	-26, -89, -26, -129, 146, -43, 147, 147, 46, 29,
	79, 24, 145, 146, 146, -60, -129, -129, 149, -76,
	10, -4, -113, -6, 147, -122, -28, -6, 146, 150,
	-96, -103, 147, 145, -122, 146,
}
var yyDef = [...]int{

	82, -2, -2, 81, 88, 89, 90, 91, 92, 93,
	0, 0, 0, 0, 126, 135, 136, 0, 0, 0,
	0, 426, 426, 426, 0, 391, 0, 147, 0, 0,
	0, 0, 153, 0, 0, 0, 83, 379, 0, 0,
	0, 0, 209, 0, -2, 425, 174, 0, -2, 443,
	428, 0, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 357, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 367, 397, 0, 370, 0, 374, 176, 177,
	435, 420, 441, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 0, 0, 379, 446, 0, -2,
	0, 0, 404, 85, 0, 0, 0, 0, 82, 83,
	0, 0, 0, 119, 0, 103, 104, 116, 121, 0,
	124, 0, 0, 0, 0, 379, 0, 292, 0, 0,
	427, 391, 0, 0, 0, 238, 239, 0, 375, 241,
	242, 0, 290, 291, 148, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	157, 378, 380, 0, 175, 180, 378, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 319, 0,
	426, 0, 0, 0, 465, 0, 464, 468, 466, 470,
	0, 0, 0, 303, -2, 0, 0, -2, 391, 465,
	-2, 338, 339, 340, 341, 0, 358, 359, 360, 361,
	362, 363, 364, 365, 426, 366, 0, 398, 399, 478,
	480, 0, 0, 369, 371, 373, 426, 0, 0, 400,
	298, 393, 394, 400, 392, 451, 0, 0, 494, 495,
	0, 497, 498, 0, 416, 0, 0, 0, 0, 0,
	448, 387, 0, 390, 465, 0, 87, 0, 86, 95,
	82, 0, 98, 0, 0, 119, 0, 100, 0, 0,
	0, 119, 122, 102, 0, 0, 125, 134, 127, 128,
	129, 130, 131, 132, 0, 0, 0, 378, 0, 293,
	295, 0, 141, 142, 143, 144, 0, 145, 0, 0,
	146, 0, 321, 322, 323, 324, 325, 326, 327, 328,
	329, 330, 331, 332, 333, 334, 335, 336, 337, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 351, 0,
	0, 356, 109, 164, -2, 0, 0, 0, 155, 156,
	378, 0, 180, 184, 0, 0, 378, 0, 0, 210,
	0, 213, 126, 301, 0, 304, 305, 306, 307, 308,
	309, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	0, 444, 461, 0, 463, 445, 0, 403, 465, 0,
	-2, 473, 465, 0, 0, -2, 0, 368, 479, 476,
	477, 0, 0, 0, 0, 0, 429, 0, 0, 0,
	-2, -2, 0, 77, 78, 70, 71, 72, 73, 74,
	75, 76, 2, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
	50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
	60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	0, -2, -2, 297, 401, 0, 426, 0, 0, 0,
	0, 180, 109, 499, 501, 0, 0, 415, 418, 417,
	-2, 0, 230, 109, 232, 234, 0, 0, -2, 80,
	47, 12, -2, 45, -2, -2, 11, 38, 39, 2,
	3, 4, 5, 6, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 53, 57, 0, 84, 94, 0,
	97, 99, 101, 0, 119, 115, 0, 119, 0, 120,
	0, 123, 378, 0, 0, 0, 292, 0, 0, 237,
	240, 243, 289, 0, 355, 0, 110, 0, 0, 158,
	0, -2, 184, 378, 0, 181, 245, 0, 183, 250,
	0, 0, 0, 302, 0, 436, 438, 439, 0, 440,
	0, 0, 467, 469, 0, 0, 0, -2, 403, 396,
	0, 488, 489, 0, 491, 482, 483, 484, 485, 0,
	487, 372, 437, 388, 0, 389, 456, 0, 0, 454,
	455, 457, 184, 0, 110, 493, 496, 0, 215, 217,
	168, 222, 223, 0, 225, 226, 227, 447, 0, 110,
	235, 0, 402, 96, 0, 0, 109, 112, 117, 0,
	0, 288, 0, 137, 205, 126, 0, 0, 294, 140,
	200, 200, 354, 0, 165, 0, -2, 0, 0, 465,
	152, 194, 126, 162, -2, 0, 378, 0, 185, 271,
	245, 0, 0, 0, 0, 207, 126, 462, 0, 300,
	-2, 465, 475, 481, 490, 0, 459, 452, 453, 378,
	492, 500, 228, 221, 170, 169, 224, 231, 233, 236,
	109, 114, 0, 0, 110, 118, 109, 133, 0, 0,
	292, 0, 200, 0, 200, 149, 0, 0, -2, 465,
	0, 0, 154, 0, 0, 0, 381, 0, 245, 178,
	244, 221, 0, 0, -2, 270, 273, 275, 276, 277,
	278, 279, 280, 271, 251, 208, 126, 214, -2, 299,
	0, 0, 0, 378, 0, 218, 0, 171, 0, 110,
	109, 107, 111, 0, 0, 138, 0, 196, 0, 0,
	0, 0, 0, 150, 192, 126, 0, -2, 0, -2,
	0, 0, 126, 228, 228, 0, 245, 271, 0, 0,
	379, 0, 274, 179, -2, 474, 486, 245, 0, 229,
	219, 105, 113, 0, 108, 206, 0, 0, 126, 203,
	204, 197, 198, 0, 0, 0, 188, 195, 0, 160,
	0, 0, 0, 0, 271, 173, 0, 282, 378, 0,
	286, 0, 0, 248, 252, 0, 271, 0, 0, 106,
	139, 190, 126, 126, -2, 199, 0, 151, 0, 0,
	163, 126, 126, 0, 384, 385, 0, 172, 246, 0,
	283, 0, 247, 0, 0, 378, 253, 0, 255, 0,
	0, 265, 0, 0, 264, -2, 296, 377, 220, 0,
	-2, 193, 0, 161, 0, 0, 382, 0, 386, 281,
	378, 285, 378, 0, 254, 256, 257, 258, 0, 0,
	0, 0, 126, 167, 376, 383, 284, 287, -2, 259,
	260, 261, 263, 266, 191, 0, 0, 262, 159, 228,
	0, 249, 267, 126, 0, 268,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 157, 143, 3, 160, 167, 154, 3,
	149, 150, 165, 156, 161, 155, 170, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 148, 147,
	168, 163, 169, 153, 159, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 151, 3, 152, 164, 3, 144, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 145, 162, 146, 158,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

// line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:284
		{
			yylex.(*Parser).currentToken.Value = nil

			yylex.(*Parser).rootNode = &ast.Root{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].list),
				Stmts:    yyDollar[1].list,
				EndTkn:   yylex.(*Parser).currentToken,
			}
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:296
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:296
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:296
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:296
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:296
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:296
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:296
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:296
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:297
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:299
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:300
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:302
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:315
		{
			yyVAL.token = yyDollar[1].token
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:337
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:343
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:350
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.NamePart{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						StringTkn: yyDollar[1].token,
						Value:     yyDollar[1].token.Value,
					},
				},
			}
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:362
		{
			part := &ast.NamePart{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
				StringTkn: yyDollar[3].token,
				Value:     yyDollar[3].token.Value,
			}

			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, part)

			yyVAL.node = yyDollar[1].node
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:378
		{
			yyVAL.node = &ast.Name{
				Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
				Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:386
		{
			yyVAL.node = &ast.NameRelative{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].node.(*ParserSeparatedList).Items),
				NsTkn:          yyDollar[1].token,
				NsSeparatorTkn: yyDollar[2].token,
				Parts:          yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:396
		{
			yyVAL.node = &ast.NameFullyQualified{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				NsSeparatorTkn: yyDollar[1].token,
				Parts:          yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:408
		{
			// error
			yyVAL.node = nil
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:413
		{
			yyVAL.node = yyDollar[1].node
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:417
		{
			yyVAL.node = yyDollar[1].node
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:421
		{
			yyVAL.node = yyDollar[1].node
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:425
		{
			yyVAL.node = yyDollar[1].node
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:429
		{
			yyVAL.node = yyDollar[1].node
		}
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:433
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:443
		{
			yyVAL.node = &ast.StmtNamespace{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				NsTkn:    yyDollar[1].token,
				Name: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:456
		{
			yyVAL.node = &ast.StmtNamespace{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				NsTkn:    yyDollar[1].token,
				Name: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Stmts:                yyDollar[4].list,
				CloseCurlyBracketTkn: yyDollar[5].token,
			}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:471
		{
			yyVAL.node = &ast.StmtNamespace{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				NsTkn:                yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:481
		{
			use := yyDollar[2].node.(*ast.StmtGroupUseList)

			use.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)
			use.UseTkn = yyDollar[1].token
			use.SemiColonTkn = yyDollar[3].token

			yyVAL.node = yyDollar[2].node
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:491
		{
			use := yyDollar[3].node.(*ast.StmtGroupUseList)

			use.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			use.UseTkn = yyDollar[1].token
			use.Type = yyDollar[2].node
			use.SemiColonTkn = yyDollar[4].token

			yyVAL.node = yyDollar[3].node
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:502
		{
			yyVAL.node = &ast.StmtUseList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				UseTkn:        yyDollar[1].token,
				Uses:          yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:512
		{
			yyVAL.node = &ast.StmtUseList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				UseTkn:        yyDollar[1].token,
				Type:          yyDollar[2].node,
				Uses:          yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:523
		{
			yyVAL.node = &ast.StmtConstList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ConstTkn:      yyDollar[1].token,
				Consts:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:536
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:544
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 105:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:555
		{
			if yyDollar[5].token != nil {
				yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[5].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[6].token),
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[2].token,
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Uses:                 yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 106:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:575
		{
			if yyDollar[6].token != nil {
				yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[6].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position:              yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				LeadingNsSeparatorTkn: yyDollar[1].token,
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[3].token,
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Uses:                 yyDollar[5].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}
		}
	case 107:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:599
		{
			if yyDollar[5].token != nil {
				yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[5].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[6].token),
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[2].token,
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Uses:                 yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 108:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:619
		{
			if yyDollar[6].token != nil {
				yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[6].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position:              yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				LeadingNsSeparatorTkn: yyDollar[1].token,
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[3].token,
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Uses:                 yyDollar[5].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:643
		{
			yyVAL.token = nil
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:647
		{
			yyVAL.token = yyDollar[1].token
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:654
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:661
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:670
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:677
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:686
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:693
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:702
		{
			yyVAL.node = yyDollar[1].node
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:706
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.Type = yyDollar[1].node
			decl.Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node)

			yyVAL.node = yyDollar[2].node
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:717
		{
			yyVAL.node = &ast.StmtUse{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
				Use: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
			}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:728
		{
			yyVAL.node = &ast.StmtUse{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].token),
				Use: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				AsTkn: yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:748
		{
			yyVAL.node = yyDollar[1].node
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:752
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.NsSeparatorTkn = yyDollar[1].token
			decl.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			yyVAL.node = yyDollar[2].node
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:763
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:770
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:779
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:785
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:792
		{
			// error
			yyVAL.node = nil
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:797
		{
			yyVAL.node = yyDollar[1].node
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:801
		{
			yyVAL.node = yyDollar[1].node
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:805
		{
			yyVAL.node = yyDollar[1].node
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:809
		{
			yyVAL.node = yyDollar[1].node
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:813
		{
			yyVAL.node = yyDollar[1].node
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:817
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:829
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:838
		{
			yyVAL.node = yyDollar[1].node
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:842
		{
			yyVAL.node = yyDollar[1].node
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:846
		{
			yyDollar[5].node.(*ast.StmtWhile).WhileTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtWhile).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtWhile).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtWhile).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtWhile).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:856
		{
			yyVAL.node = &ast.StmtDo{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				DoTkn:               yyDollar[1].token,
				Stmt:                yyDollar[2].node,
				WhileTkn:            yyDollar[3].token,
				OpenParenthesisTkn:  yyDollar[4].token,
				Cond:                yyDollar[5].node,
				CloseParenthesisTkn: yyDollar[6].token,
				SemiColonTkn:        yyDollar[7].token,
			}
		}
	case 139:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:869
		{
			yyDollar[9].node.(*ast.StmtFor).ForTkn = yyDollar[1].token
			yyDollar[9].node.(*ast.StmtFor).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[9].node.(*ast.StmtFor).Init = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).InitSeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).InitSemiColonTkn = yyDollar[4].token
			yyDollar[9].node.(*ast.StmtFor).Cond = yyDollar[5].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).CondSeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CondSemiColonTkn = yyDollar[6].token
			yyDollar[9].node.(*ast.StmtFor).Loop = yyDollar[7].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).LoopSeparatorTkns = yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CloseParenthesisTkn = yyDollar[8].token
			yyDollar[9].node.(*ast.StmtFor).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			yyVAL.node = yyDollar[9].node
		}
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:886
		{
			yyDollar[5].node.(*ast.StmtSwitch).SwitchTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtSwitch).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtSwitch).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtSwitch).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtSwitch).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:896
		{
			yyVAL.node = &ast.StmtBreak{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				BreakTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:905
		{
			yyVAL.node = &ast.StmtContinue{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ContinueTkn:  yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:914
		{
			yyVAL.node = &ast.StmtReturn{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ReturnTkn:    yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:923
		{
			yyDollar[2].node.(*ast.StmtGlobal).GlobalTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtGlobal).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtGlobal).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:931
		{
			yyDollar[2].node.(*ast.StmtStatic).StaticTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtStatic).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtStatic).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:939
		{
			yyDollar[2].node.(*ast.StmtEcho).EchoTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtEcho).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtEcho).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:947
		{
			yyVAL.node = &ast.StmtInlineHtml{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				InlineHtmlTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:955
		{
			yyVAL.node = &ast.StmtExpression{
				Position:     yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Expr:         yyDollar[1].node,
				SemiColonTkn: yyDollar[2].token,
			}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:963
		{
			yyDollar[3].node.(*ast.StmtUnset).UnsetTkn = yyDollar[1].token
			yyDollar[3].node.(*ast.StmtUnset).OpenParenthesisTkn = yyDollar[2].token
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[4].token)
			}
			yyDollar[3].node.(*ast.StmtUnset).CloseParenthesisTkn = yyDollar[5].token
			yyDollar[3].node.(*ast.StmtUnset).SemiColonTkn = yyDollar[6].token
			yyDollar[3].node.(*ast.StmtUnset).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			yyVAL.node = yyDollar[3].node
		}
	case 150:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:976
		{
			foreach := yyDollar[7].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[7].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Var = yyDollar[5].node
			foreach.CloseParenthesisTkn = yyDollar[6].token

			if val, ok := yyDollar[5].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 151:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:995
		{
			foreach := yyDollar[9].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Key = yyDollar[5].node
			foreach.DoubleArrowTkn = yyDollar[6].token
			foreach.Var = yyDollar[7].node
			foreach.CloseParenthesisTkn = yyDollar[8].token

			if val, ok := yyDollar[7].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 152:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1016
		{
			yyDollar[5].node.(*ast.StmtDeclare).DeclareTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtDeclare).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtDeclare).Consts = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[5].node.(*ast.StmtDeclare).SeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[5].node.(*ast.StmtDeclare).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtDeclare).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1027
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 154:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1034
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[5].list)
			if yyDollar[6].node != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node)
			}

			yyVAL.node = &ast.StmtTry{
				Position:             pos,
				TryTkn:               yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
				Catches:              yyDollar[5].list,
				Finally:              yyDollar[6].node,
			}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1051
		{
			yyVAL.node = &ast.StmtThrow{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ThrowTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1060
		{
			yyVAL.node = &ast.StmtGoto{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				GotoTkn:  yyDollar[1].token,
				Label: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1073
		{
			yyVAL.node = &ast.StmtLabel{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				ColonTkn: yyDollar[2].token,
			}
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1087
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 159:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:1091
		{
			catch := yyDollar[4].node.(*ast.StmtCatch)
			catch.CatchTkn = yyDollar[2].token
			catch.OpenParenthesisTkn = yyDollar[3].token
			catch.Var = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[5].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[5].token),
					IdentifierTkn: yyDollar[5].token,
					Value:         yyDollar[5].token.Value,
				},
			}
			catch.CloseParenthesisTkn = yyDollar[6].token
			catch.OpenCurlyBracketTkn = yyDollar[7].token
			catch.Stmts = yyDollar[8].list
			catch.CloseCurlyBracketTkn = yyDollar[9].token
			catch.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[2].token, yyDollar[9].token)

			yyVAL.list = append(yyDollar[1].list, catch)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1114
		{
			yyVAL.node = &ast.StmtCatch{
				Types: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1120
		{
			yyDollar[1].node.(*ast.StmtCatch).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtCatch).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.StmtCatch).Types = append(yyDollar[1].node.(*ast.StmtCatch).Types, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1130
		{
			yyVAL.node = nil
		}
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1134
		{
			yyVAL.node = &ast.StmtFinally{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				FinallyTkn:           yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1147
		{
			yyVAL.node = &ast.StmtUnset{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1153
		{
			yyDollar[1].node.(*ast.StmtUnset).Vars = append(yyDollar[1].node.(*ast.StmtUnset).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1163
		{
			yyVAL.node = yyDollar[1].node
		}
	case 167:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:1170
		{
			yyVAL.node = &ast.StmtFunction{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token),
				FunctionTkn:  yyDollar[1].token,
				AmpersandTkn: yyDollar[2].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
				OpenParenthesisTkn:   yyDollar[5].token,
				Params:               yyDollar[6].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[6].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn:  yyDollar[7].token,
				ColonTkn:             yyDollar[8].node.(*ReturnType).ColonTkn,
				ReturnType:           yyDollar[8].node.(*ReturnType).Type,
				OpenCurlyBracketTkn:  yyDollar[9].token,
				Stmts:                yyDollar[10].list,
				CloseCurlyBracketTkn: yyDollar[11].token,
			}
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1195
		{
			yyVAL.token = nil
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1199
		{
			yyVAL.token = yyDollar[1].token
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1206
		{
			yyVAL.token = nil
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1210
		{
			yyVAL.token = yyDollar[1].token
		}
	case 172:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:1217
		{
			class := &ast.StmtClass{
				Position:  yylex.(*Parser).builder.Pos.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[9].token),
				Modifiers: yyDollar[1].list,
				ClassTkn:  yyDollar[2].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[7].token,
				Stmts:                yyDollar[8].list,
				CloseCurlyBracketTkn: yyDollar[9].token,
			}

			if yyDollar[4].node != nil {
				class.ExtendsTkn = yyDollar[4].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[4].node.(*ast.StmtClass).Extends
			}

			if yyDollar[5].node != nil {
				class.ImplementsTkn = yyDollar[5].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[5].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[5].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 173:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1246
		{
			class := &ast.StmtClass{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[8].token),
				ClassTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[6].token,
				Stmts:                yyDollar[7].list,
				CloseCurlyBracketTkn: yyDollar[8].token,
			}

			if yyDollar[3].node != nil {
				class.ExtendsTkn = yyDollar[3].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[3].node.(*ast.StmtClass).Extends
			}

			if yyDollar[4].node != nil {
				class.ImplementsTkn = yyDollar[4].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[4].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[4].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1277
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1281
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1288
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1296
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 178:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1307
		{
			yyVAL.node = &ast.StmtTrait{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token),
				TraitTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Stmts:                yyDollar[5].list,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 179:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1325
		{
			iface := &ast.StmtInterface{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				InterfaceTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[5].token,
				Stmts:                yyDollar[6].list,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}

			if yyDollar[3].node != nil {
				iface.ExtendsTkn = yyDollar[3].node.(*ast.StmtInterface).ExtendsTkn
				iface.Extends = yyDollar[3].node.(*ast.StmtInterface).Extends
				iface.ExtendsSeparatorTkns = yyDollar[3].node.(*ast.StmtInterface).ExtendsSeparatorTkns
			}

			yyVAL.node = iface
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1351
		{
			yyVAL.node = nil
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1355
		{
			yyVAL.node = &ast.StmtClass{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExtendsTkn: yyDollar[1].token,
				Extends:    yyDollar[2].node,
			}
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1366
		{
			yyVAL.node = nil
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1370
		{
			yyVAL.node = &ast.StmtInterface{
				Position:             yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ExtendsTkn:           yyDollar[1].token,
				Extends:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ExtendsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1382
		{
			yyVAL.node = nil
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1386
		{
			yyVAL.node = &ast.StmtClass{
				Position:                yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ImplementsTkn:           yyDollar[1].token,
				Implements:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ImplementsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1398
		{
			yyVAL.node = yyDollar[1].node
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1402
		{
			yyVAL.node = &ast.StmtForeach{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Var:          yyDollar[2].node,
			}
		}
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1410
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ListTkn:         yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1421
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1434
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1441
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForTkn:    yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1457
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1464
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForeachTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1480
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1487
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndDeclareTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1503
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Cases:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1512
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CaseSeparatorTkn:     yyDollar[2].token,
				Cases:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 198:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1522
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn:     yyDollar[1].token,
				Cases:        yyDollar[2].list,
				EndSwitchTkn: yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1532
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				ColonTkn:         yyDollar[1].token,
				CaseSeparatorTkn: yyDollar[2].token,
				Cases:            yyDollar[3].list,
				EndSwitchTkn:     yyDollar[4].token,
				SemiColonTkn:     yyDollar[5].token,
			}
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1546
		{
			yyVAL.list = nil
		}
	case 201:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1550
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtCase{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list),
				CaseTkn:          yyDollar[2].token,
				Cond:             yyDollar[3].node,
				CaseSeparatorTkn: yyDollar[4].token,
				Stmts:            yyDollar[5].list,
			})
		}
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1560
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtDefault{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				DefaultTkn:       yyDollar[2].token,
				CaseSeparatorTkn: yyDollar[3].token,
				Stmts:            yyDollar[4].list,
			})
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1572
		{
			yyVAL.token = yyDollar[1].token
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1576
		{
			yyVAL.token = yyDollar[1].token
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1583
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1590
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndWhileTkn:  yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 207:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1606
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				Stmt:                yyDollar[5].node,
			}
		}
	case 208:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1617
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				Stmt:                yyDollar[6].node,
			})

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)

			yyVAL.node = yyDollar[1].node
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1635
		{
			yyVAL.node = yyDollar[1].node
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1639
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[3].node),
				ElseTkn:  yyDollar[2].token,
				Stmt:     yyDollar[3].node,
			}

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 211:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1654
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[6].list),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				ColonTkn:            yyDollar[5].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[6].list),
					Stmts:    yyDollar[6].list,
				},
			}
		}
	case 212:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1669
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[7].list),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[7].list),
					Stmts:    yyDollar[7].list,
				},
			})

			yyVAL.node = yyDollar[1].node
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1689
		{
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[2].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[3].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			yyVAL.node = yyDollar[1].node
		}
	case 214:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1697
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				ElseTkn:  yyDollar[2].token,
				ColonTkn: yyDollar[3].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[4].list),
					Stmts:    yyDollar[4].list,
				},
			}
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[5].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[6].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token)

			yyVAL.node = yyDollar[1].node
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1717
		{
			yyVAL.node = yyDollar[1].node
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1721
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1728
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1734
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1744
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token)
			if yyDollar[1].node != nil {
				pos = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)
			} else if yyDollar[2].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[2].token, yyDollar[4].token)
			} else if yyDollar[3].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[3].token, yyDollar[4].token)
			}

			yyVAL.node = &ast.Parameter{
				Position:     pos,
				Type:         yyDollar[1].node,
				AmpersandTkn: yyDollar[2].token,
				VariadicTkn:  yyDollar[3].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
						IdentifierTkn: yyDollar[4].token,
						Value:         yyDollar[4].token.Value,
					},
				},
			}
		}
	case 220:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1770
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node)
			if yyDollar[1].node != nil {
				pos = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)
			} else if yyDollar[2].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node)
			} else if yyDollar[3].token != nil {
				pos = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[3].token, yyDollar[6].node)
			}

			yyVAL.node = &ast.Parameter{
				Position:     pos,
				Type:         yyDollar[1].node,
				AmpersandTkn: yyDollar[2].token,
				VariadicTkn:  yyDollar[3].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
						IdentifierTkn: yyDollar[4].token,
						Value:         yyDollar[4].token.Value,
					},
				},
				EqualTkn:     yyDollar[5].token,
				DefaultValue: yyDollar[6].node,
			}
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1801
		{
			yyVAL.node = nil
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1805
		{
			yyVAL.node = yyDollar[1].node
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1812
		{
			yyVAL.node = yyDollar[1].node
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1816
		{
			yyVAL.node = &ast.Nullable{
				Position:    yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				QuestionTkn: yyDollar[1].token,
				Expr:        yyDollar[2].node,
			}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1827
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1835
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1843
		{
			yyVAL.node = yyDollar[1].node
		}
	case 228:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1850
		{
			yyVAL.node = &ReturnType{}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1854
		{
			yyVAL.node = &ReturnType{
				ColonTkn: yyDollar[1].token,
				Type:     yyDollar[2].node,
			}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1864
		{
			yyVAL.node = &ArgumentList{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				CloseParenthesisTkn: yyDollar[2].token,
			}
		}
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1872
		{
			argumentList := yyDollar[2].node.(*ArgumentList)
			argumentList.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			argumentList.OpenParenthesisTkn = yyDollar[1].token
			if yyDollar[3].token != nil {
				argumentList.SeparatorTkns = append(argumentList.SeparatorTkns, yyDollar[3].token)
			}
			argumentList.CloseParenthesisTkn = yyDollar[4].token

			yyVAL.node = argumentList
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1887
		{
			yyVAL.node = &ArgumentList{
				Arguments: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1893
		{
			yyDollar[1].node.(*ArgumentList).SeparatorTkns = append(yyDollar[1].node.(*ArgumentList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ArgumentList).Arguments = append(yyDollar[1].node.(*ArgumentList).Arguments, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1903
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgument(yyDollar[1].node)
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1907
		{
			yyVAL.node = yylex.(*Parser).builder.NewVariadicArgument(yyDollar[1].token, yyDollar[2].node)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1911
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamedArgument(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node)
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1918
		{
			yyDollar[1].node.(*ast.StmtGlobal).Vars = append(yyDollar[1].node.(*ast.StmtGlobal).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1925
		{
			yyVAL.node = &ast.StmtGlobal{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1934
		{
			yyVAL.node = yyDollar[1].node
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1941
		{
			yyDollar[1].node.(*ast.StmtStatic).Vars = append(yyDollar[1].node.(*ast.StmtStatic).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1948
		{
			yyVAL.node = &ast.StmtStatic{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1957
		{

			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1972
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1991
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1995
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2002
		{
			yyVAL.node = &ast.StmtPropertyList{
				Position:      yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[4].token),
				Modifiers:     yyDollar[1].list,
				Type:          yyDollar[2].node,
				Props:         yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2013
		{
			yyVAL.node = &ast.StmtClassConstList{
				Position:      yylex.(*Parser).builder.Pos.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[4].token),
				Modifiers:     yyDollar[1].list,
				ConstTkn:      yyDollar[2].token,
				Consts:        yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2024
		{
			traitUse := &ast.StmtTraitUse{
				Position:      yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				UseTkn:        yyDollar[1].token,
				Traits:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}

			switch n := yyDollar[3].node.(type) {
			case *TraitAdaptationList:
				traitUse.OpenCurlyBracketTkn = n.OpenCurlyBracketTkn
				traitUse.Adaptations = n.Adaptations
				traitUse.CloseCurlyBracketTkn = n.CloseCurlyBracketTkn
			case *ast.StmtNop:
				traitUse.SemiColonTkn = n.SemiColonTkn
			}

			yyVAL.node = traitUse
		}
	case 249:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:2044
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[10].node)
			if yyDollar[1].list != nil {
				pos = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[10].node)
			}

			yyVAL.node = &ast.StmtClassMethod{
				Position:     pos,
				Modifiers:    yyDollar[1].list,
				FunctionTkn:  yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
				OpenParenthesisTkn:  yyDollar[6].token,
				Params:              yyDollar[7].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[8].token,
				ColonTkn:            yyDollar[9].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[9].node.(*ReturnType).Type,
				Stmt:                yyDollar[10].node,
			}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2073
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2079
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2089
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2096
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CloseCurlyBracketTkn: yyDollar[2].token,
			}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2104
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Adaptations:          yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2116
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2120
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2127
		{
			yyDollar[1].node.(*ast.StmtTraitUsePrecedence).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2133
		{
			yyDollar[1].node.(*ast.StmtTraitUseAlias).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2142
		{
			yyVAL.node = &ast.StmtTraitUsePrecedence{
				Position:       yylex.(*Parser).builder.Pos.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].node.(*ParserSeparatedList).Items),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				InsteadofTkn:   yyDollar[2].token,
				Insteadof:      yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2157
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2172
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2187
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2203
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
			}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2217
		{
			yyVAL.node = &TraitMethodRef{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2228
		{
			yyVAL.node = yyDollar[1].node
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2235
		{
			yyVAL.node = &TraitMethodRef{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2251
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2258
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2270
		{
			yyVAL.list = yyDollar[1].list
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2274
		{
			yyVAL.list = []ast.Vertex{
				&ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 271:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2287
		{
			yyVAL.list = nil
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2291
		{
			yyVAL.list = yyDollar[1].list
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2298
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2302
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2309
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2317
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2325
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2333
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2341
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2349
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2360
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2367
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2376
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				Expr: nil,
			}
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2391
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2410
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2417
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2426
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2442
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2458
		{
			yyDollar[1].node.(*ast.StmtEcho).Exprs = append(yyDollar[1].node.(*ast.StmtEcho).Exprs, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2465
		{
			yyVAL.node = &ast.StmtEcho{
				Exprs: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2474
		{
			yyVAL.node = yyDollar[1].node
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2481
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2485
		{
			yyVAL.node = yyDollar[1].node
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2492
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2499
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 296:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:2508
		{
			if yyDollar[2].node == nil {
				yyDollar[2].node = &ArgumentList{}
			}

			class := &ast.StmtClass{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[8].token),
				ClassTkn:             yyDollar[1].token,
				OpenParenthesisTkn:   yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                 yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:        yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn:  yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
				OpenCurlyBracketTkn:  yyDollar[6].token,
				Stmts:                yyDollar[7].list,
				CloseCurlyBracketTkn: yyDollar[8].token,
			}

			if yyDollar[3].node != nil {
				class.ExtendsTkn = yyDollar[3].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[3].node.(*ast.StmtClass).Extends
			}

			if yyDollar[4].node != nil {
				class.ImplementsTkn = yyDollar[4].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[4].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[4].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2542
		{
			if yyDollar[3].node != nil {
				yyVAL.node = &ast.ExprNew{
					Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
					NewTkn:              yyDollar[1].token,
					Class:               yyDollar[2].node,
					OpenParenthesisTkn:  yyDollar[3].node.(*ArgumentList).OpenParenthesisTkn,
					Args:                yyDollar[3].node.(*ArgumentList).Arguments,
					SeparatorTkns:       yyDollar[3].node.(*ArgumentList).SeparatorTkns,
					CloseParenthesisTkn: yyDollar[3].node.(*ArgumentList).CloseParenthesisTkn,
				}
			} else {
				yyVAL.node = &ast.ExprNew{
					Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
					NewTkn:   yyDollar[1].token,
					Class:    yyDollar[2].node,
				}
			}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2562
		{
			yyVAL.node = &ast.ExprNew{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				NewTkn:   yyDollar[1].token,
				Class:    yyDollar[2].node,
			}
		}
	case 299:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:2573
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
				EqualTkn: yyDollar[5].token,
				Expr:     yyDollar[6].node,
			}
		}
	case 300:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:2589
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
					OpenBracketTkn:  yyDollar[1].token,
					Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[3].token,
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2604
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2613
		{
			yyVAL.node = &ast.ExprAssignReference{
				Position:     yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Var:          yyDollar[1].node,
				EqualTkn:     yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Expr:         yyDollar[4].node,
			}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2623
		{
			yyVAL.node = &ast.ExprClone{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CloneTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2631
		{
			yyVAL.node = &ast.ExprAssignPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2640
		{
			yyVAL.node = &ast.ExprAssignMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2649
		{
			yyVAL.node = &ast.ExprAssignMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2658
		{
			yyVAL.node = &ast.ExprAssignPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2667
		{
			yyVAL.node = &ast.ExprAssignDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2676
		{
			yyVAL.node = &ast.ExprAssignConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2685
		{
			yyVAL.node = &ast.ExprAssignMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2694
		{
			yyVAL.node = &ast.ExprAssignBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2703
		{
			yyVAL.node = &ast.ExprAssignBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2712
		{
			yyVAL.node = &ast.ExprAssignBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2721
		{
			yyVAL.node = &ast.ExprAssignShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2730
		{
			yyVAL.node = &ast.ExprAssignShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2739
		{
			yyVAL.node = &ast.ExprAssignCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2748
		{
			yyVAL.node = &ast.ExprPostInc{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				IncTkn:   yyDollar[2].token,
			}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2756
		{
			yyVAL.node = &ast.ExprPreInc{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2764
		{
			yyVAL.node = &ast.ExprPostDec{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				DecTkn:   yyDollar[2].token,
			}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2772
		{
			yyVAL.node = &ast.ExprPreDec{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DecTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2780
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2789
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2798
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2807
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2816
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2825
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2834
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2843
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2852
		{
			yyVAL.node = &ast.ExprBinaryConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2861
		{
			yyVAL.node = &ast.ExprBinaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2870
		{
			yyVAL.node = &ast.ExprBinaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2879
		{
			yyVAL.node = &ast.ExprBinaryMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2888
		{
			yyVAL.node = &ast.ExprBinaryPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2897
		{
			yyVAL.node = &ast.ExprBinaryDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2906
		{
			yyVAL.node = &ast.ExprBinaryMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2915
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2924
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2933
		{
			yyVAL.node = &ast.ExprUnaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PlusTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2941
		{
			yyVAL.node = &ast.ExprUnaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				MinusTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2949
		{
			yyVAL.node = &ast.ExprBooleanNot{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExclamationTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2957
		{
			yyVAL.node = &ast.ExprBitwiseNot{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				TildaTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2965
		{
			yyVAL.node = &ast.ExprBinaryIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2974
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2983
		{
			yyVAL.node = &ast.ExprBinaryEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2992
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3001
		{
			yyVAL.node = &ast.ExprBinarySmaller{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3010
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3019
		{
			yyVAL.node = &ast.ExprBinaryGreater{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3028
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3037
		{
			yyVAL.node = &ast.ExprBinarySpaceship{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3046
		{
			yyVAL.node = &ast.ExprInstanceOf{
				Position:      yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Expr:          yyDollar[1].node,
				InstanceOfTkn: yyDollar[2].token,
				Class:         yyDollar[3].node,
			}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3055
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3064
		{
			yyVAL.node = yyDollar[1].node
		}
	case 354:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:3068
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[5].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				IfTrue:      yyDollar[3].node,
				ColonTkn:    yyDollar[4].token,
				IfFalse:     yyDollar[5].node,
			}
		}
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3079
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				ColonTkn:    yyDollar[3].token,
				IfFalse:     yyDollar[4].node,
			}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3089
		{
			yyVAL.node = &ast.ExprBinaryCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3098
		{
			yyVAL.node = yyDollar[1].node
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3102
		{
			yyVAL.node = &ast.ExprCastInt{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3110
		{
			yyVAL.node = &ast.ExprCastDouble{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3118
		{
			yyVAL.node = &ast.ExprCastString{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3126
		{
			yyVAL.node = &ast.ExprCastArray{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3134
		{
			yyVAL.node = &ast.ExprCastObject{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3142
		{
			yyVAL.node = &ast.ExprCastBool{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3150
		{
			yyVAL.node = &ast.ExprCastUnset{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3158
		{
			exit := &ast.ExprExit{
				ExitTkn: yyDollar[1].token,
			}

			if yyDollar[2].node == nil {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token)
			} else {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				exit.OpenParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).OpenParenthesisTkn
				exit.Expr = yyDollar[2].node.(*ast.ExprBrackets).Expr
				exit.CloseParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).CloseParenthesisTkn
			}

			yyVAL.node = exit
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3175
		{
			yyVAL.node = &ast.ExprErrorSuppress{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AtTkn:    yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3183
		{
			yyVAL.node = yyDollar[1].node
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3187
		{
			yyVAL.node = &ast.ExprShellExec{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBacktickTkn:  yyDollar[1].token,
				Parts:            yyDollar[2].list,
				CloseBacktickTkn: yyDollar[3].token,
			}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3196
		{
			yyVAL.node = &ast.ExprPrint{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PrintTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3204
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				YieldTkn: yyDollar[1].token,
			}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3211
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldTkn: yyDollar[1].token,
				Val:      yyDollar[2].node,
			}
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3219
		{
			yyVAL.node = &ast.ExprYield{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				YieldTkn:       yyDollar[1].token,
				Key:            yyDollar[2].node,
				DoubleArrowTkn: yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3229
		{
			yyVAL.node = &ast.ExprYieldFrom{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldFromTkn: yyDollar[1].token,
				Expr:         yyDollar[2].node,
			}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3237
		{
			yyVAL.node = yyDollar[1].node
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3241
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			}

			yyVAL.node = yyDollar[2].node
		}
	case 376:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:3257
		{
			closure := yyDollar[7].node.(*ast.ExprClosure)

			closure.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token)
			closure.FunctionTkn = yyDollar[1].token
			closure.AmpersandTkn = yyDollar[2].token
			closure.OpenParenthesisTkn = yyDollar[4].token
			closure.Params = yyDollar[5].node.(*ParserSeparatedList).Items
			closure.SeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			closure.CloseParenthesisTkn = yyDollar[6].token
			closure.ColonTkn = yyDollar[8].node.(*ReturnType).ColonTkn
			closure.ReturnType = yyDollar[8].node.(*ReturnType).Type
			closure.OpenCurlyBracketTkn = yyDollar[9].token
			closure.Stmts = yyDollar[10].list
			closure.CloseCurlyBracketTkn = yyDollar[11].token

			yyVAL.node = closure
		}
	case 377:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:3276
		{
			yyVAL.node = &ast.ExprArrowFunction{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node),
				FnTkn:               yyDollar[1].token,
				AmpersandTkn:        yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Params:              yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[6].node.(*ReturnType).Type,
				DoubleArrowTkn:      yyDollar[8].token,
				Expr:                yyDollar[9].node,
			}
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3299
		{
			yyVAL.token = nil
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3310
		{
			yyVAL.node = &ast.ExprClosure{}
		}
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3314
		{
			yyVAL.node = &ast.ExprClosure{
				UseTkn:                 yyDollar[1].token,
				UseOpenParenthesisTkn:  yyDollar[2].token,
				Uses:                   yyDollar[3].node.(*ParserSeparatedList).Items,
				UseSeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				UseCloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3327
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3334
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3343
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3357
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				AmpersandTkn: yyDollar[1].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						IdentifierTkn: yyDollar[2].token,
						Value:         yyDollar[2].token.Value,
					},
				},
			}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3375
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3386
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3407
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3428
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3442
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3450
		{
			yyVAL.node = yyDollar[1].node
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3457
		{
			yyVAL.node = yyDollar[1].node
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3461
		{
			yyVAL.node = yyDollar[1].node
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3468
		{
			yyVAL.node = nil
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3472
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3484
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3488
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
			}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3498
		{
			yyVAL.list = yyDollar[1].list
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3505
		{
			yyVAL.node = nil
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3509
		{
			yyVAL.node = yyDollar[1].node
		}
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3516
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ArrayTkn:        yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3527
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3537
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3548
		{
			yyVAL.node = &ast.ScalarLnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3556
		{
			yyVAL.node = &ast.ScalarDnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3564
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3572
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3580
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3588
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3596
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3604
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3612
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3620
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3628
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:       yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn: yyDollar[1].token,
				Parts: []ast.Vertex{
					&ast.ScalarEncapsedStringPart{
						Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						EncapsedStrTkn: yyDollar[2].token,
						Value:          yyDollar[2].token.Value,
					},
				},
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3643
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenHeredocTkn:  yyDollar[1].token,
				CloseHeredocTkn: yyDollar[2].token,
			}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3651
		{
			yyVAL.node = &ast.ScalarEncapsed{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenQuoteTkn:  yyDollar[1].token,
				Parts:         yyDollar[2].list,
				CloseQuoteTkn: yyDollar[3].token,
			}
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3660
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn:  yyDollar[1].token,
				Parts:           yyDollar[2].list,
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3669
		{
			yyVAL.node = yyDollar[1].node
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3673
		{
			yyVAL.node = yyDollar[1].node
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3680
		{
			yyVAL.node = &ast.ExprConstFetch{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Const:    yyDollar[1].node,
			}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3687
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3700
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3716
		{
			yyVAL.node = yyDollar[1].node
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3720
		{
			yyVAL.node = yyDollar[1].node
		}
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3727
		{
			yyVAL.node = nil
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3731
		{
			yyVAL.node = yyDollar[1].node
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3738
		{
			yyVAL.node = yyDollar[1].node
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3745
		{
			yyVAL.node = yyDollar[1].node
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3749
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3758
		{
			yyVAL.node = yyDollar[1].node
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3765
		{
			yyVAL.node = yyDollar[1].node
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3769
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3778
		{
			yyVAL.node = yyDollar[1].node
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3785
		{
			yyVAL.node = yyDollar[1].node
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3789
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3799
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3809
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3819
		{
			yyVAL.node = yylex.(*Parser).builder.NewMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3823
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafeMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3827
		{
			yyVAL.node = yyDollar[1].node
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3834
		{
			yyVAL.node = yyDollar[1].node
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3838
		{
			yyVAL.node = yyDollar[1].node
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3842
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3846
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3853
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3864
		{
			yyVAL.node = &ast.ExprVariable{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				DollarTkn:            yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Name:                 yyDollar[3].node,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3874
		{
			yyVAL.node = &ast.ExprVariable{
				Position:  yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DollarTkn: yyDollar[1].token,
				Name:      yyDollar[2].node,
			}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3885
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3894
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3906
		{
			yyVAL.node = yyDollar[1].node
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3910
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3920
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3930
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3934
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3938
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3947
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3959
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3967
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3976
		{
			yyVAL.node = yyDollar[1].node
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3983
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3991
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4000
		{
			yyVAL.node = yyDollar[1].node
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4007
		{
			pairList := yyDollar[1].node.(*ParserSeparatedList)
			fistPair := pairList.Items[0].(*ast.ExprArrayItem)

			if fistPair.Key == nil && fistPair.Val == nil && len(pairList.Items) == 1 {
				pairList.Items = nil
			}

			yyVAL.node = yyDollar[1].node
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:4021
		{
			yyVAL.node = &ast.ExprArrayItem{}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4025
		{
			yyVAL.node = yyDollar[1].node
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4032
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4039
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4048
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val:            yyDollar[3].node,
			}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4057
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Val:      yyDollar[1].node,
			}
		}
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4064
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				AmpersandTkn:   yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4074
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Val:          yyDollar[2].node,
			}
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4082
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:    yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				EllipsisTkn: yyDollar[1].token,
				Val:         yyDollar[2].node,
			}
		}
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:4090
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[3].token, yyDollar[6].token),
					ListTkn:         yyDollar[3].token,
					OpenBracketTkn:  yyDollar[4].token,
					Items:           yyDollar[5].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[6].token,
				},
			}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4106
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
			}
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4123
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4127
		{
			yyVAL.list = append(
				yyDollar[1].list,
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					EncapsedStrTkn: yyDollar[2].token,
					Value:          yyDollar[2].token.Value,
				},
			)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4138
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4142
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
				yyDollar[2].node,
			}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4156
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4167
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4184
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4188
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4192
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name:                      yyDollar[2].node,
				CloseCurlyBracketTkn:      yyDollar[3].token,
			}
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4201
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:4214
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenSquareBracketTkn:  yyDollar[3].token,
				Dim:                   yyDollar[4].node,
				CloseSquareBracketTkn: yyDollar[5].token,
				CloseCurlyBracketTkn:  yyDollar[6].token,
			}
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4230
		{
			yyVAL.node = &ast.ScalarEncapsedStringBrackets{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Var:                  yyDollar[2].node,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4242
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4250
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(string(yyDollar[1].token.Value)); err == nil {
				yyVAL.node = &ast.ScalarLnumber{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					NumberTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					StringTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4267
		{
			_, err := strconv.Atoi(string(yyDollar[2].token.Value))
			isInt := err == nil

			if isInt {
				yyVAL.node = &ast.ExprUnaryMinus{
					Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn: yyDollar[1].token,
					Expr: &ast.ScalarLnumber{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						NumberTkn: yyDollar[2].token,
						Value:     yyDollar[2].token.Value,
					},
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn:  yyDollar[1].token,
					StringTkn: yyDollar[2].token,
					Value:     append([]byte("-"), yyDollar[2].token.Value...),
				}
			}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4291
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:4305
		{
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[4].token)
			}

			yyVAL.node = &ast.ExprIsset{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				IssetTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Vars:                yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
			}
		}
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4320
		{
			yyVAL.node = &ast.ExprEmpty{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EmptyTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4330
		{
			yyVAL.node = &ast.ExprInclude{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4338
		{
			yyVAL.node = &ast.ExprIncludeOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4346
		{
			yyVAL.node = &ast.ExprEval{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EvalTkn:             yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4356
		{
			yyVAL.node = &ast.ExprRequire{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4364
		{
			yyVAL.node = &ast.ExprRequireOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4375
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4381
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4391
		{
			yyVAL.node = yyDollar[1].node
		}
	}
	goto yystack /* stack new state and value */
}
