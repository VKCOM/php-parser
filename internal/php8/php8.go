// Code generated by goyacc -o internal/php8/php8.go internal/php8/php8.y. DO NOT EDIT.

// line internal/php8/php8.y:1

package php8

import __yyfmt__ "fmt"

// line internal/php8/php8.y:3

import (
	"strconv"

	"github.com/z7zmey/php-parser/pkg/ast"
	"github.com/z7zmey/php-parser/pkg/token"
)

// line internal/php8/php8.y:13
type yySymType struct {
	yys   int
	node  ast.Vertex
	token *token.Token
	list  []ast.Vertex
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_FN = 57380
const T_CONST = 57381
const T_RETURN = 57382
const T_TRY = 57383
const T_CATCH = 57384
const T_FINALLY = 57385
const T_THROW = 57386
const T_USE = 57387
const T_INSTEADOF = 57388
const T_GLOBAL = 57389
const T_VAR = 57390
const T_UNSET = 57391
const T_ISSET = 57392
const T_EMPTY = 57393
const T_HALT_COMPILER = 57394
const T_CLASS = 57395
const T_TRAIT = 57396
const T_INTERFACE = 57397
const T_EXTENDS = 57398
const T_IMPLEMENTS = 57399
const T_OBJECT_OPERATOR = 57400
const T_DOUBLE_ARROW = 57401
const T_LIST = 57402
const T_ARRAY = 57403
const T_CALLABLE = 57404
const T_CLASS_C = 57405
const T_TRAIT_C = 57406
const T_METHOD_C = 57407
const T_FUNC_C = 57408
const T_LINE = 57409
const T_FILE = 57410
const T_COMMENT = 57411
const T_DOC_COMMENT = 57412
const T_OPEN_TAG = 57413
const T_OPEN_TAG_WITH_ECHO = 57414
const T_CLOSE_TAG = 57415
const T_WHITESPACE = 57416
const T_START_HEREDOC = 57417
const T_END_HEREDOC = 57418
const T_DOLLAR_OPEN_CURLY_BRACES = 57419
const T_CURLY_OPEN = 57420
const T_PAAMAYIM_NEKUDOTAYIM = 57421
const T_NAMESPACE = 57422
const T_NS_C = 57423
const T_DIR = 57424
const T_NS_SEPARATOR = 57425
const T_ELLIPSIS = 57426
const T_EVAL = 57427
const T_REQUIRE = 57428
const T_REQUIRE_ONCE = 57429
const T_LOGICAL_OR = 57430
const T_LOGICAL_XOR = 57431
const T_LOGICAL_AND = 57432
const T_INSTANCEOF = 57433
const T_NEW = 57434
const T_CLONE = 57435
const T_ELSEIF = 57436
const T_ELSE = 57437
const T_ENDIF = 57438
const T_PRINT = 57439
const T_YIELD = 57440
const T_STATIC = 57441
const T_ABSTRACT = 57442
const T_FINAL = 57443
const T_PRIVATE = 57444
const T_PROTECTED = 57445
const T_PUBLIC = 57446
const T_INC = 57447
const T_DEC = 57448
const T_YIELD_FROM = 57449
const T_INT_CAST = 57450
const T_DOUBLE_CAST = 57451
const T_STRING_CAST = 57452
const T_ARRAY_CAST = 57453
const T_OBJECT_CAST = 57454
const T_BOOL_CAST = 57455
const T_UNSET_CAST = 57456
const T_COALESCE = 57457
const T_SPACESHIP = 57458
const T_NOELSE = 57459
const T_PLUS_EQUAL = 57460
const T_MINUS_EQUAL = 57461
const T_MUL_EQUAL = 57462
const T_POW_EQUAL = 57463
const T_DIV_EQUAL = 57464
const T_CONCAT_EQUAL = 57465
const T_MOD_EQUAL = 57466
const T_AND_EQUAL = 57467
const T_OR_EQUAL = 57468
const T_XOR_EQUAL = 57469
const T_SL_EQUAL = 57470
const T_SR_EQUAL = 57471
const T_COALESCE_EQUAL = 57472
const T_BOOLEAN_OR = 57473
const T_BOOLEAN_AND = 57474
const T_POW = 57475
const T_SL = 57476
const T_SR = 57477
const T_IS_IDENTICAL = 57478
const T_IS_NOT_IDENTICAL = 57479
const T_IS_EQUAL = 57480
const T_IS_NOT_EQUAL = 57481
const T_IS_SMALLER_OR_EQUAL = 57482
const T_IS_GREATER_OR_EQUAL = 57483
const T_NULLSAFE_OBJECT_OPERATOR = 57484
const T_MATCH = 57485

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_FN",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_COALESCE_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"T_NULLSAFE_OBJECT_OPERATOR",
	"T_MATCH",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

// line internal/php8/php8.y:4309

// line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	-2, 0,
	-1, 43,
	58, 459,
	79, 459,
	142, 459,
	146, 459,
	152, 459,
	-2, 454,
	-1, 47,
	150, 462,
	-2, 472,
	-1, 86,
	58, 461,
	79, 461,
	142, 461,
	146, 461,
	150, 464,
	152, 461,
	-2, 449,
	-1, 111,
	79, 422,
	-2, 451,
	-1, 236,
	58, 459,
	79, 459,
	142, 459,
	146, 459,
	152, 459,
	-2, 346,
	-1, 239,
	150, 464,
	-2, 461,
	-1, 242,
	58, 459,
	79, 459,
	142, 459,
	146, 459,
	152, 459,
	-2, 348,
	-1, 363,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 370,
	-1, 364,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 371,
	-1, 365,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 372,
	-1, 366,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 373,
	-1, 367,
	140, 0,
	141, 0,
	169, 0,
	170, 0,
	-2, 374,
	-1, 368,
	140, 0,
	141, 0,
	169, 0,
	170, 0,
	-2, 375,
	-1, 369,
	140, 0,
	141, 0,
	169, 0,
	170, 0,
	-2, 376,
	-1, 370,
	140, 0,
	141, 0,
	169, 0,
	170, 0,
	-2, 377,
	-1, 371,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 378,
	-1, 378,
	151, 170,
	162, 170,
	-2, 459,
	-1, 423,
	151, 502,
	153, 502,
	162, 502,
	-2, 459,
	-1, 428,
	58, 460,
	79, 460,
	142, 460,
	146, 460,
	150, 463,
	152, 460,
	-2, 380,
	-1, 443,
	150, 488,
	-2, 452,
	-1, 444,
	150, 490,
	-2, 479,
	-1, 525,
	150, 488,
	-2, 453,
	-1, 526,
	150, 490,
	-2, 480,
	-1, 545,
	151, 220,
	-2, 223,
	-1, 553,
	149, 80,
	-2, 87,
	-1, 557,
	149, 13,
	-2, 425,
	-1, 559,
	149, 46,
	-2, 399,
	-1, 561,
	149, 72,
	-2, 421,
	-1, 571,
	149, 65,
	-2, 437,
	-1, 572,
	149, 66,
	-2, 438,
	-1, 573,
	149, 67,
	-2, 439,
	-1, 574,
	149, 62,
	-2, 440,
	-1, 575,
	149, 64,
	-2, 441,
	-1, 576,
	149, 63,
	-2, 442,
	-1, 577,
	149, 68,
	-2, 443,
	-1, 578,
	149, 61,
	-2, 444,
	-1, 579,
	150, 409,
	-2, 42,
	-1, 580,
	150, 409,
	-2, 69,
	-1, 618,
	151, 220,
	-2, 223,
	-1, 644,
	150, 463,
	-2, 460,
	-1, 711,
	151, 190,
	-2, 459,
	-1, 719,
	151, 220,
	-2, 223,
	-1, 735,
	151, 501,
	153, 501,
	162, 501,
	-2, 459,
	-1, 750,
	151, 114,
	-2, 223,
	-1, 780,
	151, 191,
	-2, 459,
	-1, 797,
	37, 290,
	39, 290,
	-2, 287,
	-1, 811,
	94, 215,
	95, 215,
	96, 215,
	-2, 0,
	-1, 850,
	151, 190,
	-2, 459,
	-1, 852,
	151, 193,
	-2, 433,
	-1, 867,
	94, 216,
	95, 216,
	96, 216,
	-2, 0,
	-1, 940,
	31, 206,
	32, 206,
	33, 206,
	147, 206,
	-2, 0,
	-1, 972,
	29, 78,
	-2, 87,
	-1, 980,
	31, 205,
	32, 205,
	33, 205,
	147, 205,
	-2, 0,
	-1, 1009,
	151, 220,
	-2, 223,
}

const yyPrivate = 57344

const yyLast = 8317

var yyAct = [...]int{

	28, 135, 823, 920, 675, 951, 799, 965, 625, 448,
	919, 846, 916, 897, 881, 710, 818, 292, 724, 751,
	111, 332, 143, 143, 143, 227, 677, 156, 549, 691,
	323, 384, 692, 5, 538, 762, 447, 377, 884, 620,
	414, 773, 327, 612, 386, 9, 84, 326, 325, 137,
	8, 7, 231, 235, 193, 229, 243, 244, 245, 246,
	247, 155, 152, 148, 248, 249, 250, 251, 252, 253,
	254, 324, 257, 116, 6, 265, 266, 267, 268, 527,
	133, 78, 142, 528, 272, 120, 126, 130, 442, 132,
	82, 978, 282, 283, 961, 285, 286, 958, 2, 219,
	220, 131, 115, 733, 638, 145, 146, 151, 277, 924,
	343, 923, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 726, 319, 933, 109, 986,
	931, 830, 959, 955, 274, 828, 415, 329, 115, 615,
	987, 334, 335, 726, 237, 237, 960, 956, 832, 878,
	318, 876, 115, 873, 153, 122, 331, 115, 205, 346,
	347, 348, 349, 350, 351, 352, 353, 354, 355, 356,
	357, 358, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 589, 373, 375, 261, 379,
	344, 300, 381, 302, 766, 295, 297, 750, 309, 312,
	684, 315, 262, 672, 345, 277, 396, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	305, 115, 411, 143, 413, 139, 151, 231, 117, 316,
	388, 274, 392, 341, 424, 262, 262, 339, 613, 426,
	317, 184, 231, 604, 240, 311, 421, 342, 115, 194,
	827, 340, 419, 946, 318, 852, 742, 143, 738, 312,
	648, 659, 115, 649, 437, 184, 418, 427, 645, 372,
	143, 86, 416, 43, 443, 525, 632, 532, 237, 380,
	536, 539, 540, 170, 420, 541, 293, 110, 224, 122,
	655, 115, 184, 269, 546, 656, 1009, 550, 534, 231,
	1020, 110, 982, 905, 904, 412, 110, 170, 173, 174,
	895, 868, 856, 789, 778, 759, 169, 171, 172, 748,
	599, 746, 737, 237, 583, 239, 239, 236, 242, 708,
	168, 167, 276, 554, 170, 697, 5, 687, 646, 429,
	169, 171, 172, 435, 608, 166, 156, 637, 9, 301,
	912, 824, 441, 8, 7, 237, 535, 168, 167, 139,
	524, 533, 117, 899, 898, 531, 855, 169, 171, 172,
	110, 530, 225, 781, 736, 611, 223, 6, 240, 719,
	705, 298, 222, 706, 591, 284, 594, 281, 262, 262,
	184, 953, 627, 280, 628, 279, 256, 629, 630, 598,
	592, 226, 122, 586, 606, 607, 650, 609, 622, 296,
	618, 626, 316, 602, 600, 617, 262, 635, 262, 262,
	262, 624, 231, 640, 545, 425, 231, 436, 393, 809,
	619, 391, 170, 173, 174, 686, 299, 434, 221, 189,
	110, 658, 160, 162, 161, 184, 661, 188, 431, 432,
	187, 643, 141, 756, 757, 168, 167, 140, 136, 239,
	118, 378, 1024, 395, 1023, 169, 171, 172, 192, 186,
	183, 153, 139, 841, 842, 117, 431, 639, 432, 432,
	431, 841, 842, 122, 1015, 158, 159, 170, 173, 174,
	175, 176, 177, 178, 180, 182, 997, 996, 634, 304,
	981, 303, 636, 941, 239, 906, 423, 814, 185, 164,
	168, 167, 901, 894, 838, 810, 777, 163, 776, 165,
	169, 171, 172, 179, 181, 166, 660, 774, 772, 769,
	603, 143, 665, 588, 756, 757, 239, 585, 439, 394,
	170, 382, 338, 337, 336, 306, 754, 935, 893, 115,
	890, 871, 685, 139, 433, 122, 117, 235, 869, 265,
	266, 268, 834, 651, 584, 584, 657, 282, 283, 1003,
	285, 286, 885, 666, 667, 584, 949, 948, 584, 870,
	669, 671, 859, 277, 854, 791, 745, 430, 900, 725,
	623, 190, 683, 125, 184, 122, 840, 331, 681, 680,
	679, 81, 195, 701, 334, 703, 200, 201, 662, 274,
	887, 707, 314, 664, 263, 264, 314, 5, 202, 204,
	203, 796, 119, 720, 798, 702, 149, 882, 119, 9,
	723, 696, 699, 122, 8, 7, 170, 930, 1000, 734,
	314, 299, 626, 151, 260, 529, 716, 928, 271, 79,
	80, 709, 722, 270, 874, 779, 621, 740, 6, 721,
	387, 390, 730, 122, 998, 139, 299, 594, 117, 594,
	690, 858, 122, 539, 999, 803, 804, 805, 802, 801,
	800, 544, 787, 786, 314, 550, 330, 761, 314, 278,
	128, 121, 129, 739, 597, 316, 115, 693, 122, 758,
	764, 695, 770, 694, 237, 237, 593, 747, 122, 744,
	653, 689, 294, 760, 595, 231, 124, 753, 308, 783,
	749, 554, 652, 973, 788, 768, 803, 804, 805, 802,
	801, 800, 237, 811, 812, 765, 127, 231, 590, 863,
	782, 862, 313, 134, 806, 310, 822, 807, 775, 596,
	122, 289, 290, 790, 115, 584, 115, 385, 808, 756,
	757, 433, 813, 594, 383, 115, 138, 108, 594, 594,
	433, 115, 199, 334, 198, 758, 815, 825, 139, 138,
	108, 117, 231, 902, 841, 842, 278, 115, 197, 191,
	45, 763, 291, 829, 839, 849, 767, 693, 1, 835,
	833, 756, 757, 237, 865, 864, 831, 851, 37, 847,
	860, 867, 836, 797, 861, 758, 843, 626, 845, 794,
	139, 263, 264, 117, 795, 964, 417, 417, 196, 543,
	263, 264, 258, 753, 678, 542, 263, 264, 594, 885,
	594, 785, 896, 115, 718, 758, 115, 817, 287, 758,
	903, 758, 263, 264, 816, 879, 907, 61, 115, 910,
	911, 872, 821, 259, 875, 877, 763, 888, 693, 889,
	237, 122, 444, 526, 822, 927, 909, 892, 913, 929,
	819, 921, 844, 841, 842, 239, 239, 378, 711, 925,
	926, 857, 389, 122, 376, 115, 698, 932, 128, 940,
	129, 114, 936, 758, 1022, 704, 594, 288, 263, 264,
	939, 263, 264, 239, 922, 735, 943, 755, 752, 796,
	883, 880, 798, 263, 264, 962, 937, 230, 971, 974,
	42, 975, 41, 918, 891, 847, 537, 950, 16, 915,
	979, 980, 149, 713, 113, 970, 976, 548, 977, 957,
	984, 985, 758, 15, 758, 908, 154, 647, 275, 990,
	48, 47, 992, 139, 112, 49, 117, 983, 971, 989,
	85, 991, 995, 803, 804, 805, 802, 801, 800, 1001,
	83, 72, 240, 255, 239, 970, 780, 228, 62, 273,
	917, 60, 969, 1006, 993, 968, 967, 966, 793, 150,
	147, 44, 784, 715, 1014, 1016, 1013, 1010, 676, 1012,
	796, 333, 320, 798, 1017, 934, 123, 1018, 307, 626,
	3, 954, 1007, 1021, 1008, 945, 1025, 160, 162, 161,
	184, 552, 886, 238, 826, 714, 0, 947, 712, 0,
	0, 952, 0, 0, 110, 0, 0, 0, 184, 0,
	0, 239, 0, 850, 186, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 803, 804, 805, 802, 801, 800,
	158, 159, 170, 173, 174, 175, 176, 177, 178, 180,
	182, 0, 988, 0, 0, 917, 0, 899, 898, 0,
	170, 173, 174, 185, 164, 168, 167, 180, 182, 0,
	0, 0, 163, 0, 165, 169, 171, 172, 179, 181,
	166, 0, 914, 168, 167, 0, 952, 0, 0, 0,
	0, 0, 0, 169, 171, 172, 179, 181, 166, 0,
	0, 663, 0, 0, 417, 417, 668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 566, 567, 557, 467, 96, 97, 553, 0, 115,
	0, 0, 0, 0, 278, 114, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 501, 502, 503,
	504, 505, 493, 494, 579, 580, 496, 497, 482, 483,
	484, 560, 486, 487, 488, 489, 490, 564, 565, 0,
	513, 511, 512, 508, 509, 0, 0, 555, 581, 507,
	578, 574, 575, 576, 571, 572, 796, 0, 0, 798,
	0, 0, 106, 0, 0, 0, 0, 582, 577, 573,
	117, 551, 568, 569, 570, 460, 461, 462, 463, 562,
	556, 468, 469, 470, 558, 559, 561, 450, 451, 452,
	453, 454, 53, 54, 76, 63, 64, 65, 66, 67,
	68, 69, 0, 0, 0, 0, 0, 0, 0, 0,
	803, 804, 805, 802, 801, 800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	563, 107, 73, 0, 0, 0, 0, 59, 547, 51,
	0, 0, 0, 56, 55, 57, 58, 71, 110, 566,
	567, 557, 467, 96, 97, 553, 0, 115, 866, 0,
	0, 0, 0, 114, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 501, 502, 503, 504, 505,
	493, 494, 579, 580, 496, 497, 482, 483, 484, 560,
	486, 487, 488, 489, 490, 564, 565, 0, 513, 511,
	512, 508, 509, 0, 0, 555, 581, 507, 578, 574,
	575, 576, 571, 572, 796, 0, 0, 798, 0, 0,
	106, 0, 0, 0, 0, 582, 577, 573, 117, 551,
	568, 569, 570, 460, 461, 462, 463, 562, 556, 468,
	469, 470, 558, 559, 561, 450, 451, 452, 453, 454,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 803, 804,
	805, 802, 801, 800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 563, 107,
	73, 0, 0, 0, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 4, 0, 91,
	92, 70, 46, 96, 97, 35, 792, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 13, 23, 33, 0, 0, 77,
	12, 0, 24, 0, 29, 89, 90, 10, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 11, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 688, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 4, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 13, 23, 33, 0, 0, 77,
	12, 0, 24, 0, 29, 89, 90, 10, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 11, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 587, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 4, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 13, 23, 33, 0, 0, 77,
	12, 0, 24, 0, 29, 89, 90, 10, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 11, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 0, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 1026, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 1019, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 1005, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 1004, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 1002,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 0, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 944, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 942, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 0, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 853, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 0, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 837, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 0, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 729, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 0, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 616, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 321, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 322, 0, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 36, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 328, 38, 39,
	40, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 79, 80, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 0, 32, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 455, 456, 466,
	467, 0, 0, 446, 0, 115, 0, 0, 0, 0,
	0, 0, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 501, 502, 503, 504, 505, 493, 494,
	495, 522, 496, 497, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 513, 511, 512, 508,
	509, 0, 0, 500, 506, 507, 514, 515, 517, 516,
	518, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 510, 521, 520, 0, 0, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 468, 469, 470,
	498, 499, 449, 450, 451, 452, 453, 454, 0, 0,
	0, 91, 92, 70, 46, 96, 97, 35, 0, 115,
	0, 27, 0, 0, 0, 114, 26, 18, 17, 0,
	19, 0, 30, 0, 31, 0, 0, 20, 0, 0,
	0, 21, 22, 34, 138, 108, 523, 23, 33, 445,
	0, 77, 0, 0, 24, 0, 29, 89, 90, 0,
	0, 0, 0, 0, 110, 0, 0, 50, 113, 0,
	105, 101, 102, 103, 98, 99, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 0, 139, 104, 100,
	117, 0, 93, 94, 95, 0, 0, 0, 0, 87,
	52, 0, 0, 0, 74, 75, 25, 0, 0, 0,
	0, 0, 53, 54, 76, 63, 64, 65, 66, 67,
	68, 69, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 107, 73, 14, 0, 32, 848, 59, 0, 51,
	0, 0, 0, 56, 55, 57, 58, 71, 110, 91,
	92, 70, 46, 96, 97, 35, 0, 115, 0, 27,
	0, 0, 0, 114, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 34, 138, 108, 0, 23, 33, 0, 0, 77,
	0, 0, 24, 0, 29, 89, 90, 0, 0, 0,
	0, 0, 0, 0, 0, 50, 113, 0, 105, 101,
	102, 103, 98, 99, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 139, 104, 100, 117, 0,
	93, 94, 95, 0, 0, 0, 0, 87, 52, 0,
	0, 0, 74, 75, 25, 0, 0, 0, 0, 0,
	53, 54, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 107,
	73, 14, 0, 32, 938, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 71, 110, 91, 92, 70,
	46, 96, 97, 35, 0, 115, 0, 27, 0, 0,
	0, 114, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 34,
	138, 108, 0, 23, 33, 0, 0, 77, 0, 0,
	24, 0, 29, 89, 90, 0, 0, 0, 0, 0,
	0, 0, 0, 50, 113, 0, 105, 101, 102, 103,
	98, 99, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 139, 104, 100, 117, 0, 93, 94,
	95, 0, 0, 0, 0, 87, 52, 0, 0, 0,
	74, 75, 25, 0, 0, 0, 0, 0, 53, 54,
	76, 63, 64, 65, 66, 67, 68, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 107, 73, 14,
	0, 32, 731, 59, 0, 51, 0, 0, 0, 56,
	55, 57, 58, 71, 110, 91, 92, 70, 46, 96,
	97, 35, 0, 115, 0, 27, 0, 0, 0, 114,
	26, 18, 17, 0, 19, 0, 30, 0, 31, 0,
	0, 20, 0, 0, 0, 21, 22, 34, 138, 108,
	0, 23, 33, 0, 0, 77, 0, 0, 24, 0,
	29, 89, 90, 0, 0, 0, 0, 0, 0, 0,
	0, 50, 113, 0, 105, 101, 102, 103, 98, 99,
	0, 0, 0, 0, 0, 0, 106, 0, 0, 0,
	0, 139, 104, 100, 117, 0, 93, 94, 95, 0,
	0, 0, 0, 87, 52, 0, 0, 0, 74, 75,
	25, 0, 0, 0, 0, 0, 53, 54, 76, 63,
	64, 65, 66, 67, 68, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 88, 107, 73, 14, 0, 32,
	717, 59, 0, 51, 0, 0, 0, 56, 55, 57,
	58, 71, 110, 91, 92, 70, 46, 96, 97, 35,
	0, 115, 0, 27, 0, 0, 0, 114, 26, 18,
	17, 0, 19, 0, 30, 0, 31, 0, 0, 20,
	0, 0, 0, 21, 22, 34, 138, 108, 0, 23,
	33, 0, 0, 77, 0, 0, 24, 0, 29, 89,
	90, 0, 0, 0, 0, 0, 0, 0, 0, 50,
	113, 0, 105, 101, 102, 103, 98, 99, 0, 0,
	0, 0, 0, 0, 106, 0, 0, 0, 0, 139,
	104, 100, 117, 0, 93, 94, 95, 0, 0, 0,
	0, 87, 52, 0, 0, 0, 74, 75, 25, 0,
	0, 0, 0, 0, 53, 54, 76, 63, 64, 65,
	66, 67, 68, 69, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 107, 73, 14, 0, 32, 700, 59,
	0, 51, 0, 0, 0, 56, 55, 57, 58, 71,
	110, 91, 92, 70, 46, 96, 97, 35, 0, 115,
	0, 27, 0, 0, 0, 114, 26, 18, 17, 0,
	19, 0, 30, 0, 31, 0, 0, 20, 0, 0,
	0, 21, 22, 34, 138, 108, 0, 23, 33, 0,
	0, 77, 0, 0, 24, 0, 29, 89, 90, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 113, 0,
	105, 101, 102, 103, 98, 99, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 0, 139, 104, 100,
	117, 0, 93, 94, 95, 0, 0, 0, 0, 87,
	52, 0, 0, 0, 74, 75, 25, 0, 0, 0,
	0, 0, 53, 54, 76, 63, 64, 65, 66, 67,
	68, 69, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 107, 73, 14, 0, 32, 0, 59, 0, 51,
	0, 0, 0, 56, 55, 57, 58, 71, 110, 455,
	456, 466, 467, 0, 0, 972, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 501, 502, 503, 504, 505,
	493, 494, 495, 522, 496, 497, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 0, 513, 511,
	512, 508, 509, 0, 0, 500, 506, 507, 514, 515,
	517, 516, 518, 519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 521, 520, 117, 0,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 468,
	469, 470, 498, 499, 449, 450, 451, 452, 453, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 455, 456,
	466, 467, 0, 0, 972, 0, 0, 0, 523, 0,
	0, 0, 994, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 501, 502, 503, 504, 505, 493,
	494, 495, 522, 496, 497, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 0, 513, 511, 512,
	508, 509, 0, 0, 500, 506, 507, 514, 515, 517,
	516, 518, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 521, 520, 117, 0, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 468, 469,
	470, 498, 499, 449, 450, 451, 452, 453, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 455, 456, 466,
	467, 0, 0, 446, 0, 0, 0, 523, 0, 0,
	0, 963, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 501, 502, 503, 504, 505, 493, 494,
	495, 522, 496, 497, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 0, 513, 511, 512, 508,
	509, 0, 0, 500, 506, 507, 514, 515, 517, 516,
	518, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 510, 521, 520, 0, 0, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 468, 469, 470,
	498, 499, 449, 450, 451, 452, 453, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 455, 456, 466, 467, 0, 0, 1011, 0,
	0, 0, 0, 0, 0, 0, 523, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 501, 502,
	503, 504, 505, 493, 494, 495, 522, 496, 497, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	0, 513, 511, 512, 508, 509, 0, 0, 500, 506,
	507, 514, 515, 517, 516, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 510, 521,
	520, 0, 0, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 468, 469, 470, 498, 499, 803, 804, 805,
	802, 801, 800, 91, 92, 70, 0, 96, 97, 122,
	0, 115, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 108, 0, 0,
	0, 523, 0, 77, 0, 0, 0, 0, 0, 89,
	90, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	113, 0, 105, 101, 102, 103, 98, 99, 0, 0,
	0, 0, 0, 0, 106, 0, 0, 0, 0, 139,
	104, 100, 117, 233, 93, 94, 95, 0, 0, 0,
	0, 87, 52, 0, 0, 0, 74, 75, 144, 0,
	0, 0, 0, 0, 53, 54, 76, 63, 64, 65,
	66, 67, 68, 69, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 91, 92, 70, 0, 96, 97, 122, 0,
	115, 0, 88, 107, 73, 0, 114, 0, 0, 59,
	0, 51, 0, 0, 232, 56, 55, 57, 58, 71,
	110, 820, 0, 0, 0, 138, 108, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 0, 0, 89, 90,
	0, 0, 0, 0, 0, 0, 0, 0, 50, 113,
	0, 105, 101, 102, 103, 98, 99, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 139, 104,
	100, 117, 0, 93, 94, 95, 0, 0, 0, 0,
	87, 52, 0, 0, 0, 74, 75, 144, 0, 0,
	0, 0, 0, 53, 54, 76, 63, 64, 65, 66,
	67, 68, 69, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	91, 92, 70, 0, 96, 97, 122, 0, 115, 0,
	0, 88, 107, 73, 114, 0, 0, 0, 59, 0,
	51, 0, 0, 0, 56, 55, 57, 58, 71, 110,
	0, 0, 0, 138, 108, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 89, 90, 0, 0,
	0, 0, 0, 0, 0, 0, 642, 113, 0, 105,
	101, 102, 103, 98, 99, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 139, 104, 100, 117,
	0, 93, 94, 95, 0, 0, 0, 0, 87, 52,
	0, 0, 0, 74, 75, 144, 0, 0, 0, 0,
	0, 53, 54, 76, 63, 64, 65, 66, 67, 68,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 91, 92,
	70, 0, 96, 97, 122, 438, 115, 0, 0, 88,
	107, 73, 114, 0, 0, 0, 59, 0, 51, 0,
	0, 641, 56, 55, 57, 58, 71, 110, 0, 0,
	0, 138, 108, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 0, 0, 89, 90, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 113, 0, 105, 101, 102,
	103, 98, 99, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 139, 104, 100, 117, 0, 93,
	94, 95, 0, 0, 0, 0, 87, 52, 0, 0,
	0, 74, 75, 144, 0, 0, 0, 0, 0, 53,
	54, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 91, 92, 70, 0,
	96, 97, 122, 0, 115, 0, 0, 88, 107, 73,
	114, 0, 0, 0, 59, 0, 51, 0, 0, 0,
	56, 55, 57, 58, 71, 110, 0, 0, 0, 138,
	108, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 89, 90, 0, 0, 0, 0, 0, 0,
	0, 0, 50, 113, 0, 105, 101, 102, 103, 98,
	99, 0, 0, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 139, 104, 100, 117, 0, 93, 94, 95,
	0, 0, 0, 0, 87, 52, 0, 0, 0, 74,
	75, 144, 0, 0, 0, 0, 0, 53, 54, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 91, 92, 70, 0, 96, 97,
	122, 0, 115, 0, 0, 88, 107, 73, 114, 0,
	0, 0, 59, 0, 51, 0, 0, 397, 56, 55,
	57, 58, 71, 110, 0, 0, 0, 138, 108, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 0,
	89, 90, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 113, 0, 105, 101, 102, 103, 98, 99, 0,
	0, 0, 0, 0, 0, 106, 0, 0, 0, 0,
	139, 104, 100, 117, 0, 93, 94, 95, 0, 0,
	0, 0, 87, 52, 0, 0, 0, 74, 75, 144,
	0, 0, 0, 0, 0, 53, 54, 76, 63, 64,
	65, 66, 67, 68, 69, 0, 0, 122, 0, 115,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	0, 0, 91, 92, 70, 0, 96, 97, 122, 0,
	115, 0, 0, 88, 107, 73, 114, 0, 0, 374,
	59, 0, 51, 0, 0, 0, 56, 55, 57, 58,
	71, 110, 0, 0, 0, 138, 108, 0, 113, 0,
	0, 0, 77, 0, 0, 0, 0, 0, 89, 90,
	0, 0, 0, 0, 0, 0, 0, 139, 50, 113,
	117, 105, 101, 102, 103, 98, 99, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 240, 0, 139, 104,
	100, 117, 0, 93, 94, 95, 0, 0, 0, 0,
	87, 52, 0, 0, 0, 74, 75, 144, 0, 0,
	0, 0, 0, 53, 54, 76, 63, 64, 65, 66,
	67, 68, 69, 0, 0, 0, 0, 160, 162, 161,
	184, 0, 0, 0, 0, 0, 0, 238, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 0,
	0, 88, 107, 73, 186, 183, 0, 0, 59, 0,
	51, 0, 0, 0, 56, 55, 57, 58, 71, 110,
	158, 159, 170, 173, 174, 175, 176, 177, 178, 180,
	182, 0, 0, 0, 160, 162, 161, 184, 0, 0,
	771, 0, 0, 185, 164, 168, 167, 0, 0, 0,
	0, 0, 163, 0, 165, 169, 171, 172, 179, 181,
	166, 186, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 159, 170,
	173, 174, 175, 176, 177, 178, 180, 182, 0, 0,
	0, 0, 0, 743, 160, 162, 161, 184, 0, 0,
	185, 164, 168, 167, 0, 0, 0, 0, 0, 163,
	0, 165, 169, 171, 172, 179, 181, 166, 0, 0,
	0, 186, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 159, 170,
	173, 174, 175, 176, 177, 178, 180, 182, 0, 0,
	0, 0, 0, 741, 160, 162, 161, 184, 0, 0,
	185, 164, 168, 167, 0, 0, 0, 0, 0, 163,
	0, 165, 169, 171, 172, 179, 181, 166, 0, 0,
	0, 186, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 159, 170,
	173, 174, 175, 176, 177, 178, 180, 182, 0, 0,
	0, 0, 0, 732, 160, 162, 161, 184, 0, 0,
	185, 164, 168, 167, 0, 0, 0, 0, 0, 163,
	0, 165, 169, 171, 172, 179, 181, 166, 0, 0,
	0, 186, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 159, 170,
	173, 174, 175, 176, 177, 178, 180, 182, 0, 0,
	0, 160, 162, 161, 184, 0, 0, 728, 0, 0,
	185, 164, 168, 167, 0, 0, 0, 0, 0, 163,
	0, 165, 169, 171, 172, 179, 181, 166, 186, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 159, 170, 173, 174, 175,
	176, 177, 178, 180, 182, 0, 0, 0, 160, 162,
	161, 184, 0, 0, 727, 0, 0, 185, 164, 168,
	167, 0, 0, 0, 0, 0, 163, 0, 165, 169,
	171, 172, 179, 181, 166, 186, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 159, 170, 173, 174, 175, 176, 177, 178,
	180, 182, 0, 0, 0, 0, 0, 682, 160, 162,
	161, 184, 0, 0, 185, 164, 168, 167, 0, 0,
	0, 0, 0, 163, 0, 165, 169, 171, 172, 179,
	181, 166, 0, 0, 0, 186, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 159, 170, 173, 174, 175, 176, 177, 178,
	180, 182, 0, 0, 0, 160, 162, 161, 184, 0,
	0, 674, 0, 0, 185, 164, 168, 167, 0, 0,
	0, 0, 0, 163, 0, 165, 169, 171, 172, 179,
	181, 166, 186, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 159,
	170, 173, 174, 175, 176, 177, 178, 180, 182, 0,
	0, 0, 160, 162, 161, 184, 0, 0, 673, 0,
	0, 185, 164, 168, 167, 0, 0, 0, 0, 0,
	163, 0, 165, 169, 171, 172, 179, 181, 166, 186,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 159, 170, 173, 174,
	175, 176, 177, 178, 180, 182, 0, 0, 0, 160,
	162, 161, 184, 0, 0, 670, 0, 0, 185, 164,
	168, 167, 0, 0, 0, 0, 0, 163, 0, 165,
	169, 171, 172, 179, 181, 166, 186, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 159, 170, 173, 174, 175, 176, 177,
	178, 180, 182, 0, 0, 0, 0, 0, 654, 160,
	162, 161, 184, 0, 0, 185, 164, 168, 167, 0,
	0, 0, 0, 0, 163, 0, 165, 169, 171, 172,
	179, 181, 166, 0, 0, 0, 186, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 159, 170, 173, 174, 175, 176, 177,
	178, 180, 182, 0, 0, 0, 160, 162, 161, 184,
	0, 0, 644, 0, 0, 185, 164, 168, 167, 0,
	0, 0, 0, 0, 163, 0, 165, 169, 171, 172,
	179, 181, 166, 186, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	159, 170, 173, 174, 175, 176, 177, 178, 180, 182,
	0, 0, 0, 0, 614, 633, 160, 162, 161, 184,
	0, 0, 185, 164, 168, 167, 0, 0, 0, 0,
	0, 163, 0, 165, 169, 171, 172, 179, 181, 166,
	0, 0, 0, 186, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	159, 170, 173, 174, 175, 176, 177, 178, 180, 182,
	0, 0, 0, 160, 162, 161, 184, 0, 0, 631,
	0, 0, 185, 164, 168, 167, 0, 0, 0, 0,
	0, 163, 0, 165, 169, 171, 172, 179, 181, 166,
	186, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 159, 170, 173,
	174, 175, 176, 177, 178, 180, 182, 0, 0, 0,
	160, 162, 161, 184, 0, 0, 0, 0, 0, 185,
	164, 168, 167, 0, 0, 0, 0, 0, 163, 0,
	165, 169, 171, 172, 179, 181, 166, 186, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 159, 170, 173, 174, 175, 176,
	177, 178, 180, 182, 0, 0, 0, 160, 162, 161,
	184, 610, 0, 0, 0, 0, 185, 164, 168, 167,
	0, 0, 0, 0, 0, 163, 0, 165, 169, 171,
	172, 179, 181, 166, 186, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 159, 170, 173, 174, 175, 176, 177, 178, 180,
	182, 0, 0, 0, 160, 162, 161, 184, 0, 0,
	605, 0, 0, 185, 164, 168, 167, 0, 0, 0,
	0, 0, 163, 0, 165, 169, 171, 172, 179, 181,
	166, 186, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 159, 170,
	173, 174, 175, 176, 177, 178, 180, 182, 0, 0,
	0, 160, 162, 161, 184, 0, 0, 601, 0, 0,
	185, 164, 168, 167, 0, 0, 0, 0, 0, 163,
	0, 165, 169, 171, 172, 179, 181, 166, 186, 183,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 159, 170, 173, 174, 175,
	176, 177, 178, 180, 182, 0, 0, 0, 0, 160,
	162, 161, 184, 0, 428, 0, 0, 185, 164, 168,
	167, 0, 0, 0, 0, 0, 163, 0, 165, 169,
	171, 172, 179, 181, 166, 0, 186, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 159, 170, 173, 174, 175, 176, 177,
	178, 180, 182, 0, 0, 0, 160, 162, 161, 184,
	0, 0, 0, 0, 0, 185, 164, 168, 167, 0,
	0, 0, 0, 0, 163, 0, 165, 169, 171, 172,
	179, 181, 166, 186, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	159, 170, 173, 174, 175, 176, 177, 178, 180, 182,
	0, 0, 0, 0, 0, 0, 157, 160, 162, 161,
	184, 0, 185, 164, 168, 167, 0, 0, 0, 0,
	0, 163, 0, 165, 169, 171, 172, 179, 181, 166,
	0, 0, 0, 0, 186, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 159, 170, 173, 174, 175, 176, 177, 178, 180,
	182, 0, 0, 0, 0, 162, 161, 184, 0, 0,
	0, 0, 0, 185, 164, 168, 167, 0, 0, 0,
	0, 0, 163, 0, 165, 169, 171, 172, 179, 181,
	166, 186, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 159, 170,
	173, 174, 175, 176, 177, 178, 180, 182, 0, 0,
	0, 0, 0, 161, 184, 0, 0, 0, 0, 0,
	185, 164, 168, 167, 0, 0, 0, 0, 0, 163,
	0, 165, 169, 171, 172, 179, 181, 166, 186, 183,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 159, 170, 173, 174, 175,
	176, 177, 178, 180, 182, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 185, 164, 168,
	167, 0, 0, 0, 0, 0, 163, 0, 165, 169,
	171, 172, 179, 181, 166, 0, 186, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 159, 170, 173, 174, 175, 176, 177,
	178, 180, 182, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 185, 164, 168, 167, 0,
	0, 0, 0, 0, 163, 0, 165, 169, 171, 172,
	179, 181, 166, 186, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	159, 170, 173, 174, 175, 176, 177, 178, 180, 182,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 185, 164, 168, 167, 0, 0, 0, 0,
	0, 163, 0, 165, 169, 171, 172, 179, 181, 166,
	186, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 159, 170, 173,
	174, 175, 176, 177, 178, 180, 182, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 0,
	164, 168, 167, 0, 0, 0, 0, 0, 163, 0,
	165, 169, 171, 172, 179, 181, 166, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 170, 173, 174, 175, 176, 177,
	178, 180, 182, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 0, 0, 0, 0, 164, 168, 167, 0,
	0, 0, 0, 0, 163, 0, 165, 169, 171, 172,
	179, 181, 166, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 173, 174, 175, 176, 177, 178, 180, 182, 0,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 0,
	0, 0, 164, 168, 167, 0, 0, 0, 0, 0,
	163, 0, 165, 169, 171, 172, 179, 181, 166, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 173, 174, 175,
	176, 177, 178, 180, 182, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 164, 168,
	167, 0, 0, 0, 0, 0, 0, 0, 165, 169,
	171, 172, 179, 181, 166, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 173, 174, 175, 176, 177, 178, 180,
	182, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 0, 164, 168, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 171, 172, 179, 181,
	166, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 173,
	174, 175, 176, 177, 178, 180, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 171, 172, 179, 181, 166,
}
var yyPact = [...]int{

	-1000, -1000, 1785, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	310, 545, 653, 733, -1000, -1000, -1000, 308, 4917, 307,
	302, 6328, 6328, 6328, 209, 742, 6328, -1000, 7518, 300,
	297, 289, -1000, 445, 779, 319, 94, 549, 778, 764,
	762, 512, 524, -6, -1000, -1000, 288, -1000, -1000, 230,
	251, 5559, 6328, 6307, 6307, 6328, 6328, 6328, 6328, 6328,
	-1000, -1000, -1000, 6328, 6328, 6328, 6328, 6328, 6328, 6328,
	246, 6328, -1000, 846, 6328, 6328, 6328, 6328, -1000, -1000,
	-1000, -1000, 141, -1000, 574, 569, -1000, 279, 245, 243,
	237, 6328, 6328, 235, 6328, 6328, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 831, 775, 94, -1000,
	140, 259, 259, 231, -1000, -1000, 558, 688, 198, 688,
	353, -1000, -1000, 397, 662, 97, 659, 688, -1000, -1000,
	-1000, -1000, 92, -1000, -38, 3705, 6328, 665, 94, 539,
	6328, 6328, 396, 7579, 729, 395, 394, 89, -1000, -1000,
	85, -1000, -1000, -54, 42, -1000, 7579, -1000, 6328, 6328,
	6328, 6328, 6328, 6328, 6328, 6328, 6328, 6328, 6328, 6328,
	6328, 6328, 6328, 6328, 6328, 6328, 6328, 6328, 6328, 6328,
	6328, 6328, 6328, 6328, 145, 6200, 6328, 6307, 6328, 733,
	-1000, 393, -1000, 754, -1000, 747, -1000, 604, -1000, 605,
	281, 4917, 278, 391, 314, 6072, 6328, 6328, 6328, 6328,
	6328, 6328, 6328, 6328, 6328, 6328, 6328, 6328, 6328, -1000,
	-1000, 6328, 6328, 6328, 126, 126, 5559, 131, 84, -1000,
	-1000, 7461, 6307, 6328, 275, -1000, -1000, 141, 6328, -1000,
	-1000, 5559, -1000, 407, 407, 503, 407, 7403, 407, 407,
	407, 407, 407, 407, 407, -1000, 6328, 407, 442, 834,
	744, -1000, 285, 5944, 6307, 7808, 7751, 7808, 7579, 6328,
	4023, 4023, 259, -1000, 566, 219, 259, -1000, -1000, 6328,
	6328, 6328, 7579, 7579, 6328, 7579, 7579, 759, -1000, 753,
	537, 834, 274, 6328, -1000, -1000, 1147, -1000, 5559, 745,
	558, 389, 558, -1000, -1000, 1625, -1000, 385, 37, 655,
	688, -1000, 623, 568, 739, 611, -1000, -1000, 733, 6328,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 264, 7346,
	263, -1000, 382, 81, 7579, 7289, -1000, -1000, -1000, -1000,
	209, -1000, 684, 6328, -1000, 6328, 7921, 7977, 7636, 7808,
	7693, 8033, 8145, 8089, 299, 150, 150, 503, 407, 503,
	503, 201, 201, 957, 957, 957, 957, 174, 174, 174,
	174, 957, -1000, 7232, 6328, 7865, 76, -1000, -1000, 7175,
	-12, 3545, -1000, -1000, 260, 604, 599, 585, 444, -1000,
	585, 6328, -1000, 6328, -1000, -1000, 7808, 6328, 7808, 7808,
	7808, 7808, 7808, 7808, 7808, 7808, 7808, 7808, 7808, 7808,
	7808, 7118, 123, 7058, 259, -1000, 6328, -1000, 259, 196,
	-60, 5559, 5816, -1000, 7579, 5559, 7001, 115, -1000, 187,
	-1000, -1000, -1000, -1000, 250, 712, 700, 6941, 143, 419,
	6328, 108, 259, -1000, -1000, 6328, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 259, -1000, -1000, -1000, -1000, 209,
	6328, 6328, 126, 126, 209, 604, 6884, 41, -1000, 7579,
	6827, 6770, -1000, -1000, -1000, 496, 6710, -1000, 38, -1000,
	7579, 6328, 286, -1000, -1000, 251, 6328, 246, 6328, 6328,
	6328, 729, 279, 245, 243, 237, 6328, 6328, 235, 6328,
	6328, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 94,
	94, 231, 539, 186, -1000, -1000, 1465, -1000, -1000, -1000,
	565, 587, -1000, 688, 583, 861, -1000, 555, -1000, 7579,
	184, 4759, 6328, 6328, 6328, 234, -1000, -1000, 7579, -1000,
	6328, 7865, 178, 6307, 883, 4601, -1000, 229, 496, 599,
	-1000, 585, -1000, -1000, 443, -19, -1000, 6653, 6596, 3385,
	8145, 4443, -1000, -1000, -1000, 6536, -1000, -61, 6328, -1000,
	7579, 6307, 224, 171, -1000, -1000, -1000, 105, -1000, -1000,
	680, -1000, -1000, -1000, -1000, -1000, 6328, -1000, 7808, -1000,
	-1000, 6476, -1000, -1000, 103, 6416, -1000, -1000, -1000, 599,
	440, 170, 6328, -1000, -1000, 168, 35, -1000, 392, -1000,
	-1000, -1000, -1000, 164, 1305, 7579, 6328, -1000, -1000, 688,
	554, 32, -1000, -1000, 688, 861, -1000, 381, -1000, -1000,
	-1000, 6359, 380, 7579, -1000, 379, 370, 7865, 368, -1000,
	163, 596, 6307, 223, 5559, -1000, -1000, -1000, 640, 496,
	162, -1000, 439, -19, 1329, -1000, 585, 4917, 280, 367,
	-1000, -1000, -1000, 6328, 7808, -1000, 5559, -61, -1000, -1000,
	354, -1000, -1000, -1000, -1000, 5688, -1000, -1000, 202, -1000,
	496, 95, -1000, -28, 698, -32, -1000, -1000, -1000, -1000,
	-1000, 7579, -14, -1000, 688, 415, 861, -1000, 32, -1000,
	3225, 366, 6328, 449, -1000, 851, -1000, -1000, 4127, 883,
	-1000, 5559, 102, 3065, -1000, -1000, 438, 216, 161, 626,
	436, -1000, -1000, -1000, 392, 702, 585, 627, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1171, -1000, -1000, -1000,
	-1000, 3865, 7808, 160, 411, 433, 404, -9, -1000, 595,
	-11, -13, 7579, -1000, 473, -1000, 526, -1000, 698, -1000,
	698, 403, 688, -14, -1000, -1000, 401, 365, -1000, 159,
	-1000, 6328, 215, 441, 364, 752, -1000, -1000, -1000, 153,
	-1000, 152, -1000, 357, -1000, 585, 202, 202, 200, -1000,
	965, 684, 5333, 94, -37, -1000, -1000, 3865, -61, -1000,
	-1000, -1000, -1000, 5688, 6328, 588, -1000, -1000, 6328, 578,
	-1000, -33, 740, -36, -1000, -1000, 684, -1000, -1000, -1000,
	-1000, -1000, 400, -1000, -1000, 4285, 939, -1000, -1000, -1000,
	-1000, -1000, 355, 2905, 4127, -1000, -1000, 2745, 90, -1000,
	431, 430, 236, 874, -1000, -15, -1000, -67, -16, -1000,
	-70, 5333, -1000, -1000, 5204, 576, -1000, 7579, 6328, 7579,
	6328, 740, -1000, 740, -73, -1000, -1000, -1000, -1000, -1000,
	3865, -1000, 352, -1000, -1000, 151, 585, -1000, -1000, -1000,
	-22, -1000, -1000, 684, -1000, -1000, 684, -1000, 6328, -1000,
	5333, 6328, -1000, -1000, 5075, -1000, 349, 348, 618, 645,
	559, -1000, -1000, -1000, 7579, 7579, -1000, -1000, 6328, 2585,
	3865, -1000, 423, -1000, 2425, 2265, -1000, 236, -1000, -1000,
	7579, -1000, 7579, 146, -1000, -1000, -1000, -1000, 585, 5458,
	5333, 7579, 336, -1000, -1000, -1000, -1000, -1000, -1000, 496,
	-19, -1000, -1000, 5333, -1000, -1000, 2105, 149, -1000, -1000,
	202, 316, -1000, -1000, -1000, 1945, -1000,
}
var yyPgo = [...]int{

	0, 1034, 1032, 17, 9, 36, 3, 1031, 128, 1025,
	43, 13, 1020, 20, 30, 71, 48, 47, 42, 1018,
	32, 1016, 87, 101, 80, 1012, 21, 1011, 0, 82,
	4, 1008, 1003, 1002, 37, 273, 26, 28, 1001, 1000,
	63, 999, 62, 998, 7, 997, 996, 995, 992, 12,
	61, 991, 989, 46, 84, 601, 988, 987, 25, 983,
	981, 5, 980, 88, 40, 970, 271, 90, 965, 964,
	961, 960, 958, 188, 957, 956, 955, 8, 953, 89,
	947, 939, 938, 937, 936, 933, 932, 35, 29, 593,
	10, 73, 930, 927, 55, 34, 921, 14, 920, 2,
	918, 38, 917, 19, 790, 83, 79, 914, 905, 904,
	11, 902, 896, 81, 894, 44, 39, 892, 891, 880,
	862, 857, 16, 854, 847, 844, 841, 834, 6, 703,
	15, 644, 832, 41, 825, 98, 1, 18, 824, 819,
	813, 808, 798, 31,
}
var yyR1 = [...]int{

	0, 142, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 9, 9, 8, 135, 135, 91, 91, 13,
	13, 13, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 129, 129, 19,
	19, 21, 21, 10, 10, 88, 88, 87, 87, 89,
	89, 20, 20, 23, 23, 22, 22, 79, 79, 136,
	136, 25, 25, 25, 25, 25, 25, 25, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 125, 125, 126, 76, 76, 33, 33, 114, 114,
	34, 15, 1, 1, 2, 2, 16, 16, 141, 141,
	104, 104, 17, 18, 115, 115, 117, 117, 116, 116,
	130, 130, 130, 130, 111, 111, 110, 110, 32, 32,
	108, 108, 108, 108, 133, 133, 133, 11, 11, 112,
	112, 86, 86, 78, 78, 92, 92, 82, 82, 30,
	30, 31, 31, 127, 127, 127, 127, 36, 36, 96,
	96, 96, 97, 97, 101, 101, 101, 98, 98, 102,
	102, 100, 100, 100, 103, 103, 99, 99, 105, 105,
	80, 80, 37, 37, 37, 39, 39, 40, 41, 41,
	42, 42, 137, 137, 43, 43, 43, 43, 77, 77,
	107, 107, 107, 134, 134, 44, 44, 45, 46, 46,
	46, 46, 48, 48, 47, 109, 109, 139, 139, 138,
	138, 140, 140, 128, 128, 128, 128, 128, 128, 81,
	81, 49, 49, 85, 85, 90, 24, 75, 75, 50,
	26, 26, 27, 27, 52, 51, 51, 119, 120, 120,
	121, 123, 123, 124, 124, 122, 122, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 113, 113, 143, 3,
	3, 118, 118, 83, 83, 61, 61, 62, 62, 62,
	62, 53, 53, 54, 54, 59, 59, 132, 132, 132,
	106, 106, 66, 66, 66, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 67, 67, 67, 28, 28, 29, 29, 65, 68,
	68, 68, 69, 69, 69, 70, 70, 70, 70, 70,
	70, 70, 35, 35, 35, 35, 55, 55, 55, 71,
	71, 72, 72, 72, 72, 72, 72, 72, 63, 63,
	63, 64, 64, 64, 58, 94, 94, 57, 57, 93,
	93, 93, 93, 93, 93, 93, 131, 131, 131, 131,
	73, 73, 73, 73, 73, 73, 73, 73, 74, 74,
	74, 74, 56, 56, 56, 56, 56, 56, 56, 84,
	84, 95,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 2, 0, 1, 3, 1,
	3, 2, 1, 1, 1, 1, 1, 1, 4, 3,
	5, 4, 3, 4, 3, 4, 3, 1, 1, 6,
	7, 6, 7, 0, 1, 3, 1, 3, 1, 3,
	1, 1, 2, 1, 3, 1, 2, 3, 1, 2,
	0, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	1, 5, 7, 9, 5, 3, 3, 3, 3, 3,
	3, 1, 2, 6, 7, 9, 5, 1, 6, 3,
	2, 0, 2, 8, 1, 3, 0, 4, 1, 3,
	1, 11, 0, 1, 0, 1, 9, 8, 1, 2,
	1, 1, 6, 7, 0, 2, 0, 2, 0, 2,
	1, 2, 4, 3, 1, 4, 1, 4, 1, 4,
	3, 4, 4, 5, 0, 5, 4, 1, 1, 1,
	4, 5, 6, 1, 3, 6, 7, 3, 6, 2,
	0, 1, 3, 0, 1, 1, 1, 5, 7, 1,
	2, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 1, 2, 1, 0, 1, 0, 2, 2, 4,
	1, 3, 1, 2, 3, 3, 1, 1, 3, 1,
	1, 3, 2, 0, 4, 4, 3, 10, 1, 3,
	1, 2, 3, 1, 2, 2, 2, 3, 3, 3,
	4, 3, 1, 1, 3, 1, 3, 1, 1, 0,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 4, 3, 1, 4, 4, 3, 1, 1,
	0, 1, 3, 1, 8, 3, 2, 2, 3, 1,
	7, 0, 2, 1, 3, 3, 4, 6, 5, 3,
	4, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 5, 4, 3, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 3, 2, 1,
	2, 4, 2, 2, 1, 2, 11, 9, 0, 0,
	1, 0, 4, 3, 1, 1, 2, 2, 4, 4,
	2, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	0, 1, 4, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 2, 3, 3, 1,
	1, 1, 3, 3, 1, 1, 0, 1, 1, 1,
	3, 1, 1, 3, 1, 1, 4, 4, 4, 4,
	4, 1, 1, 1, 3, 3, 1, 4, 2, 3,
	3, 1, 4, 4, 3, 3, 3, 3, 1, 3,
	1, 1, 3, 1, 1, 0, 1, 3, 1, 3,
	1, 4, 2, 2, 6, 4, 2, 2, 1, 2,
	1, 4, 3, 3, 3, 3, 6, 3, 1, 1,
	2, 1, 5, 4, 2, 2, 4, 2, 2, 1,
	3, 1,
}
var yyChk = [...]int{

	-1000, -142, -135, -12, 2, -14, -15, -16, -17, -18,
	52, 80, 45, 39, 146, -78, -82, 21, 20, 23,
	30, 34, 35, 40, 47, 99, 19, 14, -28, 49,
	25, 27, 148, 41, 36, 10, 37, -141, 53, 54,
	55, -86, -92, -35, -38, -104, 7, -70, -71, -68,
	60, 152, 93, 105, 106, 157, 156, 158, 159, 150,
	-51, -121, -56, 108, 109, 110, 111, 112, 113, 114,
	6, 160, -60, 145, 97, 98, 107, 44, -113, 100,
	101, -55, -67, -62, -53, -65, -66, 92, 143, 50,
	51, 4, 5, 85, 86, 87, 8, 9, 67, 68,
	82, 64, 65, 66, 81, 63, 75, 144, 38, -8,
	161, -13, -69, 61, 18, 12, -91, 83, 150, 83,
	-91, 146, 10, -21, -129, -89, -91, 83, 37, 39,
	-22, -23, -79, -24, 10, -136, 150, -14, 37, 80,
	150, 150, -29, -28, 99, -29, -29, -39, -40, -55,
	-41, -113, -42, -8, -75, -50, -28, 148, 131, 132,
	88, 90, 89, 163, 155, 165, 171, 157, 156, 166,
	133, 167, 168, 134, 135, 136, 137, 138, 139, 169,
	140, 170, 141, 116, 91, 154, 115, 150, 150, 150,
	146, 10, 149, -3, 155, 53, -104, 10, 10, 10,
	94, 95, 94, 96, 95, 164, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 105,
	106, 150, 152, 146, 58, 142, 150, -58, -57, -94,
	-93, -28, 155, 84, 60, -28, -35, -67, 150, -66,
	99, 152, -35, -28, -28, -28, -28, -28, -28, -28,
	-28, -28, -28, -28, -28, -59, 150, -28, -132, 17,
	-131, -73, -8, 77, 78, -28, -28, -28, -28, 152,
	79, 79, -54, -52, -53, -72, 53, -13, -55, 150,
	150, 150, -28, -28, 150, -28, -28, 17, 76, -131,
	-131, 17, -3, 146, -55, -105, 150, -105, 150, 83,
	-91, 151, -91, 148, 146, -135, 148, -19, -89, -91,
	83, 148, 162, 83, 29, -91, -23, 148, 162, 164,
	-25, 147, 2, -14, -15, -16, -17, -18, 52, -28,
	21, -3, -26, -27, -28, -28, 148, 148, 148, 148,
	162, 148, 162, 164, 148, 162, -28, -28, -28, -28,
	-28, -28, -28, -28, -28, -28, -28, -28, -28, -28,
	-28, -28, -28, -28, -28, -28, -28, -28, -28, -28,
	-28, -28, -54, -28, 149, -28, -114, -34, -35, -28,
	-79, -136, 148, 10, -143, 10, -115, 56, -143, -117,
	56, 150, -14, 150, 148, 149, -28, 155, -28, -28,
	-28, -28, -28, -28, -28, -28, -28, -28, -28, -28,
	-28, -28, -29, -28, -64, 10, 146, -55, -64, -58,
	153, 162, 59, -35, -28, 150, -28, -58, 151, -29,
	145, -73, -73, 17, 152, 58, 142, -28, 11, -35,
	59, -29, -63, -6, -55, 146, 10, -5, -4, 99,
	100, 101, 102, 103, 104, 4, 5, 85, 86, 87,
	88, 89, 90, 91, 92, 93, 6, 7, 94, 95,
	96, 19, 20, 21, 22, 23, 24, 25, 26, 27,
	28, 29, 41, 42, 43, 44, 45, 46, 47, 48,
	49, 50, 51, 35, 36, 37, 39, 40, 97, 98,
	60, 30, 31, 32, 33, 34, 61, 62, 56, 57,
	80, 54, 55, 53, 63, 64, 66, 65, 67, 68,
	82, 81, 38, 143, -63, -6, -55, -106, -105, 79,
	152, 146, 58, 142, 79, -106, -28, -84, -95, -28,
	-28, -28, 76, 76, 144, 150, -28, 151, -80, -37,
	-28, 84, -7, 10, -5, 60, 93, 6, 97, 98,
	44, 99, 92, 143, 50, 51, 4, 5, 85, 86,
	87, 67, 68, 82, 64, 65, 66, 81, 63, 37,
	38, 61, 80, -58, 10, 148, -135, 147, 148, 148,
	83, -91, -22, 83, -91, 146, 10, 83, -24, -28,
	150, 151, 150, 148, 162, 151, -40, -42, -28, -50,
	149, -28, -10, 162, 29, 151, 147, -143, 150, -115,
	-116, 57, -13, 146, -143, -77, -13, -28, -28, -136,
	-28, 151, 153, 147, -105, -28, -105, 151, 164, -94,
	-28, 155, 60, -58, 151, 153, 151, -74, 10, 13,
	156, -8, 10, 10, 147, 147, 152, 147, -28, 153,
	-105, -28, -105, -55, -29, -28, -64, -64, -55, -115,
	151, -10, 162, 151, 151, -30, -31, -36, -127, 104,
	103, 102, 147, -10, 162, -28, 149, 151, 147, 146,
	83, -88, -20, -23, -129, 146, -143, 151, -112, -14,
	149, -28, -26, -28, -108, 146, 149, -28, 151, -34,
	-130, -35, 155, 60, 152, -32, -14, 149, -125, 150,
	-30, -116, -143, -77, -137, 146, 162, 151, 151, 96,
	-14, 149, 147, 164, -28, -35, 150, 151, 153, 13,
	-28, 147, 153, 147, -116, 146, 151, -95, 151, -10,
	162, -103, -100, -101, 154, -102, 61, 62, -13, 151,
	-37, -28, -87, -23, 146, -10, 162, -23, -88, 148,
	-136, 151, 148, -133, 148, -133, 148, 148, 151, 59,
	-35, 150, -58, -136, -33, -126, 43, 42, -30, 151,
	-143, 146, 147, -43, -139, -138, 45, -140, 48, -128,
	104, 103, 102, 99, 100, 101, -137, -13, -14, 149,
	148, -136, -28, -58, 153, -143, -123, -124, -122, -119,
	33, -120, -28, -99, 149, -36, -1, 155, 163, -101,
	163, -10, 162, -87, 147, -20, -10, 22, 148, -26,
	147, 32, 33, -133, 31, -133, -110, -14, 149, -130,
	-35, -58, 153, 28, 146, 150, 151, -118, 45, 146,
	-137, -103, 39, 37, -77, -128, 147, -136, 151, 147,
	146, 147, -10, 162, 59, -10, 162, -10, 162, -143,
	-96, -97, 154, -98, -101, 99, -2, 84, -101, -101,
	147, -23, -10, 147, 148, 151, -28, -11, 149, 148,
	147, 148, 31, -136, 151, 151, 148, -136, -76, -13,
	-99, -99, 150, -137, 147, -81, -49, -8, -85, -90,
	-6, -3, -107, 148, 146, -137, -122, -28, 59, -28,
	59, 163, -97, 163, -8, 147, -111, -14, 149, -11,
	-136, 148, 26, -110, 147, -9, 163, -8, 146, 146,
	-83, -61, -8, 155, 147, 148, 162, -143, 164, 148,
	162, 164, -6, 147, -134, -44, -45, -46, -47, -48,
	-13, -6, 10, 147, -28, -28, -97, -97, 164, -136,
	-136, 148, 151, -13, -136, -136, 151, 162, -8, -49,
	-28, -90, -28, -143, 147, -44, 148, 148, 46, 29,
	79, -28, 24, 146, 147, 147, -61, -143, -143, 150,
	-77, 10, -4, -128, -6, 148, -136, -30, -6, 147,
	151, -99, -109, 148, 146, -136, 147,
}
var yyDef = [...]int{

	86, -2, -2, 85, 92, 93, 94, 95, 96, 97,
	0, 0, 0, 0, 130, 139, 140, 0, 0, 0,
	0, 456, 456, 456, 0, 421, 0, 151, 0, 0,
	0, 0, 157, 0, 0, 87, 409, 0, 0, 0,
	0, 213, 0, -2, 455, 178, 0, -2, 473, 458,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 382, 386, 0, 0, 0, 0, 0, 0, 0,
	425, 0, 396, 427, 0, 399, 0, 0, 404, 180,
	181, 465, 450, 471, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 0, 409, 476,
	0, -2, 0, 0, 434, 84, 89, 0, 0, 0,
	0, 86, 87, 0, 0, 0, 123, 0, 107, 108,
	120, 125, 0, 128, 0, 0, 0, 0, 409, 0,
	310, 0, 0, 457, 421, 0, 0, 0, 256, 257,
	0, 405, 259, 260, 0, 308, 309, 152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	130, 0, 160, 408, 410, 0, 179, 184, 408, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	347, 0, 456, 0, 0, 0, 495, 0, 494, 498,
	496, 500, 0, 0, 0, 331, -2, 0, 0, -2,
	421, 495, -2, 366, 367, 368, 369, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 456, 395, 0, 428,
	429, 508, 510, 0, 0, 398, 400, 402, 403, 456,
	0, 0, 430, 316, 423, 424, 430, 422, 481, 0,
	0, 0, 524, 525, 0, 527, 528, 0, 446, 0,
	0, 0, 0, 0, 478, 417, 0, 420, 495, 0,
	91, 0, 90, 99, 86, 0, 102, 0, 0, 123,
	0, 104, 0, 0, 0, 123, 126, 106, 0, 0,
	129, 138, 131, 132, 133, 134, 135, 136, 0, 0,
	0, 408, 0, 311, 313, 0, 145, 146, 147, 148,
	0, 149, 0, 0, 150, 0, 349, 350, 351, 352,
	353, 354, 355, 356, 357, 358, 359, 360, 361, 362,
	363, 364, 365, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 379, 0, 0, 385, 113, 168, -2, 0,
	0, 0, 159, 408, 0, 184, 188, 0, 0, 408,
	0, 0, 214, 0, 217, 130, 329, 0, 332, 333,
	334, 335, 336, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 0, 474, 491, 0, 493, 475, 0,
	433, 495, 0, -2, 503, 495, 0, 0, -2, 0,
	397, 509, 506, 507, 0, 0, 0, 0, 0, 459,
	0, 0, 0, -2, -2, 0, 78, 79, 71, 72,
	73, 74, 75, 76, 77, 2, 3, 4, 5, 6,
	7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
	17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
	27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
	37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
	47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 0, -2, -2, 315, 431, 0,
	456, 0, 0, 0, 0, 184, 0, 113, 529, 531,
	0, 0, 445, 448, 447, -2, 0, 248, 113, 250,
	252, 0, 0, -2, 81, 47, 12, -2, 45, -2,
	32, -2, 11, 70, 38, 39, 2, 3, 4, 5,
	6, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 53, 57, 0, 88, 98, 0, 101, 103, 105,
	0, 123, 119, 0, 123, 0, 124, 0, 127, 408,
	0, 0, 0, 310, 0, 0, 255, 258, 261, 307,
	0, 384, 0, 114, 0, 0, 161, 0, -2, 188,
	408, 0, 185, 263, 0, 187, 268, 0, 0, 0,
	330, 0, 466, 468, 469, 0, 470, 0, 0, 497,
	499, 0, 0, 0, -2, 433, 426, 0, 518, 519,
	0, 521, 512, 513, 514, 515, 0, 517, 401, 467,
	418, 0, 419, 486, 0, 0, 484, 485, 487, 188,
	0, 0, 114, 523, 526, 0, 113, 221, 244, 224,
	225, 226, 477, 0, 114, 253, 0, 432, 100, 0,
	0, 113, 116, 121, 0, 0, 306, 0, 141, 209,
	130, 0, 0, 312, 144, 204, 204, 383, 0, 169,
	0, -2, 0, 0, 495, 156, 198, 130, 166, -2,
	0, 408, 0, 189, 289, 263, 0, 0, 0, 0,
	211, 130, 492, 0, 328, -2, 495, 505, 511, 520,
	0, 489, 482, 483, 408, 321, 522, 530, 246, 219,
	-2, 172, 245, 241, 0, 243, 234, 235, 236, 249,
	251, 254, 113, 118, 0, 0, 114, 122, 113, 137,
	0, 0, 310, 0, 204, 0, 204, 153, 0, 0,
	-2, 495, 0, 0, 158, 162, 0, 0, 0, 411,
	0, 263, 182, 262, 244, 0, 0, -2, 288, 291,
	293, 294, 295, 296, 297, 298, 289, 269, 212, 130,
	218, -2, 327, 0, 0, 0, 0, 113, 323, 0,
	113, 113, 319, 408, 0, 222, 174, 173, 0, 242,
	0, 0, 114, 113, 111, 115, 0, 0, 142, 0,
	200, 0, 0, 0, 0, 0, 154, 196, 130, 0,
	-2, 0, -2, 0, 130, 0, 246, 246, 0, 263,
	289, 0, 0, 409, 0, 292, 183, -2, 504, 516,
	263, 320, 322, 114, 0, 0, 114, 317, 114, 0,
	247, 229, 0, 231, 232, 233, 0, 175, 239, 240,
	109, 117, 0, 112, 210, 0, 0, 130, 207, 208,
	201, 202, 0, 0, 0, 192, 199, 0, 82, 164,
	0, 0, 0, 289, 177, 0, 300, 408, 0, 304,
	0, 0, 266, 270, 0, 289, 324, 325, 0, 318,
	0, 0, 230, 0, 227, 110, 143, 194, 130, 130,
	-2, 203, 0, 155, 167, 0, 0, 83, 130, 130,
	0, 414, 415, 0, 176, 264, 0, 301, 0, 265,
	0, 0, 408, 271, 0, 273, 0, 0, 283, 0,
	0, 282, -2, 314, 326, 407, 237, 238, 0, 0,
	-2, 197, 0, 165, 0, 0, 412, 0, 416, 299,
	408, 303, 408, 0, 272, 274, 275, 276, 0, 0,
	0, 228, 0, 130, 171, 406, 413, 302, 305, -2,
	277, 278, 279, 281, 284, 195, 0, 0, 280, 163,
	246, 0, 267, 285, 130, 0, 286,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 158, 144, 3, 161, 168, 155, 3,
	150, 151, 166, 157, 162, 156, 171, 167, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 149, 148,
	169, 164, 170, 154, 160, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 152, 3, 153, 165, 3, 145, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 146, 163, 147, 159,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

// line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:296
		{
			yylex.(*Parser).currentToken.Value = nil

			yylex.(*Parser).rootNode = &ast.Root{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].list),
				Stmts:    yyDollar[1].list,
				EndTkn:   yylex.(*Parser).currentToken,
			}
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:314
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:332
		{
			yyVAL.token = yyDollar[1].token
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:336
		{
			yyVAL.token = nil
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:337
		{
			yyVAL.token = yyDollar[1].token
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:341
		{
			yyVAL.token = yyDollar[1].token
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:346
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:352
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:359
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.NamePart{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						StringTkn: yyDollar[1].token,
						Value:     yyDollar[1].token.Value,
					},
				},
			}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:371
		{
			part := &ast.NamePart{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
				StringTkn: yyDollar[3].token,
				Value:     yyDollar[3].token.Value,
			}

			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, part)

			yyVAL.node = yyDollar[1].node
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:387
		{
			yyVAL.node = &ast.Name{
				Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
				Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:395
		{
			yyVAL.node = &ast.NameRelative{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].node.(*ParserSeparatedList).Items),
				NsTkn:          yyDollar[1].token,
				NsSeparatorTkn: yyDollar[2].token,
				Parts:          yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:405
		{
			yyVAL.node = &ast.NameFullyQualified{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				NsSeparatorTkn: yyDollar[1].token,
				Parts:          yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:417
		{
			// error
			yyVAL.node = nil
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:422
		{
			yyVAL.node = yyDollar[1].node
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:426
		{
			yyVAL.node = yyDollar[1].node
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:430
		{
			yyVAL.node = yyDollar[1].node
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:434
		{
			yyVAL.node = yyDollar[1].node
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:438
		{
			yyVAL.node = yyDollar[1].node
		}
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:442
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:452
		{
			yyVAL.node = &ast.StmtNamespace{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				NsTkn:    yyDollar[1].token,
				Name: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 100:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:465
		{
			yyVAL.node = &ast.StmtNamespace{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				NsTkn:    yyDollar[1].token,
				Name: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Stmts:                yyDollar[4].list,
				CloseCurlyBracketTkn: yyDollar[5].token,
			}
		}
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:480
		{
			yyVAL.node = &ast.StmtNamespace{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				NsTkn:                yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:490
		{
			use := yyDollar[2].node.(*ast.StmtGroupUseList)

			use.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)
			use.UseTkn = yyDollar[1].token
			use.SemiColonTkn = yyDollar[3].token

			yyVAL.node = yyDollar[2].node
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:500
		{
			use := yyDollar[3].node.(*ast.StmtGroupUseList)

			use.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			use.UseTkn = yyDollar[1].token
			use.Type = yyDollar[2].node
			use.SemiColonTkn = yyDollar[4].token

			yyVAL.node = yyDollar[3].node
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:511
		{
			yyVAL.node = &ast.StmtUseList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				UseTkn:        yyDollar[1].token,
				Uses:          yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:521
		{
			yyVAL.node = &ast.StmtUseList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				UseTkn:        yyDollar[1].token,
				Type:          yyDollar[2].node,
				Uses:          yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:532
		{
			yyVAL.node = &ast.StmtConstList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ConstTkn:      yyDollar[1].token,
				Consts:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:545
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:553
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 109:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:564
		{
			if yyDollar[5].token != nil {
				yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[5].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[6].token),
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[2].token,
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Uses:                 yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 110:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:584
		{
			if yyDollar[6].token != nil {
				yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[6].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position:              yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				LeadingNsSeparatorTkn: yyDollar[1].token,
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[3].token,
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Uses:                 yyDollar[5].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}
		}
	case 111:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:608
		{
			if yyDollar[5].token != nil {
				yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[5].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[6].token),
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[2].token,
				OpenCurlyBracketTkn:  yyDollar[3].token,
				Uses:                 yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 112:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:628
		{
			if yyDollar[6].token != nil {
				yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[6].token)
			}

			yyVAL.node = &ast.StmtGroupUseList{
				Position:              yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				LeadingNsSeparatorTkn: yyDollar[1].token,
				Prefix: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				},
				NsSeparatorTkn:       yyDollar[3].token,
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Uses:                 yyDollar[5].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}
		}
	case 113:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:652
		{
			yyVAL.token = nil
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:656
		{
			yyVAL.token = yyDollar[1].token
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:663
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:670
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:679
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:686
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:695
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:702
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:711
		{
			yyVAL.node = yyDollar[1].node
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:715
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.Type = yyDollar[1].node
			decl.Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node)

			yyVAL.node = yyDollar[2].node
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:726
		{
			yyVAL.node = &ast.StmtUse{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
				Use: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
			}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:737
		{
			yyVAL.node = &ast.StmtUse{
				Position: yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].token),
				Use: &ast.Name{
					Position:      yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].node.(*ParserSeparatedList).Items),
					Parts:         yyDollar[1].node.(*ParserSeparatedList).Items,
					SeparatorTkns: yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns,
				},
				AsTkn: yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:757
		{
			yyVAL.node = yyDollar[1].node
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:761
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.NsSeparatorTkn = yyDollar[1].token
			decl.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			yyVAL.node = yyDollar[2].node
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:772
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:779
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:788
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:794
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:801
		{
			// error
			yyVAL.node = nil
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:806
		{
			yyVAL.node = yyDollar[1].node
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:810
		{
			yyVAL.node = yyDollar[1].node
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:814
		{
			yyVAL.node = yyDollar[1].node
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:818
		{
			yyVAL.node = yyDollar[1].node
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:822
		{
			yyVAL.node = yyDollar[1].node
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:826
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:838
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:847
		{
			yyVAL.node = yyDollar[1].node
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:851
		{
			yyVAL.node = yyDollar[1].node
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:855
		{
			yyDollar[5].node.(*ast.StmtWhile).WhileTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtWhile).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtWhile).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtWhile).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtWhile).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 142:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:865
		{
			yyVAL.node = &ast.StmtDo{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				DoTkn:               yyDollar[1].token,
				Stmt:                yyDollar[2].node,
				WhileTkn:            yyDollar[3].token,
				OpenParenthesisTkn:  yyDollar[4].token,
				Cond:                yyDollar[5].node,
				CloseParenthesisTkn: yyDollar[6].token,
				SemiColonTkn:        yyDollar[7].token,
			}
		}
	case 143:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:878
		{
			yyDollar[9].node.(*ast.StmtFor).ForTkn = yyDollar[1].token
			yyDollar[9].node.(*ast.StmtFor).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[9].node.(*ast.StmtFor).Init = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).InitSeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).InitSemiColonTkn = yyDollar[4].token
			yyDollar[9].node.(*ast.StmtFor).Cond = yyDollar[5].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).CondSeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CondSemiColonTkn = yyDollar[6].token
			yyDollar[9].node.(*ast.StmtFor).Loop = yyDollar[7].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).LoopSeparatorTkns = yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CloseParenthesisTkn = yyDollar[8].token
			yyDollar[9].node.(*ast.StmtFor).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			yyVAL.node = yyDollar[9].node
		}
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:895
		{
			yyDollar[5].node.(*ast.StmtSwitch).SwitchTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtSwitch).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtSwitch).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtSwitch).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtSwitch).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:905
		{
			yyVAL.node = &ast.StmtBreak{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				BreakTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:914
		{
			yyVAL.node = &ast.StmtContinue{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ContinueTkn:  yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:923
		{
			yyVAL.node = &ast.StmtReturn{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ReturnTkn:    yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:932
		{
			yyDollar[2].node.(*ast.StmtGlobal).GlobalTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtGlobal).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtGlobal).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:940
		{
			yyDollar[2].node.(*ast.StmtStatic).StaticTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtStatic).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtStatic).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:948
		{
			yyDollar[2].node.(*ast.StmtEcho).EchoTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtEcho).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtEcho).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:956
		{
			yyVAL.node = &ast.StmtInlineHtml{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				InlineHtmlTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:964
		{
			yyVAL.node = yylex.(*Parser).builder.NewExpressionStmt(yyDollar[1].node, yyDollar[2].token)
		}
	case 153:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:968
		{
			yyDollar[3].node.(*ast.StmtUnset).UnsetTkn = yyDollar[1].token
			yyDollar[3].node.(*ast.StmtUnset).OpenParenthesisTkn = yyDollar[2].token
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[4].token)
			}
			yyDollar[3].node.(*ast.StmtUnset).CloseParenthesisTkn = yyDollar[5].token
			yyDollar[3].node.(*ast.StmtUnset).SemiColonTkn = yyDollar[6].token
			yyDollar[3].node.(*ast.StmtUnset).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			yyVAL.node = yyDollar[3].node
		}
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:981
		{
			foreach := yyDollar[7].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[7].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Var = yyDollar[5].node
			foreach.CloseParenthesisTkn = yyDollar[6].token

			if val, ok := yyDollar[5].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 155:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:1000
		{
			foreach := yyDollar[9].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Key = yyDollar[5].node
			foreach.DoubleArrowTkn = yyDollar[6].token
			foreach.Var = yyDollar[7].node
			foreach.CloseParenthesisTkn = yyDollar[8].token

			if val, ok := yyDollar[7].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1021
		{
			yyDollar[5].node.(*ast.StmtDeclare).DeclareTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtDeclare).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtDeclare).Consts = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[5].node.(*ast.StmtDeclare).SeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[5].node.(*ast.StmtDeclare).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtDeclare).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1032
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 158:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1039
		{
			yyVAL.node = yylex.(*Parser).builder.NewTry(yyDollar[1].token, yyDollar[2].token, yyDollar[3].list, yyDollar[4].token, yyDollar[5].node, yyDollar[6].node)
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1043
		{
			yyVAL.node = &ast.StmtGoto{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				GotoTkn:  yyDollar[1].token,
				Label: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1056
		{
			yyVAL.node = &ast.StmtLabel{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				ColonTkn: yyDollar[2].token,
			}
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1069
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1070
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, nil, yyDollar[2].node)
		}
	case 163:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1075
		{
			yyVAL.node = yylex.(*Parser).builder.NewCatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1079
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1080
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1085
		{
			yyVAL.node = nil
		}
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1089
		{
			yyVAL.node = &ast.StmtFinally{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				FinallyTkn:           yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1102
		{
			yyVAL.node = &ast.StmtUnset{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1108
		{
			yyDollar[1].node.(*ast.StmtUnset).Vars = append(yyDollar[1].node.(*ast.StmtUnset).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1118
		{
			yyVAL.node = yyDollar[1].node
		}
	case 171:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:1125
		{
			yyVAL.node = &ast.StmtFunction{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token),
				FunctionTkn:  yyDollar[1].token,
				AmpersandTkn: yyDollar[2].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
				OpenParenthesisTkn:   yyDollar[5].token,
				Params:               yyDollar[6].node.(*ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[6].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn:  yyDollar[7].token,
				ColonTkn:             yyDollar[8].node.(*ReturnType).ColonTkn,
				ReturnType:           yyDollar[8].node.(*ReturnType).Type,
				OpenCurlyBracketTkn:  yyDollar[9].token,
				Stmts:                yyDollar[10].list,
				CloseCurlyBracketTkn: yyDollar[11].token,
			}
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1150
		{
			yyVAL.token = nil
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1154
		{
			yyVAL.token = yyDollar[1].token
		}
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1161
		{
			yyVAL.token = nil
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1165
		{
			yyVAL.token = yyDollar[1].token
		}
	case 176:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:1172
		{
			class := &ast.StmtClass{
				Position:  yylex.(*Parser).builder.Pos.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[9].token),
				Modifiers: yyDollar[1].list,
				ClassTkn:  yyDollar[2].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[7].token,
				Stmts:                yyDollar[8].list,
				CloseCurlyBracketTkn: yyDollar[9].token,
			}

			if yyDollar[4].node != nil {
				class.ExtendsTkn = yyDollar[4].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[4].node.(*ast.StmtClass).Extends
			}

			if yyDollar[5].node != nil {
				class.ImplementsTkn = yyDollar[5].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[5].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[5].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 177:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1201
		{
			class := &ast.StmtClass{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[8].token),
				ClassTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[6].token,
				Stmts:                yyDollar[7].list,
				CloseCurlyBracketTkn: yyDollar[8].token,
			}

			if yyDollar[3].node != nil {
				class.ExtendsTkn = yyDollar[3].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[3].node.(*ast.StmtClass).Extends
			}

			if yyDollar[4].node != nil {
				class.ImplementsTkn = yyDollar[4].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[4].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[4].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1232
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1236
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1243
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1251
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 182:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1262
		{
			yyVAL.node = &ast.StmtTrait{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token),
				TraitTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Stmts:                yyDollar[5].list,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 183:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1280
		{
			iface := &ast.StmtInterface{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				InterfaceTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenCurlyBracketTkn:  yyDollar[5].token,
				Stmts:                yyDollar[6].list,
				CloseCurlyBracketTkn: yyDollar[7].token,
			}

			if yyDollar[3].node != nil {
				iface.ExtendsTkn = yyDollar[3].node.(*ast.StmtInterface).ExtendsTkn
				iface.Extends = yyDollar[3].node.(*ast.StmtInterface).Extends
				iface.ExtendsSeparatorTkns = yyDollar[3].node.(*ast.StmtInterface).ExtendsSeparatorTkns
			}

			yyVAL.node = iface
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1306
		{
			yyVAL.node = nil
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1310
		{
			yyVAL.node = &ast.StmtClass{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExtendsTkn: yyDollar[1].token,
				Extends:    yyDollar[2].node,
			}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1321
		{
			yyVAL.node = nil
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1325
		{
			yyVAL.node = &ast.StmtInterface{
				Position:             yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ExtendsTkn:           yyDollar[1].token,
				Extends:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ExtendsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1337
		{
			yyVAL.node = nil
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1341
		{
			yyVAL.node = &ast.StmtClass{
				Position:                yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ImplementsTkn:           yyDollar[1].token,
				Implements:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ImplementsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1353
		{
			yyVAL.node = yyDollar[1].node
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1357
		{
			yyVAL.node = &ast.StmtForeach{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Var:          yyDollar[2].node,
			}
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1365
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ListTkn:         yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1376
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1389
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1396
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForTkn:    yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1412
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1419
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForeachTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1435
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1442
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndDeclareTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1458
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Cases:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 201:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1467
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CaseSeparatorTkn:     yyDollar[2].token,
				Cases:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1477
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn:     yyDollar[1].token,
				Cases:        yyDollar[2].list,
				EndSwitchTkn: yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1487
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				ColonTkn:         yyDollar[1].token,
				CaseSeparatorTkn: yyDollar[2].token,
				Cases:            yyDollar[3].list,
				EndSwitchTkn:     yyDollar[4].token,
				SemiColonTkn:     yyDollar[5].token,
			}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1501
		{
			yyVAL.list = nil
		}
	case 205:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1505
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtCase{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list),
				CaseTkn:          yyDollar[2].token,
				Cond:             yyDollar[3].node,
				CaseSeparatorTkn: yyDollar[4].token,
				Stmts:            yyDollar[5].list,
			})
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1515
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtDefault{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				DefaultTkn:       yyDollar[2].token,
				CaseSeparatorTkn: yyDollar[3].token,
				Stmts:            yyDollar[4].list,
			})
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1527
		{
			yyVAL.token = yyDollar[1].token
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1531
		{
			yyVAL.token = yyDollar[1].token
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1538
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1545
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndWhileTkn:  yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1561
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				Stmt:                yyDollar[5].node,
			}
		}
	case 212:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1572
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				Stmt:                yyDollar[6].node,
			})

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)

			yyVAL.node = yyDollar[1].node
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1590
		{
			yyVAL.node = yyDollar[1].node
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1594
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[3].node),
				ElseTkn:  yyDollar[2].token,
				Stmt:     yyDollar[3].node,
			}

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 215:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1609
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[6].list),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				ColonTkn:            yyDollar[5].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[6].list),
					Stmts:    yyDollar[6].list,
				},
			}
		}
	case 216:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1624
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[7].list),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[7].list),
					Stmts:    yyDollar[7].list,
				},
			})

			yyVAL.node = yyDollar[1].node
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1644
		{
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[2].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[3].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			yyVAL.node = yyDollar[1].node
		}
	case 218:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1652
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				ElseTkn:  yyDollar[2].token,
				ColonTkn: yyDollar[3].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[4].list),
					Stmts:    yyDollar[4].list,
				},
			}
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[5].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[6].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token)

			yyVAL.node = yyDollar[1].node
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1671
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1672
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1676
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1677
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 223:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1681
		{
			yyVAL.node = nil
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1682
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1683
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1684
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1690
		{
			yyVAL.node = yylex.(*Parser).builder.NewParameter(yyDollar[1].node, yyDollar[2].node, yyDollar[3].token, yyDollar[4].token, yyDollar[5].token, nil, nil, false)
		}
	case 228:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1693
		{
			yyVAL.node = yylex.(*Parser).builder.NewParameter(yyDollar[1].node, yyDollar[2].node, yyDollar[3].token, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].node, true)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1697
		{
			yyVAL.node = yyDollar[1].node
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1698
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1699
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1703
		{
			yyVAL.node = yyDollar[1].node
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1704
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1708
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1709
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1710
		{
			yyVAL.node = yyDollar[1].node
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1714
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1715
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1720
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1722
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1726
		{
			yyVAL.node = yyDollar[1].node
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1727
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1728
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 244:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1732
		{
			yyVAL.node = nil
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1733
		{
			yyVAL.node = yyDollar[1].node
		}
	case 246:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1737
		{
			yyVAL.node = &ReturnType{}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1738
		{
			yyVAL.node = yylex.(*Parser).builder.NewReturnType(yyDollar[1].token, yyDollar[2].node)
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1743
		{
			yyVAL.node = &ArgumentList{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				CloseParenthesisTkn: yyDollar[2].token,
			}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1751
		{
			argumentList := yyDollar[2].node.(*ArgumentList)
			argumentList.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			argumentList.OpenParenthesisTkn = yyDollar[1].token
			if yyDollar[3].token != nil {
				argumentList.SeparatorTkns = append(argumentList.SeparatorTkns, yyDollar[3].token)
			}
			argumentList.CloseParenthesisTkn = yyDollar[4].token

			yyVAL.node = argumentList
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1766
		{
			yyVAL.node = &ArgumentList{
				Arguments: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1772
		{
			yyDollar[1].node.(*ArgumentList).SeparatorTkns = append(yyDollar[1].node.(*ArgumentList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ArgumentList).Arguments = append(yyDollar[1].node.(*ArgumentList).Arguments, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1782
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgument(yyDollar[1].node)
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1786
		{
			yyVAL.node = yylex.(*Parser).builder.NewVariadicArgument(yyDollar[1].token, yyDollar[2].node)
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1790
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamedArgument(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node)
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1797
		{
			yyDollar[1].node.(*ast.StmtGlobal).Vars = append(yyDollar[1].node.(*ast.StmtGlobal).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1804
		{
			yyVAL.node = &ast.StmtGlobal{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1813
		{
			yyVAL.node = yyDollar[1].node
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1820
		{
			yyDollar[1].node.(*ast.StmtStatic).Vars = append(yyDollar[1].node.(*ast.StmtStatic).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1827
		{
			yyVAL.node = &ast.StmtStatic{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1836
		{

			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1851
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1870
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1874
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1881
		{
			yyVAL.node = &ast.StmtPropertyList{
				Position:      yylex.(*Parser).builder.Pos.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[4].token),
				Modifiers:     yyDollar[1].list,
				Type:          yyDollar[2].node,
				Props:         yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1892
		{
			yyVAL.node = &ast.StmtClassConstList{
				Position:      yylex.(*Parser).builder.Pos.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[4].token),
				Modifiers:     yyDollar[1].list,
				ConstTkn:      yyDollar[2].token,
				Consts:        yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1903
		{
			traitUse := &ast.StmtTraitUse{
				Position:      yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				UseTkn:        yyDollar[1].token,
				Traits:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}

			switch n := yyDollar[3].node.(type) {
			case *TraitAdaptationList:
				traitUse.OpenCurlyBracketTkn = n.OpenCurlyBracketTkn
				traitUse.Adaptations = n.Adaptations
				traitUse.CloseCurlyBracketTkn = n.CloseCurlyBracketTkn
			case *ast.StmtNop:
				traitUse.SemiColonTkn = n.SemiColonTkn
			}

			yyVAL.node = traitUse
		}
	case 267:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:1923
		{
			pos := yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[10].node)
			if yyDollar[1].list != nil {
				pos = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[10].node)
			}

			yyVAL.node = &ast.StmtClassMethod{
				Position:     pos,
				Modifiers:    yyDollar[1].list,
				FunctionTkn:  yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
				OpenParenthesisTkn:  yyDollar[6].token,
				Params:              yyDollar[7].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[8].token,
				ColonTkn:            yyDollar[9].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[9].node.(*ReturnType).Type,
				Stmt:                yyDollar[10].node,
			}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1952
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1958
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1968
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1975
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CloseCurlyBracketTkn: yyDollar[2].token,
			}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1983
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Adaptations:          yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1995
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1999
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2006
		{
			yyDollar[1].node.(*ast.StmtTraitUsePrecedence).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2012
		{
			yyDollar[1].node.(*ast.StmtTraitUseAlias).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2021
		{
			yyVAL.node = &ast.StmtTraitUsePrecedence{
				Position:       yylex.(*Parser).builder.Pos.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].node.(*ParserSeparatedList).Items),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				InsteadofTkn:   yyDollar[2].token,
				Insteadof:      yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2036
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2051
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2066
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2082
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
			}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2096
		{
			yyVAL.node = &TraitMethodRef{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2107
		{
			yyVAL.node = yyDollar[1].node
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2114
		{
			yyVAL.node = &TraitMethodRef{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2130
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2137
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2149
		{
			yyVAL.list = yyDollar[1].list
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2153
		{
			yyVAL.list = []ast.Vertex{
				&ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 289:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2166
		{
			yyVAL.list = nil
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2170
		{
			yyVAL.list = yyDollar[1].list
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2177
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2181
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2187
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2188
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2189
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2190
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2191
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2192
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2197
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2204
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2213
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				Expr: nil,
			}
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2228
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2247
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2254
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2263
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2279
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2295
		{
			yyDollar[1].node.(*ast.StmtEcho).Exprs = append(yyDollar[1].node.(*ast.StmtEcho).Exprs, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2302
		{
			yyVAL.node = &ast.StmtEcho{
				Exprs: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2311
		{
			yyVAL.node = yyDollar[1].node
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2318
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2322
		{
			yyVAL.node = yyDollar[1].node
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2329
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2336
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 314:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:2345
		{
			if yyDollar[2].node == nil {
				yyDollar[2].node = &ArgumentList{}
			}

			class := &ast.StmtClass{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[8].token),
				ClassTkn:             yyDollar[1].token,
				OpenParenthesisTkn:   yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                 yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:        yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn:  yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
				OpenCurlyBracketTkn:  yyDollar[6].token,
				Stmts:                yyDollar[7].list,
				CloseCurlyBracketTkn: yyDollar[8].token,
			}

			if yyDollar[3].node != nil {
				class.ExtendsTkn = yyDollar[3].node.(*ast.StmtClass).ExtendsTkn
				class.Extends = yyDollar[3].node.(*ast.StmtClass).Extends
			}

			if yyDollar[4].node != nil {
				class.ImplementsTkn = yyDollar[4].node.(*ast.StmtClass).ImplementsTkn
				class.Implements = yyDollar[4].node.(*ast.StmtClass).Implements
				class.ImplementsSeparatorTkns = yyDollar[4].node.(*ast.StmtClass).ImplementsSeparatorTkns
			}

			yyVAL.node = class
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2379
		{
			if yyDollar[3].node != nil {
				yyVAL.node = &ast.ExprNew{
					Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
					NewTkn:              yyDollar[1].token,
					Class:               yyDollar[2].node,
					OpenParenthesisTkn:  yyDollar[3].node.(*ArgumentList).OpenParenthesisTkn,
					Args:                yyDollar[3].node.(*ArgumentList).Arguments,
					SeparatorTkns:       yyDollar[3].node.(*ArgumentList).SeparatorTkns,
					CloseParenthesisTkn: yyDollar[3].node.(*ArgumentList).CloseParenthesisTkn,
				}
			} else {
				yyVAL.node = &ast.ExprNew{
					Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
					NewTkn:   yyDollar[1].token,
					Class:    yyDollar[2].node,
				}
			}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2399
		{
			yyVAL.node = &ast.ExprNew{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				NewTkn:   yyDollar[1].token,
				Class:    yyDollar[2].node,
			}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2410
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2417
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2422
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 320:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:2429
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token)
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2436
		{
			yyVAL.node = nil
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2441
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2448
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2453
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2460
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(nil, nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2465
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(yyDollar[1].token, yyDollar[2].token, nil, yyDollar[3].token, yyDollar[4].node)
		}
	case 327:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:2472
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
				EqualTkn: yyDollar[5].token,
				Expr:     yyDollar[6].node,
			}
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:2488
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
					OpenBracketTkn:  yyDollar[1].token,
					Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[3].token,
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2503
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2512
		{
			yyVAL.node = &ast.ExprAssignReference{
				Position:     yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Var:          yyDollar[1].node,
				EqualTkn:     yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Expr:         yyDollar[4].node,
			}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2522
		{
			yyVAL.node = &ast.ExprClone{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CloneTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2530
		{
			yyVAL.node = &ast.ExprAssignPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2539
		{
			yyVAL.node = &ast.ExprAssignMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2548
		{
			yyVAL.node = &ast.ExprAssignMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2557
		{
			yyVAL.node = &ast.ExprAssignPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2566
		{
			yyVAL.node = &ast.ExprAssignDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2575
		{
			yyVAL.node = &ast.ExprAssignConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2584
		{
			yyVAL.node = &ast.ExprAssignMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2593
		{
			yyVAL.node = &ast.ExprAssignBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2602
		{
			yyVAL.node = &ast.ExprAssignBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2611
		{
			yyVAL.node = &ast.ExprAssignBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2620
		{
			yyVAL.node = &ast.ExprAssignShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2629
		{
			yyVAL.node = &ast.ExprAssignShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2638
		{
			yyVAL.node = &ast.ExprAssignCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2647
		{
			yyVAL.node = &ast.ExprPostInc{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				IncTkn:   yyDollar[2].token,
			}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2655
		{
			yyVAL.node = &ast.ExprPreInc{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2663
		{
			yyVAL.node = &ast.ExprPostDec{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				DecTkn:   yyDollar[2].token,
			}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2671
		{
			yyVAL.node = &ast.ExprPreDec{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DecTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2679
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2688
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2697
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2706
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2715
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2724
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2733
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2742
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2751
		{
			yyVAL.node = &ast.ExprBinaryConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2760
		{
			yyVAL.node = &ast.ExprBinaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2769
		{
			yyVAL.node = &ast.ExprBinaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2778
		{
			yyVAL.node = &ast.ExprBinaryMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2787
		{
			yyVAL.node = &ast.ExprBinaryPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2796
		{
			yyVAL.node = &ast.ExprBinaryDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2805
		{
			yyVAL.node = &ast.ExprBinaryMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2814
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2823
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2832
		{
			yyVAL.node = &ast.ExprUnaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PlusTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2840
		{
			yyVAL.node = &ast.ExprUnaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				MinusTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2848
		{
			yyVAL.node = &ast.ExprBooleanNot{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExclamationTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2856
		{
			yyVAL.node = &ast.ExprBitwiseNot{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				TildaTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2864
		{
			yyVAL.node = &ast.ExprBinaryIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2873
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2882
		{
			yyVAL.node = &ast.ExprBinaryEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2891
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2900
		{
			yyVAL.node = &ast.ExprBinarySmaller{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2909
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2918
		{
			yyVAL.node = &ast.ExprBinaryGreater{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2927
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2936
		{
			yyVAL.node = &ast.ExprBinarySpaceship{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2945
		{
			yyVAL.node = &ast.ExprInstanceOf{
				Position:      yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Expr:          yyDollar[1].node,
				InstanceOfTkn: yyDollar[2].token,
				Class:         yyDollar[3].node,
			}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2954
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2963
		{
			yyVAL.node = yyDollar[1].node
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2967
		{
			yyVAL.node = yyDollar[1].node
		}
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:2971
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[5].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				IfTrue:      yyDollar[3].node,
				ColonTkn:    yyDollar[4].token,
				IfFalse:     yyDollar[5].node,
			}
		}
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2982
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				ColonTkn:    yyDollar[3].token,
				IfFalse:     yyDollar[4].node,
			}
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2992
		{
			yyVAL.node = &ast.ExprBinaryCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3001
		{
			yyVAL.node = yyDollar[1].node
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3005
		{
			yyVAL.node = &ast.ExprCastInt{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3013
		{
			yyVAL.node = &ast.ExprCastDouble{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3021
		{
			yyVAL.node = &ast.ExprCastString{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3029
		{
			yyVAL.node = &ast.ExprCastArray{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3037
		{
			yyVAL.node = &ast.ExprCastObject{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3045
		{
			yyVAL.node = &ast.ExprCastBool{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3053
		{
			yyVAL.node = &ast.ExprCastUnset{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3061
		{
			exit := &ast.ExprExit{
				ExitTkn: yyDollar[1].token,
			}

			if yyDollar[2].node == nil {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token)
			} else {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				exit.OpenParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).OpenParenthesisTkn
				exit.Expr = yyDollar[2].node.(*ast.ExprBrackets).Expr
				exit.CloseParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).CloseParenthesisTkn
			}

			yyVAL.node = exit
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3078
		{
			yyVAL.node = &ast.ExprErrorSuppress{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AtTkn:    yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3086
		{
			yyVAL.node = yyDollar[1].node
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3090
		{
			yyVAL.node = &ast.ExprShellExec{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBacktickTkn:  yyDollar[1].token,
				Parts:            yyDollar[2].list,
				CloseBacktickTkn: yyDollar[3].token,
			}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3099
		{
			yyVAL.node = &ast.ExprPrint{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PrintTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3107
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				YieldTkn: yyDollar[1].token,
			}
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3114
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldTkn: yyDollar[1].token,
				Val:      yyDollar[2].node,
			}
		}
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3122
		{
			yyVAL.node = &ast.ExprYield{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				YieldTkn:       yyDollar[1].token,
				Key:            yyDollar[2].node,
				DoubleArrowTkn: yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3132
		{
			yyVAL.node = &ast.ExprYieldFrom{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldFromTkn: yyDollar[1].token,
				Expr:         yyDollar[2].node,
			}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3140
		{
			yyVAL.node = yylex.(*Parser).builder.NewThrowExpr(yyDollar[1].token, yyDollar[2].node)
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3144
		{
			yyVAL.node = yyDollar[1].node
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3148
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			}

			yyVAL.node = yyDollar[2].node
		}
	case 406:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:3164
		{
			closure := yyDollar[7].node.(*ast.ExprClosure)

			closure.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token)
			closure.FunctionTkn = yyDollar[1].token
			closure.AmpersandTkn = yyDollar[2].token
			closure.OpenParenthesisTkn = yyDollar[4].token
			closure.Params = yyDollar[5].node.(*ParserSeparatedList).Items
			closure.SeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			closure.CloseParenthesisTkn = yyDollar[6].token
			closure.ColonTkn = yyDollar[8].node.(*ReturnType).ColonTkn
			closure.ReturnType = yyDollar[8].node.(*ReturnType).Type
			closure.OpenCurlyBracketTkn = yyDollar[9].token
			closure.Stmts = yyDollar[10].list
			closure.CloseCurlyBracketTkn = yyDollar[11].token

			yyVAL.node = closure
		}
	case 407:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:3183
		{
			yyVAL.node = &ast.ExprArrowFunction{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node),
				FnTkn:               yyDollar[1].token,
				AmpersandTkn:        yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Params:              yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[6].node.(*ReturnType).Type,
				DoubleArrowTkn:      yyDollar[8].token,
				Expr:                yyDollar[9].node,
			}
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3206
		{
			yyVAL.token = nil
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3210
		{
			yyVAL.token = yyDollar[1].token
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3217
		{
			yyVAL.node = &ast.ExprClosure{}
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3221
		{
			yyVAL.node = &ast.ExprClosure{
				UseTkn:                 yyDollar[1].token,
				UseOpenParenthesisTkn:  yyDollar[2].token,
				Uses:                   yyDollar[3].node.(*ParserSeparatedList).Items,
				UseSeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				UseCloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3234
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3241
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3250
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3264
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				AmpersandTkn: yyDollar[1].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						IdentifierTkn: yyDollar[2].token,
						Value:         yyDollar[2].token.Value,
					},
				},
			}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3282
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3293
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3314
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3335
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3349
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3357
		{
			yyVAL.node = yyDollar[1].node
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3364
		{
			yyVAL.node = yyDollar[1].node
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3368
		{
			yyVAL.node = yyDollar[1].node
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3375
		{
			yyVAL.node = nil
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3379
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3391
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3395
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
			}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3405
		{
			yyVAL.list = yyDollar[1].list
		}
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3412
		{
			yyVAL.node = nil
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3416
		{
			yyVAL.node = yyDollar[1].node
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3423
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ArrayTkn:        yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3434
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3444
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3455
		{
			yyVAL.node = &ast.ScalarLnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3463
		{
			yyVAL.node = &ast.ScalarDnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3471
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3479
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3487
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3495
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3503
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3511
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3519
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3527
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3535
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:       yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn: yyDollar[1].token,
				Parts: []ast.Vertex{
					&ast.ScalarEncapsedStringPart{
						Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						EncapsedStrTkn: yyDollar[2].token,
						Value:          yyDollar[2].token.Value,
					},
				},
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3550
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenHeredocTkn:  yyDollar[1].token,
				CloseHeredocTkn: yyDollar[2].token,
			}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3558
		{
			yyVAL.node = &ast.ScalarEncapsed{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenQuoteTkn:  yyDollar[1].token,
				Parts:         yyDollar[2].list,
				CloseQuoteTkn: yyDollar[3].token,
			}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3567
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn:  yyDollar[1].token,
				Parts:           yyDollar[2].list,
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3576
		{
			yyVAL.node = yyDollar[1].node
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3580
		{
			yyVAL.node = yyDollar[1].node
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3587
		{
			yyVAL.node = &ast.ExprConstFetch{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Const:    yyDollar[1].node,
			}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3594
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3607
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3623
		{
			yyVAL.node = yyDollar[1].node
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3627
		{
			yyVAL.node = yyDollar[1].node
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3634
		{
			yyVAL.node = nil
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3638
		{
			yyVAL.node = yyDollar[1].node
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3645
		{
			yyVAL.node = yyDollar[1].node
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3652
		{
			yyVAL.node = yyDollar[1].node
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3656
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3665
		{
			yyVAL.node = yyDollar[1].node
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3672
		{
			yyVAL.node = yyDollar[1].node
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3676
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3685
		{
			yyVAL.node = yyDollar[1].node
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3692
		{
			yyVAL.node = yyDollar[1].node
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3696
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3706
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3716
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3728
		{
			yyVAL.node = yylex.(*Parser).builder.NewMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3732
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafeMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3736
		{
			yyVAL.node = yyDollar[1].node
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3743
		{
			yyVAL.node = yyDollar[1].node
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3747
		{
			yyVAL.node = yyDollar[1].node
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3751
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3755
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3762
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3773
		{
			yyVAL.node = &ast.ExprVariable{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				DollarTkn:            yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Name:                 yyDollar[3].node,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3783
		{
			yyVAL.node = &ast.ExprVariable{
				Position:  yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DollarTkn: yyDollar[1].token,
				Name:      yyDollar[2].node,
			}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3794
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3803
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3815
		{
			yyVAL.node = yyDollar[1].node
		}
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3819
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3829
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3841
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3845
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3849
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3858
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3870
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3878
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3887
		{
			yyVAL.node = yyDollar[1].node
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3894
		{
			yyVAL.node = &ast.Identifier{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3902
		{
			yyVAL.node = &ParserBrackets{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3911
		{
			yyVAL.node = yyDollar[1].node
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3918
		{
			pairList := yyDollar[1].node.(*ParserSeparatedList)
			fistPair := pairList.Items[0].(*ast.ExprArrayItem)

			if fistPair.Key == nil && fistPair.Val == nil && len(pairList.Items) == 1 {
				pairList.Items = nil
			}

			yyVAL.node = yyDollar[1].node
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3932
		{
			yyVAL.node = &ast.ExprArrayItem{}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3936
		{
			yyVAL.node = yyDollar[1].node
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3943
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3950
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3959
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val:            yyDollar[3].node,
			}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3968
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Val:      yyDollar[1].node,
			}
		}
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3975
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				AmpersandTkn:   yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3985
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Val:          yyDollar[2].node,
			}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3993
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:    yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				EllipsisTkn: yyDollar[1].token,
				Val:         yyDollar[2].node,
			}
		}
	case 504:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:4001
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[3].token, yyDollar[6].token),
					ListTkn:         yyDollar[3].token,
					OpenBracketTkn:  yyDollar[4].token,
					Items:           yyDollar[5].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[6].token,
				},
			}
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4017
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
			}
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4034
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4038
		{
			yyVAL.list = append(
				yyDollar[1].list,
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					EncapsedStrTkn: yyDollar[2].token,
					Value:          yyDollar[2].token.Value,
				},
			)
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4049
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4053
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
				yyDollar[2].node,
			}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4067
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4078
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4095
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4099
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4103
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name:                      yyDollar[2].node,
				CloseCurlyBracketTkn:      yyDollar[3].token,
			}
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4112
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 516:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:4125
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenSquareBracketTkn:  yyDollar[3].token,
				Dim:                   yyDollar[4].node,
				CloseSquareBracketTkn: yyDollar[5].token,
				CloseCurlyBracketTkn:  yyDollar[6].token,
			}
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4141
		{
			yyVAL.node = &ast.ScalarEncapsedStringBrackets{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Var:                  yyDollar[2].node,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4153
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4161
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(string(yyDollar[1].token.Value)); err == nil {
				yyVAL.node = &ast.ScalarLnumber{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					NumberTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					StringTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			}
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4178
		{
			_, err := strconv.Atoi(string(yyDollar[2].token.Value))
			isInt := err == nil

			if isInt {
				yyVAL.node = &ast.ExprUnaryMinus{
					Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn: yyDollar[1].token,
					Expr: &ast.ScalarLnumber{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						NumberTkn: yyDollar[2].token,
						Value:     yyDollar[2].token.Value,
					},
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn:  yyDollar[1].token,
					StringTkn: yyDollar[2].token,
					Value:     append([]byte("-"), yyDollar[2].token.Value...),
				}
			}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4202
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:4216
		{
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[4].token)
			}

			yyVAL.node = &ast.ExprIsset{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				IssetTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Vars:                yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
			}
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4231
		{
			yyVAL.node = &ast.ExprEmpty{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EmptyTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4241
		{
			yyVAL.node = &ast.ExprInclude{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4249
		{
			yyVAL.node = &ast.ExprIncludeOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:4257
		{
			yyVAL.node = &ast.ExprEval{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EvalTkn:             yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4267
		{
			yyVAL.node = &ast.ExprRequire{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:4275
		{
			yyVAL.node = &ast.ExprRequireOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4286
		{
			yyVAL.node = &ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:4292
		{
			yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ParserSeparatedList).Items = append(yyDollar[1].node.(*ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:4302
		{
			yyVAL.node = yyDollar[1].node
		}
	}
	goto yystack /* stack new state and value */
}
